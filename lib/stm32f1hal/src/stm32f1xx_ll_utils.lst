ARM GAS  /tmp/ccgFoonV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"stm32f1xx_ll_utils.c"
  12              	@ GNU C11 (15:6.3.1+svn253039-1build1) version 6.3.1 20170620 (arm-none-eabi)
  13              	@	compiled by GNU C version 7.2.0, GMP version 6.1.2, MPFR version 4.0.1-rc1, MPC version 1.1.0, is
  14              	@ warning: MPFR header version 4.0.1-rc1 differs from library version 4.0.1.
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I ./inc -I ./inc/Legacy -I ../cmsisstm32f1xx/inc
  17              	@ -I ../cmsiscore/inc -imultilib thumb/v7-m -D__USES_INITFINI__
  18              	@ -D STM32F103x6 -D RUN_FROM_FLASH=1 src/stm32f1xx_ll_utils.c
  19              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip bin/stm32f1xx_ll_utils.o -g
  20              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  32              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  33              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  34              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  35              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  36              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  39              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  40              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  41              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  42              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  43              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  44              	@ -freg-struct-return -freorder-blocks -freorder-functions
  45              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  46              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  47              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  48              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  49              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  50              	@ -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  51              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  53              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  54              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  55              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  56              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  57              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
ARM GAS  /tmp/ccgFoonV.s 			page 2


  58              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  59              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  60              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  61              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  62              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  63              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  64              	@ -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  74              		.type	UTILS_SetFlashLatency, %function
  75              	UTILS_SetFlashLatency:
  76              	.LFB179:
  77              		.file 1 "src/stm32f1xx_ll_utils.c"
   1:src/stm32f1xx_ll_utils.c **** /**
   2:src/stm32f1xx_ll_utils.c ****   ******************************************************************************
   3:src/stm32f1xx_ll_utils.c ****   * @file    stm32f1xx_ll_utils.c
   4:src/stm32f1xx_ll_utils.c ****   * @author  MCD Application Team
   5:src/stm32f1xx_ll_utils.c ****   * @brief   UTILS LL module driver.
   6:src/stm32f1xx_ll_utils.c ****   ******************************************************************************
   7:src/stm32f1xx_ll_utils.c ****   * @attention
   8:src/stm32f1xx_ll_utils.c ****   *
   9:src/stm32f1xx_ll_utils.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:src/stm32f1xx_ll_utils.c ****   * All rights reserved.</center></h2>
  11:src/stm32f1xx_ll_utils.c ****   *
  12:src/stm32f1xx_ll_utils.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:src/stm32f1xx_ll_utils.c ****   * the "License"; You may not use this file except in compliance with the
  14:src/stm32f1xx_ll_utils.c ****   * License. You may obtain a copy of the License at:
  15:src/stm32f1xx_ll_utils.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:src/stm32f1xx_ll_utils.c ****   *
  17:src/stm32f1xx_ll_utils.c ****   ******************************************************************************
  18:src/stm32f1xx_ll_utils.c ****   */
  19:src/stm32f1xx_ll_utils.c **** 
  20:src/stm32f1xx_ll_utils.c **** /* Includes ------------------------------------------------------------------*/
  21:src/stm32f1xx_ll_utils.c **** #include "stm32f1xx_ll_rcc.h"
  22:src/stm32f1xx_ll_utils.c **** #include "stm32f1xx_ll_utils.h"
  23:src/stm32f1xx_ll_utils.c **** #include "stm32f1xx_ll_system.h"
  24:src/stm32f1xx_ll_utils.c **** #ifdef  USE_FULL_ASSERT
  25:src/stm32f1xx_ll_utils.c **** #include "stm32_assert.h"
  26:src/stm32f1xx_ll_utils.c **** #else
  27:src/stm32f1xx_ll_utils.c **** #define assert_param(expr) ((void)0U)
  28:src/stm32f1xx_ll_utils.c **** #endif
  29:src/stm32f1xx_ll_utils.c **** 
  30:src/stm32f1xx_ll_utils.c **** /** @addtogroup STM32F1xx_LL_Driver
  31:src/stm32f1xx_ll_utils.c ****   * @{
  32:src/stm32f1xx_ll_utils.c ****   */
  33:src/stm32f1xx_ll_utils.c **** 
  34:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL
  35:src/stm32f1xx_ll_utils.c ****   * @{
  36:src/stm32f1xx_ll_utils.c ****   */
  37:src/stm32f1xx_ll_utils.c **** 
ARM GAS  /tmp/ccgFoonV.s 			page 3


  38:src/stm32f1xx_ll_utils.c **** /* Private types -------------------------------------------------------------*/
  39:src/stm32f1xx_ll_utils.c **** /* Private variables ---------------------------------------------------------*/
  40:src/stm32f1xx_ll_utils.c **** /* Private constants ---------------------------------------------------------*/
  41:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Constants
  42:src/stm32f1xx_ll_utils.c ****   * @{
  43:src/stm32f1xx_ll_utils.c ****   */
  44:src/stm32f1xx_ll_utils.c **** 
  45:src/stm32f1xx_ll_utils.c **** /* Defines used for PLL range */
  46:src/stm32f1xx_ll_utils.c **** #define UTILS_PLL_OUTPUT_MAX        RCC_MAX_FREQUENCY    /*!< Frequency max for PLL output, in Hz  
  47:src/stm32f1xx_ll_utils.c **** 
  48:src/stm32f1xx_ll_utils.c **** /* Defines used for HSE range */
  49:src/stm32f1xx_ll_utils.c **** #define UTILS_HSE_FREQUENCY_MIN     RCC_HSE_MIN       /*!< Frequency min for HSE frequency, in Hz  
  50:src/stm32f1xx_ll_utils.c **** #define UTILS_HSE_FREQUENCY_MAX     RCC_HSE_MAX       /*!< Frequency max for HSE frequency, in Hz  
  51:src/stm32f1xx_ll_utils.c **** 
  52:src/stm32f1xx_ll_utils.c **** /* Defines used for FLASH latency according to HCLK Frequency */
  53:src/stm32f1xx_ll_utils.c **** #if defined(FLASH_ACR_LATENCY)
  54:src/stm32f1xx_ll_utils.c **** #define UTILS_LATENCY1_FREQ         24000000U        /*!< SYSCLK frequency to set FLASH latency 1 *
  55:src/stm32f1xx_ll_utils.c **** #define UTILS_LATENCY2_FREQ         48000000U        /*!< SYSCLK frequency to set FLASH latency 2 *
  56:src/stm32f1xx_ll_utils.c **** #else
  57:src/stm32f1xx_ll_utils.c **** /*!< No Latency Configuration in this device */
  58:src/stm32f1xx_ll_utils.c **** #endif
  59:src/stm32f1xx_ll_utils.c **** /**
  60:src/stm32f1xx_ll_utils.c ****   * @}
  61:src/stm32f1xx_ll_utils.c ****   */
  62:src/stm32f1xx_ll_utils.c **** /* Private macros ------------------------------------------------------------*/
  63:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Macros
  64:src/stm32f1xx_ll_utils.c ****   * @{
  65:src/stm32f1xx_ll_utils.c ****   */
  66:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_SYSCLK_DIV(__VALUE__) (((__VALUE__) == LL_RCC_SYSCLK_DIV_1)   \
  67:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_2)   \
  68:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_4)   \
  69:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_8)   \
  70:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_16)  \
  71:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_64)  \
  72:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_128) \
  73:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_256) \
  74:src/stm32f1xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_512))
  75:src/stm32f1xx_ll_utils.c **** 
  76:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_APB1_DIV(__VALUE__) (((__VALUE__) == LL_RCC_APB1_DIV_1) \
  77:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_2) \
  78:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_4) \
  79:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_8) \
  80:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_16))
  81:src/stm32f1xx_ll_utils.c **** 
  82:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_APB2_DIV(__VALUE__) (((__VALUE__) == LL_RCC_APB2_DIV_1) \
  83:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_2) \
  84:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_4) \
  85:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_8) \
  86:src/stm32f1xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_16))
  87:src/stm32f1xx_ll_utils.c **** 
  88:src/stm32f1xx_ll_utils.c **** #if defined(RCC_CFGR_PLLMULL6_5)
  89:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_PLLMUL_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PLL_MUL_4) \
  90:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_5) \
  91:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_6) \
  92:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_7) \
  93:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_8) \
  94:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_9) \
ARM GAS  /tmp/ccgFoonV.s 			page 4


  95:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_6_5))
  96:src/stm32f1xx_ll_utils.c **** #else
  97:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_PLLMUL_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PLL_MUL_2) \
  98:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_3) \
  99:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_4) \
 100:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_5) \
 101:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_6) \
 102:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_7) \
 103:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_8) \
 104:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_9) \
 105:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_10) \
 106:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_11) \
 107:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_12) \
 108:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_13) \
 109:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_14) \
 110:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_15) \
 111:src/stm32f1xx_ll_utils.c ****                                           || ((__VALUE__) == LL_RCC_PLL_MUL_16))
 112:src/stm32f1xx_ll_utils.c **** #endif /* RCC_CFGR_PLLMULL6_5 */
 113:src/stm32f1xx_ll_utils.c **** 
 114:src/stm32f1xx_ll_utils.c **** #if defined(RCC_CFGR2_PREDIV1)
 115:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_PREDIV_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PREDIV_DIV_1)  || ((__VALUE__) 
 116:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_3)  || ((__VALUE__) 
 117:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_5)  || ((__VALUE__) 
 118:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_7)  || ((__VALUE__) 
 119:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_9)  || ((__VALUE__) 
 120:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_11) || ((__VALUE__) 
 121:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_13) || ((__VALUE__) 
 122:src/stm32f1xx_ll_utils.c ****                                              ((__VALUE__) == LL_RCC_PREDIV_DIV_15) || ((__VALUE__) 
 123:src/stm32f1xx_ll_utils.c **** #else
 124:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_PREDIV_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PREDIV_DIV_1)  || ((__VALUE__) 
 125:src/stm32f1xx_ll_utils.c **** #endif /*RCC_PREDIV1_DIV_2_16_SUPPORT*/
 126:src/stm32f1xx_ll_utils.c **** 
 127:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_PLL_FREQUENCY(__VALUE__) ((__VALUE__) <= UTILS_PLL_OUTPUT_MAX)
 128:src/stm32f1xx_ll_utils.c **** 
 129:src/stm32f1xx_ll_utils.c **** 
 130:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_HSE_BYPASS(__STATE__) (((__STATE__) == LL_UTILS_HSEBYPASS_ON) \
 131:src/stm32f1xx_ll_utils.c ****                                         || ((__STATE__) == LL_UTILS_HSEBYPASS_OFF))
 132:src/stm32f1xx_ll_utils.c **** 
 133:src/stm32f1xx_ll_utils.c **** #define IS_LL_UTILS_HSE_FREQUENCY(__FREQUENCY__) (((__FREQUENCY__) >= UTILS_HSE_FREQUENCY_MIN) && (
 134:src/stm32f1xx_ll_utils.c **** /**
 135:src/stm32f1xx_ll_utils.c ****   * @}
 136:src/stm32f1xx_ll_utils.c ****   */
 137:src/stm32f1xx_ll_utils.c **** /* Private function prototypes -----------------------------------------------*/
 138:src/stm32f1xx_ll_utils.c **** /** @defgroup UTILS_LL_Private_Functions UTILS Private functions
 139:src/stm32f1xx_ll_utils.c ****   * @{
 140:src/stm32f1xx_ll_utils.c ****   */
 141:src/stm32f1xx_ll_utils.c **** static uint32_t    UTILS_GetPLLOutputFrequency(uint32_t PLL_InputFrequency,
 142:src/stm32f1xx_ll_utils.c ****                                                LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct);
 143:src/stm32f1xx_ll_utils.c **** #if defined(FLASH_ACR_LATENCY)
 144:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_SetFlashLatency(uint32_t Frequency);
 145:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 146:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_EnablePLLAndSwitchSystem(uint32_t SYSCLK_Frequency, LL_UTILS_ClkInitTypeDe
 147:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_PLL_IsBusy(void);
 148:src/stm32f1xx_ll_utils.c **** /**
 149:src/stm32f1xx_ll_utils.c ****   * @}
 150:src/stm32f1xx_ll_utils.c ****   */
 151:src/stm32f1xx_ll_utils.c **** 
ARM GAS  /tmp/ccgFoonV.s 			page 5


 152:src/stm32f1xx_ll_utils.c **** /* Exported functions --------------------------------------------------------*/
 153:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL_Exported_Functions
 154:src/stm32f1xx_ll_utils.c ****   * @{
 155:src/stm32f1xx_ll_utils.c ****   */
 156:src/stm32f1xx_ll_utils.c **** 
 157:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL_EF_DELAY
 158:src/stm32f1xx_ll_utils.c ****   * @{
 159:src/stm32f1xx_ll_utils.c ****   */
 160:src/stm32f1xx_ll_utils.c **** 
 161:src/stm32f1xx_ll_utils.c **** /**
 162:src/stm32f1xx_ll_utils.c ****   * @brief  This function configures the Cortex-M SysTick source to have 1ms time base.
 163:src/stm32f1xx_ll_utils.c ****   * @note   When a RTOS is used, it is recommended to avoid changing the Systick
 164:src/stm32f1xx_ll_utils.c ****   *         configuration by calling this function, for a delay use rather osDelay RTOS service.
 165:src/stm32f1xx_ll_utils.c ****   * @param  HCLKFrequency HCLK frequency in Hz
 166:src/stm32f1xx_ll_utils.c ****   * @note   HCLK frequency can be calculated thanks to RCC helper macro or function @ref LL_RCC_Get
 167:src/stm32f1xx_ll_utils.c ****   * @retval None
 168:src/stm32f1xx_ll_utils.c ****   */
 169:src/stm32f1xx_ll_utils.c **** void LL_Init1msTick(uint32_t HCLKFrequency)
 170:src/stm32f1xx_ll_utils.c **** {
 171:src/stm32f1xx_ll_utils.c ****   /* Use frequency provided in argument */
 172:src/stm32f1xx_ll_utils.c ****   LL_InitTick(HCLKFrequency, 1000U);
 173:src/stm32f1xx_ll_utils.c **** }
 174:src/stm32f1xx_ll_utils.c **** 
 175:src/stm32f1xx_ll_utils.c **** /**
 176:src/stm32f1xx_ll_utils.c ****   * @brief  This function provides accurate delay (in milliseconds) based
 177:src/stm32f1xx_ll_utils.c ****   *         on SysTick counter flag
 178:src/stm32f1xx_ll_utils.c ****   * @note   When a RTOS is used, it is recommended to avoid using blocking delay
 179:src/stm32f1xx_ll_utils.c ****   *         and use rather osDelay service.
 180:src/stm32f1xx_ll_utils.c ****   * @note   To respect 1ms timebase, user should call @ref LL_Init1msTick function which
 181:src/stm32f1xx_ll_utils.c ****   *         will configure Systick to 1ms
 182:src/stm32f1xx_ll_utils.c ****   * @param  Delay specifies the delay time length, in milliseconds.
 183:src/stm32f1xx_ll_utils.c ****   * @retval None
 184:src/stm32f1xx_ll_utils.c ****   */
 185:src/stm32f1xx_ll_utils.c **** void LL_mDelay(uint32_t Delay)
 186:src/stm32f1xx_ll_utils.c **** {
 187:src/stm32f1xx_ll_utils.c ****   __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 188:src/stm32f1xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 189:src/stm32f1xx_ll_utils.c ****   ((void)tmp);
 190:src/stm32f1xx_ll_utils.c **** 
 191:src/stm32f1xx_ll_utils.c ****   /* Add a period to guaranty minimum wait */
 192:src/stm32f1xx_ll_utils.c ****   if (Delay < LL_MAX_DELAY)
 193:src/stm32f1xx_ll_utils.c ****   {
 194:src/stm32f1xx_ll_utils.c ****     Delay++;
 195:src/stm32f1xx_ll_utils.c ****   }
 196:src/stm32f1xx_ll_utils.c **** 
 197:src/stm32f1xx_ll_utils.c ****   while (Delay)
 198:src/stm32f1xx_ll_utils.c ****   {
 199:src/stm32f1xx_ll_utils.c ****     if ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) != 0U)
 200:src/stm32f1xx_ll_utils.c ****     {
 201:src/stm32f1xx_ll_utils.c ****       Delay--;
 202:src/stm32f1xx_ll_utils.c ****     }
 203:src/stm32f1xx_ll_utils.c ****   }
 204:src/stm32f1xx_ll_utils.c **** }
 205:src/stm32f1xx_ll_utils.c **** 
 206:src/stm32f1xx_ll_utils.c **** /**
 207:src/stm32f1xx_ll_utils.c ****   * @}
 208:src/stm32f1xx_ll_utils.c ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 6


 209:src/stm32f1xx_ll_utils.c **** 
 210:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_EF_SYSTEM
 211:src/stm32f1xx_ll_utils.c ****   *  @brief    System Configuration functions
 212:src/stm32f1xx_ll_utils.c ****   *
 213:src/stm32f1xx_ll_utils.c ****   @verbatim
 214:src/stm32f1xx_ll_utils.c ****  ===============================================================================
 215:src/stm32f1xx_ll_utils.c ****            ##### System Configuration functions #####
 216:src/stm32f1xx_ll_utils.c ****  ===============================================================================
 217:src/stm32f1xx_ll_utils.c ****     [..]
 218:src/stm32f1xx_ll_utils.c ****          System, AHB and APB buses clocks configuration
 219:src/stm32f1xx_ll_utils.c **** 
 220:src/stm32f1xx_ll_utils.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is RCC_MAX_FREQUENCY Hz.
 221:src/stm32f1xx_ll_utils.c ****   @endverbatim
 222:src/stm32f1xx_ll_utils.c ****   @internal
 223:src/stm32f1xx_ll_utils.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly:
 224:src/stm32f1xx_ll_utils.c ****              (++) +-----------------------------------------------+
 225:src/stm32f1xx_ll_utils.c ****              (++) | Latency       | SYSCLK clock frequency (MHz)  |
 226:src/stm32f1xx_ll_utils.c ****              (++) |---------------|-------------------------------|
 227:src/stm32f1xx_ll_utils.c ****              (++) |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 228:src/stm32f1xx_ll_utils.c ****              (++) |---------------|-------------------------------|
 229:src/stm32f1xx_ll_utils.c ****              (++) |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 230:src/stm32f1xx_ll_utils.c ****              (++) |---------------|-------------------------------|
 231:src/stm32f1xx_ll_utils.c ****              (++) |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 232:src/stm32f1xx_ll_utils.c ****              (++) +-----------------------------------------------+
 233:src/stm32f1xx_ll_utils.c ****   @endinternal
 234:src/stm32f1xx_ll_utils.c ****   * @{
 235:src/stm32f1xx_ll_utils.c ****   */
 236:src/stm32f1xx_ll_utils.c **** 
 237:src/stm32f1xx_ll_utils.c **** /**
 238:src/stm32f1xx_ll_utils.c ****   * @brief  This function sets directly SystemCoreClock CMSIS variable.
 239:src/stm32f1xx_ll_utils.c ****   * @note   Variable can be calculated also through SystemCoreClockUpdate function.
 240:src/stm32f1xx_ll_utils.c ****   * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)
 241:src/stm32f1xx_ll_utils.c ****   * @retval None
 242:src/stm32f1xx_ll_utils.c ****   */
 243:src/stm32f1xx_ll_utils.c **** void LL_SetSystemCoreClock(uint32_t HCLKFrequency)
 244:src/stm32f1xx_ll_utils.c **** {
 245:src/stm32f1xx_ll_utils.c ****   /* HCLK clock frequency */
 246:src/stm32f1xx_ll_utils.c ****   SystemCoreClock = HCLKFrequency;
 247:src/stm32f1xx_ll_utils.c **** }
 248:src/stm32f1xx_ll_utils.c **** 
 249:src/stm32f1xx_ll_utils.c **** /**
 250:src/stm32f1xx_ll_utils.c ****   * @brief  This function configures system clock with HSI as clock source of the PLL
 251:src/stm32f1xx_ll_utils.c ****   * @note   The application need to ensure that PLL is disabled.
 252:src/stm32f1xx_ll_utils.c ****   * @note   Function is based on the following formula:
 253:src/stm32f1xx_ll_utils.c ****   *         - PLL output frequency = ((HSI frequency / PREDIV) * PLLMUL)
 254:src/stm32f1xx_ll_utils.c ****   *         - PREDIV: Set to 2 for few devices
 255:src/stm32f1xx_ll_utils.c ****   *         - PLLMUL: The application software must set correctly the PLL multiplication factor to
 256:src/stm32f1xx_ll_utils.c ****   *                   not exceed 72MHz
 257:src/stm32f1xx_ll_utils.c ****   * @note   FLASH latency can be modified through this function.
 258:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 259:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the PLL.
 260:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 261:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 262:src/stm32f1xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 263:src/stm32f1xx_ll_utils.c ****   *          - SUCCESS: Max frequency configuration done
 264:src/stm32f1xx_ll_utils.c ****   *          - ERROR: Max frequency configuration not done
 265:src/stm32f1xx_ll_utils.c ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 7


 266:src/stm32f1xx_ll_utils.c **** ErrorStatus LL_PLL_ConfigSystemClock_HSI(LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct,
 267:src/stm32f1xx_ll_utils.c ****                                          LL_UTILS_ClkInitTypeDef *UTILS_ClkInitStruct)
 268:src/stm32f1xx_ll_utils.c **** {
 269:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 270:src/stm32f1xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 271:src/stm32f1xx_ll_utils.c **** 
 272:src/stm32f1xx_ll_utils.c ****   /* Check if one of the PLL is enabled */
 273:src/stm32f1xx_ll_utils.c ****   if (UTILS_PLL_IsBusy() == SUCCESS)
 274:src/stm32f1xx_ll_utils.c ****   {
 275:src/stm32f1xx_ll_utils.c **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
 276:src/stm32f1xx_ll_utils.c ****     /* Check PREDIV value */
 277:src/stm32f1xx_ll_utils.c ****     assert_param(IS_LL_UTILS_PREDIV_VALUE(UTILS_PLLInitStruct->PLLDiv));
 278:src/stm32f1xx_ll_utils.c **** #else
 279:src/stm32f1xx_ll_utils.c ****     /* Force PREDIV value to 2 */
 280:src/stm32f1xx_ll_utils.c ****     UTILS_PLLInitStruct->Prediv = LL_RCC_PREDIV_DIV_2;
 281:src/stm32f1xx_ll_utils.c **** #endif /*RCC_PLLSRC_PREDIV1_SUPPORT*/
 282:src/stm32f1xx_ll_utils.c ****     /* Calculate the new PLL output frequency */
 283:src/stm32f1xx_ll_utils.c ****     pllfreq = UTILS_GetPLLOutputFrequency(HSI_VALUE, UTILS_PLLInitStruct);
 284:src/stm32f1xx_ll_utils.c **** 
 285:src/stm32f1xx_ll_utils.c ****     /* Enable HSI if not enabled */
 286:src/stm32f1xx_ll_utils.c ****     if (LL_RCC_HSI_IsReady() != 1U)
 287:src/stm32f1xx_ll_utils.c ****     {
 288:src/stm32f1xx_ll_utils.c ****       LL_RCC_HSI_Enable();
 289:src/stm32f1xx_ll_utils.c ****       while (LL_RCC_HSI_IsReady() != 1U)
 290:src/stm32f1xx_ll_utils.c ****       {
 291:src/stm32f1xx_ll_utils.c ****         /* Wait for HSI ready */
 292:src/stm32f1xx_ll_utils.c ****       }
 293:src/stm32f1xx_ll_utils.c ****     }
 294:src/stm32f1xx_ll_utils.c **** 
 295:src/stm32f1xx_ll_utils.c ****     /* Configure PLL */
 296:src/stm32f1xx_ll_utils.c ****     LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2, UTILS_PLLInitStruct->PLLMul);
 297:src/stm32f1xx_ll_utils.c **** 
 298:src/stm32f1xx_ll_utils.c ****     /* Enable PLL and switch system clock to PLL */
 299:src/stm32f1xx_ll_utils.c ****     status = UTILS_EnablePLLAndSwitchSystem(pllfreq, UTILS_ClkInitStruct);
 300:src/stm32f1xx_ll_utils.c ****   }
 301:src/stm32f1xx_ll_utils.c ****   else
 302:src/stm32f1xx_ll_utils.c ****   {
 303:src/stm32f1xx_ll_utils.c ****     /* Current PLL configuration cannot be modified */
 304:src/stm32f1xx_ll_utils.c ****     status = ERROR;
 305:src/stm32f1xx_ll_utils.c ****   }
 306:src/stm32f1xx_ll_utils.c **** 
 307:src/stm32f1xx_ll_utils.c ****   return status;
 308:src/stm32f1xx_ll_utils.c **** }
 309:src/stm32f1xx_ll_utils.c **** 
 310:src/stm32f1xx_ll_utils.c **** /**
 311:src/stm32f1xx_ll_utils.c ****   * @brief  This function configures system clock with HSE as clock source of the PLL
 312:src/stm32f1xx_ll_utils.c ****   * @note   The application need to ensure that PLL is disabled.
 313:src/stm32f1xx_ll_utils.c ****   * @note   Function is based on the following formula:
 314:src/stm32f1xx_ll_utils.c ****   *         - PLL output frequency = ((HSI frequency / PREDIV) * PLLMUL)
 315:src/stm32f1xx_ll_utils.c ****   *         - PREDIV: Set to 2 for few devices
 316:src/stm32f1xx_ll_utils.c ****   *         - PLLMUL: The application software must set correctly the PLL multiplication factor to
 317:src/stm32f1xx_ll_utils.c ****   *                   not exceed @ref UTILS_PLL_OUTPUT_MAX
 318:src/stm32f1xx_ll_utils.c ****   * @note   FLASH latency can be modified through this function.
 319:src/stm32f1xx_ll_utils.c ****   * @param  HSEFrequency Value between Min_Data = RCC_HSE_MIN and Max_Data = RCC_HSE_MAX
 320:src/stm32f1xx_ll_utils.c ****   * @param  HSEBypass This parameter can be one of the following values:
 321:src/stm32f1xx_ll_utils.c ****   *         @arg @ref LL_UTILS_HSEBYPASS_ON
 322:src/stm32f1xx_ll_utils.c ****   *         @arg @ref LL_UTILS_HSEBYPASS_OFF
ARM GAS  /tmp/ccgFoonV.s 			page 8


 323:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 324:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the PLL.
 325:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 326:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 327:src/stm32f1xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 328:src/stm32f1xx_ll_utils.c ****   *          - SUCCESS: Max frequency configuration done
 329:src/stm32f1xx_ll_utils.c ****   *          - ERROR: Max frequency configuration not done
 330:src/stm32f1xx_ll_utils.c ****   */
 331:src/stm32f1xx_ll_utils.c **** ErrorStatus LL_PLL_ConfigSystemClock_HSE(uint32_t HSEFrequency, uint32_t HSEBypass,
 332:src/stm32f1xx_ll_utils.c ****                                          LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct, LL_UTILS_Clk
 333:src/stm32f1xx_ll_utils.c **** {
 334:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 335:src/stm32f1xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 336:src/stm32f1xx_ll_utils.c **** 
 337:src/stm32f1xx_ll_utils.c ****   /* Check the parameters */
 338:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_HSE_FREQUENCY(HSEFrequency));
 339:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_HSE_BYPASS(HSEBypass));
 340:src/stm32f1xx_ll_utils.c **** 
 341:src/stm32f1xx_ll_utils.c ****   /* Check if one of the PLL is enabled */
 342:src/stm32f1xx_ll_utils.c ****   if (UTILS_PLL_IsBusy() == SUCCESS)
 343:src/stm32f1xx_ll_utils.c ****   {
 344:src/stm32f1xx_ll_utils.c ****     assert_param(IS_LL_UTILS_PREDIV_VALUE(UTILS_PLLInitStruct->Prediv));
 345:src/stm32f1xx_ll_utils.c **** 
 346:src/stm32f1xx_ll_utils.c ****     /* Calculate the new PLL output frequency */
 347:src/stm32f1xx_ll_utils.c ****     pllfreq = UTILS_GetPLLOutputFrequency(HSEFrequency, UTILS_PLLInitStruct);
 348:src/stm32f1xx_ll_utils.c **** 
 349:src/stm32f1xx_ll_utils.c ****     /* Enable HSE if not enabled */
 350:src/stm32f1xx_ll_utils.c ****     if (LL_RCC_HSE_IsReady() != 1U)
 351:src/stm32f1xx_ll_utils.c ****     {
 352:src/stm32f1xx_ll_utils.c ****       /* Check if need to enable HSE bypass feature or not */
 353:src/stm32f1xx_ll_utils.c ****       if (HSEBypass == LL_UTILS_HSEBYPASS_ON)
 354:src/stm32f1xx_ll_utils.c ****       {
 355:src/stm32f1xx_ll_utils.c ****         LL_RCC_HSE_EnableBypass();
 356:src/stm32f1xx_ll_utils.c ****       }
 357:src/stm32f1xx_ll_utils.c ****       else
 358:src/stm32f1xx_ll_utils.c ****       {
 359:src/stm32f1xx_ll_utils.c ****         LL_RCC_HSE_DisableBypass();
 360:src/stm32f1xx_ll_utils.c ****       }
 361:src/stm32f1xx_ll_utils.c **** 
 362:src/stm32f1xx_ll_utils.c ****       /* Enable HSE */
 363:src/stm32f1xx_ll_utils.c ****       LL_RCC_HSE_Enable();
 364:src/stm32f1xx_ll_utils.c ****       while (LL_RCC_HSE_IsReady() != 1U)
 365:src/stm32f1xx_ll_utils.c ****       {
 366:src/stm32f1xx_ll_utils.c ****         /* Wait for HSE ready */
 367:src/stm32f1xx_ll_utils.c ****       }
 368:src/stm32f1xx_ll_utils.c ****     }
 369:src/stm32f1xx_ll_utils.c **** 
 370:src/stm32f1xx_ll_utils.c ****     /* Configure PLL */
 371:src/stm32f1xx_ll_utils.c ****     LL_RCC_PLL_ConfigDomain_SYS((RCC_CFGR_PLLSRC | UTILS_PLLInitStruct->Prediv), UTILS_PLLInitStruc
 372:src/stm32f1xx_ll_utils.c **** 
 373:src/stm32f1xx_ll_utils.c ****     /* Enable PLL and switch system clock to PLL */
 374:src/stm32f1xx_ll_utils.c ****     status = UTILS_EnablePLLAndSwitchSystem(pllfreq, UTILS_ClkInitStruct);
 375:src/stm32f1xx_ll_utils.c ****   }
 376:src/stm32f1xx_ll_utils.c ****   else
 377:src/stm32f1xx_ll_utils.c ****   {
 378:src/stm32f1xx_ll_utils.c ****     /* Current PLL configuration cannot be modified */
 379:src/stm32f1xx_ll_utils.c ****     status = ERROR;
ARM GAS  /tmp/ccgFoonV.s 			page 9


 380:src/stm32f1xx_ll_utils.c ****   }
 381:src/stm32f1xx_ll_utils.c **** 
 382:src/stm32f1xx_ll_utils.c ****   return status;
 383:src/stm32f1xx_ll_utils.c **** }
 384:src/stm32f1xx_ll_utils.c **** 
 385:src/stm32f1xx_ll_utils.c **** /**
 386:src/stm32f1xx_ll_utils.c ****   * @}
 387:src/stm32f1xx_ll_utils.c ****   */
 388:src/stm32f1xx_ll_utils.c **** 
 389:src/stm32f1xx_ll_utils.c **** /**
 390:src/stm32f1xx_ll_utils.c ****   * @}
 391:src/stm32f1xx_ll_utils.c ****   */
 392:src/stm32f1xx_ll_utils.c **** 
 393:src/stm32f1xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Functions
 394:src/stm32f1xx_ll_utils.c ****   * @{
 395:src/stm32f1xx_ll_utils.c ****   */
 396:src/stm32f1xx_ll_utils.c **** /**
 397:src/stm32f1xx_ll_utils.c ****   * @brief  Update number of Flash wait states in line with new frequency and current
 398:src/stm32f1xx_ll_utils.c ****             voltage range.
 399:src/stm32f1xx_ll_utils.c ****   * @param  Frequency  SYSCLK frequency
 400:src/stm32f1xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 401:src/stm32f1xx_ll_utils.c ****   *          - SUCCESS: Latency has been modified
 402:src/stm32f1xx_ll_utils.c ****   *          - ERROR: Latency cannot be modified
 403:src/stm32f1xx_ll_utils.c ****   */
 404:src/stm32f1xx_ll_utils.c **** #if defined(FLASH_ACR_LATENCY)
 405:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_SetFlashLatency(uint32_t Frequency)
 406:src/stm32f1xx_ll_utils.c **** {
  78              		.loc 1 406 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL0:
 407:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 408:src/stm32f1xx_ll_utils.c **** 
 409:src/stm32f1xx_ll_utils.c ****   uint32_t latency = LL_FLASH_LATENCY_0;  /* default value 0WS */
 410:src/stm32f1xx_ll_utils.c **** 
 411:src/stm32f1xx_ll_utils.c ****   /* Frequency cannot be equal to 0 */
 412:src/stm32f1xx_ll_utils.c ****   if (Frequency == 0U)
  84              		.loc 1 412 0
  85 0000 B0B1     		cbz	r0, .L4	@ Frequency,
  86              	.LVL1:
  87              	.LBB18:
  88              	.LBB19:
 413:src/stm32f1xx_ll_utils.c ****   {
 414:src/stm32f1xx_ll_utils.c ****     status = ERROR;
 415:src/stm32f1xx_ll_utils.c ****   }
 416:src/stm32f1xx_ll_utils.c ****   else
 417:src/stm32f1xx_ll_utils.c ****   {
 418:src/stm32f1xx_ll_utils.c ****     if (Frequency > UTILS_LATENCY2_FREQ)
  89              		.loc 1 418 0
  90 0002 0C4B     		ldr	r3, .L6	@ tmp120,
  91 0004 9842     		cmp	r0, r3	@ Frequency, tmp120
  92 0006 11D8     		bhi	.L5	@,
 419:src/stm32f1xx_ll_utils.c ****     {
 420:src/stm32f1xx_ll_utils.c ****       /* 48 < SYSCLK <= 72 => 2WS (3 CPU cycles) */
 421:src/stm32f1xx_ll_utils.c ****       latency = LL_FLASH_LATENCY_2;
ARM GAS  /tmp/ccgFoonV.s 			page 10


 422:src/stm32f1xx_ll_utils.c ****     }
 423:src/stm32f1xx_ll_utils.c ****     else
 424:src/stm32f1xx_ll_utils.c ****     {
 425:src/stm32f1xx_ll_utils.c ****       if (Frequency > UTILS_LATENCY1_FREQ)
  93              		.loc 1 425 0
  94 0008 0B4B     		ldr	r3, .L6+4	@ tmp123,
  95 000a 9842     		cmp	r0, r3	@ Frequency, tmp123
  96 000c 94BF     		ite	ls
  97 000e 0020     		movls	r0, #0	@ latency,
  98              	.LVL2:
  99 0010 0120     		movhi	r0, #1	@ latency,
 100              	.L3:
 101              	.LVL3:
 102              	.LBB20:
 103              	.LBB21:
 104              		.file 2 "./inc/stm32f1xx_ll_system.h"
   1:./inc/stm32f1xx_ll_system.h **** /**
   2:./inc/stm32f1xx_ll_system.h ****   ******************************************************************************
   3:./inc/stm32f1xx_ll_system.h ****   * @file    stm32f1xx_ll_system.h
   4:./inc/stm32f1xx_ll_system.h ****   * @author  MCD Application Team
   5:./inc/stm32f1xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:./inc/stm32f1xx_ll_system.h ****   @verbatim
   7:./inc/stm32f1xx_ll_system.h ****   ==============================================================================
   8:./inc/stm32f1xx_ll_system.h ****                      ##### How to use this driver #####
   9:./inc/stm32f1xx_ll_system.h ****   ==============================================================================
  10:./inc/stm32f1xx_ll_system.h ****     [..]
  11:./inc/stm32f1xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:./inc/stm32f1xx_ll_system.h ****     used by user:
  13:./inc/stm32f1xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:./inc/stm32f1xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:./inc/stm32f1xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:./inc/stm32f1xx_ll_system.h **** 
  17:./inc/stm32f1xx_ll_system.h ****   @endverbatim
  18:./inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  19:./inc/stm32f1xx_ll_system.h ****   * @attention
  20:./inc/stm32f1xx_ll_system.h ****   *
  21:./inc/stm32f1xx_ll_system.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  22:./inc/stm32f1xx_ll_system.h ****   * All rights reserved.</center></h2>
  23:./inc/stm32f1xx_ll_system.h ****   *
  24:./inc/stm32f1xx_ll_system.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  25:./inc/stm32f1xx_ll_system.h ****   * the "License"; You may not use this file except in compliance with the
  26:./inc/stm32f1xx_ll_system.h ****   * License. You may obtain a copy of the License at:
  27:./inc/stm32f1xx_ll_system.h ****   *                        opensource.org/licenses/BSD-3-Clause
  28:./inc/stm32f1xx_ll_system.h ****   *
  29:./inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  30:./inc/stm32f1xx_ll_system.h ****   */
  31:./inc/stm32f1xx_ll_system.h **** 
  32:./inc/stm32f1xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  33:./inc/stm32f1xx_ll_system.h **** #ifndef __STM32F1xx_LL_SYSTEM_H
  34:./inc/stm32f1xx_ll_system.h **** #define __STM32F1xx_LL_SYSTEM_H
  35:./inc/stm32f1xx_ll_system.h **** 
  36:./inc/stm32f1xx_ll_system.h **** #ifdef __cplusplus
  37:./inc/stm32f1xx_ll_system.h **** extern "C" {
  38:./inc/stm32f1xx_ll_system.h **** #endif
  39:./inc/stm32f1xx_ll_system.h **** 
  40:./inc/stm32f1xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  41:./inc/stm32f1xx_ll_system.h **** #include "stm32f1xx.h"
ARM GAS  /tmp/ccgFoonV.s 			page 11


  42:./inc/stm32f1xx_ll_system.h **** 
  43:./inc/stm32f1xx_ll_system.h **** /** @addtogroup STM32F1xx_LL_Driver
  44:./inc/stm32f1xx_ll_system.h ****   * @{
  45:./inc/stm32f1xx_ll_system.h ****   */
  46:./inc/stm32f1xx_ll_system.h **** 
  47:./inc/stm32f1xx_ll_system.h **** #if defined (FLASH) || defined (DBGMCU)
  48:./inc/stm32f1xx_ll_system.h **** 
  49:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  50:./inc/stm32f1xx_ll_system.h ****   * @{
  51:./inc/stm32f1xx_ll_system.h ****   */
  52:./inc/stm32f1xx_ll_system.h **** 
  53:./inc/stm32f1xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  54:./inc/stm32f1xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  55:./inc/stm32f1xx_ll_system.h **** 
  56:./inc/stm32f1xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  57:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  58:./inc/stm32f1xx_ll_system.h ****   * @{
  59:./inc/stm32f1xx_ll_system.h ****   */
  60:./inc/stm32f1xx_ll_system.h **** 
  61:./inc/stm32f1xx_ll_system.h **** /**
  62:./inc/stm32f1xx_ll_system.h ****   * @}
  63:./inc/stm32f1xx_ll_system.h ****   */
  64:./inc/stm32f1xx_ll_system.h **** 
  65:./inc/stm32f1xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  66:./inc/stm32f1xx_ll_system.h **** 
  67:./inc/stm32f1xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  68:./inc/stm32f1xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  69:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  70:./inc/stm32f1xx_ll_system.h ****   * @{
  71:./inc/stm32f1xx_ll_system.h ****   */
  72:./inc/stm32f1xx_ll_system.h **** 
  73:./inc/stm32f1xx_ll_system.h **** 
  74:./inc/stm32f1xx_ll_system.h **** 
  75:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
  76:./inc/stm32f1xx_ll_system.h ****   * @{
  77:./inc/stm32f1xx_ll_system.h ****   */
  78:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
  79:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
  80:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
  81:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
  82:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
  83:./inc/stm32f1xx_ll_system.h **** /**
  84:./inc/stm32f1xx_ll_system.h ****   * @}
  85:./inc/stm32f1xx_ll_system.h ****   */
  86:./inc/stm32f1xx_ll_system.h **** 
  87:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
  88:./inc/stm32f1xx_ll_system.h ****   * @{
  89:./inc/stm32f1xx_ll_system.h ****   */
  90:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_CR_DBG_TIM2_STOP          /*!< TIM2 counter stopp
  91:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_CR_DBG_TIM3_STOP          /*!< TIM3 counter stopp
  92:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_CR_DBG_TIM4_STOP          /*!< TIM4 counter stopp
  93:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM5_STOP)
  94:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_CR_DBG_TIM5_STOP          /*!< TIM5 counter stopp
  95:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM5_STOP */
  96:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM6_STOP)
  97:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_CR_DBG_TIM6_STOP          /*!< TIM6 counter stopp
  98:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM6_STOP */
ARM GAS  /tmp/ccgFoonV.s 			page 12


  99:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM7_STOP)
 100:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_CR_DBG_TIM7_STOP          /*!< TIM7 counter stopp
 101:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM7_STOP */
 102:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM12_STOP)
 103:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM12_STOP     DBGMCU_CR_DBG_TIM12_STOP         /*!< TIM12 counter stop
 104:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM12_STOP */
 105:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM13_STOP)
 106:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM13_STOP     DBGMCU_CR_DBG_TIM13_STOP         /*!< TIM13 counter stop
 107:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM13_STOP */
 108:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM14_STOP)
 109:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_CR_DBG_TIM14_STOP         /*!< TIM14 counter stop
 110:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM14_STOP */
 111:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_CR_DBG_WWDG_STOP          /*!< Debug Window Watch
 112:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_CR_DBG_IWDG_STOP          /*!< Debug Independent 
 113:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS timeout
 114:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT)
 115:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT /*!< I2C2 SMBUS timeout
 116:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT */
 117:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN1_STOP)
 118:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN1_STOP      DBGMCU_CR_DBG_CAN1_STOP          /*!< CAN1 debug stopped
 119:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 120:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN2_STOP)
 121:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN2_STOP      DBGMCU_CR_DBG_CAN2_STOP          /*!< CAN2 debug stopped
 122:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN2_STOP */
 123:./inc/stm32f1xx_ll_system.h **** /**
 124:./inc/stm32f1xx_ll_system.h ****   * @}
 125:./inc/stm32f1xx_ll_system.h ****   */
 126:./inc/stm32f1xx_ll_system.h **** 
 127:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 128:./inc/stm32f1xx_ll_system.h ****   * @{
 129:./inc/stm32f1xx_ll_system.h ****   */
 130:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_CR_DBG_TIM1_STOP   /*!< TIM1 counter stopped when
 131:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM8_STOP)
 132:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_CR_DBG_TIM8_STOP   /*!< TIM8 counter stopped when
 133:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 134:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM9_STOP)
 135:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM9_STOP      DBGMCU_CR_DBG_TIM9_STOP   /*!< TIM9 counter stopped when
 136:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM9_STOP */
 137:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM10_STOP)
 138:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM10_STOP     DBGMCU_CR_DBG_TIM10_STOP   /*!< TIM10 counter stopped wh
 139:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM10_STOP */
 140:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM11_STOP)
 141:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM11_STOP     DBGMCU_CR_DBG_TIM11_STOP   /*!< TIM11 counter stopped wh
 142:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM11_STOP */
 143:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM15_STOP)
 144:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM15_STOP     DBGMCU_CR_DBG_TIM15_STOP   /*!< TIM15 counter stopped wh
 145:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM15_STOP */
 146:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM16_STOP)
 147:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM16_STOP     DBGMCU_CR_DBG_TIM16_STOP   /*!< TIM16 counter stopped wh
 148:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM16_STOP */
 149:./inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM17_STOP)
 150:./inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM17_STOP     DBGMCU_CR_DBG_TIM17_STOP   /*!< TIM17 counter stopped wh
 151:./inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM17_STOP */
 152:./inc/stm32f1xx_ll_system.h **** /**
 153:./inc/stm32f1xx_ll_system.h ****   * @}
 154:./inc/stm32f1xx_ll_system.h ****   */
 155:./inc/stm32f1xx_ll_system.h **** 
ARM GAS  /tmp/ccgFoonV.s 			page 13


 156:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 157:./inc/stm32f1xx_ll_system.h ****   * @{
 158:./inc/stm32f1xx_ll_system.h ****   */
 159:./inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 160:./inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 0x00000000U             /*!< FLASH Zero Latency cycle */
 161:./inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_0     /*!< FLASH One Latency cycle */
 162:./inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_1     /*!< FLASH Two wait states */
 163:./inc/stm32f1xx_ll_system.h **** #else
 164:./inc/stm32f1xx_ll_system.h **** #endif /* FLASH_ACR_LATENCY */
 165:./inc/stm32f1xx_ll_system.h **** /**
 166:./inc/stm32f1xx_ll_system.h ****   * @}
 167:./inc/stm32f1xx_ll_system.h ****   */
 168:./inc/stm32f1xx_ll_system.h **** 
 169:./inc/stm32f1xx_ll_system.h **** /**
 170:./inc/stm32f1xx_ll_system.h ****   * @}
 171:./inc/stm32f1xx_ll_system.h ****   */
 172:./inc/stm32f1xx_ll_system.h **** 
 173:./inc/stm32f1xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 174:./inc/stm32f1xx_ll_system.h **** 
 175:./inc/stm32f1xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 176:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 177:./inc/stm32f1xx_ll_system.h ****   * @{
 178:./inc/stm32f1xx_ll_system.h ****   */
 179:./inc/stm32f1xx_ll_system.h **** 
 180:./inc/stm32f1xx_ll_system.h **** 
 181:./inc/stm32f1xx_ll_system.h **** 
 182:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 183:./inc/stm32f1xx_ll_system.h ****   * @{
 184:./inc/stm32f1xx_ll_system.h ****   */
 185:./inc/stm32f1xx_ll_system.h **** 
 186:./inc/stm32f1xx_ll_system.h **** /**
 187:./inc/stm32f1xx_ll_system.h ****   * @brief  Return the device identifier
 188:./inc/stm32f1xx_ll_system.h ****   * @note For Low Density devices, the device ID is 0x412
 189:./inc/stm32f1xx_ll_system.h ****   * @note For Medium Density devices, the device ID is 0x410
 190:./inc/stm32f1xx_ll_system.h ****   * @note For High Density devices, the device ID is 0x414
 191:./inc/stm32f1xx_ll_system.h ****   * @note For XL Density devices, the device ID is 0x430
 192:./inc/stm32f1xx_ll_system.h ****   * @note For Connectivity Line devices, the device ID is 0x418
 193:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 194:./inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
 195:./inc/stm32f1xx_ll_system.h ****   */
 196:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 197:./inc/stm32f1xx_ll_system.h **** {
 198:./inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 199:./inc/stm32f1xx_ll_system.h **** }
 200:./inc/stm32f1xx_ll_system.h **** 
 201:./inc/stm32f1xx_ll_system.h **** /**
 202:./inc/stm32f1xx_ll_system.h ****   * @brief  Return the device revision identifier
 203:./inc/stm32f1xx_ll_system.h ****   * @note This field indicates the revision of the device.
 204:./inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000,for Low Density devices
 205:./inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x0000, revB -> 0x2000, revZ -> 0x2001, rev1,2,3,X or 
 206:./inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1000, revZ -> 0x1001,rev1,2,3,X or Y -> 0x1003,
 207:./inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1003,for XL Density devices
 208:./inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000, revZ -> 0x1001 for  Connectivity line devices
 209:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 210:./inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 211:./inc/stm32f1xx_ll_system.h ****   */
 212:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
ARM GAS  /tmp/ccgFoonV.s 			page 14


 213:./inc/stm32f1xx_ll_system.h **** {
 214:./inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
 215:./inc/stm32f1xx_ll_system.h **** }
 216:./inc/stm32f1xx_ll_system.h **** 
 217:./inc/stm32f1xx_ll_system.h **** /**
 218:./inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 219:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 220:./inc/stm32f1xx_ll_system.h ****   * @retval None
 221:./inc/stm32f1xx_ll_system.h ****   */
 222:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 223:./inc/stm32f1xx_ll_system.h **** {
 224:./inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 225:./inc/stm32f1xx_ll_system.h **** }
 226:./inc/stm32f1xx_ll_system.h **** 
 227:./inc/stm32f1xx_ll_system.h **** /**
 228:./inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 229:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 230:./inc/stm32f1xx_ll_system.h ****   * @retval None
 231:./inc/stm32f1xx_ll_system.h ****   */
 232:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 233:./inc/stm32f1xx_ll_system.h **** {
 234:./inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 235:./inc/stm32f1xx_ll_system.h **** }
 236:./inc/stm32f1xx_ll_system.h **** 
 237:./inc/stm32f1xx_ll_system.h **** /**
 238:./inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 239:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 240:./inc/stm32f1xx_ll_system.h ****   * @retval None
 241:./inc/stm32f1xx_ll_system.h ****   */
 242:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 243:./inc/stm32f1xx_ll_system.h **** {
 244:./inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 245:./inc/stm32f1xx_ll_system.h **** }
 246:./inc/stm32f1xx_ll_system.h **** 
 247:./inc/stm32f1xx_ll_system.h **** /**
 248:./inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 249:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 250:./inc/stm32f1xx_ll_system.h ****   * @retval None
 251:./inc/stm32f1xx_ll_system.h ****   */
 252:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 253:./inc/stm32f1xx_ll_system.h **** {
 254:./inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 255:./inc/stm32f1xx_ll_system.h **** }
 256:./inc/stm32f1xx_ll_system.h **** 
 257:./inc/stm32f1xx_ll_system.h **** /**
 258:./inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 259:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 260:./inc/stm32f1xx_ll_system.h ****   * @retval None
 261:./inc/stm32f1xx_ll_system.h ****   */
 262:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 263:./inc/stm32f1xx_ll_system.h **** {
 264:./inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 265:./inc/stm32f1xx_ll_system.h **** }
 266:./inc/stm32f1xx_ll_system.h **** 
 267:./inc/stm32f1xx_ll_system.h **** /**
 268:./inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 269:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
ARM GAS  /tmp/ccgFoonV.s 			page 15


 270:./inc/stm32f1xx_ll_system.h ****   * @retval None
 271:./inc/stm32f1xx_ll_system.h ****   */
 272:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 273:./inc/stm32f1xx_ll_system.h **** {
 274:./inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 275:./inc/stm32f1xx_ll_system.h **** }
 276:./inc/stm32f1xx_ll_system.h **** 
 277:./inc/stm32f1xx_ll_system.h **** /**
 278:./inc/stm32f1xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 279:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 280:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
 281:./inc/stm32f1xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
 282:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 283:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 284:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 285:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 286:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 287:./inc/stm32f1xx_ll_system.h ****   * @retval None
 288:./inc/stm32f1xx_ll_system.h ****   */
 289:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
 290:./inc/stm32f1xx_ll_system.h **** {
 291:./inc/stm32f1xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
 292:./inc/stm32f1xx_ll_system.h **** }
 293:./inc/stm32f1xx_ll_system.h **** 
 294:./inc/stm32f1xx_ll_system.h **** /**
 295:./inc/stm32f1xx_ll_system.h ****   * @brief  Get Trace pin assignment control
 296:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
 297:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
 298:./inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 299:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 300:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 301:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 302:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 303:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 304:./inc/stm32f1xx_ll_system.h ****   */
 305:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
 306:./inc/stm32f1xx_ll_system.h **** {
 307:./inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
 308:./inc/stm32f1xx_ll_system.h **** }
 309:./inc/stm32f1xx_ll_system.h **** 
 310:./inc/stm32f1xx_ll_system.h **** /**
 311:./inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 312:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 313:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 314:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 315:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 316:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 317:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 318:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 319:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 320:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 321:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 322:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 323:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 324:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 325:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 326:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
ARM GAS  /tmp/ccgFoonV.s 			page 16


 327:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph
 328:./inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 329:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 330:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 331:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 332:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 333:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 334:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 335:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 336:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 337:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 338:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 339:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 340:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 341:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 342:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 343:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 344:./inc/stm32f1xx_ll_system.h ****   *
 345:./inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 346:./inc/stm32f1xx_ll_system.h ****   * @retval None
 347:./inc/stm32f1xx_ll_system.h ****   */
 348:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 349:./inc/stm32f1xx_ll_system.h **** {
 350:./inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
 351:./inc/stm32f1xx_ll_system.h **** }
 352:./inc/stm32f1xx_ll_system.h **** 
 353:./inc/stm32f1xx_ll_system.h **** /**
 354:./inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 355:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 356:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 357:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 358:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 359:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 360:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 361:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 362:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 363:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 364:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 365:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 366:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 367:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 368:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 369:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 370:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 371:./inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 372:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 373:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 374:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 375:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 376:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 377:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 378:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 379:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 380:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 381:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 382:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 383:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
ARM GAS  /tmp/ccgFoonV.s 			page 17


 384:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 385:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 386:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 387:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 388:./inc/stm32f1xx_ll_system.h ****   *
 389:./inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 390:./inc/stm32f1xx_ll_system.h ****   * @retval None
 391:./inc/stm32f1xx_ll_system.h ****   */
 392:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 393:./inc/stm32f1xx_ll_system.h **** {
 394:./inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 395:./inc/stm32f1xx_ll_system.h **** }
 396:./inc/stm32f1xx_ll_system.h **** 
 397:./inc/stm32f1xx_ll_system.h **** /**
 398:./inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 399:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 400:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 401:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 402:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 403:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 404:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 405:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 406:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 407:./inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 408:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 409:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 410:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 411:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
 412:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
 413:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 414:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 415:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 416:./inc/stm32f1xx_ll_system.h ****   *
 417:./inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 418:./inc/stm32f1xx_ll_system.h ****   * @retval None
 419:./inc/stm32f1xx_ll_system.h ****   */
 420:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 421:./inc/stm32f1xx_ll_system.h **** {
 422:./inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
 423:./inc/stm32f1xx_ll_system.h **** }
 424:./inc/stm32f1xx_ll_system.h **** 
 425:./inc/stm32f1xx_ll_system.h **** /**
 426:./inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 427:./inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 428:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 429:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 430:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 431:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 432:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 433:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 434:./inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 435:./inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 436:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 437:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 438:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 439:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
 440:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
ARM GAS  /tmp/ccgFoonV.s 			page 18


 441:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 442:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 443:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 444:./inc/stm32f1xx_ll_system.h ****   *
 445:./inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 446:./inc/stm32f1xx_ll_system.h ****   * @retval None
 447:./inc/stm32f1xx_ll_system.h ****   */
 448:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 449:./inc/stm32f1xx_ll_system.h **** {
 450:./inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 451:./inc/stm32f1xx_ll_system.h **** }
 452:./inc/stm32f1xx_ll_system.h **** /**
 453:./inc/stm32f1xx_ll_system.h ****   * @}
 454:./inc/stm32f1xx_ll_system.h ****   */
 455:./inc/stm32f1xx_ll_system.h **** 
 456:./inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 457:./inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 458:./inc/stm32f1xx_ll_system.h ****   * @{
 459:./inc/stm32f1xx_ll_system.h ****   */
 460:./inc/stm32f1xx_ll_system.h **** 
 461:./inc/stm32f1xx_ll_system.h **** /**
 462:./inc/stm32f1xx_ll_system.h ****   * @brief  Set FLASH Latency
 463:./inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 464:./inc/stm32f1xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
 465:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 466:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 467:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 468:./inc/stm32f1xx_ll_system.h ****   * @retval None
 469:./inc/stm32f1xx_ll_system.h ****   */
 470:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 471:./inc/stm32f1xx_ll_system.h **** {
 472:./inc/stm32f1xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 105              		.loc 2 472 0
 106 0012 0A4A     		ldr	r2, .L6+8	@ tmp124,
 107 0014 1368     		ldr	r3, [r2]	@ _11, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 108 0016 23F00703 		bic	r3, r3, #7	@ tmp125, _11,
 109 001a 0343     		orrs	r3, r3, r0	@, _13, tmp125, latency
 110 001c 1360     		str	r3, [r2]	@ _13, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 111              	.LVL4:
 112              	.LBE21:
 113              	.LBE20:
 114              	.LBB22:
 115              	.LBB23:
 473:./inc/stm32f1xx_ll_system.h **** }
 474:./inc/stm32f1xx_ll_system.h **** 
 475:./inc/stm32f1xx_ll_system.h **** /**
 476:./inc/stm32f1xx_ll_system.h ****   * @brief  Get FLASH Latency
 477:./inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
 478:./inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 479:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 480:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 481:./inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 482:./inc/stm32f1xx_ll_system.h ****   */
 483:./inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 484:./inc/stm32f1xx_ll_system.h **** {
 485:./inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 116              		.loc 2 485 0
ARM GAS  /tmp/ccgFoonV.s 			page 19


 117 001e 1368     		ldr	r3, [r2]	@ _8, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 118 0020 03F00703 		and	r3, r3, #7	@ tmp128, _8,
 119              	.LBE23:
 120              	.LBE22:
 121              	.LBE19:
 122              	.LBE18:
 414:src/stm32f1xx_ll_utils.c ****   }
 123              		.loc 1 414 0
 124 0024 181A     		subs	r0, r3, r0	@ <retval>, tmp128, latency
 125              	.LVL5:
 126 0026 18BF     		it	ne
 127 0028 0120     		movne	r0, #1	@ <retval>,
 128 002a 7047     		bx	lr	@
 129              	.LVL6:
 130              	.L5:
 131              	.LBB25:
 132              	.LBB24:
 421:src/stm32f1xx_ll_utils.c ****     }
 133              		.loc 1 421 0
 134 002c 0220     		movs	r0, #2	@ latency,
 135              	.LVL7:
 136 002e F0E7     		b	.L3	@
 137              	.LVL8:
 138              	.L4:
 139              	.LBE24:
 140              	.LBE25:
 414:src/stm32f1xx_ll_utils.c ****   }
 141              		.loc 1 414 0
 142 0030 0120     		movs	r0, #1	@ <retval>,
 143              	.LVL9:
 426:src/stm32f1xx_ll_utils.c ****       {
 427:src/stm32f1xx_ll_utils.c ****         /* 24 < SYSCLK <= 48 => 1WS (2 CPU cycles) */
 428:src/stm32f1xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_1;
 429:src/stm32f1xx_ll_utils.c ****       }
 430:src/stm32f1xx_ll_utils.c ****       /* else SYSCLK < 24MHz default LL_FLASH_LATENCY_0 0WS */
 431:src/stm32f1xx_ll_utils.c ****     }
 432:src/stm32f1xx_ll_utils.c **** 
 433:src/stm32f1xx_ll_utils.c ****     LL_FLASH_SetLatency(latency);
 434:src/stm32f1xx_ll_utils.c **** 
 435:src/stm32f1xx_ll_utils.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 436:src/stm32f1xx_ll_utils.c ****        memory by reading the FLASH_ACR register */
 437:src/stm32f1xx_ll_utils.c ****     if (LL_FLASH_GetLatency() != latency)
 438:src/stm32f1xx_ll_utils.c ****     {
 439:src/stm32f1xx_ll_utils.c ****       status = ERROR;
 440:src/stm32f1xx_ll_utils.c ****     }
 441:src/stm32f1xx_ll_utils.c ****   }
 442:src/stm32f1xx_ll_utils.c ****   return status;
 443:src/stm32f1xx_ll_utils.c **** }
 144              		.loc 1 443 0
 145 0032 7047     		bx	lr	@
 146              	.L7:
 147              		.align	2
 148              	.L6:
 149 0034 006CDC02 		.word	48000000
 150 0038 00366E01 		.word	24000000
 151 003c 00200240 		.word	1073881088
 152              		.cfi_endproc
ARM GAS  /tmp/ccgFoonV.s 			page 20


 153              	.LFE179:
 154              		.size	UTILS_SetFlashLatency, .-UTILS_SetFlashLatency
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 160              		.type	UTILS_EnablePLLAndSwitchSystem, %function
 161              	UTILS_EnablePLLAndSwitchSystem:
 162              	.LFB182:
 444:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 445:src/stm32f1xx_ll_utils.c **** 
 446:src/stm32f1xx_ll_utils.c **** /**
 447:src/stm32f1xx_ll_utils.c ****   * @brief  Function to check that PLL can be modified
 448:src/stm32f1xx_ll_utils.c ****   * @param  PLL_InputFrequency  PLL input frequency (in Hz)
 449:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 450:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the PLL.
 451:src/stm32f1xx_ll_utils.c ****   * @retval PLL output frequency (in Hz)
 452:src/stm32f1xx_ll_utils.c ****   */
 453:src/stm32f1xx_ll_utils.c **** static uint32_t UTILS_GetPLLOutputFrequency(uint32_t PLL_InputFrequency, LL_UTILS_PLLInitTypeDef *U
 454:src/stm32f1xx_ll_utils.c **** {
 455:src/stm32f1xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 456:src/stm32f1xx_ll_utils.c **** 
 457:src/stm32f1xx_ll_utils.c ****   /* Check the parameters */
 458:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLMUL_VALUE(UTILS_PLLInitStruct->PLLMul));
 459:src/stm32f1xx_ll_utils.c **** 
 460:src/stm32f1xx_ll_utils.c ****   /* Check different PLL parameters according to RM                          */
 461:src/stm32f1xx_ll_utils.c **** #if defined (RCC_CFGR2_PREDIV1)
 462:src/stm32f1xx_ll_utils.c ****   pllfreq = __LL_RCC_CALC_PLLCLK_FREQ(PLL_InputFrequency / (UTILS_PLLInitStruct->Prediv + 1U), UTIL
 463:src/stm32f1xx_ll_utils.c **** #else
 464:src/stm32f1xx_ll_utils.c ****   pllfreq = __LL_RCC_CALC_PLLCLK_FREQ(PLL_InputFrequency / ((UTILS_PLLInitStruct->Prediv >> RCC_CFG
 465:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 466:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLL_FREQUENCY(pllfreq));
 467:src/stm32f1xx_ll_utils.c **** 
 468:src/stm32f1xx_ll_utils.c ****   return pllfreq;
 469:src/stm32f1xx_ll_utils.c **** }
 470:src/stm32f1xx_ll_utils.c **** 
 471:src/stm32f1xx_ll_utils.c **** /**
 472:src/stm32f1xx_ll_utils.c ****   * @brief  Function to check that PLL can be modified
 473:src/stm32f1xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 474:src/stm32f1xx_ll_utils.c ****   *          - SUCCESS: PLL modification can be done
 475:src/stm32f1xx_ll_utils.c ****   *          - ERROR: PLL is busy
 476:src/stm32f1xx_ll_utils.c ****   */
 477:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_PLL_IsBusy(void)
 478:src/stm32f1xx_ll_utils.c **** {
 479:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 480:src/stm32f1xx_ll_utils.c **** 
 481:src/stm32f1xx_ll_utils.c ****   /* Check if PLL is busy*/
 482:src/stm32f1xx_ll_utils.c ****   if (LL_RCC_PLL_IsReady() != 0U)
 483:src/stm32f1xx_ll_utils.c ****   {
 484:src/stm32f1xx_ll_utils.c ****     /* PLL configuration cannot be modified */
 485:src/stm32f1xx_ll_utils.c ****     status = ERROR;
 486:src/stm32f1xx_ll_utils.c ****   }
 487:src/stm32f1xx_ll_utils.c **** #if defined(RCC_PLL2_SUPPORT)
 488:src/stm32f1xx_ll_utils.c ****   /* Check if PLL2 is busy*/
 489:src/stm32f1xx_ll_utils.c ****   if (LL_RCC_PLL2_IsReady() != 0U)
 490:src/stm32f1xx_ll_utils.c ****   {
ARM GAS  /tmp/ccgFoonV.s 			page 21


 491:src/stm32f1xx_ll_utils.c ****     /* PLL2 configuration cannot be modified */
 492:src/stm32f1xx_ll_utils.c ****     status = ERROR;
 493:src/stm32f1xx_ll_utils.c ****   }
 494:src/stm32f1xx_ll_utils.c **** #endif /* RCC_PLL2_SUPPORT */
 495:src/stm32f1xx_ll_utils.c **** 
 496:src/stm32f1xx_ll_utils.c **** #if defined(RCC_PLLI2S_SUPPORT)
 497:src/stm32f1xx_ll_utils.c ****   /* Check if PLLI2S  is busy*/
 498:src/stm32f1xx_ll_utils.c ****   if (LL_RCC_PLLI2S_IsReady() != 0U)
 499:src/stm32f1xx_ll_utils.c ****   {
 500:src/stm32f1xx_ll_utils.c ****     /* PLLI2S configuration cannot be modified */
 501:src/stm32f1xx_ll_utils.c ****     status = ERROR;
 502:src/stm32f1xx_ll_utils.c ****   }
 503:src/stm32f1xx_ll_utils.c **** #endif /* RCC_PLLI2S_SUPPORT */
 504:src/stm32f1xx_ll_utils.c **** 
 505:src/stm32f1xx_ll_utils.c ****   return status;
 506:src/stm32f1xx_ll_utils.c **** }
 507:src/stm32f1xx_ll_utils.c **** 
 508:src/stm32f1xx_ll_utils.c **** /**
 509:src/stm32f1xx_ll_utils.c ****   * @brief  Function to enable PLL and switch system clock to PLL
 510:src/stm32f1xx_ll_utils.c ****   * @param  SYSCLK_Frequency SYSCLK frequency
 511:src/stm32f1xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 512:src/stm32f1xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 513:src/stm32f1xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 514:src/stm32f1xx_ll_utils.c ****   *          - SUCCESS: No problem to switch system to PLL
 515:src/stm32f1xx_ll_utils.c ****   *          - ERROR: Problem to switch system to PLL
 516:src/stm32f1xx_ll_utils.c ****   */
 517:src/stm32f1xx_ll_utils.c **** static ErrorStatus UTILS_EnablePLLAndSwitchSystem(uint32_t SYSCLK_Frequency, LL_UTILS_ClkInitTypeDe
 518:src/stm32f1xx_ll_utils.c **** {
 163              		.loc 1 518 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              	.LVL10:
 168 0040 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 169              	.LCFI0:
 170              		.cfi_def_cfa_offset 24
 171              		.cfi_offset 4, -24
 172              		.cfi_offset 5, -20
 173              		.cfi_offset 6, -16
 174              		.cfi_offset 7, -12
 175              		.cfi_offset 8, -8
 176              		.cfi_offset 14, -4
 177              	.LBB44:
 178              	.LBB45:
 179              		.file 3 "./inc/stm32f1xx_ll_rcc.h"
   1:./inc/stm32f1xx_ll_rcc.h **** /**
   2:./inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   3:./inc/stm32f1xx_ll_rcc.h ****   * @file    stm32f1xx_ll_rcc.h
   4:./inc/stm32f1xx_ll_rcc.h ****   * @author  MCD Application Team
   5:./inc/stm32f1xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:./inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   7:./inc/stm32f1xx_ll_rcc.h ****   * @attention
   8:./inc/stm32f1xx_ll_rcc.h ****   *
   9:./inc/stm32f1xx_ll_rcc.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:./inc/stm32f1xx_ll_rcc.h ****   * All rights reserved.</center></h2>
  11:./inc/stm32f1xx_ll_rcc.h ****   *
  12:./inc/stm32f1xx_ll_rcc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccgFoonV.s 			page 22


  13:./inc/stm32f1xx_ll_rcc.h ****   * the "License"; You may not use this file except in compliance with the
  14:./inc/stm32f1xx_ll_rcc.h ****   * License. You may obtain a copy of the License at:
  15:./inc/stm32f1xx_ll_rcc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:./inc/stm32f1xx_ll_rcc.h ****   *
  17:./inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
  18:./inc/stm32f1xx_ll_rcc.h ****   */
  19:./inc/stm32f1xx_ll_rcc.h **** 
  20:./inc/stm32f1xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:./inc/stm32f1xx_ll_rcc.h **** #ifndef __STM32F1xx_LL_RCC_H
  22:./inc/stm32f1xx_ll_rcc.h **** #define __STM32F1xx_LL_RCC_H
  23:./inc/stm32f1xx_ll_rcc.h **** 
  24:./inc/stm32f1xx_ll_rcc.h **** #ifdef __cplusplus
  25:./inc/stm32f1xx_ll_rcc.h **** extern "C" {
  26:./inc/stm32f1xx_ll_rcc.h **** #endif
  27:./inc/stm32f1xx_ll_rcc.h **** 
  28:./inc/stm32f1xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  29:./inc/stm32f1xx_ll_rcc.h **** #include "stm32f1xx.h"
  30:./inc/stm32f1xx_ll_rcc.h **** 
  31:./inc/stm32f1xx_ll_rcc.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:./inc/stm32f1xx_ll_rcc.h ****   * @{
  33:./inc/stm32f1xx_ll_rcc.h ****   */
  34:./inc/stm32f1xx_ll_rcc.h **** 
  35:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC)
  36:./inc/stm32f1xx_ll_rcc.h **** 
  37:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  38:./inc/stm32f1xx_ll_rcc.h ****   * @{
  39:./inc/stm32f1xx_ll_rcc.h ****   */
  40:./inc/stm32f1xx_ll_rcc.h **** 
  41:./inc/stm32f1xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  42:./inc/stm32f1xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  43:./inc/stm32f1xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  44:./inc/stm32f1xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  45:./inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  46:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  47:./inc/stm32f1xx_ll_rcc.h ****   * @{
  48:./inc/stm32f1xx_ll_rcc.h ****   */
  49:./inc/stm32f1xx_ll_rcc.h **** /**
  50:./inc/stm32f1xx_ll_rcc.h ****   * @}
  51:./inc/stm32f1xx_ll_rcc.h ****   */
  52:./inc/stm32f1xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  53:./inc/stm32f1xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  54:./inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  55:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  56:./inc/stm32f1xx_ll_rcc.h ****   * @{
  57:./inc/stm32f1xx_ll_rcc.h ****   */
  58:./inc/stm32f1xx_ll_rcc.h **** 
  59:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  60:./inc/stm32f1xx_ll_rcc.h ****   * @{
  61:./inc/stm32f1xx_ll_rcc.h ****   */
  62:./inc/stm32f1xx_ll_rcc.h **** 
  63:./inc/stm32f1xx_ll_rcc.h **** /**
  64:./inc/stm32f1xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  65:./inc/stm32f1xx_ll_rcc.h ****   */
  66:./inc/stm32f1xx_ll_rcc.h **** typedef struct
  67:./inc/stm32f1xx_ll_rcc.h **** {
  68:./inc/stm32f1xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  69:./inc/stm32f1xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
ARM GAS  /tmp/ccgFoonV.s 			page 23


  70:./inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  71:./inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  72:./inc/stm32f1xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  73:./inc/stm32f1xx_ll_rcc.h **** 
  74:./inc/stm32f1xx_ll_rcc.h **** /**
  75:./inc/stm32f1xx_ll_rcc.h ****   * @}
  76:./inc/stm32f1xx_ll_rcc.h ****   */
  77:./inc/stm32f1xx_ll_rcc.h **** 
  78:./inc/stm32f1xx_ll_rcc.h **** /**
  79:./inc/stm32f1xx_ll_rcc.h ****   * @}
  80:./inc/stm32f1xx_ll_rcc.h ****   */
  81:./inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  82:./inc/stm32f1xx_ll_rcc.h **** 
  83:./inc/stm32f1xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
  84:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
  85:./inc/stm32f1xx_ll_rcc.h ****   * @{
  86:./inc/stm32f1xx_ll_rcc.h ****   */
  87:./inc/stm32f1xx_ll_rcc.h **** 
  88:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
  89:./inc/stm32f1xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
  90:./inc/stm32f1xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
  91:./inc/stm32f1xx_ll_rcc.h ****   *           HW set-up.
  92:./inc/stm32f1xx_ll_rcc.h ****   * @{
  93:./inc/stm32f1xx_ll_rcc.h ****   */
  94:./inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
  95:./inc/stm32f1xx_ll_rcc.h **** #define HSE_VALUE    8000000U  /*!< Value of the HSE oscillator in Hz */
  96:./inc/stm32f1xx_ll_rcc.h **** #endif /* HSE_VALUE */
  97:./inc/stm32f1xx_ll_rcc.h **** 
  98:./inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
  99:./inc/stm32f1xx_ll_rcc.h **** #define HSI_VALUE    8000000U  /*!< Value of the HSI oscillator in Hz */
 100:./inc/stm32f1xx_ll_rcc.h **** #endif /* HSI_VALUE */
 101:./inc/stm32f1xx_ll_rcc.h **** 
 102:./inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 103:./inc/stm32f1xx_ll_rcc.h **** #define LSE_VALUE    32768U    /*!< Value of the LSE oscillator in Hz */
 104:./inc/stm32f1xx_ll_rcc.h **** #endif /* LSE_VALUE */
 105:./inc/stm32f1xx_ll_rcc.h **** 
 106:./inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 107:./inc/stm32f1xx_ll_rcc.h **** #define LSI_VALUE    40000U    /*!< Value of the LSI oscillator in Hz */
 108:./inc/stm32f1xx_ll_rcc.h **** #endif /* LSI_VALUE */
 109:./inc/stm32f1xx_ll_rcc.h **** /**
 110:./inc/stm32f1xx_ll_rcc.h ****   * @}
 111:./inc/stm32f1xx_ll_rcc.h ****   */
 112:./inc/stm32f1xx_ll_rcc.h **** 
 113:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 114:./inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 115:./inc/stm32f1xx_ll_rcc.h ****   * @{
 116:./inc/stm32f1xx_ll_rcc.h ****   */
 117:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 118:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 119:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 120:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 121:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 122:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYC               RCC_CIR_PLL3RDYC    /*!< PLL3(PLLI2S) Ready Interrupt Cle
 123:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYC               RCC_CIR_PLL2RDYC    /*!< PLL2 Ready Interrupt Clear */
 124:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 125:./inc/stm32f1xx_ll_rcc.h **** /**
 126:./inc/stm32f1xx_ll_rcc.h ****   * @}
ARM GAS  /tmp/ccgFoonV.s 			page 24


 127:./inc/stm32f1xx_ll_rcc.h ****   */
 128:./inc/stm32f1xx_ll_rcc.h **** 
 129:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 130:./inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 131:./inc/stm32f1xx_ll_rcc.h ****   * @{
 132:./inc/stm32f1xx_ll_rcc.h ****   */
 133:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 134:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 135:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 136:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 137:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 138:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYF               RCC_CIR_PLL3RDYF    /*!< PLL3(PLLI2S) Ready Interrupt fla
 139:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYF               RCC_CIR_PLL2RDYF    /*!< PLL2 Ready Interrupt flag */
 140:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF        /*!< Clock Security System Interrupt 
 141:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF     /*!< PIN reset flag */
 142:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF     /*!< POR/PDR reset flag */
 143:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF     /*!< Software Reset flag */
 144:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF    /*!< Independent Watchdog reset flag 
 145:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF    /*!< Window watchdog reset flag */
 146:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF    /*!< Low-Power reset flag */
 147:./inc/stm32f1xx_ll_rcc.h **** /**
 148:./inc/stm32f1xx_ll_rcc.h ****   * @}
 149:./inc/stm32f1xx_ll_rcc.h ****   */
 150:./inc/stm32f1xx_ll_rcc.h **** 
 151:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 152:./inc/stm32f1xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 153:./inc/stm32f1xx_ll_rcc.h ****   * @{
 154:./inc/stm32f1xx_ll_rcc.h ****   */
 155:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 156:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 157:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 158:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 159:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 160:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYIE              RCC_CIR_PLL3RDYIE     /*!< PLL3(PLLI2S) Ready Interrupt E
 161:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYIE              RCC_CIR_PLL2RDYIE     /*!< PLL2 Ready Interrupt Enable */
 162:./inc/stm32f1xx_ll_rcc.h **** /**
 163:./inc/stm32f1xx_ll_rcc.h ****   * @}
 164:./inc/stm32f1xx_ll_rcc.h ****   */
 165:./inc/stm32f1xx_ll_rcc.h **** 
 166:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 167:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_HSE_PREDIV2_DIV HSE PREDIV2 Division factor
 168:./inc/stm32f1xx_ll_rcc.h ****   * @{
 169:./inc/stm32f1xx_ll_rcc.h ****   */
 170:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_1           RCC_CFGR2_PREDIV2_DIV1   /*!< PREDIV2 input clock not di
 171:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_2           RCC_CFGR2_PREDIV2_DIV2   /*!< PREDIV2 input clock divide
 172:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_3           RCC_CFGR2_PREDIV2_DIV3   /*!< PREDIV2 input clock divide
 173:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_4           RCC_CFGR2_PREDIV2_DIV4   /*!< PREDIV2 input clock divide
 174:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_5           RCC_CFGR2_PREDIV2_DIV5   /*!< PREDIV2 input clock divide
 175:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_6           RCC_CFGR2_PREDIV2_DIV6   /*!< PREDIV2 input clock divide
 176:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_7           RCC_CFGR2_PREDIV2_DIV7   /*!< PREDIV2 input clock divide
 177:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_8           RCC_CFGR2_PREDIV2_DIV8   /*!< PREDIV2 input clock divide
 178:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_9           RCC_CFGR2_PREDIV2_DIV9   /*!< PREDIV2 input clock divide
 179:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_10          RCC_CFGR2_PREDIV2_DIV10  /*!< PREDIV2 input clock divide
 180:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_11          RCC_CFGR2_PREDIV2_DIV11  /*!< PREDIV2 input clock divide
 181:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_12          RCC_CFGR2_PREDIV2_DIV12  /*!< PREDIV2 input clock divide
 182:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_13          RCC_CFGR2_PREDIV2_DIV13  /*!< PREDIV2 input clock divide
 183:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_14          RCC_CFGR2_PREDIV2_DIV14  /*!< PREDIV2 input clock divide
ARM GAS  /tmp/ccgFoonV.s 			page 25


 184:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_15          RCC_CFGR2_PREDIV2_DIV15  /*!< PREDIV2 input clock divide
 185:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_16          RCC_CFGR2_PREDIV2_DIV16  /*!< PREDIV2 input clock divide
 186:./inc/stm32f1xx_ll_rcc.h **** /**
 187:./inc/stm32f1xx_ll_rcc.h ****   * @}
 188:./inc/stm32f1xx_ll_rcc.h ****   */
 189:./inc/stm32f1xx_ll_rcc.h **** 
 190:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 191:./inc/stm32f1xx_ll_rcc.h **** 
 192:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 193:./inc/stm32f1xx_ll_rcc.h ****   * @{
 194:./inc/stm32f1xx_ll_rcc.h ****   */
 195:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 196:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 197:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 198:./inc/stm32f1xx_ll_rcc.h **** /**
 199:./inc/stm32f1xx_ll_rcc.h ****   * @}
 200:./inc/stm32f1xx_ll_rcc.h ****   */
 201:./inc/stm32f1xx_ll_rcc.h **** 
 202:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 203:./inc/stm32f1xx_ll_rcc.h ****   * @{
 204:./inc/stm32f1xx_ll_rcc.h ****   */
 205:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 206:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 207:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 208:./inc/stm32f1xx_ll_rcc.h **** /**
 209:./inc/stm32f1xx_ll_rcc.h ****   * @}
 210:./inc/stm32f1xx_ll_rcc.h ****   */
 211:./inc/stm32f1xx_ll_rcc.h **** 
 212:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 213:./inc/stm32f1xx_ll_rcc.h ****   * @{
 214:./inc/stm32f1xx_ll_rcc.h ****   */
 215:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 216:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 217:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 218:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 219:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 220:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 221:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 222:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 223:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 224:./inc/stm32f1xx_ll_rcc.h **** /**
 225:./inc/stm32f1xx_ll_rcc.h ****   * @}
 226:./inc/stm32f1xx_ll_rcc.h ****   */
 227:./inc/stm32f1xx_ll_rcc.h **** 
 228:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 229:./inc/stm32f1xx_ll_rcc.h ****   * @{
 230:./inc/stm32f1xx_ll_rcc.h ****   */
 231:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 232:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 233:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 234:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 235:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 236:./inc/stm32f1xx_ll_rcc.h **** /**
 237:./inc/stm32f1xx_ll_rcc.h ****   * @}
 238:./inc/stm32f1xx_ll_rcc.h ****   */
 239:./inc/stm32f1xx_ll_rcc.h **** 
 240:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
ARM GAS  /tmp/ccgFoonV.s 			page 26


 241:./inc/stm32f1xx_ll_rcc.h ****   * @{
 242:./inc/stm32f1xx_ll_rcc.h ****   */
 243:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 244:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 245:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 246:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 247:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 248:./inc/stm32f1xx_ll_rcc.h **** /**
 249:./inc/stm32f1xx_ll_rcc.h ****   * @}
 250:./inc/stm32f1xx_ll_rcc.h ****   */
 251:./inc/stm32f1xx_ll_rcc.h **** 
 252:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 253:./inc/stm32f1xx_ll_rcc.h ****   * @{
 254:./inc/stm32f1xx_ll_rcc.h ****   */
 255:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCO_NOCLOCK      /*!< MCO output disabled, no c
 256:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCO_SYSCLK       /*!< SYSCLK selection as MCO s
 257:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCO_HSI          /*!< HSI selection as MCO sour
 258:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCO_HSE          /*!< HSE selection as MCO sour
 259:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK_DIV_2     RCC_CFGR_MCO_PLLCLK_DIV2  /*!< PLL clock divided by 2*/
 260:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL2CLK)
 261:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLL2CLK          RCC_CFGR_MCO_PLL2CLK      /*!< PLL2 clock selected as MC
 262:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL2CLK */
 263:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL3CLK_DIV2)
 264:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2   RCC_CFGR_MCO_PLL3CLK_DIV2 /*!< PLLI2S clock divided by 2
 265:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL3CLK_DIV2 */
 266:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_EXT_HSE)
 267:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_EXT_HSE          RCC_CFGR_MCO_EXT_HSE      /*!< XT1 external 3-25 MHz osc
 268:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_EXT_HSE */
 269:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL3CLK)
 270:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK        RCC_CFGR_MCO_PLL3CLK      /*!< PLLI2S clock selected as 
 271:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL3CLK */
 272:./inc/stm32f1xx_ll_rcc.h **** /**
 273:./inc/stm32f1xx_ll_rcc.h ****   * @}
 274:./inc/stm32f1xx_ll_rcc.h ****   */
 275:./inc/stm32f1xx_ll_rcc.h **** 
 276:./inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 277:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 278:./inc/stm32f1xx_ll_rcc.h ****   * @{
 279:./inc/stm32f1xx_ll_rcc.h ****   */
 280:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 281:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 282:./inc/stm32f1xx_ll_rcc.h **** /**
 283:./inc/stm32f1xx_ll_rcc.h ****   * @}
 284:./inc/stm32f1xx_ll_rcc.h ****   */
 285:./inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 286:./inc/stm32f1xx_ll_rcc.h **** 
 287:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 288:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2CLKSOURCE Peripheral I2S clock source selection
 289:./inc/stm32f1xx_ll_rcc.h ****   * @{
 290:./inc/stm32f1xx_ll_rcc.h ****   */
 291:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S2SRC                                      
 292:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S2SRC | (RCC_CFGR2_I2S2SRC >> 16
 293:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S3SRC                                      
 294:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S3SRC | (RCC_CFGR2_I2S3SRC >> 16
 295:./inc/stm32f1xx_ll_rcc.h **** /**
 296:./inc/stm32f1xx_ll_rcc.h ****   * @}
 297:./inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 27


 298:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 299:./inc/stm32f1xx_ll_rcc.h **** 
 300:./inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 301:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE Peripheral USB clock source selection
 302:./inc/stm32f1xx_ll_rcc.h ****   * @{
 303:./inc/stm32f1xx_ll_rcc.h ****   */
 304:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
 305:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL             RCC_CFGR_USBPRE        /*!< PLL clock is not divided *
 306:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5     0x00000000U            /*!< PLL clock is divided by 1.
 307:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/
 308:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_OTGFSPRE)
 309:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_2       RCC_CFGR_OTGFSPRE      /*!< PLL clock is divided by 2 
 310:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_3       0x00000000U            /*!< PLL clock is divided by 3 
 311:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_OTGFSPRE*/
 312:./inc/stm32f1xx_ll_rcc.h **** /**
 313:./inc/stm32f1xx_ll_rcc.h ****   * @}
 314:./inc/stm32f1xx_ll_rcc.h ****   */
 315:./inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 316:./inc/stm32f1xx_ll_rcc.h **** 
 317:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC_CLKSOURCE_PCLK2 Peripheral ADC clock source selection
 318:./inc/stm32f1xx_ll_rcc.h ****   * @{
 319:./inc/stm32f1xx_ll_rcc.h ****   */
 320:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_2    RCC_CFGR_ADCPRE_DIV2 /*ADC prescaler PCLK2 divided by 2*/
 321:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_4    RCC_CFGR_ADCPRE_DIV4 /*ADC prescaler PCLK2 divided by 4*/
 322:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_6    RCC_CFGR_ADCPRE_DIV6 /*ADC prescaler PCLK2 divided by 6*/
 323:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_8    RCC_CFGR_ADCPRE_DIV8 /*ADC prescaler PCLK2 divided by 8*/
 324:./inc/stm32f1xx_ll_rcc.h **** /**
 325:./inc/stm32f1xx_ll_rcc.h ****   * @}
 326:./inc/stm32f1xx_ll_rcc.h ****   */
 327:./inc/stm32f1xx_ll_rcc.h **** 
 328:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 329:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2 Peripheral I2S get clock source
 330:./inc/stm32f1xx_ll_rcc.h ****   * @{
 331:./inc/stm32f1xx_ll_rcc.h ****   */
 332:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE              RCC_CFGR2_I2S2SRC       /*!< I2S2 Clock source selection
 333:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE              RCC_CFGR2_I2S3SRC       /*!< I2S3 Clock source selection
 334:./inc/stm32f1xx_ll_rcc.h **** /**
 335:./inc/stm32f1xx_ll_rcc.h ****   * @}
 336:./inc/stm32f1xx_ll_rcc.h ****   */
 337:./inc/stm32f1xx_ll_rcc.h **** 
 338:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 339:./inc/stm32f1xx_ll_rcc.h **** 
 340:./inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 341:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB Peripheral USB get clock source
 342:./inc/stm32f1xx_ll_rcc.h ****   * @{
 343:./inc/stm32f1xx_ll_rcc.h ****   */
 344:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               0x00400000U     /*!< USB Clock source selection */
 345:./inc/stm32f1xx_ll_rcc.h **** /**
 346:./inc/stm32f1xx_ll_rcc.h ****   * @}
 347:./inc/stm32f1xx_ll_rcc.h ****   */
 348:./inc/stm32f1xx_ll_rcc.h **** 
 349:./inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 350:./inc/stm32f1xx_ll_rcc.h **** 
 351:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC Peripheral ADC get clock source
 352:./inc/stm32f1xx_ll_rcc.h ****   * @{
 353:./inc/stm32f1xx_ll_rcc.h ****   */
 354:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE               RCC_CFGR_ADCPRE /*!< ADC Clock source selection */
ARM GAS  /tmp/ccgFoonV.s 			page 28


 355:./inc/stm32f1xx_ll_rcc.h **** /**
 356:./inc/stm32f1xx_ll_rcc.h ****   * @}
 357:./inc/stm32f1xx_ll_rcc.h ****   */
 358:./inc/stm32f1xx_ll_rcc.h **** 
 359:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 360:./inc/stm32f1xx_ll_rcc.h ****   * @{
 361:./inc/stm32f1xx_ll_rcc.h ****   */
 362:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U             /*!< No clock used as RTC clock 
 363:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 364:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 365:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV128    RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 366:./inc/stm32f1xx_ll_rcc.h **** /**
 367:./inc/stm32f1xx_ll_rcc.h ****   * @}
 368:./inc/stm32f1xx_ll_rcc.h ****   */
 369:./inc/stm32f1xx_ll_rcc.h **** 
 370:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 371:./inc/stm32f1xx_ll_rcc.h ****   * @{
 372:./inc/stm32f1xx_ll_rcc.h ****   */
 373:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL2)
 374:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_2                   RCC_CFGR_PLLMULL2  /*!< PLL input clock*2 */
 375:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL2*/
 376:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL3)
 377:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMULL3  /*!< PLL input clock*3 */
 378:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL3*/
 379:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMULL4  /*!< PLL input clock*4 */
 380:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_5                   RCC_CFGR_PLLMULL5  /*!< PLL input clock*5 */
 381:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMULL6  /*!< PLL input clock*6 */
 382:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_7                   RCC_CFGR_PLLMULL7  /*!< PLL input clock*7 */
 383:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMULL8  /*!< PLL input clock*8 */
 384:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_9                   RCC_CFGR_PLLMULL9  /*!< PLL input clock*9 */
 385:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 386:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6_5                 RCC_CFGR_PLLMULL6_5 /*!< PLL input clock*6 */
 387:./inc/stm32f1xx_ll_rcc.h **** #else
 388:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_10                  RCC_CFGR_PLLMULL10  /*!< PLL input clock*10 */
 389:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_11                  RCC_CFGR_PLLMULL11  /*!< PLL input clock*11 */
 390:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMULL12  /*!< PLL input clock*12 */
 391:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_13                  RCC_CFGR_PLLMULL13  /*!< PLL input clock*13 */
 392:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_14                  RCC_CFGR_PLLMULL14  /*!< PLL input clock*14 */
 393:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_15                  RCC_CFGR_PLLMULL15  /*!< PLL input clock*15 */
 394:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMULL16  /*!< PLL input clock*16 */
 395:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL6_5*/
 396:./inc/stm32f1xx_ll_rcc.h **** /**
 397:./inc/stm32f1xx_ll_rcc.h ****   * @}
 398:./inc/stm32f1xx_ll_rcc.h ****   */
 399:./inc/stm32f1xx_ll_rcc.h **** 
 400:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 401:./inc/stm32f1xx_ll_rcc.h ****   * @{
 402:./inc/stm32f1xx_ll_rcc.h ****   */
 403:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI_DIV_2         0x00000000U                                    /*!< HSI 
 404:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC                                /*!< HSE/
 405:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 406:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2              (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1SRC << 4U) /*!< PLL2
 407:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 408:./inc/stm32f1xx_ll_rcc.h **** 
 409:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 410:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1)    /*!< HSE/1
 411:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2)    /*!< HSE/2
ARM GAS  /tmp/ccgFoonV.s 			page 29


 412:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_3         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3)    /*!< HSE/3
 413:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_4         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4)    /*!< HSE/4
 414:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_5         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5)    /*!< HSE/5
 415:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_6         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6)    /*!< HSE/6
 416:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_7         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7)    /*!< HSE/7
 417:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_8         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8)    /*!< HSE/8
 418:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_9         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9)    /*!< HSE/9
 419:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_10        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10)   /*!< HSE/1
 420:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_11        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11)   /*!< HSE/1
 421:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_12        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12)   /*!< HSE/1
 422:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_13        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13)   /*!< HSE/1
 423:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_14        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14)   /*!< HSE/1
 424:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_15        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15)   /*!< HSE/1
 425:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_16        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16)   /*!< HSE/1
 426:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 427:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_1        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1 | RCC_CFGR2_PR
 428:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_2        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2 | RCC_CFGR2_PR
 429:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_3        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3 | RCC_CFGR2_PR
 430:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_4        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4 | RCC_CFGR2_PR
 431:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_5        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5 | RCC_CFGR2_PR
 432:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_6        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6 | RCC_CFGR2_PR
 433:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_7        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7 | RCC_CFGR2_PR
 434:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_8        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8 | RCC_CFGR2_PR
 435:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_9        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9 | RCC_CFGR2_PR
 436:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_10       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10 | RCC_CFGR2_P
 437:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_11       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11 | RCC_CFGR2_P
 438:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_12       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12 | RCC_CFGR2_P
 439:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_13       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13 | RCC_CFGR2_P
 440:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_14       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14 | RCC_CFGR2_P
 441:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_15       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15 | RCC_CFGR2_P
 442:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_16       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16 | RCC_CFGR2_P
 443:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 444:./inc/stm32f1xx_ll_rcc.h **** #else
 445:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | 0x00000000U)               /*!< HSE/1
 446:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE)         /*!< HSE/2
 447:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 448:./inc/stm32f1xx_ll_rcc.h **** /**
 449:./inc/stm32f1xx_ll_rcc.h ****   * @}
 450:./inc/stm32f1xx_ll_rcc.h ****   */
 451:./inc/stm32f1xx_ll_rcc.h **** 
 452:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PREDIV_DIV PREDIV Division factor
 453:./inc/stm32f1xx_ll_rcc.h ****   * @{
 454:./inc/stm32f1xx_ll_rcc.h ****   */
 455:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 456:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                RCC_CFGR2_PREDIV1_DIV1   /*!< PREDIV1 input clock not di
 457:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR2_PREDIV1_DIV2   /*!< PREDIV1 input clock divide
 458:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_3                RCC_CFGR2_PREDIV1_DIV3   /*!< PREDIV1 input clock divide
 459:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_4                RCC_CFGR2_PREDIV1_DIV4   /*!< PREDIV1 input clock divide
 460:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_5                RCC_CFGR2_PREDIV1_DIV5   /*!< PREDIV1 input clock divide
 461:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_6                RCC_CFGR2_PREDIV1_DIV6   /*!< PREDIV1 input clock divide
 462:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_7                RCC_CFGR2_PREDIV1_DIV7   /*!< PREDIV1 input clock divide
 463:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_8                RCC_CFGR2_PREDIV1_DIV8   /*!< PREDIV1 input clock divide
 464:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_9                RCC_CFGR2_PREDIV1_DIV9   /*!< PREDIV1 input clock divide
 465:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_10               RCC_CFGR2_PREDIV1_DIV10  /*!< PREDIV1 input clock divide
 466:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_11               RCC_CFGR2_PREDIV1_DIV11  /*!< PREDIV1 input clock divide
 467:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_12               RCC_CFGR2_PREDIV1_DIV12  /*!< PREDIV1 input clock divide
 468:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_13               RCC_CFGR2_PREDIV1_DIV13  /*!< PREDIV1 input clock divide
ARM GAS  /tmp/ccgFoonV.s 			page 30


 469:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_14               RCC_CFGR2_PREDIV1_DIV14  /*!< PREDIV1 input clock divide
 470:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_15               RCC_CFGR2_PREDIV1_DIV15  /*!< PREDIV1 input clock divide
 471:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_16               RCC_CFGR2_PREDIV1_DIV16  /*!< PREDIV1 input clock divide
 472:./inc/stm32f1xx_ll_rcc.h **** #else
 473:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                0x00000000U              /*!< HSE divider clock clock no
 474:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR_PLLXTPRE        /*!< HSE divider clock divided 
 475:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 476:./inc/stm32f1xx_ll_rcc.h **** /**
 477:./inc/stm32f1xx_ll_rcc.h ****   * @}
 478:./inc/stm32f1xx_ll_rcc.h ****   */
 479:./inc/stm32f1xx_ll_rcc.h **** 
 480:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
 481:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2S_MUL PLLI2S MUL
 482:./inc/stm32f1xx_ll_rcc.h ****   * @{
 483:./inc/stm32f1xx_ll_rcc.h ****   */
 484:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_8                RCC_CFGR2_PLL3MUL8   /*!< PLLI2S input clock * 8 */
 485:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_9                RCC_CFGR2_PLL3MUL9   /*!< PLLI2S input clock * 9 */
 486:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_10               RCC_CFGR2_PLL3MUL10  /*!< PLLI2S input clock * 10 */
 487:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_11               RCC_CFGR2_PLL3MUL11  /*!< PLLI2S input clock * 11 */
 488:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_12               RCC_CFGR2_PLL3MUL12  /*!< PLLI2S input clock * 12 */
 489:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_13               RCC_CFGR2_PLL3MUL13  /*!< PLLI2S input clock * 13 */
 490:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_14               RCC_CFGR2_PLL3MUL14  /*!< PLLI2S input clock * 14 */
 491:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_16               RCC_CFGR2_PLL3MUL16  /*!< PLLI2S input clock * 16 */
 492:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_20               RCC_CFGR2_PLL3MUL20  /*!< PLLI2S input clock * 20 */
 493:./inc/stm32f1xx_ll_rcc.h **** /**
 494:./inc/stm32f1xx_ll_rcc.h ****   * @}
 495:./inc/stm32f1xx_ll_rcc.h ****   */
 496:./inc/stm32f1xx_ll_rcc.h **** 
 497:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 498:./inc/stm32f1xx_ll_rcc.h **** 
 499:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 500:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL2_MUL PLL2 MUL
 501:./inc/stm32f1xx_ll_rcc.h ****   * @{
 502:./inc/stm32f1xx_ll_rcc.h ****   */
 503:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_8                  RCC_CFGR2_PLL2MUL8   /*!< PLL2 input clock * 8 */
 504:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_9                  RCC_CFGR2_PLL2MUL9   /*!< PLL2 input clock * 9 */
 505:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_10                 RCC_CFGR2_PLL2MUL10  /*!< PLL2 input clock * 10 */
 506:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_11                 RCC_CFGR2_PLL2MUL11  /*!< PLL2 input clock * 11 */
 507:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_12                 RCC_CFGR2_PLL2MUL12  /*!< PLL2 input clock * 12 */
 508:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_13                 RCC_CFGR2_PLL2MUL13  /*!< PLL2 input clock * 13 */
 509:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_14                 RCC_CFGR2_PLL2MUL14  /*!< PLL2 input clock * 14 */
 510:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_16                 RCC_CFGR2_PLL2MUL16  /*!< PLL2 input clock * 16 */
 511:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_20                 RCC_CFGR2_PLL2MUL20  /*!< PLL2 input clock * 20 */
 512:./inc/stm32f1xx_ll_rcc.h **** /**
 513:./inc/stm32f1xx_ll_rcc.h ****   * @}
 514:./inc/stm32f1xx_ll_rcc.h ****   */
 515:./inc/stm32f1xx_ll_rcc.h **** 
 516:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 517:./inc/stm32f1xx_ll_rcc.h **** 
 518:./inc/stm32f1xx_ll_rcc.h **** /**
 519:./inc/stm32f1xx_ll_rcc.h ****   * @}
 520:./inc/stm32f1xx_ll_rcc.h ****   */
 521:./inc/stm32f1xx_ll_rcc.h **** 
 522:./inc/stm32f1xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 523:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 524:./inc/stm32f1xx_ll_rcc.h ****   * @{
 525:./inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 31


 526:./inc/stm32f1xx_ll_rcc.h **** 
 527:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 528:./inc/stm32f1xx_ll_rcc.h ****   * @{
 529:./inc/stm32f1xx_ll_rcc.h ****   */
 530:./inc/stm32f1xx_ll_rcc.h **** 
 531:./inc/stm32f1xx_ll_rcc.h **** /**
 532:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 533:./inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 534:./inc/stm32f1xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 535:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 536:./inc/stm32f1xx_ll_rcc.h ****   */
 537:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 538:./inc/stm32f1xx_ll_rcc.h **** 
 539:./inc/stm32f1xx_ll_rcc.h **** /**
 540:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 541:./inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 542:./inc/stm32f1xx_ll_rcc.h ****   * @retval Register value
 543:./inc/stm32f1xx_ll_rcc.h ****   */
 544:./inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 545:./inc/stm32f1xx_ll_rcc.h **** /**
 546:./inc/stm32f1xx_ll_rcc.h ****   * @}
 547:./inc/stm32f1xx_ll_rcc.h ****   */
 548:./inc/stm32f1xx_ll_rcc.h **** 
 549:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 550:./inc/stm32f1xx_ll_rcc.h ****   * @{
 551:./inc/stm32f1xx_ll_rcc.h ****   */
 552:./inc/stm32f1xx_ll_rcc.h **** 
 553:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 554:./inc/stm32f1xx_ll_rcc.h **** /**
 555:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 556:./inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 557:./inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 / HSI div 2 / PLL2 div Pred
 558:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 559:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 560:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 561:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 562:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 563:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 564:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 565:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5
 566:./inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 567:./inc/stm32f1xx_ll_rcc.h ****   */
 568:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) \
 569:./inc/stm32f1xx_ll_rcc.h ****           (((__PLLMUL__) != RCC_CFGR_PLLMULL6_5) ? \
 570:./inc/stm32f1xx_ll_rcc.h ****               ((__INPUTFREQ__) * ((((__PLLMUL__) & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos) + 2U)
 571:./inc/stm32f1xx_ll_rcc.h ****               (((__INPUTFREQ__) * 13U) / 2U))
 572:./inc/stm32f1xx_ll_rcc.h **** 
 573:./inc/stm32f1xx_ll_rcc.h **** #else
 574:./inc/stm32f1xx_ll_rcc.h **** /**
 575:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 576:./inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 577:./inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 or div 2 / HSI div 2)
 578:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 579:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 580:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 581:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 582:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
ARM GAS  /tmp/ccgFoonV.s 			page 32


 583:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 584:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 585:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 586:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 587:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 588:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 589:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 590:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 591:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 592:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 593:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 594:./inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 595:./inc/stm32f1xx_ll_rcc.h ****   */
 596:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) ((__INPUTFREQ__) * (((__PLLMUL__) >> R
 597:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLMULL6_5 */
 598:./inc/stm32f1xx_ll_rcc.h **** 
 599:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
 600:./inc/stm32f1xx_ll_rcc.h **** /**
 601:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency
 602:./inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2SCLK_FREQ (HSE_VALUE, @ref LL_RCC_PLLI2S_GetMultiplicator (),
 603:./inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLLI2S Input frequency (based on HSE value)
 604:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SMUL__: This parameter can be one of the following values:
 605:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_8
 606:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_9
 607:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_10
 608:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_11
 609:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_12
 610:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_13
 611:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_14
 612:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_16
 613:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_20
 614:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SDIV__: This parameter can be one of the following values:
 615:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 616:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 617:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 618:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 619:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 620:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 621:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 622:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 623:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 624:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 625:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 626:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 627:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 628:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 629:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 630:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 631:./inc/stm32f1xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
 632:./inc/stm32f1xx_ll_rcc.h ****   */
 633:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2SCLK_FREQ(__INPUTFREQ__, __PLLI2SMUL__, __PLLI2SDIV__) (((__INPUTFREQ__)
 634:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 635:./inc/stm32f1xx_ll_rcc.h **** 
 636:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 637:./inc/stm32f1xx_ll_rcc.h **** /**
 638:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLL2 frequency
 639:./inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLL2CLK_FREQ (HSE_VALUE, @ref LL_RCC_PLL2_GetMultiplicator (), @re
ARM GAS  /tmp/ccgFoonV.s 			page 33


 640:./inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL2 Input frequency (based on HSE value)
 641:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2MUL__: This parameter can be one of the following values:
 642:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_8
 643:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_9
 644:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_10
 645:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_11
 646:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_12
 647:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_13
 648:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_14
 649:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_16
 650:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_20
 651:./inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2DIV__: This parameter can be one of the following values:
 652:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 653:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 654:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 655:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 656:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 657:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 658:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 659:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 660:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 661:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 662:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 663:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 664:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 665:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 666:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 667:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 668:./inc/stm32f1xx_ll_rcc.h ****   * @retval PLL2 clock frequency (in Hz)
 669:./inc/stm32f1xx_ll_rcc.h ****   */
 670:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLL2CLK_FREQ(__INPUTFREQ__, __PLL2MUL__, __PLL2DIV__) (((__INPUTFREQ__) * (((
 671:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 672:./inc/stm32f1xx_ll_rcc.h **** 
 673:./inc/stm32f1xx_ll_rcc.h **** /**
 674:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 675:./inc/stm32f1xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 676:./inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 677:./inc/stm32f1xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 678:./inc/stm32f1xx_ll_rcc.h ****   * @param  __AHBPRESCALER__: This parameter can be one of the following values:
 679:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 680:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 681:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 682:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 683:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 684:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 685:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 686:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 687:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 688:./inc/stm32f1xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 689:./inc/stm32f1xx_ll_rcc.h ****   */
 690:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 691:./inc/stm32f1xx_ll_rcc.h **** 
 692:./inc/stm32f1xx_ll_rcc.h **** /**
 693:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 694:./inc/stm32f1xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 695:./inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 696:./inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
ARM GAS  /tmp/ccgFoonV.s 			page 34


 697:./inc/stm32f1xx_ll_rcc.h ****   * @param  __APB1PRESCALER__: This parameter can be one of the following values:
 698:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 699:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 700:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 701:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 702:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 703:./inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 704:./inc/stm32f1xx_ll_rcc.h ****   */
 705:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 706:./inc/stm32f1xx_ll_rcc.h **** 
 707:./inc/stm32f1xx_ll_rcc.h **** /**
 708:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 709:./inc/stm32f1xx_ll_rcc.h ****   * @note: __APB2PRESCALER__ be retrieved by @ref LL_RCC_GetAPB2Prescaler
 710:./inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK2_FREQ(LL_RCC_GetAPB2Prescaler())
 711:./inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 712:./inc/stm32f1xx_ll_rcc.h ****   * @param  __APB2PRESCALER__: This parameter can be one of the following values:
 713:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
 714:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 715:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 716:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 717:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 718:./inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 719:./inc/stm32f1xx_ll_rcc.h ****   */
 720:./inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 721:./inc/stm32f1xx_ll_rcc.h **** 
 722:./inc/stm32f1xx_ll_rcc.h **** /**
 723:./inc/stm32f1xx_ll_rcc.h ****   * @}
 724:./inc/stm32f1xx_ll_rcc.h ****   */
 725:./inc/stm32f1xx_ll_rcc.h **** 
 726:./inc/stm32f1xx_ll_rcc.h **** /**
 727:./inc/stm32f1xx_ll_rcc.h ****   * @}
 728:./inc/stm32f1xx_ll_rcc.h ****   */
 729:./inc/stm32f1xx_ll_rcc.h **** 
 730:./inc/stm32f1xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 731:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 732:./inc/stm32f1xx_ll_rcc.h ****   * @{
 733:./inc/stm32f1xx_ll_rcc.h ****   */
 734:./inc/stm32f1xx_ll_rcc.h **** 
 735:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 736:./inc/stm32f1xx_ll_rcc.h ****   * @{
 737:./inc/stm32f1xx_ll_rcc.h ****   */
 738:./inc/stm32f1xx_ll_rcc.h **** 
 739:./inc/stm32f1xx_ll_rcc.h **** /**
 740:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 741:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 742:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 743:./inc/stm32f1xx_ll_rcc.h ****   */
 744:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 745:./inc/stm32f1xx_ll_rcc.h **** {
 746:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 747:./inc/stm32f1xx_ll_rcc.h **** }
 748:./inc/stm32f1xx_ll_rcc.h **** 
 749:./inc/stm32f1xx_ll_rcc.h **** /**
 750:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 751:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 752:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 753:./inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 35


 754:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 755:./inc/stm32f1xx_ll_rcc.h **** {
 756:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 757:./inc/stm32f1xx_ll_rcc.h **** }
 758:./inc/stm32f1xx_ll_rcc.h **** 
 759:./inc/stm32f1xx_ll_rcc.h **** /**
 760:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 761:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 762:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 763:./inc/stm32f1xx_ll_rcc.h ****   */
 764:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 765:./inc/stm32f1xx_ll_rcc.h **** {
 766:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 767:./inc/stm32f1xx_ll_rcc.h **** }
 768:./inc/stm32f1xx_ll_rcc.h **** 
 769:./inc/stm32f1xx_ll_rcc.h **** /**
 770:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 771:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 772:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 773:./inc/stm32f1xx_ll_rcc.h ****   */
 774:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 775:./inc/stm32f1xx_ll_rcc.h **** {
 776:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 777:./inc/stm32f1xx_ll_rcc.h **** }
 778:./inc/stm32f1xx_ll_rcc.h **** 
 779:./inc/stm32f1xx_ll_rcc.h **** /**
 780:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 781:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 782:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 783:./inc/stm32f1xx_ll_rcc.h ****   */
 784:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 785:./inc/stm32f1xx_ll_rcc.h **** {
 786:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 787:./inc/stm32f1xx_ll_rcc.h **** }
 788:./inc/stm32f1xx_ll_rcc.h **** 
 789:./inc/stm32f1xx_ll_rcc.h **** /**
 790:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 791:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 792:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 793:./inc/stm32f1xx_ll_rcc.h ****   */
 794:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 795:./inc/stm32f1xx_ll_rcc.h **** {
 796:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 797:./inc/stm32f1xx_ll_rcc.h **** }
 798:./inc/stm32f1xx_ll_rcc.h **** 
 799:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 800:./inc/stm32f1xx_ll_rcc.h **** /**
 801:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get PREDIV2 division factor
 802:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        PREDIV2       LL_RCC_HSE_GetPrediv2
 803:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
 804:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 805:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 806:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 807:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 808:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 809:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 810:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
ARM GAS  /tmp/ccgFoonV.s 			page 36


 811:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 812:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 813:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 814:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 815:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 816:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 817:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 818:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 819:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 820:./inc/stm32f1xx_ll_rcc.h ****   */
 821:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_GetPrediv2(void)
 822:./inc/stm32f1xx_ll_rcc.h **** {
 823:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV2));
 824:./inc/stm32f1xx_ll_rcc.h **** }
 825:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 826:./inc/stm32f1xx_ll_rcc.h **** 
 827:./inc/stm32f1xx_ll_rcc.h **** /**
 828:./inc/stm32f1xx_ll_rcc.h ****   * @}
 829:./inc/stm32f1xx_ll_rcc.h ****   */
 830:./inc/stm32f1xx_ll_rcc.h **** 
 831:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 832:./inc/stm32f1xx_ll_rcc.h ****   * @{
 833:./inc/stm32f1xx_ll_rcc.h ****   */
 834:./inc/stm32f1xx_ll_rcc.h **** 
 835:./inc/stm32f1xx_ll_rcc.h **** /**
 836:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 837:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 838:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 839:./inc/stm32f1xx_ll_rcc.h ****   */
 840:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 841:./inc/stm32f1xx_ll_rcc.h **** {
 842:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 843:./inc/stm32f1xx_ll_rcc.h **** }
 844:./inc/stm32f1xx_ll_rcc.h **** 
 845:./inc/stm32f1xx_ll_rcc.h **** /**
 846:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 847:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 848:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 849:./inc/stm32f1xx_ll_rcc.h ****   */
 850:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 851:./inc/stm32f1xx_ll_rcc.h **** {
 852:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 853:./inc/stm32f1xx_ll_rcc.h **** }
 854:./inc/stm32f1xx_ll_rcc.h **** 
 855:./inc/stm32f1xx_ll_rcc.h **** /**
 856:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 857:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 858:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 859:./inc/stm32f1xx_ll_rcc.h ****   */
 860:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 861:./inc/stm32f1xx_ll_rcc.h **** {
 862:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 863:./inc/stm32f1xx_ll_rcc.h **** }
 864:./inc/stm32f1xx_ll_rcc.h **** 
 865:./inc/stm32f1xx_ll_rcc.h **** /**
 866:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 867:./inc/stm32f1xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
ARM GAS  /tmp/ccgFoonV.s 			page 37


 868:./inc/stm32f1xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 869:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
 870:./inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 871:./inc/stm32f1xx_ll_rcc.h ****   */
 872:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 873:./inc/stm32f1xx_ll_rcc.h **** {
 874:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
 875:./inc/stm32f1xx_ll_rcc.h **** }
 876:./inc/stm32f1xx_ll_rcc.h **** 
 877:./inc/stm32f1xx_ll_rcc.h **** /**
 878:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 879:./inc/stm32f1xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 880:./inc/stm32f1xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 881:./inc/stm32f1xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 882:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 883:./inc/stm32f1xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 884:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 885:./inc/stm32f1xx_ll_rcc.h ****   */
 886:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 887:./inc/stm32f1xx_ll_rcc.h **** {
 888:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 889:./inc/stm32f1xx_ll_rcc.h **** }
 890:./inc/stm32f1xx_ll_rcc.h **** 
 891:./inc/stm32f1xx_ll_rcc.h **** /**
 892:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 893:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 894:./inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 895:./inc/stm32f1xx_ll_rcc.h ****   */
 896:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 897:./inc/stm32f1xx_ll_rcc.h **** {
 898:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
 899:./inc/stm32f1xx_ll_rcc.h **** }
 900:./inc/stm32f1xx_ll_rcc.h **** 
 901:./inc/stm32f1xx_ll_rcc.h **** /**
 902:./inc/stm32f1xx_ll_rcc.h ****   * @}
 903:./inc/stm32f1xx_ll_rcc.h ****   */
 904:./inc/stm32f1xx_ll_rcc.h **** 
 905:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 906:./inc/stm32f1xx_ll_rcc.h ****   * @{
 907:./inc/stm32f1xx_ll_rcc.h ****   */
 908:./inc/stm32f1xx_ll_rcc.h **** 
 909:./inc/stm32f1xx_ll_rcc.h **** /**
 910:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
 911:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
 912:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 913:./inc/stm32f1xx_ll_rcc.h ****   */
 914:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
 915:./inc/stm32f1xx_ll_rcc.h **** {
 916:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 917:./inc/stm32f1xx_ll_rcc.h **** }
 918:./inc/stm32f1xx_ll_rcc.h **** 
 919:./inc/stm32f1xx_ll_rcc.h **** /**
 920:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
 921:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
 922:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 923:./inc/stm32f1xx_ll_rcc.h ****   */
 924:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
ARM GAS  /tmp/ccgFoonV.s 			page 38


 925:./inc/stm32f1xx_ll_rcc.h **** {
 926:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 927:./inc/stm32f1xx_ll_rcc.h **** }
 928:./inc/stm32f1xx_ll_rcc.h **** 
 929:./inc/stm32f1xx_ll_rcc.h **** /**
 930:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
 931:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
 932:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 933:./inc/stm32f1xx_ll_rcc.h ****   */
 934:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
 935:./inc/stm32f1xx_ll_rcc.h **** {
 936:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 937:./inc/stm32f1xx_ll_rcc.h **** }
 938:./inc/stm32f1xx_ll_rcc.h **** 
 939:./inc/stm32f1xx_ll_rcc.h **** /**
 940:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
 941:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
 942:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 943:./inc/stm32f1xx_ll_rcc.h ****   */
 944:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
 945:./inc/stm32f1xx_ll_rcc.h **** {
 946:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 947:./inc/stm32f1xx_ll_rcc.h **** }
 948:./inc/stm32f1xx_ll_rcc.h **** 
 949:./inc/stm32f1xx_ll_rcc.h **** /**
 950:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
 951:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
 952:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 953:./inc/stm32f1xx_ll_rcc.h ****   */
 954:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
 955:./inc/stm32f1xx_ll_rcc.h **** {
 956:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
 957:./inc/stm32f1xx_ll_rcc.h **** }
 958:./inc/stm32f1xx_ll_rcc.h **** 
 959:./inc/stm32f1xx_ll_rcc.h **** /**
 960:./inc/stm32f1xx_ll_rcc.h ****   * @}
 961:./inc/stm32f1xx_ll_rcc.h ****   */
 962:./inc/stm32f1xx_ll_rcc.h **** 
 963:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
 964:./inc/stm32f1xx_ll_rcc.h ****   * @{
 965:./inc/stm32f1xx_ll_rcc.h ****   */
 966:./inc/stm32f1xx_ll_rcc.h **** 
 967:./inc/stm32f1xx_ll_rcc.h **** /**
 968:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
 969:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
 970:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 971:./inc/stm32f1xx_ll_rcc.h ****   */
 972:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
 973:./inc/stm32f1xx_ll_rcc.h **** {
 974:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
 975:./inc/stm32f1xx_ll_rcc.h **** }
 976:./inc/stm32f1xx_ll_rcc.h **** 
 977:./inc/stm32f1xx_ll_rcc.h **** /**
 978:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
 979:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
 980:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
 981:./inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 39


 982:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
 983:./inc/stm32f1xx_ll_rcc.h **** {
 984:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
 985:./inc/stm32f1xx_ll_rcc.h **** }
 986:./inc/stm32f1xx_ll_rcc.h **** 
 987:./inc/stm32f1xx_ll_rcc.h **** /**
 988:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
 989:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
 990:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 991:./inc/stm32f1xx_ll_rcc.h ****   */
 992:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
 993:./inc/stm32f1xx_ll_rcc.h **** {
 994:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
 995:./inc/stm32f1xx_ll_rcc.h **** }
 996:./inc/stm32f1xx_ll_rcc.h **** 
 997:./inc/stm32f1xx_ll_rcc.h **** /**
 998:./inc/stm32f1xx_ll_rcc.h ****   * @}
 999:./inc/stm32f1xx_ll_rcc.h ****   */
1000:./inc/stm32f1xx_ll_rcc.h **** 
1001:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1002:./inc/stm32f1xx_ll_rcc.h ****   * @{
1003:./inc/stm32f1xx_ll_rcc.h ****   */
1004:./inc/stm32f1xx_ll_rcc.h **** 
1005:./inc/stm32f1xx_ll_rcc.h **** /**
1006:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure the system clock source
1007:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1008:./inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1009:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1010:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1011:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1012:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1013:./inc/stm32f1xx_ll_rcc.h ****   */
1014:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1015:./inc/stm32f1xx_ll_rcc.h **** {
1016:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1017:./inc/stm32f1xx_ll_rcc.h **** }
1018:./inc/stm32f1xx_ll_rcc.h **** 
1019:./inc/stm32f1xx_ll_rcc.h **** /**
1020:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get the system clock source
1021:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1022:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1023:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1024:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1025:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1026:./inc/stm32f1xx_ll_rcc.h ****   */
1027:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1028:./inc/stm32f1xx_ll_rcc.h **** {
1029:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1030:./inc/stm32f1xx_ll_rcc.h **** }
1031:./inc/stm32f1xx_ll_rcc.h **** 
1032:./inc/stm32f1xx_ll_rcc.h **** /**
1033:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1034:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1035:./inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1036:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1037:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1038:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
ARM GAS  /tmp/ccgFoonV.s 			page 40


1039:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1040:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1041:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1042:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1043:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1044:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1045:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1046:./inc/stm32f1xx_ll_rcc.h ****   */
1047:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1048:./inc/stm32f1xx_ll_rcc.h **** {
1049:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1050:./inc/stm32f1xx_ll_rcc.h **** }
1051:./inc/stm32f1xx_ll_rcc.h **** 
1052:./inc/stm32f1xx_ll_rcc.h **** /**
1053:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1054:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1055:./inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1056:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1057:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1058:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1059:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1060:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1061:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1062:./inc/stm32f1xx_ll_rcc.h ****   */
1063:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1064:./inc/stm32f1xx_ll_rcc.h **** {
1065:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
1066:./inc/stm32f1xx_ll_rcc.h **** }
1067:./inc/stm32f1xx_ll_rcc.h **** 
1068:./inc/stm32f1xx_ll_rcc.h **** /**
1069:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1070:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1071:./inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1072:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1073:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1074:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1075:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1076:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1077:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1078:./inc/stm32f1xx_ll_rcc.h ****   */
1079:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1080:./inc/stm32f1xx_ll_rcc.h **** {
1081:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
1082:./inc/stm32f1xx_ll_rcc.h **** }
1083:./inc/stm32f1xx_ll_rcc.h **** 
1084:./inc/stm32f1xx_ll_rcc.h **** /**
1085:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1086:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1087:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1088:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1089:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1090:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1091:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1092:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1093:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1094:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1095:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
ARM GAS  /tmp/ccgFoonV.s 			page 41


1096:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1097:./inc/stm32f1xx_ll_rcc.h ****   */
1098:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1099:./inc/stm32f1xx_ll_rcc.h **** {
1100:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
 180              		.loc 3 1100 0
 181 0044 224C     		ldr	r4, .L24	@ tmp147,
 182              	.LBE45:
 183              	.LBE44:
 519:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 520:src/stm32f1xx_ll_utils.c **** #if defined(FLASH_ACR_LATENCY)
 521:src/stm32f1xx_ll_utils.c ****   uint32_t sysclk_frequency_current = 0U;
 522:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 523:src/stm32f1xx_ll_utils.c **** 
 524:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_SYSCLK_DIV(UTILS_ClkInitStruct->AHBCLKDivider));
 525:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_APB1_DIV(UTILS_ClkInitStruct->APB1CLKDivider));
 526:src/stm32f1xx_ll_utils.c ****   assert_param(IS_LL_UTILS_APB2_DIV(UTILS_ClkInitStruct->APB2CLKDivider));
 527:src/stm32f1xx_ll_utils.c **** 
 528:src/stm32f1xx_ll_utils.c **** #if defined(FLASH_ACR_LATENCY)
 529:src/stm32f1xx_ll_utils.c ****   /* Calculate current SYSCLK frequency */
 530:src/stm32f1xx_ll_utils.c ****   sysclk_frequency_current = (SystemCoreClock << AHBPrescTable[LL_RCC_GetAHBPrescaler() >> RCC_CFGR
 184              		.loc 1 530 0
 185 0046 234E     		ldr	r6, .L24+4	@ tmp148,
 186              	.LBB47:
 187              	.LBB46:
 188              		.loc 3 1100 0
 189 0048 6368     		ldr	r3, [r4, #4]	@ _37, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 190              	.LBE46:
 191              	.LBE47:
 192              		.loc 1 530 0
 193 004a 234F     		ldr	r7, .L24+8	@ tmp149,
 194 004c C3F30313 		ubfx	r3, r3, #4, #4	@ tmp151, _37,,
 195 0050 17F80380 		ldrb	r8, [r7, r3]	@ zero_extendqisi2	@ tmp152, AHBPrescTable
 196 0054 3368     		ldr	r3, [r6]	@ SystemCoreClock, SystemCoreClock
 518:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 197              		.loc 1 518 0
 198 0056 0546     		mov	r5, r0	@ SYSCLK_Frequency, SYSCLK_Frequency
 199              		.loc 1 530 0
 200 0058 03FA08F8 		lsl	r8, r3, r8	@ sysclk_frequency_current, SystemCoreClock, tmp152
 201              	.LVL11:
 531:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 532:src/stm32f1xx_ll_utils.c **** 
 533:src/stm32f1xx_ll_utils.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 534:src/stm32f1xx_ll_utils.c **** #if defined (FLASH_ACR_LATENCY)
 535:src/stm32f1xx_ll_utils.c ****   if (sysclk_frequency_current < SYSCLK_Frequency)
 202              		.loc 1 535 0
 203 005c 8045     		cmp	r8, r0	@ sysclk_frequency_current, SYSCLK_Frequency
 204 005e 31D3     		bcc	.L9	@,
 205              	.LVL12:
 206              	.L11:
 207              	.LBB48:
 208              	.LBB49:
1101:./inc/stm32f1xx_ll_rcc.h **** }
1102:./inc/stm32f1xx_ll_rcc.h **** 
1103:./inc/stm32f1xx_ll_rcc.h **** /**
1104:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1105:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
ARM GAS  /tmp/ccgFoonV.s 			page 42


1106:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1107:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1108:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1109:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1110:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1111:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1112:./inc/stm32f1xx_ll_rcc.h ****   */
1113:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1114:./inc/stm32f1xx_ll_rcc.h **** {
1115:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1116:./inc/stm32f1xx_ll_rcc.h **** }
1117:./inc/stm32f1xx_ll_rcc.h **** 
1118:./inc/stm32f1xx_ll_rcc.h **** /**
1119:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
1120:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1121:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1122:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1123:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1124:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1125:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1126:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1127:./inc/stm32f1xx_ll_rcc.h ****   */
1128:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1129:./inc/stm32f1xx_ll_rcc.h **** {
1130:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1131:./inc/stm32f1xx_ll_rcc.h **** }
1132:./inc/stm32f1xx_ll_rcc.h **** 
1133:./inc/stm32f1xx_ll_rcc.h **** /**
1134:./inc/stm32f1xx_ll_rcc.h ****   * @}
1135:./inc/stm32f1xx_ll_rcc.h ****   */
1136:./inc/stm32f1xx_ll_rcc.h **** 
1137:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1138:./inc/stm32f1xx_ll_rcc.h ****   * @{
1139:./inc/stm32f1xx_ll_rcc.h ****   */
1140:./inc/stm32f1xx_ll_rcc.h **** 
1141:./inc/stm32f1xx_ll_rcc.h **** /**
1142:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure MCOx
1143:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         MCO           LL_RCC_ConfigMCO
1144:./inc/stm32f1xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1145:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1146:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1147:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1148:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1149:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
1150:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLL2CLK (*)
1151:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2 (*)
1152:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_EXT_HSE (*)
1153:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK (*)
1154:./inc/stm32f1xx_ll_rcc.h ****   *
1155:./inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1156:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1157:./inc/stm32f1xx_ll_rcc.h ****   */
1158:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource)
1159:./inc/stm32f1xx_ll_rcc.h **** {
1160:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL, MCOxSource);
1161:./inc/stm32f1xx_ll_rcc.h **** }
1162:./inc/stm32f1xx_ll_rcc.h **** 
ARM GAS  /tmp/ccgFoonV.s 			page 43


1163:./inc/stm32f1xx_ll_rcc.h **** /**
1164:./inc/stm32f1xx_ll_rcc.h ****   * @}
1165:./inc/stm32f1xx_ll_rcc.h ****   */
1166:./inc/stm32f1xx_ll_rcc.h **** 
1167:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1168:./inc/stm32f1xx_ll_rcc.h ****   * @{
1169:./inc/stm32f1xx_ll_rcc.h ****   */
1170:./inc/stm32f1xx_ll_rcc.h **** 
1171:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1172:./inc/stm32f1xx_ll_rcc.h **** /**
1173:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure I2Sx clock source
1174:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_SetI2SClockSource\n
1175:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_SetI2SClockSource
1176:./inc/stm32f1xx_ll_rcc.h ****   * @param  I2SxSource This parameter can be one of the following values:
1177:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1178:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1179:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1180:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1181:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1182:./inc/stm32f1xx_ll_rcc.h ****   */
1183:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2SClockSource(uint32_t I2SxSource)
1184:./inc/stm32f1xx_ll_rcc.h **** {
1185:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR2, (I2SxSource & 0xFFFF0000U), (I2SxSource << 16U));
1186:./inc/stm32f1xx_ll_rcc.h **** }
1187:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1188:./inc/stm32f1xx_ll_rcc.h **** 
1189:./inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1190:./inc/stm32f1xx_ll_rcc.h **** /**
1191:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure USB clock source
1192:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_SetUSBClockSource\n
1193:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_SetUSBClockSource
1194:./inc/stm32f1xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1195:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1196:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1197:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1198:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1199:./inc/stm32f1xx_ll_rcc.h ****   *
1200:./inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1201:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1202:./inc/stm32f1xx_ll_rcc.h ****   */
1203:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1204:./inc/stm32f1xx_ll_rcc.h **** {
1205:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
1206:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_USBPRE, USBxSource);
1207:./inc/stm32f1xx_ll_rcc.h **** #else /*RCC_CFGR_OTGFSPRE*/
1208:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_OTGFSPRE, USBxSource);
1209:./inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/
1210:./inc/stm32f1xx_ll_rcc.h **** }
1211:./inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1212:./inc/stm32f1xx_ll_rcc.h **** 
1213:./inc/stm32f1xx_ll_rcc.h **** /**
1214:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure ADC clock source
1215:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_SetADCClockSource
1216:./inc/stm32f1xx_ll_rcc.h ****   * @param  ADCxSource This parameter can be one of the following values:
1217:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1218:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
1219:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
ARM GAS  /tmp/ccgFoonV.s 			page 44


1220:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1221:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1222:./inc/stm32f1xx_ll_rcc.h ****   */
1223:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetADCClockSource(uint32_t ADCxSource)
1224:./inc/stm32f1xx_ll_rcc.h **** {
1225:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_ADCPRE, ADCxSource);
1226:./inc/stm32f1xx_ll_rcc.h **** }
1227:./inc/stm32f1xx_ll_rcc.h **** 
1228:./inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1229:./inc/stm32f1xx_ll_rcc.h **** /**
1230:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get I2Sx clock source
1231:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_GetI2SClockSource\n
1232:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_GetI2SClockSource
1233:./inc/stm32f1xx_ll_rcc.h ****   * @param  I2Sx This parameter can be one of the following values:
1234:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE
1235:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE
1236:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1237:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1238:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1239:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1240:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1241:./inc/stm32f1xx_ll_rcc.h ****   */
1242:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2SClockSource(uint32_t I2Sx)
1243:./inc/stm32f1xx_ll_rcc.h **** {
1244:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, I2Sx) >> 16U | I2Sx);
1245:./inc/stm32f1xx_ll_rcc.h **** }
1246:./inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1247:./inc/stm32f1xx_ll_rcc.h **** 
1248:./inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1249:./inc/stm32f1xx_ll_rcc.h **** /**
1250:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get USBx clock source
1251:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_GetUSBClockSource\n
1252:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_GetUSBClockSource
1253:./inc/stm32f1xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1254:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1255:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1256:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1257:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1258:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1259:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1260:./inc/stm32f1xx_ll_rcc.h ****   *
1261:./inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1262:./inc/stm32f1xx_ll_rcc.h ****   */
1263:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1264:./inc/stm32f1xx_ll_rcc.h **** {
1265:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, USBx));
1266:./inc/stm32f1xx_ll_rcc.h **** }
1267:./inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1268:./inc/stm32f1xx_ll_rcc.h **** 
1269:./inc/stm32f1xx_ll_rcc.h **** /**
1270:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get ADCx clock source
1271:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_GetADCClockSource
1272:./inc/stm32f1xx_ll_rcc.h ****   * @param  ADCx This parameter can be one of the following values:
1273:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSOURCE
1274:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1275:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1276:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
ARM GAS  /tmp/ccgFoonV.s 			page 45


1277:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
1278:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1279:./inc/stm32f1xx_ll_rcc.h ****   */
1280:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetADCClockSource(uint32_t ADCx)
1281:./inc/stm32f1xx_ll_rcc.h **** {
1282:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, ADCx));
1283:./inc/stm32f1xx_ll_rcc.h **** }
1284:./inc/stm32f1xx_ll_rcc.h **** 
1285:./inc/stm32f1xx_ll_rcc.h **** /**
1286:./inc/stm32f1xx_ll_rcc.h ****   * @}
1287:./inc/stm32f1xx_ll_rcc.h ****   */
1288:./inc/stm32f1xx_ll_rcc.h **** 
1289:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1290:./inc/stm32f1xx_ll_rcc.h ****   * @{
1291:./inc/stm32f1xx_ll_rcc.h ****   */
1292:./inc/stm32f1xx_ll_rcc.h **** 
1293:./inc/stm32f1xx_ll_rcc.h **** /**
1294:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1295:./inc/stm32f1xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1296:./inc/stm32f1xx_ll_rcc.h ****   *       the Backup domain is reset. The BDRST bit can be used to reset them.
1297:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
1298:./inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1299:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1300:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1301:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1302:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1303:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1304:./inc/stm32f1xx_ll_rcc.h ****   */
1305:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1306:./inc/stm32f1xx_ll_rcc.h **** {
1307:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1308:./inc/stm32f1xx_ll_rcc.h **** }
1309:./inc/stm32f1xx_ll_rcc.h **** 
1310:./inc/stm32f1xx_ll_rcc.h **** /**
1311:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1312:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1313:./inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1314:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1315:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1316:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1317:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1318:./inc/stm32f1xx_ll_rcc.h ****   */
1319:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1320:./inc/stm32f1xx_ll_rcc.h **** {
1321:./inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1322:./inc/stm32f1xx_ll_rcc.h **** }
1323:./inc/stm32f1xx_ll_rcc.h **** 
1324:./inc/stm32f1xx_ll_rcc.h **** /**
1325:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable RTC
1326:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1327:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1328:./inc/stm32f1xx_ll_rcc.h ****   */
1329:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
1330:./inc/stm32f1xx_ll_rcc.h **** {
1331:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1332:./inc/stm32f1xx_ll_rcc.h **** }
1333:./inc/stm32f1xx_ll_rcc.h **** 
ARM GAS  /tmp/ccgFoonV.s 			page 46


1334:./inc/stm32f1xx_ll_rcc.h **** /**
1335:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable RTC
1336:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
1337:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1338:./inc/stm32f1xx_ll_rcc.h ****   */
1339:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
1340:./inc/stm32f1xx_ll_rcc.h **** {
1341:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1342:./inc/stm32f1xx_ll_rcc.h **** }
1343:./inc/stm32f1xx_ll_rcc.h **** 
1344:./inc/stm32f1xx_ll_rcc.h **** /**
1345:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1346:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
1347:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1348:./inc/stm32f1xx_ll_rcc.h ****   */
1349:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1350:./inc/stm32f1xx_ll_rcc.h **** {
1351:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
1352:./inc/stm32f1xx_ll_rcc.h **** }
1353:./inc/stm32f1xx_ll_rcc.h **** 
1354:./inc/stm32f1xx_ll_rcc.h **** /**
1355:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1356:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
1357:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1358:./inc/stm32f1xx_ll_rcc.h ****   */
1359:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
1360:./inc/stm32f1xx_ll_rcc.h **** {
1361:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1362:./inc/stm32f1xx_ll_rcc.h **** }
1363:./inc/stm32f1xx_ll_rcc.h **** 
1364:./inc/stm32f1xx_ll_rcc.h **** /**
1365:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1366:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
1367:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1368:./inc/stm32f1xx_ll_rcc.h ****   */
1369:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
1370:./inc/stm32f1xx_ll_rcc.h **** {
1371:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1372:./inc/stm32f1xx_ll_rcc.h **** }
1373:./inc/stm32f1xx_ll_rcc.h **** 
1374:./inc/stm32f1xx_ll_rcc.h **** /**
1375:./inc/stm32f1xx_ll_rcc.h ****   * @}
1376:./inc/stm32f1xx_ll_rcc.h ****   */
1377:./inc/stm32f1xx_ll_rcc.h **** 
1378:./inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1379:./inc/stm32f1xx_ll_rcc.h ****   * @{
1380:./inc/stm32f1xx_ll_rcc.h ****   */
1381:./inc/stm32f1xx_ll_rcc.h **** 
1382:./inc/stm32f1xx_ll_rcc.h **** /**
1383:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable PLL
1384:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1385:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1386:./inc/stm32f1xx_ll_rcc.h ****   */
1387:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1388:./inc/stm32f1xx_ll_rcc.h **** {
1389:./inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
 209              		.loc 3 1389 0
ARM GAS  /tmp/ccgFoonV.s 			page 47


 210 0060 2368     		ldr	r3, [r4]	@ _42, MEM[(struct RCC_TypeDef *)1073876992B].CR
 211 0062 43F08073 		orr	r3, r3, #16777216	@ _43, _42,
 212 0066 2360     		str	r3, [r4]	@ _43, MEM[(struct RCC_TypeDef *)1073876992B].CR
 213              	.L10:
 214              	.LBE49:
 215              	.LBE48:
 216              	.LBB50:
 217              	.LBB51:
1390:./inc/stm32f1xx_ll_rcc.h **** }
1391:./inc/stm32f1xx_ll_rcc.h **** 
1392:./inc/stm32f1xx_ll_rcc.h **** /**
1393:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable PLL
1394:./inc/stm32f1xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1395:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1396:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1397:./inc/stm32f1xx_ll_rcc.h ****   */
1398:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
1399:./inc/stm32f1xx_ll_rcc.h **** {
1400:./inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1401:./inc/stm32f1xx_ll_rcc.h **** }
1402:./inc/stm32f1xx_ll_rcc.h **** 
1403:./inc/stm32f1xx_ll_rcc.h **** /**
1404:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1405:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1406:./inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1407:./inc/stm32f1xx_ll_rcc.h ****   */
1408:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1409:./inc/stm32f1xx_ll_rcc.h **** {
1410:./inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
 218              		.loc 3 1410 0 discriminator 1
 219 0068 2368     		ldr	r3, [r4]	@ _44, MEM[(struct RCC_TypeDef *)1073876992B].CR
 220              	.LBE51:
 221              	.LBE50:
 536:src/stm32f1xx_ll_utils.c ****   {
 537:src/stm32f1xx_ll_utils.c ****     /* Set FLASH latency to highest latency */
 538:src/stm32f1xx_ll_utils.c ****     status = UTILS_SetFlashLatency(SYSCLK_Frequency);
 539:src/stm32f1xx_ll_utils.c ****   }
 540:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 541:src/stm32f1xx_ll_utils.c **** 
 542:src/stm32f1xx_ll_utils.c ****   /* Update system clock configuration */
 543:src/stm32f1xx_ll_utils.c ****   if (status == SUCCESS)
 544:src/stm32f1xx_ll_utils.c ****   {
 545:src/stm32f1xx_ll_utils.c **** #if defined(RCC_PLL2_SUPPORT)
 546:src/stm32f1xx_ll_utils.c ****     if (LL_RCC_PLL_GetMainSource() != LL_RCC_PLLSOURCE_HSI_DIV_2)
 547:src/stm32f1xx_ll_utils.c ****     {
 548:src/stm32f1xx_ll_utils.c ****       /* Enable PLL2 */
 549:src/stm32f1xx_ll_utils.c ****       LL_RCC_PLL2_Enable();
 550:src/stm32f1xx_ll_utils.c ****       while (LL_RCC_PLL2_IsReady() != 1U)
 551:src/stm32f1xx_ll_utils.c ****       {
 552:src/stm32f1xx_ll_utils.c ****         /* Wait for PLL2 ready */
 553:src/stm32f1xx_ll_utils.c ****       }
 554:src/stm32f1xx_ll_utils.c ****     }
 555:src/stm32f1xx_ll_utils.c **** #endif /* RCC_PLL2_SUPPORT */
 556:src/stm32f1xx_ll_utils.c ****     /* Enable PLL */
 557:src/stm32f1xx_ll_utils.c ****     LL_RCC_PLL_Enable();
 558:src/stm32f1xx_ll_utils.c ****     while (LL_RCC_PLL_IsReady() != 1U)
 222              		.loc 1 558 0 discriminator 1
ARM GAS  /tmp/ccgFoonV.s 			page 48


 223 006a 9B01     		lsls	r3, r3, #6	@, _44,
 224 006c FCD5     		bpl	.L10	@,
 225              	.LVL13:
 226              	.LBB52:
 227              	.LBB53:
1049:./inc/stm32f1xx_ll_rcc.h **** }
 228              		.loc 3 1049 0
 229 006e 6368     		ldr	r3, [r4, #4]	@ _51, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 230 0070 0A68     		ldr	r2, [r1]	@ UTILS_ClkInitStruct_21(D)->AHBCLKDivider, UTILS_ClkInitStruct_21(D)->AHBCLKDivider
 231 0072 23F0F003 		bic	r3, r3, #240	@ tmp160, _51,
 232 0076 1343     		orrs	r3, r3, r2	@, _53, tmp160, UTILS_ClkInitStruct_21(D)->AHBCLKDivider
 233 0078 6360     		str	r3, [r4, #4]	@ _53, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 234              	.LVL14:
 235              	.LBE53:
 236              	.LBE52:
 237              	.LBB54:
 238              	.LBB55:
1016:./inc/stm32f1xx_ll_rcc.h **** }
 239              		.loc 3 1016 0
 240 007a 6368     		ldr	r3, [r4, #4]	@ _48, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 241 007c 23F00303 		bic	r3, r3, #3	@ tmp164, _48,
 242 0080 43F00203 		orr	r3, r3, #2	@ _50, tmp164,
 243 0084 6360     		str	r3, [r4, #4]	@ _50, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 244              	.L13:
 245              	.LBE55:
 246              	.LBE54:
 247              	.LBB56:
 248              	.LBB57:
1029:./inc/stm32f1xx_ll_rcc.h **** }
 249              		.loc 3 1029 0 discriminator 1
 250 0086 6368     		ldr	r3, [r4, #4]	@ _39, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 251 0088 03F00C03 		and	r3, r3, #12	@ tmp167, _39,
 252              	.LBE57:
 253              	.LBE56:
 559:src/stm32f1xx_ll_utils.c ****     {
 560:src/stm32f1xx_ll_utils.c ****       /* Wait for PLL ready */
 561:src/stm32f1xx_ll_utils.c ****     }
 562:src/stm32f1xx_ll_utils.c **** 
 563:src/stm32f1xx_ll_utils.c ****     /* Sysclk activation on the main PLL */
 564:src/stm32f1xx_ll_utils.c ****     LL_RCC_SetAHBPrescaler(UTILS_ClkInitStruct->AHBCLKDivider);
 565:src/stm32f1xx_ll_utils.c ****     LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 566:src/stm32f1xx_ll_utils.c ****     while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 254              		.loc 1 566 0 discriminator 1
 255 008c 082B     		cmp	r3, #8	@ tmp167,
 256 008e FAD1     		bne	.L13	@,
 257              	.LVL15:
 258              	.LBB58:
 259              	.LBB59:
1065:./inc/stm32f1xx_ll_rcc.h **** }
 260              		.loc 3 1065 0
 261 0090 6368     		ldr	r3, [r4, #4]	@ _57, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 262 0092 4A68     		ldr	r2, [r1, #4]	@ UTILS_ClkInitStruct_21(D)->APB1CLKDivider, UTILS_ClkInitStruct_21(D)->APB1CLKDi
 263 0094 23F4E063 		bic	r3, r3, #1792	@ tmp169, _57,
 264 0098 1343     		orrs	r3, r3, r2	@, _59, tmp169, UTILS_ClkInitStruct_21(D)->APB1CLKDivider
 265 009a 6360     		str	r3, [r4, #4]	@ _59, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 266              	.LVL16:
 267              	.LBE59:
ARM GAS  /tmp/ccgFoonV.s 			page 49


 268              	.LBE58:
 269              	.LBB60:
 270              	.LBB61:
1081:./inc/stm32f1xx_ll_rcc.h **** }
 271              		.loc 3 1081 0
 272 009c 6368     		ldr	r3, [r4, #4]	@ _54, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 273 009e 8A68     		ldr	r2, [r1, #8]	@ UTILS_ClkInitStruct_21(D)->APB2CLKDivider, UTILS_ClkInitStruct_21(D)->APB2CLKDi
 274 00a0 23F46053 		bic	r3, r3, #14336	@ tmp173, _54,
 275 00a4 1343     		orrs	r3, r3, r2	@, _56, tmp173, UTILS_ClkInitStruct_21(D)->APB2CLKDivider
 276              	.LBE61:
 277              	.LBE60:
 567:src/stm32f1xx_ll_utils.c ****     {
 568:src/stm32f1xx_ll_utils.c ****       /* Wait for system clock switch to PLL */
 569:src/stm32f1xx_ll_utils.c ****     }
 570:src/stm32f1xx_ll_utils.c **** 
 571:src/stm32f1xx_ll_utils.c ****     /* Set APB1 & APB2 prescaler*/
 572:src/stm32f1xx_ll_utils.c ****     LL_RCC_SetAPB1Prescaler(UTILS_ClkInitStruct->APB1CLKDivider);
 573:src/stm32f1xx_ll_utils.c ****     LL_RCC_SetAPB2Prescaler(UTILS_ClkInitStruct->APB2CLKDivider);
 574:src/stm32f1xx_ll_utils.c ****   }
 575:src/stm32f1xx_ll_utils.c **** 
 576:src/stm32f1xx_ll_utils.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 577:src/stm32f1xx_ll_utils.c **** #if defined (FLASH_ACR_LATENCY)
 578:src/stm32f1xx_ll_utils.c ****   if (sysclk_frequency_current > SYSCLK_Frequency)
 278              		.loc 1 578 0
 279 00a6 A845     		cmp	r8, r5	@ sysclk_frequency_current, SYSCLK_Frequency
 280              	.LBB63:
 281              	.LBB62:
1081:./inc/stm32f1xx_ll_rcc.h **** }
 282              		.loc 3 1081 0
 283 00a8 6360     		str	r3, [r4, #4]	@ _56, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 284              	.LVL17:
 285              	.LBE62:
 286              	.LBE63:
 287              		.loc 1 578 0
 288 00aa 03D9     		bls	.L14	@,
 579:src/stm32f1xx_ll_utils.c ****   {
 580:src/stm32f1xx_ll_utils.c ****     /* Set FLASH latency to lowest latency */
 581:src/stm32f1xx_ll_utils.c ****     status = UTILS_SetFlashLatency(SYSCLK_Frequency);
 289              		.loc 1 581 0
 290 00ac 2846     		mov	r0, r5	@, SYSCLK_Frequency
 291 00ae FFF7A7FF 		bl	UTILS_SetFlashLatency	@
 292              	.LVL18:
 582:src/stm32f1xx_ll_utils.c ****   }
 583:src/stm32f1xx_ll_utils.c **** #endif /* FLASH_ACR_LATENCY */
 584:src/stm32f1xx_ll_utils.c **** 
 585:src/stm32f1xx_ll_utils.c ****   /* Update SystemCoreClock variable */
 586:src/stm32f1xx_ll_utils.c ****   if (status == SUCCESS)
 293              		.loc 1 586 0
 294 00b2 58B9     		cbnz	r0, .L17	@ <retval>,
 295              	.LVL19:
 296              	.L14:
 587:src/stm32f1xx_ll_utils.c ****   {
 588:src/stm32f1xx_ll_utils.c ****     LL_SetSystemCoreClock(__LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, UTILS_ClkInitStruct->AHBCLKDivi
 297              		.loc 1 588 0
 298 00b4 0B68     		ldr	r3, [r1]	@ UTILS_ClkInitStruct_21(D)->AHBCLKDivider, UTILS_ClkInitStruct_21(D)->AHBCLKDivider
 299              	.LBB64:
 300              	.LBB65:
ARM GAS  /tmp/ccgFoonV.s 			page 50


 246:src/stm32f1xx_ll_utils.c **** }
 301              		.loc 1 246 0
 302 00b6 0020     		movs	r0, #0	@ <retval>,
 303              	.LBE65:
 304              	.LBE64:
 305              		.loc 1 588 0
 306 00b8 C3F30313 		ubfx	r3, r3, #4, #4	@ tmp181, UTILS_ClkInitStruct_21(D)->AHBCLKDivider,,
 307 00bc FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2	@ tmp182, AHBPrescTable
 308 00be DD40     		lsrs	r5, r5, r3	@ tmp183, SYSCLK_Frequency, tmp182
 309              	.LVL20:
 310              	.LBB67:
 311              	.LBB66:
 246:src/stm32f1xx_ll_utils.c **** }
 312              		.loc 1 246 0
 313 00c0 3560     		str	r5, [r6]	@ tmp183, SystemCoreClock
 314 00c2 03E0     		b	.L17	@
 315              	.LVL21:
 316              	.L9:
 317              	.LBE66:
 318              	.LBE67:
 538:src/stm32f1xx_ll_utils.c ****   }
 319              		.loc 1 538 0
 320 00c4 FFF79CFF 		bl	UTILS_SetFlashLatency	@
 321              	.LVL22:
 543:src/stm32f1xx_ll_utils.c ****   {
 322              		.loc 1 543 0
 323 00c8 0028     		cmp	r0, #0	@ <retval>
 324 00ca C9D0     		beq	.L11	@
 325              	.LVL23:
 326              	.L17:
 589:src/stm32f1xx_ll_utils.c ****   }
 590:src/stm32f1xx_ll_utils.c **** 
 591:src/stm32f1xx_ll_utils.c ****   return status;
 592:src/stm32f1xx_ll_utils.c **** }
 327              		.loc 1 592 0
 328 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 329              	.LVL24:
 330              	.L25:
 331              		.align	2
 332              	.L24:
 333 00d0 00100240 		.word	1073876992
 334 00d4 00000000 		.word	SystemCoreClock
 335 00d8 00000000 		.word	AHBPrescTable
 336              		.cfi_endproc
 337              	.LFE182:
 338              		.size	UTILS_EnablePLLAndSwitchSystem, .-UTILS_EnablePLLAndSwitchSystem
 339              		.align	1
 340              		.global	LL_Init1msTick
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu softvfp
 345              		.type	LL_Init1msTick, %function
 346              	LL_Init1msTick:
 347              	.LFB174:
 170:src/stm32f1xx_ll_utils.c ****   /* Use frequency provided in argument */
 348              		.loc 1 170 0
ARM GAS  /tmp/ccgFoonV.s 			page 51


 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL25:
 354              	.LBB70:
 355              	.LBB71:
 356              		.file 4 "./inc/stm32f1xx_ll_utils.h"
   1:./inc/stm32f1xx_ll_utils.h **** /**
   2:./inc/stm32f1xx_ll_utils.h ****   ******************************************************************************
   3:./inc/stm32f1xx_ll_utils.h ****   * @file    stm32f1xx_ll_utils.h
   4:./inc/stm32f1xx_ll_utils.h ****   * @author  MCD Application Team
   5:./inc/stm32f1xx_ll_utils.h ****   * @brief   Header file of UTILS LL module.
   6:./inc/stm32f1xx_ll_utils.h ****   @verbatim
   7:./inc/stm32f1xx_ll_utils.h ****   ==============================================================================
   8:./inc/stm32f1xx_ll_utils.h ****                      ##### How to use this driver #####
   9:./inc/stm32f1xx_ll_utils.h ****   ==============================================================================
  10:./inc/stm32f1xx_ll_utils.h ****     [..]
  11:./inc/stm32f1xx_ll_utils.h ****     The LL UTILS driver contains a set of generic APIs that can be
  12:./inc/stm32f1xx_ll_utils.h ****     used by user:
  13:./inc/stm32f1xx_ll_utils.h ****       (+) Device electronic signature
  14:./inc/stm32f1xx_ll_utils.h ****       (+) Timing functions
  15:./inc/stm32f1xx_ll_utils.h ****       (+) PLL configuration functions
  16:./inc/stm32f1xx_ll_utils.h **** 
  17:./inc/stm32f1xx_ll_utils.h ****   @endverbatim
  18:./inc/stm32f1xx_ll_utils.h ****   ******************************************************************************
  19:./inc/stm32f1xx_ll_utils.h ****   * @attention
  20:./inc/stm32f1xx_ll_utils.h ****   *
  21:./inc/stm32f1xx_ll_utils.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  22:./inc/stm32f1xx_ll_utils.h ****   * All rights reserved.</center></h2>
  23:./inc/stm32f1xx_ll_utils.h ****   *
  24:./inc/stm32f1xx_ll_utils.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  25:./inc/stm32f1xx_ll_utils.h ****   * the "License"; You may not use this file except in compliance with the
  26:./inc/stm32f1xx_ll_utils.h ****   * License. You may obtain a copy of the License at:
  27:./inc/stm32f1xx_ll_utils.h ****   *                        opensource.org/licenses/BSD-3-Clause
  28:./inc/stm32f1xx_ll_utils.h ****   *
  29:./inc/stm32f1xx_ll_utils.h ****   ******************************************************************************
  30:./inc/stm32f1xx_ll_utils.h ****   */
  31:./inc/stm32f1xx_ll_utils.h **** 
  32:./inc/stm32f1xx_ll_utils.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  33:./inc/stm32f1xx_ll_utils.h **** #ifndef __STM32F1xx_LL_UTILS_H
  34:./inc/stm32f1xx_ll_utils.h **** #define __STM32F1xx_LL_UTILS_H
  35:./inc/stm32f1xx_ll_utils.h **** 
  36:./inc/stm32f1xx_ll_utils.h **** #ifdef __cplusplus
  37:./inc/stm32f1xx_ll_utils.h **** extern "C" {
  38:./inc/stm32f1xx_ll_utils.h **** #endif
  39:./inc/stm32f1xx_ll_utils.h **** 
  40:./inc/stm32f1xx_ll_utils.h **** /* Includes ------------------------------------------------------------------*/
  41:./inc/stm32f1xx_ll_utils.h **** #include "stm32f1xx.h"
  42:./inc/stm32f1xx_ll_utils.h **** 
  43:./inc/stm32f1xx_ll_utils.h **** /** @addtogroup STM32F1xx_LL_Driver
  44:./inc/stm32f1xx_ll_utils.h ****   * @{
  45:./inc/stm32f1xx_ll_utils.h ****   */
  46:./inc/stm32f1xx_ll_utils.h **** 
  47:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL UTILS
  48:./inc/stm32f1xx_ll_utils.h ****   * @{
  49:./inc/stm32f1xx_ll_utils.h ****   */
ARM GAS  /tmp/ccgFoonV.s 			page 52


  50:./inc/stm32f1xx_ll_utils.h **** 
  51:./inc/stm32f1xx_ll_utils.h **** /* Private types -------------------------------------------------------------*/
  52:./inc/stm32f1xx_ll_utils.h **** /* Private variables ---------------------------------------------------------*/
  53:./inc/stm32f1xx_ll_utils.h **** 
  54:./inc/stm32f1xx_ll_utils.h **** /* Private constants ---------------------------------------------------------*/
  55:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_Private_Constants UTILS Private Constants
  56:./inc/stm32f1xx_ll_utils.h ****   * @{
  57:./inc/stm32f1xx_ll_utils.h ****   */
  58:./inc/stm32f1xx_ll_utils.h **** 
  59:./inc/stm32f1xx_ll_utils.h **** /* Max delay can be used in LL_mDelay */
  60:./inc/stm32f1xx_ll_utils.h **** #define LL_MAX_DELAY                  0xFFFFFFFFU
  61:./inc/stm32f1xx_ll_utils.h **** 
  62:./inc/stm32f1xx_ll_utils.h **** /**
  63:./inc/stm32f1xx_ll_utils.h ****  * @brief Unique device ID register base address
  64:./inc/stm32f1xx_ll_utils.h ****  */
  65:./inc/stm32f1xx_ll_utils.h **** #define UID_BASE_ADDRESS              UID_BASE
  66:./inc/stm32f1xx_ll_utils.h **** 
  67:./inc/stm32f1xx_ll_utils.h **** /**
  68:./inc/stm32f1xx_ll_utils.h ****  * @brief Flash size data register base address
  69:./inc/stm32f1xx_ll_utils.h ****  */
  70:./inc/stm32f1xx_ll_utils.h **** #define FLASHSIZE_BASE_ADDRESS        FLASHSIZE_BASE
  71:./inc/stm32f1xx_ll_utils.h **** 
  72:./inc/stm32f1xx_ll_utils.h **** /**
  73:./inc/stm32f1xx_ll_utils.h ****   * @}
  74:./inc/stm32f1xx_ll_utils.h ****   */
  75:./inc/stm32f1xx_ll_utils.h **** 
  76:./inc/stm32f1xx_ll_utils.h **** /* Private macros ------------------------------------------------------------*/
  77:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_Private_Macros UTILS Private Macros
  78:./inc/stm32f1xx_ll_utils.h ****   * @{
  79:./inc/stm32f1xx_ll_utils.h ****   */
  80:./inc/stm32f1xx_ll_utils.h **** /**
  81:./inc/stm32f1xx_ll_utils.h ****   * @}
  82:./inc/stm32f1xx_ll_utils.h ****   */
  83:./inc/stm32f1xx_ll_utils.h **** /* Exported types ------------------------------------------------------------*/
  84:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_ES_INIT UTILS Exported structures
  85:./inc/stm32f1xx_ll_utils.h ****   * @{
  86:./inc/stm32f1xx_ll_utils.h ****   */
  87:./inc/stm32f1xx_ll_utils.h **** /**
  88:./inc/stm32f1xx_ll_utils.h ****   * @brief  UTILS PLL structure definition
  89:./inc/stm32f1xx_ll_utils.h ****   */
  90:./inc/stm32f1xx_ll_utils.h **** typedef struct
  91:./inc/stm32f1xx_ll_utils.h **** {
  92:./inc/stm32f1xx_ll_utils.h ****   uint32_t PLLMul;   /*!< Multiplication factor for PLL VCO input clock.
  93:./inc/stm32f1xx_ll_utils.h ****                           This parameter can be a value of @ref RCC_LL_EC_PLL_MUL
  94:./inc/stm32f1xx_ll_utils.h **** 
  95:./inc/stm32f1xx_ll_utils.h ****                           This feature can be modified afterwards using unitary function
  96:./inc/stm32f1xx_ll_utils.h ****                           @ref LL_RCC_PLL_ConfigDomain_SYS(). */
  97:./inc/stm32f1xx_ll_utils.h **** 
  98:./inc/stm32f1xx_ll_utils.h ****   uint32_t Prediv;   /*!< Division factor for HSE used as PLL clock source.
  99:./inc/stm32f1xx_ll_utils.h ****                           This parameter can be a value of @ref RCC_LL_EC_PREDIV_DIV
 100:./inc/stm32f1xx_ll_utils.h **** 
 101:./inc/stm32f1xx_ll_utils.h ****                           This feature can be modified afterwards using unitary function
 102:./inc/stm32f1xx_ll_utils.h ****                           @ref LL_RCC_PLL_ConfigDomain_SYS(). */
 103:./inc/stm32f1xx_ll_utils.h **** } LL_UTILS_PLLInitTypeDef;
 104:./inc/stm32f1xx_ll_utils.h **** 
 105:./inc/stm32f1xx_ll_utils.h **** /**
 106:./inc/stm32f1xx_ll_utils.h ****   * @brief  UTILS System, AHB and APB buses clock configuration structure definition
ARM GAS  /tmp/ccgFoonV.s 			page 53


 107:./inc/stm32f1xx_ll_utils.h ****   */
 108:./inc/stm32f1xx_ll_utils.h **** typedef struct
 109:./inc/stm32f1xx_ll_utils.h **** {
 110:./inc/stm32f1xx_ll_utils.h ****   uint32_t AHBCLKDivider;         /*!< The AHB clock (HCLK) divider. This clock is derived from the
 111:./inc/stm32f1xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_SYSCLK_DIV
 112:./inc/stm32f1xx_ll_utils.h **** 
 113:./inc/stm32f1xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 114:./inc/stm32f1xx_ll_utils.h ****                                        @ref LL_RCC_SetAHBPrescaler(). */
 115:./inc/stm32f1xx_ll_utils.h **** 
 116:./inc/stm32f1xx_ll_utils.h ****   uint32_t APB1CLKDivider;        /*!< The APB1 clock (PCLK1) divider. This clock is derived from t
 117:./inc/stm32f1xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_APB1_DIV
 118:./inc/stm32f1xx_ll_utils.h **** 
 119:./inc/stm32f1xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 120:./inc/stm32f1xx_ll_utils.h ****                                        @ref LL_RCC_SetAPB1Prescaler(). */
 121:./inc/stm32f1xx_ll_utils.h **** 
 122:./inc/stm32f1xx_ll_utils.h ****   uint32_t APB2CLKDivider;        /*!< The APB2 clock (PCLK2) divider. This clock is derived from t
 123:./inc/stm32f1xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_APB2_DIV
 124:./inc/stm32f1xx_ll_utils.h **** 
 125:./inc/stm32f1xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 126:./inc/stm32f1xx_ll_utils.h ****                                        @ref LL_RCC_SetAPB2Prescaler(). */
 127:./inc/stm32f1xx_ll_utils.h **** 
 128:./inc/stm32f1xx_ll_utils.h **** } LL_UTILS_ClkInitTypeDef;
 129:./inc/stm32f1xx_ll_utils.h **** 
 130:./inc/stm32f1xx_ll_utils.h **** /**
 131:./inc/stm32f1xx_ll_utils.h ****   * @}
 132:./inc/stm32f1xx_ll_utils.h ****   */
 133:./inc/stm32f1xx_ll_utils.h **** 
 134:./inc/stm32f1xx_ll_utils.h **** /* Exported constants --------------------------------------------------------*/
 135:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_Exported_Constants UTILS Exported Constants
 136:./inc/stm32f1xx_ll_utils.h ****   * @{
 137:./inc/stm32f1xx_ll_utils.h ****   */
 138:./inc/stm32f1xx_ll_utils.h **** 
 139:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_EC_HSE_BYPASS HSE Bypass activation
 140:./inc/stm32f1xx_ll_utils.h ****   * @{
 141:./inc/stm32f1xx_ll_utils.h ****   */
 142:./inc/stm32f1xx_ll_utils.h **** #define LL_UTILS_HSEBYPASS_OFF        0x00000000U       /*!< HSE Bypass is not enabled             
 143:./inc/stm32f1xx_ll_utils.h **** #define LL_UTILS_HSEBYPASS_ON         0x00000001U       /*!< HSE Bypass is enabled                 
 144:./inc/stm32f1xx_ll_utils.h **** /**
 145:./inc/stm32f1xx_ll_utils.h ****   * @}
 146:./inc/stm32f1xx_ll_utils.h ****   */
 147:./inc/stm32f1xx_ll_utils.h **** 
 148:./inc/stm32f1xx_ll_utils.h **** /**
 149:./inc/stm32f1xx_ll_utils.h ****   * @}
 150:./inc/stm32f1xx_ll_utils.h ****   */
 151:./inc/stm32f1xx_ll_utils.h **** 
 152:./inc/stm32f1xx_ll_utils.h **** /* Exported macro ------------------------------------------------------------*/
 153:./inc/stm32f1xx_ll_utils.h **** 
 154:./inc/stm32f1xx_ll_utils.h **** /* Exported functions --------------------------------------------------------*/
 155:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_Exported_Functions UTILS Exported Functions
 156:./inc/stm32f1xx_ll_utils.h ****   * @{
 157:./inc/stm32f1xx_ll_utils.h ****   */
 158:./inc/stm32f1xx_ll_utils.h **** 
 159:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_EF_DEVICE_ELECTRONIC_SIGNATURE DEVICE ELECTRONIC SIGNATURE
 160:./inc/stm32f1xx_ll_utils.h ****   * @{
 161:./inc/stm32f1xx_ll_utils.h ****   */
 162:./inc/stm32f1xx_ll_utils.h **** 
 163:./inc/stm32f1xx_ll_utils.h **** /**
ARM GAS  /tmp/ccgFoonV.s 			page 54


 164:./inc/stm32f1xx_ll_utils.h ****   * @brief  Get Word0 of the unique device identifier (UID based on 96 bits)
 165:./inc/stm32f1xx_ll_utils.h ****   * @retval UID[31:0]
 166:./inc/stm32f1xx_ll_utils.h ****   */
 167:./inc/stm32f1xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word0(void)
 168:./inc/stm32f1xx_ll_utils.h **** {
 169:./inc/stm32f1xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)UID_BASE_ADDRESS)));
 170:./inc/stm32f1xx_ll_utils.h **** }
 171:./inc/stm32f1xx_ll_utils.h **** 
 172:./inc/stm32f1xx_ll_utils.h **** /**
 173:./inc/stm32f1xx_ll_utils.h ****   * @brief  Get Word1 of the unique device identifier (UID based on 96 bits)
 174:./inc/stm32f1xx_ll_utils.h ****   * @retval UID[63:32]
 175:./inc/stm32f1xx_ll_utils.h ****   */
 176:./inc/stm32f1xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word1(void)
 177:./inc/stm32f1xx_ll_utils.h **** {
 178:./inc/stm32f1xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 4U))));
 179:./inc/stm32f1xx_ll_utils.h **** }
 180:./inc/stm32f1xx_ll_utils.h **** 
 181:./inc/stm32f1xx_ll_utils.h **** /**
 182:./inc/stm32f1xx_ll_utils.h ****   * @brief  Get Word2 of the unique device identifier (UID based on 96 bits)
 183:./inc/stm32f1xx_ll_utils.h ****   * @retval UID[95:64]
 184:./inc/stm32f1xx_ll_utils.h ****   */
 185:./inc/stm32f1xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word2(void)
 186:./inc/stm32f1xx_ll_utils.h **** {
 187:./inc/stm32f1xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 8U))));
 188:./inc/stm32f1xx_ll_utils.h **** }
 189:./inc/stm32f1xx_ll_utils.h **** 
 190:./inc/stm32f1xx_ll_utils.h **** /**
 191:./inc/stm32f1xx_ll_utils.h ****   * @brief  Get Flash memory size
 192:./inc/stm32f1xx_ll_utils.h ****   * @note   This bitfield indicates the size of the device Flash memory expressed in
 193:./inc/stm32f1xx_ll_utils.h ****   *         Kbytes. As an example, 0x040 corresponds to 64 Kbytes.
 194:./inc/stm32f1xx_ll_utils.h ****   * @retval FLASH_SIZE[15:0]: Flash memory size
 195:./inc/stm32f1xx_ll_utils.h ****   */
 196:./inc/stm32f1xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetFlashSize(void)
 197:./inc/stm32f1xx_ll_utils.h **** {
 198:./inc/stm32f1xx_ll_utils.h ****   return (uint16_t)(READ_REG(*((uint32_t *)FLASHSIZE_BASE_ADDRESS)));
 199:./inc/stm32f1xx_ll_utils.h **** }
 200:./inc/stm32f1xx_ll_utils.h **** 
 201:./inc/stm32f1xx_ll_utils.h **** 
 202:./inc/stm32f1xx_ll_utils.h **** /**
 203:./inc/stm32f1xx_ll_utils.h ****   * @}
 204:./inc/stm32f1xx_ll_utils.h ****   */
 205:./inc/stm32f1xx_ll_utils.h **** 
 206:./inc/stm32f1xx_ll_utils.h **** /** @defgroup UTILS_LL_EF_DELAY DELAY
 207:./inc/stm32f1xx_ll_utils.h ****   * @{
 208:./inc/stm32f1xx_ll_utils.h ****   */
 209:./inc/stm32f1xx_ll_utils.h **** 
 210:./inc/stm32f1xx_ll_utils.h **** /**
 211:./inc/stm32f1xx_ll_utils.h ****   * @brief  This function configures the Cortex-M SysTick source of the time base.
 212:./inc/stm32f1xx_ll_utils.h ****   * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)
 213:./inc/stm32f1xx_ll_utils.h ****   * @note   When a RTOS is used, it is recommended to avoid changing the SysTick
 214:./inc/stm32f1xx_ll_utils.h ****   *         configuration by calling this function, for a delay use rather osDelay RTOS service.
 215:./inc/stm32f1xx_ll_utils.h ****   * @param  Ticks Number of ticks
 216:./inc/stm32f1xx_ll_utils.h ****   * @retval None
 217:./inc/stm32f1xx_ll_utils.h ****   */
 218:./inc/stm32f1xx_ll_utils.h **** __STATIC_INLINE void LL_InitTick(uint32_t HCLKFrequency, uint32_t Ticks)
 219:./inc/stm32f1xx_ll_utils.h **** {
 220:./inc/stm32f1xx_ll_utils.h ****   /* Configure the SysTick to have interrupt in 1ms time base */
ARM GAS  /tmp/ccgFoonV.s 			page 55


 221:./inc/stm32f1xx_ll_utils.h ****   SysTick->LOAD  = (uint32_t)((HCLKFrequency / Ticks) - 1UL);  /* set reload register */
 357              		.loc 4 221 0
 358 00dc 4FF47A73 		mov	r3, #1000	@ tmp115,
 359 00e0 B0FBF3F0 		udiv	r0, r0, r3	@ tmp114, HCLKFrequency, tmp115
 360              	.LVL26:
 222:./inc/stm32f1xx_ll_utils.h ****   SysTick->VAL   = 0UL;                                       /* Load the SysTick Counter Value */
 361              		.loc 4 222 0
 362 00e4 0022     		movs	r2, #0	@ tmp118,
 221:./inc/stm32f1xx_ll_utils.h ****   SysTick->VAL   = 0UL;                                       /* Load the SysTick Counter Value */
 363              		.loc 4 221 0
 364 00e6 034B     		ldr	r3, .L27	@ tmp116,
 365 00e8 0138     		subs	r0, r0, #1	@ _5, tmp114,
 366 00ea 5860     		str	r0, [r3, #4]	@ _5, MEM[(struct SysTick_Type *)3758153744B].LOAD
 367              		.loc 4 222 0
 368 00ec 9A60     		str	r2, [r3, #8]	@ tmp118, MEM[(struct SysTick_Type *)3758153744B].VAL
 223:./inc/stm32f1xx_ll_utils.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 369              		.loc 4 223 0
 370 00ee 0522     		movs	r2, #5	@ tmp120,
 371 00f0 1A60     		str	r2, [r3]	@ tmp120, MEM[(struct SysTick_Type *)3758153744B].CTRL
 372              	.LVL27:
 373 00f2 7047     		bx	lr	@
 374              	.L28:
 375              		.align	2
 376              	.L27:
 377 00f4 10E000E0 		.word	-536813552
 378              	.LBE71:
 379              	.LBE70:
 380              		.cfi_endproc
 381              	.LFE174:
 382              		.size	LL_Init1msTick, .-LL_Init1msTick
 383              		.align	1
 384              		.global	LL_mDelay
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 389              		.type	LL_mDelay, %function
 390              	LL_mDelay:
 391              	.LFB175:
 186:src/stm32f1xx_ll_utils.c ****   __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 392              		.loc 1 186 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397              	.LVL28:
 187:src/stm32f1xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 398              		.loc 1 187 0
 399 00f8 084B     		ldr	r3, .L39	@ tmp115,
 186:src/stm32f1xx_ll_utils.c ****   __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 400              		.loc 1 186 0
 401 00fa 82B0     		sub	sp, sp, #8	@,,
 402              	.LCFI1:
 403              		.cfi_def_cfa_offset 8
 187:src/stm32f1xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 404              		.loc 1 187 0
 405 00fc 1B68     		ldr	r3, [r3]	@ tmp.0_4, MEM[(struct SysTick_Type *)3758153744B].CTRL
ARM GAS  /tmp/ccgFoonV.s 			page 56


 192:src/stm32f1xx_ll_utils.c ****   {
 406              		.loc 1 192 0
 407 00fe 411C     		adds	r1, r0, #1	@, Delay,
 187:src/stm32f1xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 408              		.loc 1 187 0
 409 0100 0193     		str	r3, [sp, #4]	@ tmp.0_4, tmp
 189:src/stm32f1xx_ll_utils.c **** 
 410              		.loc 1 189 0
 411 0102 019B     		ldr	r3, [sp, #4]	@ vol.1_6, tmp
 199:src/stm32f1xx_ll_utils.c ****     {
 412              		.loc 1 199 0
 413 0104 054B     		ldr	r3, .L39	@ tmp118,
 194:src/stm32f1xx_ll_utils.c ****   }
 414              		.loc 1 194 0
 415 0106 18BF     		it	ne
 416 0108 0130     		addne	r0, r0, #1	@ Delay, Delay,
 417              	.LVL29:
 418              	.L32:
 197:src/stm32f1xx_ll_utils.c ****   {
 419              		.loc 1 197 0
 420 010a 08B9     		cbnz	r0, .L33	@ Delay,
 204:src/stm32f1xx_ll_utils.c **** 
 421              		.loc 1 204 0
 422 010c 02B0     		add	sp, sp, #8	@,,
 423              	.LCFI2:
 424              		.cfi_remember_state
 425              		.cfi_def_cfa_offset 0
 426              		@ sp needed	@
 427 010e 7047     		bx	lr	@
 428              	.L33:
 429              	.LCFI3:
 430              		.cfi_restore_state
 431              	.LVL30:
 199:src/stm32f1xx_ll_utils.c ****     {
 432              		.loc 1 199 0
 433 0110 1A68     		ldr	r2, [r3]	@ _10, MEM[(struct SysTick_Type *)3758153744B].CTRL
 434 0112 D203     		lsls	r2, r2, #15	@, _10,
 201:src/stm32f1xx_ll_utils.c ****     }
 435              		.loc 1 201 0
 436 0114 48BF     		it	mi
 437 0116 00F1FF30 		addmi	r0, r0, #-1	@ Delay, Delay,
 438              	.LVL31:
 439 011a F6E7     		b	.L32	@
 440              	.L40:
 441              		.align	2
 442              	.L39:
 443 011c 10E000E0 		.word	-536813552
 444              		.cfi_endproc
 445              	.LFE175:
 446              		.size	LL_mDelay, .-LL_mDelay
 447              		.align	1
 448              		.global	LL_SetSystemCoreClock
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 453              		.type	LL_SetSystemCoreClock, %function
ARM GAS  /tmp/ccgFoonV.s 			page 57


 454              	LL_SetSystemCoreClock:
 455              	.LFB176:
 244:src/stm32f1xx_ll_utils.c ****   /* HCLK clock frequency */
 456              		.loc 1 244 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL32:
 246:src/stm32f1xx_ll_utils.c **** }
 462              		.loc 1 246 0
 463 0120 014B     		ldr	r3, .L42	@ tmp111,
 464 0122 1860     		str	r0, [r3]	@ HCLKFrequency, SystemCoreClock
 465 0124 7047     		bx	lr	@
 466              	.L43:
 467 0126 00BF     		.align	2
 468              	.L42:
 469 0128 00000000 		.word	SystemCoreClock
 470              		.cfi_endproc
 471              	.LFE176:
 472              		.size	LL_SetSystemCoreClock, .-LL_SetSystemCoreClock
 473              		.align	1
 474              		.global	LL_PLL_ConfigSystemClock_HSI
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 479              		.type	LL_PLL_ConfigSystemClock_HSI, %function
 480              	LL_PLL_ConfigSystemClock_HSI:
 481              	.LFB177:
 268:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 482              		.loc 1 268 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL33:
 488              	.LBB86:
 489              	.LBB87:
 490              	.LBB88:
 491              	.LBB89:
 492              		.loc 3 1410 0
 493 012c 104B     		ldr	r3, .L54	@ tmp128,
 494              	.LBE89:
 495              	.LBE88:
 496              	.LBE87:
 497              	.LBE86:
 268:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 498              		.loc 1 268 0
 499 012e 30B4     		push	{r4, r5}	@
 500              	.LCFI4:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 4, -8
 503              		.cfi_offset 5, -4
 504              	.LBB93:
 505              	.LBB92:
 506              	.LBB91:
ARM GAS  /tmp/ccgFoonV.s 			page 58


 507              	.LBB90:
 508              		.loc 3 1410 0
 509 0130 1A68     		ldr	r2, [r3]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CR
 510              	.LBE90:
 511              	.LBE91:
 482:src/stm32f1xx_ll_utils.c ****   {
 512              		.loc 1 482 0
 513 0132 9501     		lsls	r5, r2, #6	@, _23,
 514 0134 19D4     		bmi	.L51	@,
 515              	.LVL34:
 516              	.LBE92:
 517              	.LBE93:
 280:src/stm32f1xx_ll_utils.c **** #endif /*RCC_PLLSRC_PREDIV1_SUPPORT*/
 518              		.loc 1 280 0
 519 0136 4FF40032 		mov	r2, #131072	@ tmp139,
 520              	.LBB94:
 521              	.LBB95:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 522              		.loc 1 464 0
 523 013a 0568     		ldr	r5, [r0]	@ _35, UTILS_PLLInitStruct_8(D)->PLLMul
 524              	.LBE95:
 525              	.LBE94:
 280:src/stm32f1xx_ll_utils.c **** #endif /*RCC_PLLSRC_PREDIV1_SUPPORT*/
 526              		.loc 1 280 0
 527 013c 4260     		str	r2, [r0, #4]	@ tmp139, UTILS_PLLInitStruct_8(D)->Prediv
 528              	.LVL35:
 529              	.LBB98:
 530              	.LBB99:
 862:./inc/stm32f1xx_ll_rcc.h **** }
 531              		.loc 3 862 0
 532 013e 1A68     		ldr	r2, [r3]	@ _27, MEM[(struct RCC_TypeDef *)1073876992B].CR
 533              	.LBE99:
 534              	.LBE98:
 535              	.LBB100:
 536              	.LBB96:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 537              		.loc 1 464 0
 538 0140 A80C     		lsrs	r0, r5, #18	@ tmp140, _35,
 539              	.LVL36:
 540 0142 841C     		adds	r4, r0, #2	@ tmp141, tmp140,
 541 0144 0B48     		ldr	r0, .L54+4	@ tmp142,
 542              	.LBE96:
 543              	.LBE100:
 286:src/stm32f1xx_ll_utils.c ****     {
 544              		.loc 1 286 0
 545 0146 9207     		lsls	r2, r2, #30	@, _27,
 546              	.LBB101:
 547              	.LBB97:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 548              		.loc 1 464 0
 549 0148 00FB04F0 		mul	r0, r0, r4	@ pllfreq, tmp142, tmp141
 550              	.LVL37:
 551              	.LBE97:
 552              	.LBE101:
 286:src/stm32f1xx_ll_utils.c ****     {
 553              		.loc 1 286 0
 554 014c 06D4     		bmi	.L49	@,
ARM GAS  /tmp/ccgFoonV.s 			page 59


 555              	.LBB102:
 556              	.LBB103:
 842:./inc/stm32f1xx_ll_rcc.h **** }
 557              		.loc 3 842 0
 558 014e 1C68     		ldr	r4, [r3]	@ _39, MEM[(struct RCC_TypeDef *)1073876992B].CR
 559 0150 44F00104 		orr	r4, r4, #1	@ _40, _39,
 560 0154 1C60     		str	r4, [r3]	@ _40, MEM[(struct RCC_TypeDef *)1073876992B].CR
 561              	.L47:
 562              	.LBE103:
 563              	.LBE102:
 564              	.LBB104:
 565              	.LBB105:
 862:./inc/stm32f1xx_ll_rcc.h **** }
 566              		.loc 3 862 0 discriminator 1
 567 0156 1A68     		ldr	r2, [r3]	@ _41, MEM[(struct RCC_TypeDef *)1073876992B].CR
 568              	.LBE105:
 569              	.LBE104:
 289:src/stm32f1xx_ll_utils.c ****       {
 570              		.loc 1 289 0 discriminator 1
 571 0158 9407     		lsls	r4, r2, #30	@, _41,
 572 015a FCD5     		bpl	.L47	@,
 573              	.L49:
 574              	.LVL38:
 575              	.LBB106:
 576              	.LBB107:
1411:./inc/stm32f1xx_ll_rcc.h **** }
1412:./inc/stm32f1xx_ll_rcc.h **** 
1413:./inc/stm32f1xx_ll_rcc.h **** /**
1414:./inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1415:./inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1416:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLXTPRE      LL_RCC_PLL_ConfigDomain_SYS\n
1417:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLMULL       LL_RCC_PLL_ConfigDomain_SYS\n
1418:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1       LL_RCC_PLL_ConfigDomain_SYS\n
1419:./inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1SRC    LL_RCC_PLL_ConfigDomain_SYS
1420:./inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1421:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI_DIV_2
1422:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_1
1423:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_2 (*)
1424:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_3 (*)
1425:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_4 (*)
1426:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_5 (*)
1427:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_6 (*)
1428:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_7 (*)
1429:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_8 (*)
1430:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_9 (*)
1431:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_10 (*)
1432:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_11 (*)
1433:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_12 (*)
1434:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_13 (*)
1435:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_14 (*)
1436:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_15 (*)
1437:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_16 (*)
1438:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_1 (*)
1439:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_2 (*)
1440:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_3 (*)
1441:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_4 (*)
1442:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_5 (*)
ARM GAS  /tmp/ccgFoonV.s 			page 60


1443:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_6 (*)
1444:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_7 (*)
1445:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_8 (*)
1446:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_9 (*)
1447:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_10 (*)
1448:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_11 (*)
1449:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_12 (*)
1450:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_13 (*)
1451:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_14 (*)
1452:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_15 (*)
1453:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_16 (*)
1454:./inc/stm32f1xx_ll_rcc.h ****   *
1455:./inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1456:./inc/stm32f1xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1457:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2 (*)
1458:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3 (*)
1459:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1460:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
1461:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1462:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
1463:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1464:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
1465:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5 (*)
1466:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10 (*)
1467:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11 (*)
1468:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12 (*)
1469:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13 (*)
1470:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14 (*)
1471:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15 (*)
1472:./inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16 (*)
1473:./inc/stm32f1xx_ll_rcc.h ****   *
1474:./inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1475:./inc/stm32f1xx_ll_rcc.h ****   * @retval None
1476:./inc/stm32f1xx_ll_rcc.h ****   */
1477:./inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul)
1478:./inc/stm32f1xx_ll_rcc.h **** {
1479:./inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL,
 577              		.loc 3 1479 0
 578 015c 5A68     		ldr	r2, [r3, #4]	@ _45, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 579 015e 22F47C12 		bic	r2, r2, #4128768	@ tmp135, _45,
 580 0162 2A43     		orrs	r2, r2, r5	@, _49, tmp135, _35
 581 0164 5A60     		str	r2, [r3, #4]	@ _49, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 582              	.LVL39:
 583              	.LBE107:
 584              	.LBE106:
 308:src/stm32f1xx_ll_utils.c **** 
 585              		.loc 1 308 0
 586 0166 30BC     		pop	{r4, r5}	@
 587              	.LCFI5:
 588              		.cfi_remember_state
 589              		.cfi_restore 5
 590              		.cfi_restore 4
 591              		.cfi_def_cfa_offset 0
 299:src/stm32f1xx_ll_utils.c ****   }
 592              		.loc 1 299 0
 593 0168 6AE7     		b	UTILS_EnablePLLAndSwitchSystem	@
 594              	.LVL40:
ARM GAS  /tmp/ccgFoonV.s 			page 61


 595              	.L51:
 596              	.LCFI6:
 597              		.cfi_restore_state
 308:src/stm32f1xx_ll_utils.c **** 
 598              		.loc 1 308 0
 599 016a 0120     		movs	r0, #1	@,
 600              	.LVL41:
 601 016c 30BC     		pop	{r4, r5}	@
 602              	.LCFI7:
 603              		.cfi_restore 5
 604              		.cfi_restore 4
 605              		.cfi_def_cfa_offset 0
 606 016e 7047     		bx	lr	@
 607              	.L55:
 608              		.align	2
 609              	.L54:
 610 0170 00100240 		.word	1073876992
 611 0174 00093D00 		.word	4000000
 612              		.cfi_endproc
 613              	.LFE177:
 614              		.size	LL_PLL_ConfigSystemClock_HSI, .-LL_PLL_ConfigSystemClock_HSI
 615              		.align	1
 616              		.global	LL_PLL_ConfigSystemClock_HSE
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu softvfp
 621              		.type	LL_PLL_ConfigSystemClock_HSE, %function
 622              	LL_PLL_ConfigSystemClock_HSE:
 623              	.LFB178:
 333:src/stm32f1xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 624              		.loc 1 333 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629              	.LVL42:
 630 0178 F0B4     		push	{r4, r5, r6, r7}	@
 631              	.LCFI8:
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 6, -8
 636              		.cfi_offset 7, -4
 637              	.LBB126:
 638              	.LBB127:
 639              	.LBB128:
 640              	.LBB129:
1410:./inc/stm32f1xx_ll_rcc.h **** }
 641              		.loc 3 1410 0
 642 017a 184C     		ldr	r4, .L69	@ tmp141,
 643 017c 2568     		ldr	r5, [r4]	@ _29, MEM[(struct RCC_TypeDef *)1073876992B].CR
 644              	.LBE129:
 645              	.LBE128:
 482:src/stm32f1xx_ll_utils.c ****   {
 646              		.loc 1 482 0
 647 017e AD01     		lsls	r5, r5, #6	@, _29,
ARM GAS  /tmp/ccgFoonV.s 			page 62


 648 0180 28D4     		bmi	.L65	@,
 649              	.LVL43:
 650              	.LBE127:
 651              	.LBE126:
 652              	.LBB130:
 653              	.LBB131:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 654              		.loc 1 464 0
 655 0182 5668     		ldr	r6, [r2, #4]	@ _37, UTILS_PLLInitStruct_10(D)->Prediv
 656 0184 1768     		ldr	r7, [r2]	@ _41, UTILS_PLLInitStruct_10(D)->PLLMul
 657 0186 750C     		lsrs	r5, r6, #17	@ tmp159, _37,
 658 0188 0135     		adds	r5, r5, #1	@ tmp160, tmp159,
 659 018a B0FBF5F0 		udiv	r0, r0, r5	@ tmp162, HSEFrequency, tmp160
 660              	.LVL44:
 661              	.LBE131:
 662              	.LBE130:
 663              	.LBB134:
 664              	.LBB135:
 796:./inc/stm32f1xx_ll_rcc.h **** }
 665              		.loc 3 796 0
 666 018e 2268     		ldr	r2, [r4]	@ _33, MEM[(struct RCC_TypeDef *)1073876992B].CR
 667              	.LVL45:
 668              	.LBE135:
 669              	.LBE134:
 670              	.LBB136:
 671              	.LBB132:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 672              		.loc 1 464 0
 673 0190 BD0C     		lsrs	r5, r7, #18	@ tmp163, _41,
 674 0192 0235     		adds	r5, r5, #2	@ tmp164, tmp163,
 675              	.LBE132:
 676              	.LBE136:
 350:src/stm32f1xx_ll_utils.c ****     {
 677              		.loc 1 350 0
 678 0194 9203     		lsls	r2, r2, #14	@, _33,
 679              	.LBB137:
 680              	.LBB133:
 464:src/stm32f1xx_ll_utils.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 681              		.loc 1 464 0
 682 0196 05FB00F0 		mul	r0, r5, r0	@ pllfreq, tmp164, tmp162
 683              	.LVL46:
 684              	.LBE133:
 685              	.LBE137:
 350:src/stm32f1xx_ll_utils.c ****     {
 686              		.loc 1 350 0
 687 019a 0ED4     		bmi	.L63	@,
 688              	.LBB138:
 689              	.LBB139:
 756:./inc/stm32f1xx_ll_rcc.h **** }
 690              		.loc 3 756 0
 691 019c 2268     		ldr	r2, [r4]	@ _45,
 692              	.LBE139:
 693              	.LBE138:
 353:src/stm32f1xx_ll_utils.c ****       {
 694              		.loc 1 353 0
 695 019e 0129     		cmp	r1, #1	@ HSEBypass,
 696              	.LBB141:
ARM GAS  /tmp/ccgFoonV.s 			page 63


 697              	.LBB140:
 756:./inc/stm32f1xx_ll_rcc.h **** }
 698              		.loc 3 756 0
 699 01a0 0CBF     		ite	eq
 700 01a2 42F48022 		orreq	r2, r2, #262144	@ _46, _45,
 701              	.LBE140:
 702              	.LBE141:
 703              	.LBB142:
 704              	.LBB143:
 766:./inc/stm32f1xx_ll_rcc.h **** }
 705              		.loc 3 766 0
 706 01a6 22F48022 		bicne	r2, r2, #262144	@ _48, _47,
 707 01aa 2260     		str	r2, [r4]	@ _48,
 708              	.LBE143:
 709              	.LBE142:
 710              	.LBB144:
 711              	.LBB145:
 776:./inc/stm32f1xx_ll_rcc.h **** }
 712              		.loc 3 776 0
 713 01ac 2268     		ldr	r2, [r4]	@ _49, MEM[(struct RCC_TypeDef *)1073876992B].CR
 714 01ae 42F48032 		orr	r2, r2, #65536	@ _50, _49,
 715 01b2 2260     		str	r2, [r4]	@ _50, MEM[(struct RCC_TypeDef *)1073876992B].CR
 716              	.LVL47:
 717              	.L61:
 718              	.LBE145:
 719              	.LBE144:
 720              	.LBB146:
 721              	.LBB147:
 796:./inc/stm32f1xx_ll_rcc.h **** }
 722              		.loc 3 796 0 discriminator 1
 723 01b4 2268     		ldr	r2, [r4]	@ _51, MEM[(struct RCC_TypeDef *)1073876992B].CR
 724              	.LBE147:
 725              	.LBE146:
 364:src/stm32f1xx_ll_utils.c ****       {
 726              		.loc 1 364 0 discriminator 1
 727 01b6 9103     		lsls	r1, r2, #14	@, _51,
 728 01b8 FCD5     		bpl	.L61	@,
 729              	.L63:
 730              	.LVL48:
 731              	.LBB148:
 732              	.LBB149:
 733              		.loc 3 1479 0
 734 01ba 6268     		ldr	r2, [r4, #4]	@ _55, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 735 01bc 06F44036 		and	r6, r6, #196608	@ tmp155, _37,
 736              	.LVL49:
 737 01c0 22F47C12 		bic	r2, r2, #4128768	@ tmp152, _55,
 738 01c4 42F48032 		orr	r2, r2, #65536	@ tmp153, tmp152,
 739 01c8 3A43     		orrs	r2, r2, r7	@, tmp154, tmp153, _41
 740 01ca 3243     		orrs	r2, r2, r6	@, _59, tmp154, tmp155
 741 01cc 6260     		str	r2, [r4, #4]	@ _59, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 742              	.LVL50:
 743              	.LBE149:
 744              	.LBE148:
 374:src/stm32f1xx_ll_utils.c ****   }
 745              		.loc 1 374 0
 746 01ce 1946     		mov	r1, r3	@, UTILS_ClkInitStruct
 383:src/stm32f1xx_ll_utils.c **** 
ARM GAS  /tmp/ccgFoonV.s 			page 64


 747              		.loc 1 383 0
 748 01d0 F0BC     		pop	{r4, r5, r6, r7}	@
 749              	.LCFI9:
 750              		.cfi_remember_state
 751              		.cfi_restore 7
 752              		.cfi_restore 6
 753              		.cfi_restore 5
 754              		.cfi_restore 4
 755              		.cfi_def_cfa_offset 0
 374:src/stm32f1xx_ll_utils.c ****   }
 756              		.loc 1 374 0
 757 01d2 35E7     		b	UTILS_EnablePLLAndSwitchSystem	@
 758              	.LVL51:
 759              	.L65:
 760              	.LCFI10:
 761              		.cfi_restore_state
 383:src/stm32f1xx_ll_utils.c **** 
 762              		.loc 1 383 0
 763 01d4 0120     		movs	r0, #1	@,
 764              	.LVL52:
 765 01d6 F0BC     		pop	{r4, r5, r6, r7}	@
 766              	.LCFI11:
 767              		.cfi_restore 7
 768              		.cfi_restore 6
 769              		.cfi_restore 5
 770              		.cfi_restore 4
 771              		.cfi_def_cfa_offset 0
 772 01d8 7047     		bx	lr	@
 773              	.L70:
 774 01da 00BF     		.align	2
 775              	.L69:
 776 01dc 00100240 		.word	1073876992
 777              		.cfi_endproc
 778              	.LFE178:
 779              		.size	LL_PLL_ConfigSystemClock_HSE, .-LL_PLL_ConfigSystemClock_HSE
 780              	.Letext0:
 781              		.file 5 "/usr/include/newlib/machine/_default_types.h"
 782              		.file 6 "/usr/include/newlib/sys/_stdint.h"
 783              		.file 7 "../cmsiscore/inc/core_cm3.h"
 784              		.file 8 "../cmsisstm32f1xx/inc/system_stm32f1xx.h"
 785              		.file 9 "../cmsisstm32f1xx/inc/stm32f103x6.h"
 786              		.file 10 "../cmsisstm32f1xx/inc/stm32f1xx.h"
 787              		.section	.debug_info,"",%progbits
 788              	.Ldebug_info0:
 789 0000 540A0000 		.4byte	0xa54
 790 0004 0200     		.2byte	0x2
 791 0006 00000000 		.4byte	.Ldebug_abbrev0
 792 000a 04       		.byte	0x4
 793 000b 01       		.uleb128 0x1
 794 000c 6F040000 		.4byte	.LASF89
 795 0010 0C       		.byte	0xc
 796 0011 EA000000 		.4byte	.LASF90
 797 0015 6F050000 		.4byte	.LASF91
 798 0019 00000000 		.4byte	.Ltext0
 799 001d E0010000 		.4byte	.Letext0
 800 0021 00000000 		.4byte	.Ldebug_line0
 801 0025 02       		.uleb128 0x2
ARM GAS  /tmp/ccgFoonV.s 			page 65


 802 0026 01       		.byte	0x1
 803 0027 06       		.byte	0x6
 804 0028 F1020000 		.4byte	.LASF0
 805 002c 03       		.uleb128 0x3
 806 002d 3C020000 		.4byte	.LASF4
 807 0031 05       		.byte	0x5
 808 0032 1D       		.byte	0x1d
 809 0033 37000000 		.4byte	0x37
 810 0037 02       		.uleb128 0x2
 811 0038 01       		.byte	0x1
 812 0039 08       		.byte	0x8
 813 003a 8C020000 		.4byte	.LASF1
 814 003e 02       		.uleb128 0x2
 815 003f 02       		.byte	0x2
 816 0040 05       		.byte	0x5
 817 0041 A2000000 		.4byte	.LASF2
 818 0045 02       		.uleb128 0x2
 819 0046 02       		.byte	0x2
 820 0047 07       		.byte	0x7
 821 0048 5D030000 		.4byte	.LASF3
 822 004c 03       		.uleb128 0x3
 823 004d DC040000 		.4byte	.LASF5
 824 0051 05       		.byte	0x5
 825 0052 3F       		.byte	0x3f
 826 0053 57000000 		.4byte	0x57
 827 0057 02       		.uleb128 0x2
 828 0058 04       		.byte	0x4
 829 0059 05       		.byte	0x5
 830 005a 00020000 		.4byte	.LASF6
 831 005e 03       		.uleb128 0x3
 832 005f DF000000 		.4byte	.LASF7
 833 0063 05       		.byte	0x5
 834 0064 41       		.byte	0x41
 835 0065 69000000 		.4byte	0x69
 836 0069 02       		.uleb128 0x2
 837 006a 04       		.byte	0x4
 838 006b 07       		.byte	0x7
 839 006c 33040000 		.4byte	.LASF8
 840 0070 02       		.uleb128 0x2
 841 0071 08       		.byte	0x8
 842 0072 05       		.byte	0x5
 843 0073 D1000000 		.4byte	.LASF9
 844 0077 02       		.uleb128 0x2
 845 0078 08       		.byte	0x8
 846 0079 07       		.byte	0x7
 847 007a FD020000 		.4byte	.LASF10
 848 007e 04       		.uleb128 0x4
 849 007f 04       		.byte	0x4
 850 0080 05       		.byte	0x5
 851 0081 696E7400 		.ascii	"int\000"
 852 0085 02       		.uleb128 0x2
 853 0086 04       		.byte	0x4
 854 0087 07       		.byte	0x7
 855 0088 30030000 		.4byte	.LASF11
 856 008c 03       		.uleb128 0x3
 857 008d 39010000 		.4byte	.LASF12
 858 0091 06       		.byte	0x6
ARM GAS  /tmp/ccgFoonV.s 			page 66


 859 0092 18       		.byte	0x18
 860 0093 2C000000 		.4byte	0x2c
 861 0097 05       		.uleb128 0x5
 862 0098 8C000000 		.4byte	0x8c
 863 009c 03       		.uleb128 0x3
 864 009d 9F030000 		.4byte	.LASF13
 865 00a1 06       		.byte	0x6
 866 00a2 2C       		.byte	0x2c
 867 00a3 4C000000 		.4byte	0x4c
 868 00a7 06       		.uleb128 0x6
 869 00a8 9C000000 		.4byte	0x9c
 870 00ac 03       		.uleb128 0x3
 871 00ad 14030000 		.4byte	.LASF14
 872 00b1 06       		.byte	0x6
 873 00b2 30       		.byte	0x30
 874 00b3 5E000000 		.4byte	0x5e
 875 00b7 06       		.uleb128 0x6
 876 00b8 AC000000 		.4byte	0xac
 877 00bc 05       		.uleb128 0x5
 878 00bd B7000000 		.4byte	0xb7
 879 00c1 02       		.uleb128 0x2
 880 00c2 04       		.byte	0x4
 881 00c3 07       		.byte	0x7
 882 00c4 AC000000 		.4byte	.LASF15
 883 00c8 07       		.uleb128 0x7
 884 00c9 10       		.byte	0x10
 885 00ca 07       		.byte	0x7
 886 00cb B602     		.2byte	0x2b6
 887 00cd 0E010000 		.4byte	0x10e
 888 00d1 08       		.uleb128 0x8
 889 00d2 2A010000 		.4byte	.LASF16
 890 00d6 07       		.byte	0x7
 891 00d7 B802     		.2byte	0x2b8
 892 00d9 B7000000 		.4byte	0xb7
 893 00dd 02       		.byte	0x2
 894 00de 23       		.byte	0x23
 895 00df 00       		.uleb128 0
 896 00e0 08       		.uleb128 0x8
 897 00e1 FE040000 		.4byte	.LASF17
 898 00e5 07       		.byte	0x7
 899 00e6 B902     		.2byte	0x2b9
 900 00e8 B7000000 		.4byte	0xb7
 901 00ec 02       		.byte	0x2
 902 00ed 23       		.byte	0x23
 903 00ee 04       		.uleb128 0x4
 904 00ef 09       		.uleb128 0x9
 905 00f0 56414C00 		.ascii	"VAL\000"
 906 00f4 07       		.byte	0x7
 907 00f5 BA02     		.2byte	0x2ba
 908 00f7 B7000000 		.4byte	0xb7
 909 00fb 02       		.byte	0x2
 910 00fc 23       		.byte	0x23
 911 00fd 08       		.uleb128 0x8
 912 00fe 08       		.uleb128 0x8
 913 00ff E6010000 		.4byte	.LASF18
 914 0103 07       		.byte	0x7
 915 0104 BB02     		.2byte	0x2bb
ARM GAS  /tmp/ccgFoonV.s 			page 67


 916 0106 BC000000 		.4byte	0xbc
 917 010a 02       		.byte	0x2
 918 010b 23       		.byte	0x23
 919 010c 0C       		.uleb128 0xc
 920 010d 00       		.byte	0
 921 010e 0A       		.uleb128 0xa
 922 010f 50030000 		.4byte	.LASF19
 923 0113 07       		.byte	0x7
 924 0114 BC02     		.2byte	0x2bc
 925 0116 C8000000 		.4byte	0xc8
 926 011a 0B       		.uleb128 0xb
 927 011b 52050000 		.4byte	.LASF20
 928 011f 07       		.byte	0x7
 929 0120 4807     		.2byte	0x748
 930 0122 A7000000 		.4byte	0xa7
 931 0126 01       		.byte	0x1
 932 0127 01       		.byte	0x1
 933 0128 0C       		.uleb128 0xc
 934 0129 E3030000 		.4byte	.LASF21
 935 012d 08       		.byte	0x8
 936 012e 33       		.byte	0x33
 937 012f AC000000 		.4byte	0xac
 938 0133 01       		.byte	0x1
 939 0134 01       		.byte	0x1
 940 0135 0D       		.uleb128 0xd
 941 0136 97000000 		.4byte	0x97
 942 013a 45010000 		.4byte	0x145
 943 013e 0E       		.uleb128 0xe
 944 013f C1000000 		.4byte	0xc1
 945 0143 0F       		.byte	0xf
 946 0144 00       		.byte	0
 947 0145 05       		.uleb128 0x5
 948 0146 35010000 		.4byte	0x135
 949 014a 0C       		.uleb128 0xc
 950 014b 0C040000 		.4byte	.LASF22
 951 014f 08       		.byte	0x8
 952 0150 34       		.byte	0x34
 953 0151 45010000 		.4byte	0x145
 954 0155 01       		.byte	0x1
 955 0156 01       		.byte	0x1
 956 0157 0D       		.uleb128 0xd
 957 0158 97000000 		.4byte	0x97
 958 015c 67010000 		.4byte	0x167
 959 0160 0E       		.uleb128 0xe
 960 0161 C1000000 		.4byte	0xc1
 961 0165 07       		.byte	0x7
 962 0166 00       		.byte	0
 963 0167 05       		.uleb128 0x5
 964 0168 57010000 		.4byte	0x157
 965 016c 0C       		.uleb128 0xc
 966 016d B6020000 		.4byte	.LASF23
 967 0171 08       		.byte	0x8
 968 0172 35       		.byte	0x35
 969 0173 67010000 		.4byte	0x167
 970 0177 01       		.byte	0x1
 971 0178 01       		.byte	0x1
 972 0179 07       		.uleb128 0x7
ARM GAS  /tmp/ccgFoonV.s 			page 68


 973 017a 24       		.byte	0x24
 974 017b 09       		.byte	0x9
 975 017c 4001     		.2byte	0x140
 976 017e 07020000 		.4byte	0x207
 977 0182 09       		.uleb128 0x9
 978 0183 41435200 		.ascii	"ACR\000"
 979 0187 09       		.byte	0x9
 980 0188 4201     		.2byte	0x142
 981 018a B7000000 		.4byte	0xb7
 982 018e 02       		.byte	0x2
 983 018f 23       		.byte	0x23
 984 0190 00       		.uleb128 0
 985 0191 08       		.uleb128 0x8
 986 0192 2F010000 		.4byte	.LASF24
 987 0196 09       		.byte	0x9
 988 0197 4301     		.2byte	0x143
 989 0199 B7000000 		.4byte	0xb7
 990 019d 02       		.byte	0x2
 991 019e 23       		.byte	0x23
 992 019f 04       		.uleb128 0x4
 993 01a0 08       		.uleb128 0x8
 994 01a1 D6010000 		.4byte	.LASF25
 995 01a5 09       		.byte	0x9
 996 01a6 4401     		.2byte	0x144
 997 01a8 B7000000 		.4byte	0xb7
 998 01ac 02       		.byte	0x2
 999 01ad 23       		.byte	0x23
 1000 01ae 08       		.uleb128 0x8
 1001 01af 09       		.uleb128 0x9
 1002 01b0 535200   		.ascii	"SR\000"
 1003 01b3 09       		.byte	0x9
 1004 01b4 4501     		.2byte	0x145
 1005 01b6 B7000000 		.4byte	0xb7
 1006 01ba 02       		.byte	0x2
 1007 01bb 23       		.byte	0x23
 1008 01bc 0C       		.uleb128 0xc
 1009 01bd 09       		.uleb128 0x9
 1010 01be 435200   		.ascii	"CR\000"
 1011 01c1 09       		.byte	0x9
 1012 01c2 4601     		.2byte	0x146
 1013 01c4 B7000000 		.4byte	0xb7
 1014 01c8 02       		.byte	0x2
 1015 01c9 23       		.byte	0x23
 1016 01ca 10       		.uleb128 0x10
 1017 01cb 09       		.uleb128 0x9
 1018 01cc 415200   		.ascii	"AR\000"
 1019 01cf 09       		.byte	0x9
 1020 01d0 4701     		.2byte	0x147
 1021 01d2 B7000000 		.4byte	0xb7
 1022 01d6 02       		.byte	0x2
 1023 01d7 23       		.byte	0x23
 1024 01d8 14       		.uleb128 0x14
 1025 01d9 08       		.uleb128 0x8
 1026 01da 27050000 		.4byte	.LASF26
 1027 01de 09       		.byte	0x9
 1028 01df 4801     		.2byte	0x148
 1029 01e1 B7000000 		.4byte	0xb7
ARM GAS  /tmp/ccgFoonV.s 			page 69


 1030 01e5 02       		.byte	0x2
 1031 01e6 23       		.byte	0x23
 1032 01e7 18       		.uleb128 0x18
 1033 01e8 09       		.uleb128 0x9
 1034 01e9 4F425200 		.ascii	"OBR\000"
 1035 01ed 09       		.byte	0x9
 1036 01ee 4901     		.2byte	0x149
 1037 01f0 B7000000 		.4byte	0xb7
 1038 01f4 02       		.byte	0x2
 1039 01f5 23       		.byte	0x23
 1040 01f6 1C       		.uleb128 0x1c
 1041 01f7 08       		.uleb128 0x8
 1042 01f8 46020000 		.4byte	.LASF27
 1043 01fc 09       		.byte	0x9
 1044 01fd 4A01     		.2byte	0x14a
 1045 01ff B7000000 		.4byte	0xb7
 1046 0203 02       		.byte	0x2
 1047 0204 23       		.byte	0x23
 1048 0205 20       		.uleb128 0x20
 1049 0206 00       		.byte	0
 1050 0207 0A       		.uleb128 0xa
 1051 0208 44050000 		.4byte	.LASF28
 1052 020c 09       		.byte	0x9
 1053 020d 4B01     		.2byte	0x14b
 1054 020f 79010000 		.4byte	0x179
 1055 0213 07       		.uleb128 0x7
 1056 0214 28       		.byte	0x28
 1057 0215 09       		.byte	0x9
 1058 0216 A301     		.2byte	0x1a3
 1059 0218 B2020000 		.4byte	0x2b2
 1060 021c 09       		.uleb128 0x9
 1061 021d 435200   		.ascii	"CR\000"
 1062 0220 09       		.byte	0x9
 1063 0221 A501     		.2byte	0x1a5
 1064 0223 B7000000 		.4byte	0xb7
 1065 0227 02       		.byte	0x2
 1066 0228 23       		.byte	0x23
 1067 0229 00       		.uleb128 0
 1068 022a 08       		.uleb128 0x8
 1069 022b 34010000 		.4byte	.LASF29
 1070 022f 09       		.byte	0x9
 1071 0230 A601     		.2byte	0x1a6
 1072 0232 B7000000 		.4byte	0xb7
 1073 0236 02       		.byte	0x2
 1074 0237 23       		.byte	0x23
 1075 0238 04       		.uleb128 0x4
 1076 0239 09       		.uleb128 0x9
 1077 023a 43495200 		.ascii	"CIR\000"
 1078 023e 09       		.byte	0x9
 1079 023f A701     		.2byte	0x1a7
 1080 0241 B7000000 		.4byte	0xb7
 1081 0245 02       		.byte	0x2
 1082 0246 23       		.byte	0x23
 1083 0247 08       		.uleb128 0x8
 1084 0248 08       		.uleb128 0x8
 1085 0249 33020000 		.4byte	.LASF30
 1086 024d 09       		.byte	0x9
ARM GAS  /tmp/ccgFoonV.s 			page 70


 1087 024e A801     		.2byte	0x1a8
 1088 0250 B7000000 		.4byte	0xb7
 1089 0254 02       		.byte	0x2
 1090 0255 23       		.byte	0x23
 1091 0256 0C       		.uleb128 0xc
 1092 0257 08       		.uleb128 0x8
 1093 0258 54000000 		.4byte	.LASF31
 1094 025c 09       		.byte	0x9
 1095 025d A901     		.2byte	0x1a9
 1096 025f B7000000 		.4byte	0xb7
 1097 0263 02       		.byte	0x2
 1098 0264 23       		.byte	0x23
 1099 0265 10       		.uleb128 0x10
 1100 0266 08       		.uleb128 0x8
 1101 0267 51020000 		.4byte	.LASF32
 1102 026b 09       		.byte	0x9
 1103 026c AA01     		.2byte	0x1aa
 1104 026e B7000000 		.4byte	0xb7
 1105 0272 02       		.byte	0x2
 1106 0273 23       		.byte	0x23
 1107 0274 14       		.uleb128 0x14
 1108 0275 08       		.uleb128 0x8
 1109 0276 BB010000 		.4byte	.LASF33
 1110 027a 09       		.byte	0x9
 1111 027b AB01     		.2byte	0x1ab
 1112 027d B7000000 		.4byte	0xb7
 1113 0281 02       		.byte	0x2
 1114 0282 23       		.byte	0x23
 1115 0283 18       		.uleb128 0x18
 1116 0284 08       		.uleb128 0x8
 1117 0285 59010000 		.4byte	.LASF34
 1118 0289 09       		.byte	0x9
 1119 028a AC01     		.2byte	0x1ac
 1120 028c B7000000 		.4byte	0xb7
 1121 0290 02       		.byte	0x2
 1122 0291 23       		.byte	0x23
 1123 0292 1C       		.uleb128 0x1c
 1124 0293 08       		.uleb128 0x8
 1125 0294 B5000000 		.4byte	.LASF35
 1126 0298 09       		.byte	0x9
 1127 0299 AD01     		.2byte	0x1ad
 1128 029b B7000000 		.4byte	0xb7
 1129 029f 02       		.byte	0x2
 1130 02a0 23       		.byte	0x23
 1131 02a1 20       		.uleb128 0x20
 1132 02a2 09       		.uleb128 0x9
 1133 02a3 43535200 		.ascii	"CSR\000"
 1134 02a7 09       		.byte	0x9
 1135 02a8 AE01     		.2byte	0x1ae
 1136 02aa B7000000 		.4byte	0xb7
 1137 02ae 02       		.byte	0x2
 1138 02af 23       		.byte	0x23
 1139 02b0 24       		.uleb128 0x24
 1140 02b1 00       		.byte	0
 1141 02b2 0A       		.uleb128 0xa
 1142 02b3 15020000 		.4byte	.LASF36
 1143 02b7 09       		.byte	0x9
ARM GAS  /tmp/ccgFoonV.s 			page 71


 1144 02b8 B101     		.2byte	0x1b1
 1145 02ba 13020000 		.4byte	0x213
 1146 02be 0F       		.uleb128 0xf
 1147 02bf 01       		.byte	0x1
 1148 02c0 37000000 		.4byte	0x37
 1149 02c4 0A       		.byte	0xa
 1150 02c5 A5       		.byte	0xa5
 1151 02c6 D7020000 		.4byte	0x2d7
 1152 02ca 10       		.uleb128 0x10
 1153 02cb DE010000 		.4byte	.LASF37
 1154 02cf 00       		.byte	0
 1155 02d0 10       		.uleb128 0x10
 1156 02d1 4B020000 		.4byte	.LASF38
 1157 02d5 01       		.byte	0x1
 1158 02d6 00       		.byte	0
 1159 02d7 03       		.uleb128 0x3
 1160 02d8 09020000 		.4byte	.LASF39
 1161 02dc 0A       		.byte	0xa
 1162 02dd A8       		.byte	0xa8
 1163 02de BE020000 		.4byte	0x2be
 1164 02e2 11       		.uleb128 0x11
 1165 02e3 08       		.byte	0x8
 1166 02e4 04       		.byte	0x4
 1167 02e5 5A       		.byte	0x5a
 1168 02e6 07030000 		.4byte	0x307
 1169 02ea 12       		.uleb128 0x12
 1170 02eb 9B050000 		.4byte	.LASF40
 1171 02ef 04       		.byte	0x4
 1172 02f0 5C       		.byte	0x5c
 1173 02f1 AC000000 		.4byte	0xac
 1174 02f5 02       		.byte	0x2
 1175 02f6 23       		.byte	0x23
 1176 02f7 00       		.uleb128 0
 1177 02f8 12       		.uleb128 0x12
 1178 02f9 03050000 		.4byte	.LASF41
 1179 02fd 04       		.byte	0x4
 1180 02fe 62       		.byte	0x62
 1181 02ff AC000000 		.4byte	0xac
 1182 0303 02       		.byte	0x2
 1183 0304 23       		.byte	0x23
 1184 0305 04       		.uleb128 0x4
 1185 0306 00       		.byte	0
 1186 0307 03       		.uleb128 0x3
 1187 0308 C4040000 		.4byte	.LASF42
 1188 030c 04       		.byte	0x4
 1189 030d 67       		.byte	0x67
 1190 030e E2020000 		.4byte	0x2e2
 1191 0312 11       		.uleb128 0x11
 1192 0313 0C       		.byte	0xc
 1193 0314 04       		.byte	0x4
 1194 0315 6C       		.byte	0x6c
 1195 0316 45030000 		.4byte	0x345
 1196 031a 12       		.uleb128 0x12
 1197 031b E3020000 		.4byte	.LASF43
 1198 031f 04       		.byte	0x4
 1199 0320 6E       		.byte	0x6e
 1200 0321 AC000000 		.4byte	0xac
ARM GAS  /tmp/ccgFoonV.s 			page 72


 1201 0325 02       		.byte	0x2
 1202 0326 23       		.byte	0x23
 1203 0327 00       		.uleb128 0
 1204 0328 12       		.uleb128 0x12
 1205 0329 45000000 		.4byte	.LASF44
 1206 032d 04       		.byte	0x4
 1207 032e 74       		.byte	0x74
 1208 032f AC000000 		.4byte	0xac
 1209 0333 02       		.byte	0x2
 1210 0334 23       		.byte	0x23
 1211 0335 04       		.uleb128 0x4
 1212 0336 12       		.uleb128 0x12
 1213 0337 58020000 		.4byte	.LASF45
 1214 033b 04       		.byte	0x4
 1215 033c 7A       		.byte	0x7a
 1216 033d AC000000 		.4byte	0xac
 1217 0341 02       		.byte	0x2
 1218 0342 23       		.byte	0x23
 1219 0343 08       		.uleb128 0x8
 1220 0344 00       		.byte	0
 1221 0345 03       		.uleb128 0x3
 1222 0346 7F030000 		.4byte	.LASF46
 1223 034a 04       		.byte	0x4
 1224 034b 80       		.byte	0x80
 1225 034c 12030000 		.4byte	0x312
 1226 0350 13       		.uleb128 0x13
 1227 0351 C4020000 		.4byte	.LASF92
 1228 0355 01       		.byte	0x1
 1229 0356 0502     		.2byte	0x205
 1230 0358 01       		.byte	0x1
 1231 0359 D7020000 		.4byte	0x2d7
 1232 035d 40000000 		.4byte	.LFB182
 1233 0361 DC000000 		.4byte	.LFE182
 1234 0365 00000000 		.4byte	.LLST4
 1235 0369 01       		.byte	0x1
 1236 036a 9C040000 		.4byte	0x49c
 1237 036e 14       		.uleb128 0x14
 1238 036f BB030000 		.4byte	.LASF47
 1239 0373 01       		.byte	0x1
 1240 0374 0502     		.2byte	0x205
 1241 0376 AC000000 		.4byte	0xac
 1242 037a 20000000 		.4byte	.LLST5
 1243 037e 15       		.uleb128 0x15
 1244 037f 30050000 		.4byte	.LASF48
 1245 0383 01       		.byte	0x1
 1246 0384 0502     		.2byte	0x205
 1247 0386 9C040000 		.4byte	0x49c
 1248 038a 01       		.byte	0x1
 1249 038b 51       		.byte	0x51
 1250 038c 16       		.uleb128 0x16
 1251 038d 70030000 		.4byte	.LASF49
 1252 0391 01       		.byte	0x1
 1253 0392 0702     		.2byte	0x207
 1254 0394 D7020000 		.4byte	0x2d7
 1255 0398 70000000 		.4byte	.LLST6
 1256 039c 16       		.uleb128 0x16
 1257 039d F3030000 		.4byte	.LASF50
ARM GAS  /tmp/ccgFoonV.s 			page 73


 1258 03a1 01       		.byte	0x1
 1259 03a2 0902     		.2byte	0x209
 1260 03a4 AC000000 		.4byte	0xac
 1261 03a8 A6000000 		.4byte	.LLST7
 1262 03ac 17       		.uleb128 0x17
 1263 03ad F7080000 		.4byte	0x8f7
 1264 03b1 44000000 		.4byte	.LBB44
 1265 03b5 18000000 		.4byte	.Ldebug_ranges0+0x18
 1266 03b9 01       		.byte	0x1
 1267 03ba 1202     		.2byte	0x212
 1268 03bc 18       		.uleb128 0x18
 1269 03bd ED080000 		.4byte	0x8ed
 1270 03c1 60000000 		.4byte	.LBB48
 1271 03c5 68000000 		.4byte	.LBE48
 1272 03c9 01       		.byte	0x1
 1273 03ca 2D02     		.2byte	0x22d
 1274 03cc 18       		.uleb128 0x18
 1275 03cd DF080000 		.4byte	0x8df
 1276 03d1 68000000 		.4byte	.LBB50
 1277 03d5 6A000000 		.4byte	.LBE50
 1278 03d9 01       		.byte	0x1
 1279 03da 2E02     		.2byte	0x22e
 1280 03dc 19       		.uleb128 0x19
 1281 03dd 3B090000 		.4byte	0x93b
 1282 03e1 6E000000 		.4byte	.LBB52
 1283 03e5 7A000000 		.4byte	.LBE52
 1284 03e9 01       		.byte	0x1
 1285 03ea 3402     		.2byte	0x234
 1286 03ec FA030000 		.4byte	0x3fa
 1287 03f0 1A       		.uleb128 0x1a
 1288 03f1 49090000 		.4byte	0x949
 1289 03f5 C5000000 		.4byte	.LLST8
 1290 03f9 00       		.byte	0
 1291 03fa 19       		.uleb128 0x19
 1292 03fb 64090000 		.4byte	0x964
 1293 03ff 7A000000 		.4byte	.LBB54
 1294 0403 86000000 		.4byte	.LBE54
 1295 0407 01       		.byte	0x1
 1296 0408 3502     		.2byte	0x235
 1297 040a 18040000 		.4byte	0x418
 1298 040e 1A       		.uleb128 0x1a
 1299 040f 72090000 		.4byte	0x972
 1300 0413 D9000000 		.4byte	.LLST9
 1301 0417 00       		.byte	0
 1302 0418 18       		.uleb128 0x18
 1303 0419 56090000 		.4byte	0x956
 1304 041d 86000000 		.4byte	.LBB56
 1305 0421 8C000000 		.4byte	.LBE56
 1306 0425 01       		.byte	0x1
 1307 0426 3602     		.2byte	0x236
 1308 0428 19       		.uleb128 0x19
 1309 0429 20090000 		.4byte	0x920
 1310 042d 90000000 		.4byte	.LBB58
 1311 0431 9C000000 		.4byte	.LBE58
 1312 0435 01       		.byte	0x1
 1313 0436 3C02     		.2byte	0x23c
 1314 0438 46040000 		.4byte	0x446
ARM GAS  /tmp/ccgFoonV.s 			page 74


 1315 043c 1A       		.uleb128 0x1a
 1316 043d 2E090000 		.4byte	0x92e
 1317 0441 ED000000 		.4byte	.LLST10
 1318 0445 00       		.byte	0
 1319 0446 1B       		.uleb128 0x1b
 1320 0447 05090000 		.4byte	0x905
 1321 044b 9C000000 		.4byte	.LBB60
 1322 044f 30000000 		.4byte	.Ldebug_ranges0+0x30
 1323 0453 01       		.byte	0x1
 1324 0454 3D02     		.2byte	0x23d
 1325 0456 64040000 		.4byte	0x464
 1326 045a 1A       		.uleb128 0x1a
 1327 045b 13090000 		.4byte	0x913
 1328 045f 01010000 		.4byte	.LLST11
 1329 0463 00       		.byte	0
 1330 0464 1B       		.uleb128 0x1b
 1331 0465 CE070000 		.4byte	0x7ce
 1332 0469 B6000000 		.4byte	.LBB64
 1333 046d 48000000 		.4byte	.Ldebug_ranges0+0x48
 1334 0471 01       		.byte	0x1
 1335 0472 4C02     		.2byte	0x24c
 1336 0474 7E040000 		.4byte	0x47e
 1337 0478 1C       		.uleb128 0x1c
 1338 0479 DC070000 		.4byte	0x7dc
 1339 047d 00       		.byte	0
 1340 047e 1D       		.uleb128 0x1d
 1341 047f B2000000 		.4byte	.LVL18
 1342 0483 FE040000 		.4byte	0x4fe
 1343 0487 92040000 		.4byte	0x492
 1344 048b 1E       		.uleb128 0x1e
 1345 048c 01       		.byte	0x1
 1346 048d 50       		.byte	0x50
 1347 048e 02       		.byte	0x2
 1348 048f 75       		.byte	0x75
 1349 0490 00       		.sleb128 0
 1350 0491 00       		.byte	0
 1351 0492 1F       		.uleb128 0x1f
 1352 0493 C8000000 		.4byte	.LVL22
 1353 0497 FE040000 		.4byte	0x4fe
 1354 049b 00       		.byte	0
 1355 049c 20       		.uleb128 0x20
 1356 049d 04       		.byte	0x4
 1357 049e 45030000 		.4byte	0x345
 1358 04a2 21       		.uleb128 0x21
 1359 04a3 00000000 		.4byte	.LASF51
 1360 04a7 01       		.byte	0x1
 1361 04a8 DD01     		.2byte	0x1dd
 1362 04aa 01       		.byte	0x1
 1363 04ab D7020000 		.4byte	0x2d7
 1364 04af 01       		.byte	0x1
 1365 04b0 C1040000 		.4byte	0x4c1
 1366 04b4 22       		.uleb128 0x22
 1367 04b5 70030000 		.4byte	.LASF49
 1368 04b9 01       		.byte	0x1
 1369 04ba DF01     		.2byte	0x1df
 1370 04bc D7020000 		.4byte	0x2d7
 1371 04c0 00       		.byte	0
ARM GAS  /tmp/ccgFoonV.s 			page 75


 1372 04c1 21       		.uleb128 0x21
 1373 04c2 9F010000 		.4byte	.LASF52
 1374 04c6 01       		.byte	0x1
 1375 04c7 C501     		.2byte	0x1c5
 1376 04c9 01       		.byte	0x1
 1377 04ca AC000000 		.4byte	0xac
 1378 04ce 01       		.byte	0x1
 1379 04cf F8040000 		.4byte	0x4f8
 1380 04d3 23       		.uleb128 0x23
 1381 04d4 C3010000 		.4byte	.LASF53
 1382 04d8 01       		.byte	0x1
 1383 04d9 C501     		.2byte	0x1c5
 1384 04db AC000000 		.4byte	0xac
 1385 04df 23       		.uleb128 0x23
 1386 04e0 8B010000 		.4byte	.LASF54
 1387 04e4 01       		.byte	0x1
 1388 04e5 C501     		.2byte	0x1c5
 1389 04e7 F8040000 		.4byte	0x4f8
 1390 04eb 22       		.uleb128 0x22
 1391 04ec 97030000 		.4byte	.LASF55
 1392 04f0 01       		.byte	0x1
 1393 04f1 C701     		.2byte	0x1c7
 1394 04f3 AC000000 		.4byte	0xac
 1395 04f7 00       		.byte	0
 1396 04f8 20       		.uleb128 0x20
 1397 04f9 04       		.byte	0x4
 1398 04fa 07030000 		.4byte	0x307
 1399 04fe 21       		.uleb128 0x21
 1400 04ff A2050000 		.4byte	.LASF56
 1401 0503 01       		.byte	0x1
 1402 0504 9501     		.2byte	0x195
 1403 0506 01       		.byte	0x1
 1404 0507 D7020000 		.4byte	0x2d7
 1405 050b 01       		.byte	0x1
 1406 050c 35050000 		.4byte	0x535
 1407 0510 23       		.uleb128 0x23
 1408 0511 65050000 		.4byte	.LASF57
 1409 0515 01       		.byte	0x1
 1410 0516 9501     		.2byte	0x195
 1411 0518 AC000000 		.4byte	0xac
 1412 051c 22       		.uleb128 0x22
 1413 051d 70030000 		.4byte	.LASF49
 1414 0521 01       		.byte	0x1
 1415 0522 9701     		.2byte	0x197
 1416 0524 D7020000 		.4byte	0x2d7
 1417 0528 22       		.uleb128 0x22
 1418 0529 77030000 		.4byte	.LASF58
 1419 052d 01       		.byte	0x1
 1420 052e 9901     		.2byte	0x199
 1421 0530 AC000000 		.4byte	0xac
 1422 0534 00       		.byte	0
 1423 0535 24       		.uleb128 0x24
 1424 0536 01       		.byte	0x1
 1425 0537 0D010000 		.4byte	.LASF61
 1426 053b 01       		.byte	0x1
 1427 053c 4B01     		.2byte	0x14b
 1428 053e 01       		.byte	0x1
ARM GAS  /tmp/ccgFoonV.s 			page 76


 1429 053f D7020000 		.4byte	0x2d7
 1430 0543 78010000 		.4byte	.LFB178
 1431 0547 E0010000 		.4byte	.LFE178
 1432 054b 20010000 		.4byte	.LLST26
 1433 054f 01       		.byte	0x1
 1434 0550 A8060000 		.4byte	0x6a8
 1435 0554 14       		.uleb128 0x14
 1436 0555 82000000 		.4byte	.LASF59
 1437 0559 01       		.byte	0x1
 1438 055a 4B01     		.2byte	0x14b
 1439 055c AC000000 		.4byte	0xac
 1440 0560 64010000 		.4byte	.LLST27
 1441 0564 14       		.uleb128 0x14
 1442 0565 81010000 		.4byte	.LASF60
 1443 0569 01       		.byte	0x1
 1444 056a 4B01     		.2byte	0x14b
 1445 056c AC000000 		.4byte	0xac
 1446 0570 9E010000 		.4byte	.LLST28
 1447 0574 14       		.uleb128 0x14
 1448 0575 8B010000 		.4byte	.LASF54
 1449 0579 01       		.byte	0x1
 1450 057a 4C01     		.2byte	0x14c
 1451 057c F8040000 		.4byte	0x4f8
 1452 0580 CA010000 		.4byte	.LLST29
 1453 0584 14       		.uleb128 0x14
 1454 0585 30050000 		.4byte	.LASF48
 1455 0589 01       		.byte	0x1
 1456 058a 4C01     		.2byte	0x14c
 1457 058c 9C040000 		.4byte	0x49c
 1458 0590 F6010000 		.4byte	.LLST30
 1459 0594 25       		.uleb128 0x25
 1460 0595 70030000 		.4byte	.LASF49
 1461 0599 01       		.byte	0x1
 1462 059a 4E01     		.2byte	0x14e
 1463 059c D7020000 		.4byte	0x2d7
 1464 05a0 00       		.byte	0
 1465 05a1 16       		.uleb128 0x16
 1466 05a2 97030000 		.4byte	.LASF55
 1467 05a6 01       		.byte	0x1
 1468 05a7 4F01     		.2byte	0x14f
 1469 05a9 AC000000 		.4byte	0xac
 1470 05ad 1F020000 		.4byte	.LLST31
 1471 05b1 19       		.uleb128 0x19
 1472 05b2 A2040000 		.4byte	0x4a2
 1473 05b6 7A010000 		.4byte	.LBB126
 1474 05ba 82010000 		.4byte	.LBE126
 1475 05be 01       		.byte	0x1
 1476 05bf 5601     		.2byte	0x156
 1477 05c1 E9050000 		.4byte	0x5e9
 1478 05c5 26       		.uleb128 0x26
 1479 05c6 7A010000 		.4byte	.LBB127
 1480 05ca 82010000 		.4byte	.LBE127
 1481 05ce 27       		.uleb128 0x27
 1482 05cf B4040000 		.4byte	0x4b4
 1483 05d3 3F020000 		.4byte	.LLST32
 1484 05d7 18       		.uleb128 0x18
 1485 05d8 DF080000 		.4byte	0x8df
ARM GAS  /tmp/ccgFoonV.s 			page 77


 1486 05dc 7A010000 		.4byte	.LBB128
 1487 05e0 7E010000 		.4byte	.LBE128
 1488 05e4 01       		.byte	0x1
 1489 05e5 E201     		.2byte	0x1e2
 1490 05e7 00       		.byte	0
 1491 05e8 00       		.byte	0
 1492 05e9 1B       		.uleb128 0x1b
 1493 05ea C1040000 		.4byte	0x4c1
 1494 05ee 82010000 		.4byte	.LBB130
 1495 05f2 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 1496 05f6 01       		.byte	0x1
 1497 05f7 5B01     		.2byte	0x15b
 1498 05f9 1F060000 		.4byte	0x61f
 1499 05fd 1A       		.uleb128 0x1a
 1500 05fe DF040000 		.4byte	0x4df
 1501 0602 5F020000 		.4byte	.LLST33
 1502 0606 1A       		.uleb128 0x1a
 1503 0607 D3040000 		.4byte	0x4d3
 1504 060b 80020000 		.4byte	.LLST34
 1505 060f 28       		.uleb128 0x28
 1506 0610 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 1507 0614 27       		.uleb128 0x27
 1508 0615 EB040000 		.4byte	0x4eb
 1509 0619 A1020000 		.4byte	.LLST35
 1510 061d 00       		.byte	0
 1511 061e 00       		.byte	0
 1512 061f 18       		.uleb128 0x18
 1513 0620 97090000 		.4byte	0x997
 1514 0624 8E010000 		.4byte	.LBB134
 1515 0628 90010000 		.4byte	.LBE134
 1516 062c 01       		.byte	0x1
 1517 062d 5E01     		.2byte	0x15e
 1518 062f 17       		.uleb128 0x17
 1519 0630 B9090000 		.4byte	0x9b9
 1520 0634 9C010000 		.4byte	.LBB138
 1521 0638 D0000000 		.4byte	.Ldebug_ranges0+0xd0
 1522 063c 01       		.byte	0x1
 1523 063d 6301     		.2byte	0x163
 1524 063f 18       		.uleb128 0x18
 1525 0640 AF090000 		.4byte	0x9af
 1526 0644 A6010000 		.4byte	.LBB142
 1527 0648 AC010000 		.4byte	.LBE142
 1528 064c 01       		.byte	0x1
 1529 064d 6701     		.2byte	0x167
 1530 064f 18       		.uleb128 0x18
 1531 0650 A5090000 		.4byte	0x9a5
 1532 0654 AC010000 		.4byte	.LBB144
 1533 0658 B4010000 		.4byte	.LBE144
 1534 065c 01       		.byte	0x1
 1535 065d 6B01     		.2byte	0x16b
 1536 065f 18       		.uleb128 0x18
 1537 0660 97090000 		.4byte	0x997
 1538 0664 B4010000 		.4byte	.LBB146
 1539 0668 B6010000 		.4byte	.LBE146
 1540 066c 01       		.byte	0x1
 1541 066d 6C01     		.2byte	0x16c
 1542 066f 19       		.uleb128 0x19
ARM GAS  /tmp/ccgFoonV.s 			page 78


 1543 0670 B8080000 		.4byte	0x8b8
 1544 0674 BA010000 		.4byte	.LBB148
 1545 0678 CE010000 		.4byte	.LBE148
 1546 067c 01       		.byte	0x1
 1547 067d 7301     		.2byte	0x173
 1548 067f 96060000 		.4byte	0x696
 1549 0683 1A       		.uleb128 0x1a
 1550 0684 D2080000 		.4byte	0x8d2
 1551 0688 B5020000 		.4byte	.LLST36
 1552 068c 1A       		.uleb128 0x1a
 1553 068d C6080000 		.4byte	0x8c6
 1554 0691 C8020000 		.4byte	.LLST37
 1555 0695 00       		.byte	0
 1556 0696 29       		.uleb128 0x29
 1557 0697 D4010000 		.4byte	.LVL51
 1558 069b 01       		.byte	0x1
 1559 069c 50030000 		.4byte	0x350
 1560 06a0 1E       		.uleb128 0x1e
 1561 06a1 01       		.byte	0x1
 1562 06a2 51       		.byte	0x51
 1563 06a3 02       		.byte	0x2
 1564 06a4 71       		.byte	0x71
 1565 06a5 00       		.sleb128 0
 1566 06a6 00       		.byte	0
 1567 06a7 00       		.byte	0
 1568 06a8 24       		.uleb128 0x24
 1569 06a9 01       		.byte	0x1
 1570 06aa 28000000 		.4byte	.LASF62
 1571 06ae 01       		.byte	0x1
 1572 06af 0A01     		.2byte	0x10a
 1573 06b1 01       		.byte	0x1
 1574 06b2 D7020000 		.4byte	0x2d7
 1575 06b6 2C010000 		.4byte	.LFB177
 1576 06ba 78010000 		.4byte	.LFE177
 1577 06be E1020000 		.4byte	.LLST17
 1578 06c2 01       		.byte	0x1
 1579 06c3 CE070000 		.4byte	0x7ce
 1580 06c7 14       		.uleb128 0x14
 1581 06c8 8B010000 		.4byte	.LASF54
 1582 06cc 01       		.byte	0x1
 1583 06cd 0A01     		.2byte	0x10a
 1584 06cf F8040000 		.4byte	0x4f8
 1585 06d3 25030000 		.4byte	.LLST18
 1586 06d7 15       		.uleb128 0x15
 1587 06d8 30050000 		.4byte	.LASF48
 1588 06dc 01       		.byte	0x1
 1589 06dd 0B01     		.2byte	0x10b
 1590 06df 9C040000 		.4byte	0x49c
 1591 06e3 01       		.byte	0x1
 1592 06e4 51       		.byte	0x51
 1593 06e5 25       		.uleb128 0x25
 1594 06e6 70030000 		.4byte	.LASF49
 1595 06ea 01       		.byte	0x1
 1596 06eb 0D01     		.2byte	0x10d
 1597 06ed D7020000 		.4byte	0x2d7
 1598 06f1 00       		.byte	0
 1599 06f2 16       		.uleb128 0x16
ARM GAS  /tmp/ccgFoonV.s 			page 79


 1600 06f3 97030000 		.4byte	.LASF55
 1601 06f7 01       		.byte	0x1
 1602 06f8 0E01     		.2byte	0x10e
 1603 06fa AC000000 		.4byte	0xac
 1604 06fe 5F030000 		.4byte	.LLST19
 1605 0702 1B       		.uleb128 0x1b
 1606 0703 A2040000 		.4byte	0x4a2
 1607 0707 2C010000 		.4byte	.LBB86
 1608 070b 60000000 		.4byte	.Ldebug_ranges0+0x60
 1609 070f 01       		.byte	0x1
 1610 0710 1101     		.2byte	0x111
 1611 0712 36070000 		.4byte	0x736
 1612 0716 28       		.uleb128 0x28
 1613 0717 60000000 		.4byte	.Ldebug_ranges0+0x60
 1614 071b 27       		.uleb128 0x27
 1615 071c B4040000 		.4byte	0x4b4
 1616 0720 7F030000 		.4byte	.LLST20
 1617 0724 17       		.uleb128 0x17
 1618 0725 DF080000 		.4byte	0x8df
 1619 0729 2C010000 		.4byte	.LBB88
 1620 072d 78000000 		.4byte	.Ldebug_ranges0+0x78
 1621 0731 01       		.byte	0x1
 1622 0732 E201     		.2byte	0x1e2
 1623 0734 00       		.byte	0
 1624 0735 00       		.byte	0
 1625 0736 1B       		.uleb128 0x1b
 1626 0737 C1040000 		.4byte	0x4c1
 1627 073b 3A010000 		.4byte	.LBB94
 1628 073f 90000000 		.4byte	.Ldebug_ranges0+0x90
 1629 0743 01       		.byte	0x1
 1630 0744 1B01     		.2byte	0x11b
 1631 0746 6C070000 		.4byte	0x76c
 1632 074a 1A       		.uleb128 0x1a
 1633 074b DF040000 		.4byte	0x4df
 1634 074f 9F030000 		.4byte	.LLST21
 1635 0753 1A       		.uleb128 0x1a
 1636 0754 D3040000 		.4byte	0x4d3
 1637 0758 C0030000 		.4byte	.LLST22
 1638 075c 28       		.uleb128 0x28
 1639 075d 90000000 		.4byte	.Ldebug_ranges0+0x90
 1640 0761 27       		.uleb128 0x27
 1641 0762 EB040000 		.4byte	0x4eb
 1642 0766 D8030000 		.4byte	.LLST23
 1643 076a 00       		.byte	0
 1644 076b 00       		.byte	0
 1645 076c 18       		.uleb128 0x18
 1646 076d 7F090000 		.4byte	0x97f
 1647 0771 3E010000 		.4byte	.LBB98
 1648 0775 40010000 		.4byte	.LBE98
 1649 0779 01       		.byte	0x1
 1650 077a 1E01     		.2byte	0x11e
 1651 077c 18       		.uleb128 0x18
 1652 077d 8D090000 		.4byte	0x98d
 1653 0781 4E010000 		.4byte	.LBB102
 1654 0785 56010000 		.4byte	.LBE102
 1655 0789 01       		.byte	0x1
 1656 078a 2001     		.2byte	0x120
ARM GAS  /tmp/ccgFoonV.s 			page 80


 1657 078c 18       		.uleb128 0x18
 1658 078d 7F090000 		.4byte	0x97f
 1659 0791 56010000 		.4byte	.LBB104
 1660 0795 58010000 		.4byte	.LBE104
 1661 0799 01       		.byte	0x1
 1662 079a 2101     		.2byte	0x121
 1663 079c 19       		.uleb128 0x19
 1664 079d B8080000 		.4byte	0x8b8
 1665 07a1 5C010000 		.4byte	.LBB106
 1666 07a5 66010000 		.4byte	.LBE106
 1667 07a9 01       		.byte	0x1
 1668 07aa 2801     		.2byte	0x128
 1669 07ac C3070000 		.4byte	0x7c3
 1670 07b0 1A       		.uleb128 0x1a
 1671 07b1 D2080000 		.4byte	0x8d2
 1672 07b5 EC030000 		.4byte	.LLST24
 1673 07b9 1A       		.uleb128 0x1a
 1674 07ba C6080000 		.4byte	0x8c6
 1675 07be FF030000 		.4byte	.LLST25
 1676 07c2 00       		.byte	0
 1677 07c3 2A       		.uleb128 0x2a
 1678 07c4 6A010000 		.4byte	.LVL40
 1679 07c8 01       		.byte	0x1
 1680 07c9 50030000 		.4byte	0x350
 1681 07cd 00       		.byte	0
 1682 07ce 2B       		.uleb128 0x2b
 1683 07cf 01       		.byte	0x1
 1684 07d0 0A050000 		.4byte	.LASF93
 1685 07d4 01       		.byte	0x1
 1686 07d5 F3       		.byte	0xf3
 1687 07d6 01       		.byte	0x1
 1688 07d7 01       		.byte	0x1
 1689 07d8 E8070000 		.4byte	0x7e8
 1690 07dc 2C       		.uleb128 0x2c
 1691 07dd 74000000 		.4byte	.LASF63
 1692 07e1 01       		.byte	0x1
 1693 07e2 F3       		.byte	0xf3
 1694 07e3 AC000000 		.4byte	0xac
 1695 07e7 00       		.byte	0
 1696 07e8 2D       		.uleb128 0x2d
 1697 07e9 01       		.byte	0x1
 1698 07ea 03010000 		.4byte	.LASF65
 1699 07ee 01       		.byte	0x1
 1700 07ef B9       		.byte	0xb9
 1701 07f0 01       		.byte	0x1
 1702 07f1 F8000000 		.4byte	.LFB175
 1703 07f5 20010000 		.4byte	.LFE175
 1704 07f9 13040000 		.4byte	.LLST15
 1705 07fd 01       		.byte	0x1
 1706 07fe 20080000 		.4byte	0x820
 1707 0802 2E       		.uleb128 0x2e
 1708 0803 5F050000 		.4byte	.LASF64
 1709 0807 01       		.byte	0x1
 1710 0808 B9       		.byte	0xb9
 1711 0809 AC000000 		.4byte	0xac
 1712 080d 4B040000 		.4byte	.LLST16
 1713 0811 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccgFoonV.s 			page 81


 1714 0812 746D7000 		.ascii	"tmp\000"
 1715 0816 01       		.byte	0x1
 1716 0817 BB       		.byte	0xbb
 1717 0818 B7000000 		.4byte	0xb7
 1718 081c 02       		.byte	0x2
 1719 081d 91       		.byte	0x91
 1720 081e 7C       		.sleb128 -4
 1721 081f 00       		.byte	0
 1722 0820 30       		.uleb128 0x30
 1723 0821 01       		.byte	0x1
 1724 0822 7D020000 		.4byte	.LASF66
 1725 0826 01       		.byte	0x1
 1726 0827 A9       		.byte	0xa9
 1727 0828 01       		.byte	0x1
 1728 0829 DC000000 		.4byte	.LFB174
 1729 082d F8000000 		.4byte	.LFE174
 1730 0831 02       		.byte	0x2
 1731 0832 7D       		.byte	0x7d
 1732 0833 00       		.sleb128 0
 1733 0834 01       		.byte	0x1
 1734 0835 6B080000 		.4byte	0x86b
 1735 0839 2E       		.uleb128 0x2e
 1736 083a 74000000 		.4byte	.LASF63
 1737 083e 01       		.byte	0x1
 1738 083f A9       		.byte	0xa9
 1739 0840 AC000000 		.4byte	0xac
 1740 0844 74040000 		.4byte	.LLST12
 1741 0848 31       		.uleb128 0x31
 1742 0849 94080000 		.4byte	0x894
 1743 084d DC000000 		.4byte	.LBB70
 1744 0851 F8000000 		.4byte	.LBE70
 1745 0855 01       		.byte	0x1
 1746 0856 AC       		.byte	0xac
 1747 0857 1A       		.uleb128 0x1a
 1748 0858 AC080000 		.4byte	0x8ac
 1749 085c 95040000 		.4byte	.LLST13
 1750 0860 1A       		.uleb128 0x1a
 1751 0861 A1080000 		.4byte	0x8a1
 1752 0865 AB040000 		.4byte	.LLST14
 1753 0869 00       		.byte	0
 1754 086a 00       		.byte	0
 1755 086b 32       		.uleb128 0x32
 1756 086c EC010000 		.4byte	.LASF73
 1757 0870 02       		.byte	0x2
 1758 0871 E301     		.2byte	0x1e3
 1759 0873 01       		.byte	0x1
 1760 0874 AC000000 		.4byte	0xac
 1761 0878 03       		.byte	0x3
 1762 0879 33       		.uleb128 0x33
 1763 087a A7030000 		.4byte	.LASF68
 1764 087e 02       		.byte	0x2
 1765 087f D601     		.2byte	0x1d6
 1766 0881 01       		.byte	0x1
 1767 0882 03       		.byte	0x3
 1768 0883 94080000 		.4byte	0x894
 1769 0887 23       		.uleb128 0x23
 1770 0888 79010000 		.4byte	.LASF67
ARM GAS  /tmp/ccgFoonV.s 			page 82


 1771 088c 02       		.byte	0x2
 1772 088d D601     		.2byte	0x1d6
 1773 088f AC000000 		.4byte	0xac
 1774 0893 00       		.byte	0
 1775 0894 34       		.uleb128 0x34
 1776 0895 67020000 		.4byte	.LASF69
 1777 0899 04       		.byte	0x4
 1778 089a DA       		.byte	0xda
 1779 089b 01       		.byte	0x1
 1780 089c 03       		.byte	0x3
 1781 089d B8080000 		.4byte	0x8b8
 1782 08a1 2C       		.uleb128 0x2c
 1783 08a2 74000000 		.4byte	.LASF63
 1784 08a6 04       		.byte	0x4
 1785 08a7 DA       		.byte	0xda
 1786 08a8 AC000000 		.4byte	0xac
 1787 08ac 2C       		.uleb128 0x2c
 1788 08ad 73010000 		.4byte	.LASF70
 1789 08b1 04       		.byte	0x4
 1790 08b2 DA       		.byte	0xda
 1791 08b3 AC000000 		.4byte	0xac
 1792 08b7 00       		.byte	0
 1793 08b8 33       		.uleb128 0x33
 1794 08b9 9A020000 		.4byte	.LASF71
 1795 08bd 03       		.byte	0x3
 1796 08be C505     		.2byte	0x5c5
 1797 08c0 01       		.byte	0x1
 1798 08c1 03       		.byte	0x3
 1799 08c2 DF080000 		.4byte	0x8df
 1800 08c6 23       		.uleb128 0x23
 1801 08c7 20050000 		.4byte	.LASF72
 1802 08cb 03       		.byte	0x3
 1803 08cc C505     		.2byte	0x5c5
 1804 08ce AC000000 		.4byte	0xac
 1805 08d2 23       		.uleb128 0x23
 1806 08d3 9B050000 		.4byte	.LASF40
 1807 08d7 03       		.byte	0x3
 1808 08d8 C505     		.2byte	0x5c5
 1809 08da AC000000 		.4byte	0xac
 1810 08de 00       		.byte	0
 1811 08df 32       		.uleb128 0x32
 1812 08e0 3D030000 		.4byte	.LASF74
 1813 08e4 03       		.byte	0x3
 1814 08e5 8005     		.2byte	0x580
 1815 08e7 01       		.byte	0x1
 1816 08e8 AC000000 		.4byte	0xac
 1817 08ec 03       		.byte	0x3
 1818 08ed 35       		.uleb128 0x35
 1819 08ee 45040000 		.4byte	.LASF83
 1820 08f2 03       		.byte	0x3
 1821 08f3 6B05     		.2byte	0x56b
 1822 08f5 01       		.byte	0x1
 1823 08f6 03       		.byte	0x3
 1824 08f7 32       		.uleb128 0x32
 1825 08f8 11000000 		.4byte	.LASF75
 1826 08fc 03       		.byte	0x3
 1827 08fd 4A04     		.2byte	0x44a
ARM GAS  /tmp/ccgFoonV.s 			page 83


 1828 08ff 01       		.byte	0x1
 1829 0900 AC000000 		.4byte	0xac
 1830 0904 03       		.byte	0x3
 1831 0905 33       		.uleb128 0x33
 1832 0906 41010000 		.4byte	.LASF76
 1833 090a 03       		.byte	0x3
 1834 090b 3704     		.2byte	0x437
 1835 090d 01       		.byte	0x1
 1836 090e 03       		.byte	0x3
 1837 090f 20090000 		.4byte	0x920
 1838 0913 23       		.uleb128 0x23
 1839 0914 73020000 		.4byte	.LASF77
 1840 0918 03       		.byte	0x3
 1841 0919 3704     		.2byte	0x437
 1842 091b AC000000 		.4byte	0xac
 1843 091f 00       		.byte	0
 1844 0920 33       		.uleb128 0x33
 1845 0921 E6040000 		.4byte	.LASF78
 1846 0925 03       		.byte	0x3
 1847 0926 2704     		.2byte	0x427
 1848 0928 01       		.byte	0x1
 1849 0929 03       		.byte	0x3
 1850 092a 3B090000 		.4byte	0x93b
 1851 092e 23       		.uleb128 0x23
 1852 092f 73020000 		.4byte	.LASF77
 1853 0933 03       		.byte	0x3
 1854 0934 2704     		.2byte	0x427
 1855 0936 AC000000 		.4byte	0xac
 1856 093a 00       		.byte	0
 1857 093b 33       		.uleb128 0x33
 1858 093c 5D000000 		.4byte	.LASF79
 1859 0940 03       		.byte	0x3
 1860 0941 1704     		.2byte	0x417
 1861 0943 01       		.byte	0x1
 1862 0944 03       		.byte	0x3
 1863 0945 56090000 		.4byte	0x956
 1864 0949 23       		.uleb128 0x23
 1865 094a 73020000 		.4byte	.LASF77
 1866 094e 03       		.byte	0x3
 1867 094f 1704     		.2byte	0x417
 1868 0951 AC000000 		.4byte	0xac
 1869 0955 00       		.byte	0
 1870 0956 32       		.uleb128 0x32
 1871 0957 BA000000 		.4byte	.LASF80
 1872 095b 03       		.byte	0x3
 1873 095c 0304     		.2byte	0x403
 1874 095e 01       		.byte	0x1
 1875 095f AC000000 		.4byte	0xac
 1876 0963 03       		.byte	0x3
 1877 0964 33       		.uleb128 0x33
 1878 0965 CC030000 		.4byte	.LASF81
 1879 0969 03       		.byte	0x3
 1880 096a F603     		.2byte	0x3f6
 1881 096c 01       		.byte	0x1
 1882 096d 03       		.byte	0x3
 1883 096e 7F090000 		.4byte	0x97f
 1884 0972 23       		.uleb128 0x23
ARM GAS  /tmp/ccgFoonV.s 			page 84


 1885 0973 20050000 		.4byte	.LASF72
 1886 0977 03       		.byte	0x3
 1887 0978 F603     		.2byte	0x3f6
 1888 097a AC000000 		.4byte	0xac
 1889 097e 00       		.byte	0
 1890 097f 32       		.uleb128 0x32
 1891 0980 1D030000 		.4byte	.LASF82
 1892 0984 03       		.byte	0x3
 1893 0985 5C03     		.2byte	0x35c
 1894 0987 01       		.byte	0x1
 1895 0988 AC000000 		.4byte	0xac
 1896 098c 03       		.byte	0x3
 1897 098d 35       		.uleb128 0x35
 1898 098e 61010000 		.4byte	.LASF84
 1899 0992 03       		.byte	0x3
 1900 0993 4803     		.2byte	0x348
 1901 0995 01       		.byte	0x1
 1902 0996 03       		.byte	0x3
 1903 0997 32       		.uleb128 0x32
 1904 0998 8F000000 		.4byte	.LASF85
 1905 099c 03       		.byte	0x3
 1906 099d 1A03     		.2byte	0x31a
 1907 099f 01       		.byte	0x1
 1908 09a0 AC000000 		.4byte	0xac
 1909 09a4 03       		.byte	0x3
 1910 09a5 35       		.uleb128 0x35
 1911 09a6 21020000 		.4byte	.LASF86
 1912 09aa 03       		.byte	0x3
 1913 09ab 0603     		.2byte	0x306
 1914 09ad 01       		.byte	0x1
 1915 09ae 03       		.byte	0x3
 1916 09af 35       		.uleb128 0x35
 1917 09b0 1A040000 		.4byte	.LASF87
 1918 09b4 03       		.byte	0x3
 1919 09b5 FC02     		.2byte	0x2fc
 1920 09b7 01       		.byte	0x1
 1921 09b8 03       		.byte	0x3
 1922 09b9 35       		.uleb128 0x35
 1923 09ba 57040000 		.4byte	.LASF88
 1924 09be 03       		.byte	0x3
 1925 09bf F202     		.2byte	0x2f2
 1926 09c1 01       		.byte	0x1
 1927 09c2 03       		.byte	0x3
 1928 09c3 36       		.uleb128 0x36
 1929 09c4 FE040000 		.4byte	0x4fe
 1930 09c8 00000000 		.4byte	.LFB179
 1931 09cc 40000000 		.4byte	.LFE179
 1932 09d0 02       		.byte	0x2
 1933 09d1 7D       		.byte	0x7d
 1934 09d2 00       		.sleb128 0
 1935 09d3 01       		.byte	0x1
 1936 09d4 3E0A0000 		.4byte	0xa3e
 1937 09d8 1A       		.uleb128 0x1a
 1938 09d9 10050000 		.4byte	0x510
 1939 09dd CC040000 		.4byte	.LLST0
 1940 09e1 27       		.uleb128 0x27
 1941 09e2 1C050000 		.4byte	0x51c
ARM GAS  /tmp/ccgFoonV.s 			page 85


 1942 09e6 1F050000 		.4byte	.LLST1
 1943 09ea 37       		.uleb128 0x37
 1944 09eb 28050000 		.4byte	0x528
 1945 09ef 00       		.byte	0
 1946 09f0 28       		.uleb128 0x28
 1947 09f1 00000000 		.4byte	.Ldebug_ranges0+0
 1948 09f5 1A       		.uleb128 0x1a
 1949 09f6 10050000 		.4byte	0x510
 1950 09fa 3E050000 		.4byte	.LLST2
 1951 09fe 28       		.uleb128 0x28
 1952 09ff 00000000 		.4byte	.Ldebug_ranges0+0
 1953 0a03 38       		.uleb128 0x38
 1954 0a04 E1090000 		.4byte	0x9e1
 1955 0a08 38       		.uleb128 0x38
 1956 0a09 EA090000 		.4byte	0x9ea
 1957 0a0d 19       		.uleb128 0x19
 1958 0a0e 79080000 		.4byte	0x879
 1959 0a12 12000000 		.4byte	.LBB20
 1960 0a16 1E000000 		.4byte	.LBE20
 1961 0a1a 01       		.byte	0x1
 1962 0a1b B101     		.2byte	0x1b1
 1963 0a1d 2B0A0000 		.4byte	0xa2b
 1964 0a21 1A       		.uleb128 0x1a
 1965 0a22 87080000 		.4byte	0x887
 1966 0a26 78050000 		.4byte	.LLST3
 1967 0a2a 00       		.byte	0
 1968 0a2b 18       		.uleb128 0x18
 1969 0a2c 6B080000 		.4byte	0x86b
 1970 0a30 1E000000 		.4byte	.LBB22
 1971 0a34 24000000 		.4byte	.LBE22
 1972 0a38 01       		.byte	0x1
 1973 0a39 B501     		.2byte	0x1b5
 1974 0a3b 00       		.byte	0
 1975 0a3c 00       		.byte	0
 1976 0a3d 00       		.byte	0
 1977 0a3e 39       		.uleb128 0x39
 1978 0a3f CE070000 		.4byte	0x7ce
 1979 0a43 20010000 		.4byte	.LFB176
 1980 0a47 2C010000 		.4byte	.LFE176
 1981 0a4b 02       		.byte	0x2
 1982 0a4c 7D       		.byte	0x7d
 1983 0a4d 00       		.sleb128 0
 1984 0a4e 01       		.byte	0x1
 1985 0a4f 3A       		.uleb128 0x3a
 1986 0a50 DC070000 		.4byte	0x7dc
 1987 0a54 01       		.byte	0x1
 1988 0a55 50       		.byte	0x50
 1989 0a56 00       		.byte	0
 1990 0a57 00       		.byte	0
 1991              		.section	.debug_abbrev,"",%progbits
 1992              	.Ldebug_abbrev0:
 1993 0000 01       		.uleb128 0x1
 1994 0001 11       		.uleb128 0x11
 1995 0002 01       		.byte	0x1
 1996 0003 25       		.uleb128 0x25
 1997 0004 0E       		.uleb128 0xe
 1998 0005 13       		.uleb128 0x13
ARM GAS  /tmp/ccgFoonV.s 			page 86


 1999 0006 0B       		.uleb128 0xb
 2000 0007 03       		.uleb128 0x3
 2001 0008 0E       		.uleb128 0xe
 2002 0009 1B       		.uleb128 0x1b
 2003 000a 0E       		.uleb128 0xe
 2004 000b 11       		.uleb128 0x11
 2005 000c 01       		.uleb128 0x1
 2006 000d 12       		.uleb128 0x12
 2007 000e 01       		.uleb128 0x1
 2008 000f 10       		.uleb128 0x10
 2009 0010 06       		.uleb128 0x6
 2010 0011 00       		.byte	0
 2011 0012 00       		.byte	0
 2012 0013 02       		.uleb128 0x2
 2013 0014 24       		.uleb128 0x24
 2014 0015 00       		.byte	0
 2015 0016 0B       		.uleb128 0xb
 2016 0017 0B       		.uleb128 0xb
 2017 0018 3E       		.uleb128 0x3e
 2018 0019 0B       		.uleb128 0xb
 2019 001a 03       		.uleb128 0x3
 2020 001b 0E       		.uleb128 0xe
 2021 001c 00       		.byte	0
 2022 001d 00       		.byte	0
 2023 001e 03       		.uleb128 0x3
 2024 001f 16       		.uleb128 0x16
 2025 0020 00       		.byte	0
 2026 0021 03       		.uleb128 0x3
 2027 0022 0E       		.uleb128 0xe
 2028 0023 3A       		.uleb128 0x3a
 2029 0024 0B       		.uleb128 0xb
 2030 0025 3B       		.uleb128 0x3b
 2031 0026 0B       		.uleb128 0xb
 2032 0027 49       		.uleb128 0x49
 2033 0028 13       		.uleb128 0x13
 2034 0029 00       		.byte	0
 2035 002a 00       		.byte	0
 2036 002b 04       		.uleb128 0x4
 2037 002c 24       		.uleb128 0x24
 2038 002d 00       		.byte	0
 2039 002e 0B       		.uleb128 0xb
 2040 002f 0B       		.uleb128 0xb
 2041 0030 3E       		.uleb128 0x3e
 2042 0031 0B       		.uleb128 0xb
 2043 0032 03       		.uleb128 0x3
 2044 0033 08       		.uleb128 0x8
 2045 0034 00       		.byte	0
 2046 0035 00       		.byte	0
 2047 0036 05       		.uleb128 0x5
 2048 0037 26       		.uleb128 0x26
 2049 0038 00       		.byte	0
 2050 0039 49       		.uleb128 0x49
 2051 003a 13       		.uleb128 0x13
 2052 003b 00       		.byte	0
 2053 003c 00       		.byte	0
 2054 003d 06       		.uleb128 0x6
 2055 003e 35       		.uleb128 0x35
ARM GAS  /tmp/ccgFoonV.s 			page 87


 2056 003f 00       		.byte	0
 2057 0040 49       		.uleb128 0x49
 2058 0041 13       		.uleb128 0x13
 2059 0042 00       		.byte	0
 2060 0043 00       		.byte	0
 2061 0044 07       		.uleb128 0x7
 2062 0045 13       		.uleb128 0x13
 2063 0046 01       		.byte	0x1
 2064 0047 0B       		.uleb128 0xb
 2065 0048 0B       		.uleb128 0xb
 2066 0049 3A       		.uleb128 0x3a
 2067 004a 0B       		.uleb128 0xb
 2068 004b 3B       		.uleb128 0x3b
 2069 004c 05       		.uleb128 0x5
 2070 004d 01       		.uleb128 0x1
 2071 004e 13       		.uleb128 0x13
 2072 004f 00       		.byte	0
 2073 0050 00       		.byte	0
 2074 0051 08       		.uleb128 0x8
 2075 0052 0D       		.uleb128 0xd
 2076 0053 00       		.byte	0
 2077 0054 03       		.uleb128 0x3
 2078 0055 0E       		.uleb128 0xe
 2079 0056 3A       		.uleb128 0x3a
 2080 0057 0B       		.uleb128 0xb
 2081 0058 3B       		.uleb128 0x3b
 2082 0059 05       		.uleb128 0x5
 2083 005a 49       		.uleb128 0x49
 2084 005b 13       		.uleb128 0x13
 2085 005c 38       		.uleb128 0x38
 2086 005d 0A       		.uleb128 0xa
 2087 005e 00       		.byte	0
 2088 005f 00       		.byte	0
 2089 0060 09       		.uleb128 0x9
 2090 0061 0D       		.uleb128 0xd
 2091 0062 00       		.byte	0
 2092 0063 03       		.uleb128 0x3
 2093 0064 08       		.uleb128 0x8
 2094 0065 3A       		.uleb128 0x3a
 2095 0066 0B       		.uleb128 0xb
 2096 0067 3B       		.uleb128 0x3b
 2097 0068 05       		.uleb128 0x5
 2098 0069 49       		.uleb128 0x49
 2099 006a 13       		.uleb128 0x13
 2100 006b 38       		.uleb128 0x38
 2101 006c 0A       		.uleb128 0xa
 2102 006d 00       		.byte	0
 2103 006e 00       		.byte	0
 2104 006f 0A       		.uleb128 0xa
 2105 0070 16       		.uleb128 0x16
 2106 0071 00       		.byte	0
 2107 0072 03       		.uleb128 0x3
 2108 0073 0E       		.uleb128 0xe
 2109 0074 3A       		.uleb128 0x3a
 2110 0075 0B       		.uleb128 0xb
 2111 0076 3B       		.uleb128 0x3b
 2112 0077 05       		.uleb128 0x5
ARM GAS  /tmp/ccgFoonV.s 			page 88


 2113 0078 49       		.uleb128 0x49
 2114 0079 13       		.uleb128 0x13
 2115 007a 00       		.byte	0
 2116 007b 00       		.byte	0
 2117 007c 0B       		.uleb128 0xb
 2118 007d 34       		.uleb128 0x34
 2119 007e 00       		.byte	0
 2120 007f 03       		.uleb128 0x3
 2121 0080 0E       		.uleb128 0xe
 2122 0081 3A       		.uleb128 0x3a
 2123 0082 0B       		.uleb128 0xb
 2124 0083 3B       		.uleb128 0x3b
 2125 0084 05       		.uleb128 0x5
 2126 0085 49       		.uleb128 0x49
 2127 0086 13       		.uleb128 0x13
 2128 0087 3F       		.uleb128 0x3f
 2129 0088 0C       		.uleb128 0xc
 2130 0089 3C       		.uleb128 0x3c
 2131 008a 0C       		.uleb128 0xc
 2132 008b 00       		.byte	0
 2133 008c 00       		.byte	0
 2134 008d 0C       		.uleb128 0xc
 2135 008e 34       		.uleb128 0x34
 2136 008f 00       		.byte	0
 2137 0090 03       		.uleb128 0x3
 2138 0091 0E       		.uleb128 0xe
 2139 0092 3A       		.uleb128 0x3a
 2140 0093 0B       		.uleb128 0xb
 2141 0094 3B       		.uleb128 0x3b
 2142 0095 0B       		.uleb128 0xb
 2143 0096 49       		.uleb128 0x49
 2144 0097 13       		.uleb128 0x13
 2145 0098 3F       		.uleb128 0x3f
 2146 0099 0C       		.uleb128 0xc
 2147 009a 3C       		.uleb128 0x3c
 2148 009b 0C       		.uleb128 0xc
 2149 009c 00       		.byte	0
 2150 009d 00       		.byte	0
 2151 009e 0D       		.uleb128 0xd
 2152 009f 01       		.uleb128 0x1
 2153 00a0 01       		.byte	0x1
 2154 00a1 49       		.uleb128 0x49
 2155 00a2 13       		.uleb128 0x13
 2156 00a3 01       		.uleb128 0x1
 2157 00a4 13       		.uleb128 0x13
 2158 00a5 00       		.byte	0
 2159 00a6 00       		.byte	0
 2160 00a7 0E       		.uleb128 0xe
 2161 00a8 21       		.uleb128 0x21
 2162 00a9 00       		.byte	0
 2163 00aa 49       		.uleb128 0x49
 2164 00ab 13       		.uleb128 0x13
 2165 00ac 2F       		.uleb128 0x2f
 2166 00ad 0B       		.uleb128 0xb
 2167 00ae 00       		.byte	0
 2168 00af 00       		.byte	0
 2169 00b0 0F       		.uleb128 0xf
ARM GAS  /tmp/ccgFoonV.s 			page 89


 2170 00b1 04       		.uleb128 0x4
 2171 00b2 01       		.byte	0x1
 2172 00b3 0B       		.uleb128 0xb
 2173 00b4 0B       		.uleb128 0xb
 2174 00b5 49       		.uleb128 0x49
 2175 00b6 13       		.uleb128 0x13
 2176 00b7 3A       		.uleb128 0x3a
 2177 00b8 0B       		.uleb128 0xb
 2178 00b9 3B       		.uleb128 0x3b
 2179 00ba 0B       		.uleb128 0xb
 2180 00bb 01       		.uleb128 0x1
 2181 00bc 13       		.uleb128 0x13
 2182 00bd 00       		.byte	0
 2183 00be 00       		.byte	0
 2184 00bf 10       		.uleb128 0x10
 2185 00c0 28       		.uleb128 0x28
 2186 00c1 00       		.byte	0
 2187 00c2 03       		.uleb128 0x3
 2188 00c3 0E       		.uleb128 0xe
 2189 00c4 1C       		.uleb128 0x1c
 2190 00c5 0B       		.uleb128 0xb
 2191 00c6 00       		.byte	0
 2192 00c7 00       		.byte	0
 2193 00c8 11       		.uleb128 0x11
 2194 00c9 13       		.uleb128 0x13
 2195 00ca 01       		.byte	0x1
 2196 00cb 0B       		.uleb128 0xb
 2197 00cc 0B       		.uleb128 0xb
 2198 00cd 3A       		.uleb128 0x3a
 2199 00ce 0B       		.uleb128 0xb
 2200 00cf 3B       		.uleb128 0x3b
 2201 00d0 0B       		.uleb128 0xb
 2202 00d1 01       		.uleb128 0x1
 2203 00d2 13       		.uleb128 0x13
 2204 00d3 00       		.byte	0
 2205 00d4 00       		.byte	0
 2206 00d5 12       		.uleb128 0x12
 2207 00d6 0D       		.uleb128 0xd
 2208 00d7 00       		.byte	0
 2209 00d8 03       		.uleb128 0x3
 2210 00d9 0E       		.uleb128 0xe
 2211 00da 3A       		.uleb128 0x3a
 2212 00db 0B       		.uleb128 0xb
 2213 00dc 3B       		.uleb128 0x3b
 2214 00dd 0B       		.uleb128 0xb
 2215 00de 49       		.uleb128 0x49
 2216 00df 13       		.uleb128 0x13
 2217 00e0 38       		.uleb128 0x38
 2218 00e1 0A       		.uleb128 0xa
 2219 00e2 00       		.byte	0
 2220 00e3 00       		.byte	0
 2221 00e4 13       		.uleb128 0x13
 2222 00e5 2E       		.uleb128 0x2e
 2223 00e6 01       		.byte	0x1
 2224 00e7 03       		.uleb128 0x3
 2225 00e8 0E       		.uleb128 0xe
 2226 00e9 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccgFoonV.s 			page 90


 2227 00ea 0B       		.uleb128 0xb
 2228 00eb 3B       		.uleb128 0x3b
 2229 00ec 05       		.uleb128 0x5
 2230 00ed 27       		.uleb128 0x27
 2231 00ee 0C       		.uleb128 0xc
 2232 00ef 49       		.uleb128 0x49
 2233 00f0 13       		.uleb128 0x13
 2234 00f1 11       		.uleb128 0x11
 2235 00f2 01       		.uleb128 0x1
 2236 00f3 12       		.uleb128 0x12
 2237 00f4 01       		.uleb128 0x1
 2238 00f5 40       		.uleb128 0x40
 2239 00f6 06       		.uleb128 0x6
 2240 00f7 9742     		.uleb128 0x2117
 2241 00f9 0C       		.uleb128 0xc
 2242 00fa 01       		.uleb128 0x1
 2243 00fb 13       		.uleb128 0x13
 2244 00fc 00       		.byte	0
 2245 00fd 00       		.byte	0
 2246 00fe 14       		.uleb128 0x14
 2247 00ff 05       		.uleb128 0x5
 2248 0100 00       		.byte	0
 2249 0101 03       		.uleb128 0x3
 2250 0102 0E       		.uleb128 0xe
 2251 0103 3A       		.uleb128 0x3a
 2252 0104 0B       		.uleb128 0xb
 2253 0105 3B       		.uleb128 0x3b
 2254 0106 05       		.uleb128 0x5
 2255 0107 49       		.uleb128 0x49
 2256 0108 13       		.uleb128 0x13
 2257 0109 02       		.uleb128 0x2
 2258 010a 06       		.uleb128 0x6
 2259 010b 00       		.byte	0
 2260 010c 00       		.byte	0
 2261 010d 15       		.uleb128 0x15
 2262 010e 05       		.uleb128 0x5
 2263 010f 00       		.byte	0
 2264 0110 03       		.uleb128 0x3
 2265 0111 0E       		.uleb128 0xe
 2266 0112 3A       		.uleb128 0x3a
 2267 0113 0B       		.uleb128 0xb
 2268 0114 3B       		.uleb128 0x3b
 2269 0115 05       		.uleb128 0x5
 2270 0116 49       		.uleb128 0x49
 2271 0117 13       		.uleb128 0x13
 2272 0118 02       		.uleb128 0x2
 2273 0119 0A       		.uleb128 0xa
 2274 011a 00       		.byte	0
 2275 011b 00       		.byte	0
 2276 011c 16       		.uleb128 0x16
 2277 011d 34       		.uleb128 0x34
 2278 011e 00       		.byte	0
 2279 011f 03       		.uleb128 0x3
 2280 0120 0E       		.uleb128 0xe
 2281 0121 3A       		.uleb128 0x3a
 2282 0122 0B       		.uleb128 0xb
 2283 0123 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccgFoonV.s 			page 91


 2284 0124 05       		.uleb128 0x5
 2285 0125 49       		.uleb128 0x49
 2286 0126 13       		.uleb128 0x13
 2287 0127 02       		.uleb128 0x2
 2288 0128 06       		.uleb128 0x6
 2289 0129 00       		.byte	0
 2290 012a 00       		.byte	0
 2291 012b 17       		.uleb128 0x17
 2292 012c 1D       		.uleb128 0x1d
 2293 012d 00       		.byte	0
 2294 012e 31       		.uleb128 0x31
 2295 012f 13       		.uleb128 0x13
 2296 0130 52       		.uleb128 0x52
 2297 0131 01       		.uleb128 0x1
 2298 0132 55       		.uleb128 0x55
 2299 0133 06       		.uleb128 0x6
 2300 0134 58       		.uleb128 0x58
 2301 0135 0B       		.uleb128 0xb
 2302 0136 59       		.uleb128 0x59
 2303 0137 05       		.uleb128 0x5
 2304 0138 00       		.byte	0
 2305 0139 00       		.byte	0
 2306 013a 18       		.uleb128 0x18
 2307 013b 1D       		.uleb128 0x1d
 2308 013c 00       		.byte	0
 2309 013d 31       		.uleb128 0x31
 2310 013e 13       		.uleb128 0x13
 2311 013f 11       		.uleb128 0x11
 2312 0140 01       		.uleb128 0x1
 2313 0141 12       		.uleb128 0x12
 2314 0142 01       		.uleb128 0x1
 2315 0143 58       		.uleb128 0x58
 2316 0144 0B       		.uleb128 0xb
 2317 0145 59       		.uleb128 0x59
 2318 0146 05       		.uleb128 0x5
 2319 0147 00       		.byte	0
 2320 0148 00       		.byte	0
 2321 0149 19       		.uleb128 0x19
 2322 014a 1D       		.uleb128 0x1d
 2323 014b 01       		.byte	0x1
 2324 014c 31       		.uleb128 0x31
 2325 014d 13       		.uleb128 0x13
 2326 014e 11       		.uleb128 0x11
 2327 014f 01       		.uleb128 0x1
 2328 0150 12       		.uleb128 0x12
 2329 0151 01       		.uleb128 0x1
 2330 0152 58       		.uleb128 0x58
 2331 0153 0B       		.uleb128 0xb
 2332 0154 59       		.uleb128 0x59
 2333 0155 05       		.uleb128 0x5
 2334 0156 01       		.uleb128 0x1
 2335 0157 13       		.uleb128 0x13
 2336 0158 00       		.byte	0
 2337 0159 00       		.byte	0
 2338 015a 1A       		.uleb128 0x1a
 2339 015b 05       		.uleb128 0x5
 2340 015c 00       		.byte	0
ARM GAS  /tmp/ccgFoonV.s 			page 92


 2341 015d 31       		.uleb128 0x31
 2342 015e 13       		.uleb128 0x13
 2343 015f 02       		.uleb128 0x2
 2344 0160 06       		.uleb128 0x6
 2345 0161 00       		.byte	0
 2346 0162 00       		.byte	0
 2347 0163 1B       		.uleb128 0x1b
 2348 0164 1D       		.uleb128 0x1d
 2349 0165 01       		.byte	0x1
 2350 0166 31       		.uleb128 0x31
 2351 0167 13       		.uleb128 0x13
 2352 0168 52       		.uleb128 0x52
 2353 0169 01       		.uleb128 0x1
 2354 016a 55       		.uleb128 0x55
 2355 016b 06       		.uleb128 0x6
 2356 016c 58       		.uleb128 0x58
 2357 016d 0B       		.uleb128 0xb
 2358 016e 59       		.uleb128 0x59
 2359 016f 05       		.uleb128 0x5
 2360 0170 01       		.uleb128 0x1
 2361 0171 13       		.uleb128 0x13
 2362 0172 00       		.byte	0
 2363 0173 00       		.byte	0
 2364 0174 1C       		.uleb128 0x1c
 2365 0175 05       		.uleb128 0x5
 2366 0176 00       		.byte	0
 2367 0177 31       		.uleb128 0x31
 2368 0178 13       		.uleb128 0x13
 2369 0179 00       		.byte	0
 2370 017a 00       		.byte	0
 2371 017b 1D       		.uleb128 0x1d
 2372 017c 898201   		.uleb128 0x4109
 2373 017f 01       		.byte	0x1
 2374 0180 11       		.uleb128 0x11
 2375 0181 01       		.uleb128 0x1
 2376 0182 31       		.uleb128 0x31
 2377 0183 13       		.uleb128 0x13
 2378 0184 01       		.uleb128 0x1
 2379 0185 13       		.uleb128 0x13
 2380 0186 00       		.byte	0
 2381 0187 00       		.byte	0
 2382 0188 1E       		.uleb128 0x1e
 2383 0189 8A8201   		.uleb128 0x410a
 2384 018c 00       		.byte	0
 2385 018d 02       		.uleb128 0x2
 2386 018e 0A       		.uleb128 0xa
 2387 018f 9142     		.uleb128 0x2111
 2388 0191 0A       		.uleb128 0xa
 2389 0192 00       		.byte	0
 2390 0193 00       		.byte	0
 2391 0194 1F       		.uleb128 0x1f
 2392 0195 898201   		.uleb128 0x4109
 2393 0198 00       		.byte	0
 2394 0199 11       		.uleb128 0x11
 2395 019a 01       		.uleb128 0x1
 2396 019b 31       		.uleb128 0x31
 2397 019c 13       		.uleb128 0x13
ARM GAS  /tmp/ccgFoonV.s 			page 93


 2398 019d 00       		.byte	0
 2399 019e 00       		.byte	0
 2400 019f 20       		.uleb128 0x20
 2401 01a0 0F       		.uleb128 0xf
 2402 01a1 00       		.byte	0
 2403 01a2 0B       		.uleb128 0xb
 2404 01a3 0B       		.uleb128 0xb
 2405 01a4 49       		.uleb128 0x49
 2406 01a5 13       		.uleb128 0x13
 2407 01a6 00       		.byte	0
 2408 01a7 00       		.byte	0
 2409 01a8 21       		.uleb128 0x21
 2410 01a9 2E       		.uleb128 0x2e
 2411 01aa 01       		.byte	0x1
 2412 01ab 03       		.uleb128 0x3
 2413 01ac 0E       		.uleb128 0xe
 2414 01ad 3A       		.uleb128 0x3a
 2415 01ae 0B       		.uleb128 0xb
 2416 01af 3B       		.uleb128 0x3b
 2417 01b0 05       		.uleb128 0x5
 2418 01b1 27       		.uleb128 0x27
 2419 01b2 0C       		.uleb128 0xc
 2420 01b3 49       		.uleb128 0x49
 2421 01b4 13       		.uleb128 0x13
 2422 01b5 20       		.uleb128 0x20
 2423 01b6 0B       		.uleb128 0xb
 2424 01b7 01       		.uleb128 0x1
 2425 01b8 13       		.uleb128 0x13
 2426 01b9 00       		.byte	0
 2427 01ba 00       		.byte	0
 2428 01bb 22       		.uleb128 0x22
 2429 01bc 34       		.uleb128 0x34
 2430 01bd 00       		.byte	0
 2431 01be 03       		.uleb128 0x3
 2432 01bf 0E       		.uleb128 0xe
 2433 01c0 3A       		.uleb128 0x3a
 2434 01c1 0B       		.uleb128 0xb
 2435 01c2 3B       		.uleb128 0x3b
 2436 01c3 05       		.uleb128 0x5
 2437 01c4 49       		.uleb128 0x49
 2438 01c5 13       		.uleb128 0x13
 2439 01c6 00       		.byte	0
 2440 01c7 00       		.byte	0
 2441 01c8 23       		.uleb128 0x23
 2442 01c9 05       		.uleb128 0x5
 2443 01ca 00       		.byte	0
 2444 01cb 03       		.uleb128 0x3
 2445 01cc 0E       		.uleb128 0xe
 2446 01cd 3A       		.uleb128 0x3a
 2447 01ce 0B       		.uleb128 0xb
 2448 01cf 3B       		.uleb128 0x3b
 2449 01d0 05       		.uleb128 0x5
 2450 01d1 49       		.uleb128 0x49
 2451 01d2 13       		.uleb128 0x13
 2452 01d3 00       		.byte	0
 2453 01d4 00       		.byte	0
 2454 01d5 24       		.uleb128 0x24
ARM GAS  /tmp/ccgFoonV.s 			page 94


 2455 01d6 2E       		.uleb128 0x2e
 2456 01d7 01       		.byte	0x1
 2457 01d8 3F       		.uleb128 0x3f
 2458 01d9 0C       		.uleb128 0xc
 2459 01da 03       		.uleb128 0x3
 2460 01db 0E       		.uleb128 0xe
 2461 01dc 3A       		.uleb128 0x3a
 2462 01dd 0B       		.uleb128 0xb
 2463 01de 3B       		.uleb128 0x3b
 2464 01df 05       		.uleb128 0x5
 2465 01e0 27       		.uleb128 0x27
 2466 01e1 0C       		.uleb128 0xc
 2467 01e2 49       		.uleb128 0x49
 2468 01e3 13       		.uleb128 0x13
 2469 01e4 11       		.uleb128 0x11
 2470 01e5 01       		.uleb128 0x1
 2471 01e6 12       		.uleb128 0x12
 2472 01e7 01       		.uleb128 0x1
 2473 01e8 40       		.uleb128 0x40
 2474 01e9 06       		.uleb128 0x6
 2475 01ea 9742     		.uleb128 0x2117
 2476 01ec 0C       		.uleb128 0xc
 2477 01ed 01       		.uleb128 0x1
 2478 01ee 13       		.uleb128 0x13
 2479 01ef 00       		.byte	0
 2480 01f0 00       		.byte	0
 2481 01f1 25       		.uleb128 0x25
 2482 01f2 34       		.uleb128 0x34
 2483 01f3 00       		.byte	0
 2484 01f4 03       		.uleb128 0x3
 2485 01f5 0E       		.uleb128 0xe
 2486 01f6 3A       		.uleb128 0x3a
 2487 01f7 0B       		.uleb128 0xb
 2488 01f8 3B       		.uleb128 0x3b
 2489 01f9 05       		.uleb128 0x5
 2490 01fa 49       		.uleb128 0x49
 2491 01fb 13       		.uleb128 0x13
 2492 01fc 1C       		.uleb128 0x1c
 2493 01fd 0B       		.uleb128 0xb
 2494 01fe 00       		.byte	0
 2495 01ff 00       		.byte	0
 2496 0200 26       		.uleb128 0x26
 2497 0201 0B       		.uleb128 0xb
 2498 0202 01       		.byte	0x1
 2499 0203 11       		.uleb128 0x11
 2500 0204 01       		.uleb128 0x1
 2501 0205 12       		.uleb128 0x12
 2502 0206 01       		.uleb128 0x1
 2503 0207 00       		.byte	0
 2504 0208 00       		.byte	0
 2505 0209 27       		.uleb128 0x27
 2506 020a 34       		.uleb128 0x34
 2507 020b 00       		.byte	0
 2508 020c 31       		.uleb128 0x31
 2509 020d 13       		.uleb128 0x13
 2510 020e 02       		.uleb128 0x2
 2511 020f 06       		.uleb128 0x6
ARM GAS  /tmp/ccgFoonV.s 			page 95


 2512 0210 00       		.byte	0
 2513 0211 00       		.byte	0
 2514 0212 28       		.uleb128 0x28
 2515 0213 0B       		.uleb128 0xb
 2516 0214 01       		.byte	0x1
 2517 0215 55       		.uleb128 0x55
 2518 0216 06       		.uleb128 0x6
 2519 0217 00       		.byte	0
 2520 0218 00       		.byte	0
 2521 0219 29       		.uleb128 0x29
 2522 021a 898201   		.uleb128 0x4109
 2523 021d 01       		.byte	0x1
 2524 021e 11       		.uleb128 0x11
 2525 021f 01       		.uleb128 0x1
 2526 0220 9542     		.uleb128 0x2115
 2527 0222 0C       		.uleb128 0xc
 2528 0223 31       		.uleb128 0x31
 2529 0224 13       		.uleb128 0x13
 2530 0225 00       		.byte	0
 2531 0226 00       		.byte	0
 2532 0227 2A       		.uleb128 0x2a
 2533 0228 898201   		.uleb128 0x4109
 2534 022b 00       		.byte	0
 2535 022c 11       		.uleb128 0x11
 2536 022d 01       		.uleb128 0x1
 2537 022e 9542     		.uleb128 0x2115
 2538 0230 0C       		.uleb128 0xc
 2539 0231 31       		.uleb128 0x31
 2540 0232 13       		.uleb128 0x13
 2541 0233 00       		.byte	0
 2542 0234 00       		.byte	0
 2543 0235 2B       		.uleb128 0x2b
 2544 0236 2E       		.uleb128 0x2e
 2545 0237 01       		.byte	0x1
 2546 0238 3F       		.uleb128 0x3f
 2547 0239 0C       		.uleb128 0xc
 2548 023a 03       		.uleb128 0x3
 2549 023b 0E       		.uleb128 0xe
 2550 023c 3A       		.uleb128 0x3a
 2551 023d 0B       		.uleb128 0xb
 2552 023e 3B       		.uleb128 0x3b
 2553 023f 0B       		.uleb128 0xb
 2554 0240 27       		.uleb128 0x27
 2555 0241 0C       		.uleb128 0xc
 2556 0242 20       		.uleb128 0x20
 2557 0243 0B       		.uleb128 0xb
 2558 0244 01       		.uleb128 0x1
 2559 0245 13       		.uleb128 0x13
 2560 0246 00       		.byte	0
 2561 0247 00       		.byte	0
 2562 0248 2C       		.uleb128 0x2c
 2563 0249 05       		.uleb128 0x5
 2564 024a 00       		.byte	0
 2565 024b 03       		.uleb128 0x3
 2566 024c 0E       		.uleb128 0xe
 2567 024d 3A       		.uleb128 0x3a
 2568 024e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccgFoonV.s 			page 96


 2569 024f 3B       		.uleb128 0x3b
 2570 0250 0B       		.uleb128 0xb
 2571 0251 49       		.uleb128 0x49
 2572 0252 13       		.uleb128 0x13
 2573 0253 00       		.byte	0
 2574 0254 00       		.byte	0
 2575 0255 2D       		.uleb128 0x2d
 2576 0256 2E       		.uleb128 0x2e
 2577 0257 01       		.byte	0x1
 2578 0258 3F       		.uleb128 0x3f
 2579 0259 0C       		.uleb128 0xc
 2580 025a 03       		.uleb128 0x3
 2581 025b 0E       		.uleb128 0xe
 2582 025c 3A       		.uleb128 0x3a
 2583 025d 0B       		.uleb128 0xb
 2584 025e 3B       		.uleb128 0x3b
 2585 025f 0B       		.uleb128 0xb
 2586 0260 27       		.uleb128 0x27
 2587 0261 0C       		.uleb128 0xc
 2588 0262 11       		.uleb128 0x11
 2589 0263 01       		.uleb128 0x1
 2590 0264 12       		.uleb128 0x12
 2591 0265 01       		.uleb128 0x1
 2592 0266 40       		.uleb128 0x40
 2593 0267 06       		.uleb128 0x6
 2594 0268 9742     		.uleb128 0x2117
 2595 026a 0C       		.uleb128 0xc
 2596 026b 01       		.uleb128 0x1
 2597 026c 13       		.uleb128 0x13
 2598 026d 00       		.byte	0
 2599 026e 00       		.byte	0
 2600 026f 2E       		.uleb128 0x2e
 2601 0270 05       		.uleb128 0x5
 2602 0271 00       		.byte	0
 2603 0272 03       		.uleb128 0x3
 2604 0273 0E       		.uleb128 0xe
 2605 0274 3A       		.uleb128 0x3a
 2606 0275 0B       		.uleb128 0xb
 2607 0276 3B       		.uleb128 0x3b
 2608 0277 0B       		.uleb128 0xb
 2609 0278 49       		.uleb128 0x49
 2610 0279 13       		.uleb128 0x13
 2611 027a 02       		.uleb128 0x2
 2612 027b 06       		.uleb128 0x6
 2613 027c 00       		.byte	0
 2614 027d 00       		.byte	0
 2615 027e 2F       		.uleb128 0x2f
 2616 027f 34       		.uleb128 0x34
 2617 0280 00       		.byte	0
 2618 0281 03       		.uleb128 0x3
 2619 0282 08       		.uleb128 0x8
 2620 0283 3A       		.uleb128 0x3a
 2621 0284 0B       		.uleb128 0xb
 2622 0285 3B       		.uleb128 0x3b
 2623 0286 0B       		.uleb128 0xb
 2624 0287 49       		.uleb128 0x49
 2625 0288 13       		.uleb128 0x13
ARM GAS  /tmp/ccgFoonV.s 			page 97


 2626 0289 02       		.uleb128 0x2
 2627 028a 0A       		.uleb128 0xa
 2628 028b 00       		.byte	0
 2629 028c 00       		.byte	0
 2630 028d 30       		.uleb128 0x30
 2631 028e 2E       		.uleb128 0x2e
 2632 028f 01       		.byte	0x1
 2633 0290 3F       		.uleb128 0x3f
 2634 0291 0C       		.uleb128 0xc
 2635 0292 03       		.uleb128 0x3
 2636 0293 0E       		.uleb128 0xe
 2637 0294 3A       		.uleb128 0x3a
 2638 0295 0B       		.uleb128 0xb
 2639 0296 3B       		.uleb128 0x3b
 2640 0297 0B       		.uleb128 0xb
 2641 0298 27       		.uleb128 0x27
 2642 0299 0C       		.uleb128 0xc
 2643 029a 11       		.uleb128 0x11
 2644 029b 01       		.uleb128 0x1
 2645 029c 12       		.uleb128 0x12
 2646 029d 01       		.uleb128 0x1
 2647 029e 40       		.uleb128 0x40
 2648 029f 0A       		.uleb128 0xa
 2649 02a0 9742     		.uleb128 0x2117
 2650 02a2 0C       		.uleb128 0xc
 2651 02a3 01       		.uleb128 0x1
 2652 02a4 13       		.uleb128 0x13
 2653 02a5 00       		.byte	0
 2654 02a6 00       		.byte	0
 2655 02a7 31       		.uleb128 0x31
 2656 02a8 1D       		.uleb128 0x1d
 2657 02a9 01       		.byte	0x1
 2658 02aa 31       		.uleb128 0x31
 2659 02ab 13       		.uleb128 0x13
 2660 02ac 11       		.uleb128 0x11
 2661 02ad 01       		.uleb128 0x1
 2662 02ae 12       		.uleb128 0x12
 2663 02af 01       		.uleb128 0x1
 2664 02b0 58       		.uleb128 0x58
 2665 02b1 0B       		.uleb128 0xb
 2666 02b2 59       		.uleb128 0x59
 2667 02b3 0B       		.uleb128 0xb
 2668 02b4 00       		.byte	0
 2669 02b5 00       		.byte	0
 2670 02b6 32       		.uleb128 0x32
 2671 02b7 2E       		.uleb128 0x2e
 2672 02b8 00       		.byte	0
 2673 02b9 03       		.uleb128 0x3
 2674 02ba 0E       		.uleb128 0xe
 2675 02bb 3A       		.uleb128 0x3a
 2676 02bc 0B       		.uleb128 0xb
 2677 02bd 3B       		.uleb128 0x3b
 2678 02be 05       		.uleb128 0x5
 2679 02bf 27       		.uleb128 0x27
 2680 02c0 0C       		.uleb128 0xc
 2681 02c1 49       		.uleb128 0x49
 2682 02c2 13       		.uleb128 0x13
ARM GAS  /tmp/ccgFoonV.s 			page 98


 2683 02c3 20       		.uleb128 0x20
 2684 02c4 0B       		.uleb128 0xb
 2685 02c5 00       		.byte	0
 2686 02c6 00       		.byte	0
 2687 02c7 33       		.uleb128 0x33
 2688 02c8 2E       		.uleb128 0x2e
 2689 02c9 01       		.byte	0x1
 2690 02ca 03       		.uleb128 0x3
 2691 02cb 0E       		.uleb128 0xe
 2692 02cc 3A       		.uleb128 0x3a
 2693 02cd 0B       		.uleb128 0xb
 2694 02ce 3B       		.uleb128 0x3b
 2695 02cf 05       		.uleb128 0x5
 2696 02d0 27       		.uleb128 0x27
 2697 02d1 0C       		.uleb128 0xc
 2698 02d2 20       		.uleb128 0x20
 2699 02d3 0B       		.uleb128 0xb
 2700 02d4 01       		.uleb128 0x1
 2701 02d5 13       		.uleb128 0x13
 2702 02d6 00       		.byte	0
 2703 02d7 00       		.byte	0
 2704 02d8 34       		.uleb128 0x34
 2705 02d9 2E       		.uleb128 0x2e
 2706 02da 01       		.byte	0x1
 2707 02db 03       		.uleb128 0x3
 2708 02dc 0E       		.uleb128 0xe
 2709 02dd 3A       		.uleb128 0x3a
 2710 02de 0B       		.uleb128 0xb
 2711 02df 3B       		.uleb128 0x3b
 2712 02e0 0B       		.uleb128 0xb
 2713 02e1 27       		.uleb128 0x27
 2714 02e2 0C       		.uleb128 0xc
 2715 02e3 20       		.uleb128 0x20
 2716 02e4 0B       		.uleb128 0xb
 2717 02e5 01       		.uleb128 0x1
 2718 02e6 13       		.uleb128 0x13
 2719 02e7 00       		.byte	0
 2720 02e8 00       		.byte	0
 2721 02e9 35       		.uleb128 0x35
 2722 02ea 2E       		.uleb128 0x2e
 2723 02eb 00       		.byte	0
 2724 02ec 03       		.uleb128 0x3
 2725 02ed 0E       		.uleb128 0xe
 2726 02ee 3A       		.uleb128 0x3a
 2727 02ef 0B       		.uleb128 0xb
 2728 02f0 3B       		.uleb128 0x3b
 2729 02f1 05       		.uleb128 0x5
 2730 02f2 27       		.uleb128 0x27
 2731 02f3 0C       		.uleb128 0xc
 2732 02f4 20       		.uleb128 0x20
 2733 02f5 0B       		.uleb128 0xb
 2734 02f6 00       		.byte	0
 2735 02f7 00       		.byte	0
 2736 02f8 36       		.uleb128 0x36
 2737 02f9 2E       		.uleb128 0x2e
 2738 02fa 01       		.byte	0x1
 2739 02fb 31       		.uleb128 0x31
ARM GAS  /tmp/ccgFoonV.s 			page 99


 2740 02fc 13       		.uleb128 0x13
 2741 02fd 11       		.uleb128 0x11
 2742 02fe 01       		.uleb128 0x1
 2743 02ff 12       		.uleb128 0x12
 2744 0300 01       		.uleb128 0x1
 2745 0301 40       		.uleb128 0x40
 2746 0302 0A       		.uleb128 0xa
 2747 0303 9742     		.uleb128 0x2117
 2748 0305 0C       		.uleb128 0xc
 2749 0306 01       		.uleb128 0x1
 2750 0307 13       		.uleb128 0x13
 2751 0308 00       		.byte	0
 2752 0309 00       		.byte	0
 2753 030a 37       		.uleb128 0x37
 2754 030b 34       		.uleb128 0x34
 2755 030c 00       		.byte	0
 2756 030d 31       		.uleb128 0x31
 2757 030e 13       		.uleb128 0x13
 2758 030f 1C       		.uleb128 0x1c
 2759 0310 0B       		.uleb128 0xb
 2760 0311 00       		.byte	0
 2761 0312 00       		.byte	0
 2762 0313 38       		.uleb128 0x38
 2763 0314 34       		.uleb128 0x34
 2764 0315 00       		.byte	0
 2765 0316 31       		.uleb128 0x31
 2766 0317 13       		.uleb128 0x13
 2767 0318 00       		.byte	0
 2768 0319 00       		.byte	0
 2769 031a 39       		.uleb128 0x39
 2770 031b 2E       		.uleb128 0x2e
 2771 031c 01       		.byte	0x1
 2772 031d 31       		.uleb128 0x31
 2773 031e 13       		.uleb128 0x13
 2774 031f 11       		.uleb128 0x11
 2775 0320 01       		.uleb128 0x1
 2776 0321 12       		.uleb128 0x12
 2777 0322 01       		.uleb128 0x1
 2778 0323 40       		.uleb128 0x40
 2779 0324 0A       		.uleb128 0xa
 2780 0325 9742     		.uleb128 0x2117
 2781 0327 0C       		.uleb128 0xc
 2782 0328 00       		.byte	0
 2783 0329 00       		.byte	0
 2784 032a 3A       		.uleb128 0x3a
 2785 032b 05       		.uleb128 0x5
 2786 032c 00       		.byte	0
 2787 032d 31       		.uleb128 0x31
 2788 032e 13       		.uleb128 0x13
 2789 032f 02       		.uleb128 0x2
 2790 0330 0A       		.uleb128 0xa
 2791 0331 00       		.byte	0
 2792 0332 00       		.byte	0
 2793 0333 00       		.byte	0
 2794              		.section	.debug_loc,"",%progbits
 2795              	.Ldebug_loc0:
 2796              	.LLST4:
ARM GAS  /tmp/ccgFoonV.s 			page 100


 2797 0000 40000000 		.4byte	.LFB182-.Ltext0
 2798 0004 44000000 		.4byte	.LCFI0-.Ltext0
 2799 0008 0200     		.2byte	0x2
 2800 000a 7D       		.byte	0x7d
 2801 000b 00       		.sleb128 0
 2802 000c 44000000 		.4byte	.LCFI0-.Ltext0
 2803 0010 DC000000 		.4byte	.LFE182-.Ltext0
 2804 0014 0200     		.2byte	0x2
 2805 0016 7D       		.byte	0x7d
 2806 0017 18       		.sleb128 24
 2807 0018 00000000 		.4byte	0
 2808 001c 00000000 		.4byte	0
 2809              	.LLST5:
 2810 0020 40000000 		.4byte	.LVL10-.Ltext0
 2811 0024 60000000 		.4byte	.LVL12-.Ltext0
 2812 0028 0100     		.2byte	0x1
 2813 002a 50       		.byte	0x50
 2814 002b 60000000 		.4byte	.LVL12-.Ltext0
 2815 002f C0000000 		.4byte	.LVL20-.Ltext0
 2816 0033 0100     		.2byte	0x1
 2817 0035 55       		.byte	0x55
 2818 0036 C0000000 		.4byte	.LVL20-.Ltext0
 2819 003a C4000000 		.4byte	.LVL21-.Ltext0
 2820 003e 0400     		.2byte	0x4
 2821 0040 F3       		.byte	0xf3
 2822 0041 01       		.uleb128 0x1
 2823 0042 50       		.byte	0x50
 2824 0043 9F       		.byte	0x9f
 2825 0044 C4000000 		.4byte	.LVL21-.Ltext0
 2826 0048 C7000000 		.4byte	.LVL22-1-.Ltext0
 2827 004c 0100     		.2byte	0x1
 2828 004e 50       		.byte	0x50
 2829 004f C7000000 		.4byte	.LVL22-1-.Ltext0
 2830 0053 CC000000 		.4byte	.LVL23-.Ltext0
 2831 0057 0100     		.2byte	0x1
 2832 0059 55       		.byte	0x55
 2833 005a CC000000 		.4byte	.LVL23-.Ltext0
 2834 005e DC000000 		.4byte	.LFE182-.Ltext0
 2835 0062 0400     		.2byte	0x4
 2836 0064 F3       		.byte	0xf3
 2837 0065 01       		.uleb128 0x1
 2838 0066 50       		.byte	0x50
 2839 0067 9F       		.byte	0x9f
 2840 0068 00000000 		.4byte	0
 2841 006c 00000000 		.4byte	0
 2842              	.LLST6:
 2843 0070 40000000 		.4byte	.LVL10-.Ltext0
 2844 0074 B2000000 		.4byte	.LVL18-.Ltext0
 2845 0078 0200     		.2byte	0x2
 2846 007a 30       		.byte	0x30
 2847 007b 9F       		.byte	0x9f
 2848 007c B2000000 		.4byte	.LVL18-.Ltext0
 2849 0080 B4000000 		.4byte	.LVL19-.Ltext0
 2850 0084 0100     		.2byte	0x1
 2851 0086 50       		.byte	0x50
 2852 0087 B4000000 		.4byte	.LVL19-.Ltext0
 2853 008b C8000000 		.4byte	.LVL22-.Ltext0
ARM GAS  /tmp/ccgFoonV.s 			page 101


 2854 008f 0200     		.2byte	0x2
 2855 0091 30       		.byte	0x30
 2856 0092 9F       		.byte	0x9f
 2857 0093 C8000000 		.4byte	.LVL22-.Ltext0
 2858 0097 CC000000 		.4byte	.LVL23-.Ltext0
 2859 009b 0100     		.2byte	0x1
 2860 009d 50       		.byte	0x50
 2861 009e 00000000 		.4byte	0
 2862 00a2 00000000 		.4byte	0
 2863              	.LLST7:
 2864 00a6 40000000 		.4byte	.LVL10-.Ltext0
 2865 00aa 5C000000 		.4byte	.LVL11-.Ltext0
 2866 00ae 0200     		.2byte	0x2
 2867 00b0 30       		.byte	0x30
 2868 00b1 9F       		.byte	0x9f
 2869 00b2 5C000000 		.4byte	.LVL11-.Ltext0
 2870 00b6 D0000000 		.4byte	.LVL24-.Ltext0
 2871 00ba 0100     		.2byte	0x1
 2872 00bc 58       		.byte	0x58
 2873 00bd 00000000 		.4byte	0
 2874 00c1 00000000 		.4byte	0
 2875              	.LLST8:
 2876 00c5 6E000000 		.4byte	.LVL13-.Ltext0
 2877 00c9 7A000000 		.4byte	.LVL14-.Ltext0
 2878 00cd 0200     		.2byte	0x2
 2879 00cf 71       		.byte	0x71
 2880 00d0 00       		.sleb128 0
 2881 00d1 00000000 		.4byte	0
 2882 00d5 00000000 		.4byte	0
 2883              	.LLST9:
 2884 00d9 7A000000 		.4byte	.LVL14-.Ltext0
 2885 00dd C4000000 		.4byte	.LVL21-.Ltext0
 2886 00e1 0200     		.2byte	0x2
 2887 00e3 32       		.byte	0x32
 2888 00e4 9F       		.byte	0x9f
 2889 00e5 00000000 		.4byte	0
 2890 00e9 00000000 		.4byte	0
 2891              	.LLST10:
 2892 00ed 90000000 		.4byte	.LVL15-.Ltext0
 2893 00f1 9C000000 		.4byte	.LVL16-.Ltext0
 2894 00f5 0200     		.2byte	0x2
 2895 00f7 71       		.byte	0x71
 2896 00f8 04       		.sleb128 4
 2897 00f9 00000000 		.4byte	0
 2898 00fd 00000000 		.4byte	0
 2899              	.LLST11:
 2900 0101 9C000000 		.4byte	.LVL16-.Ltext0
 2901 0105 AA000000 		.4byte	.LVL17-.Ltext0
 2902 0109 0200     		.2byte	0x2
 2903 010b 71       		.byte	0x71
 2904 010c 08       		.sleb128 8
 2905 010d AA000000 		.4byte	.LVL17-.Ltext0
 2906 0111 B1000000 		.4byte	.LVL18-1-.Ltext0
 2907 0115 0100     		.2byte	0x1
 2908 0117 52       		.byte	0x52
 2909 0118 00000000 		.4byte	0
 2910 011c 00000000 		.4byte	0
ARM GAS  /tmp/ccgFoonV.s 			page 102


 2911              	.LLST26:
 2912 0120 78010000 		.4byte	.LFB178-.Ltext0
 2913 0124 7A010000 		.4byte	.LCFI8-.Ltext0
 2914 0128 0200     		.2byte	0x2
 2915 012a 7D       		.byte	0x7d
 2916 012b 00       		.sleb128 0
 2917 012c 7A010000 		.4byte	.LCFI8-.Ltext0
 2918 0130 D2010000 		.4byte	.LCFI9-.Ltext0
 2919 0134 0200     		.2byte	0x2
 2920 0136 7D       		.byte	0x7d
 2921 0137 10       		.sleb128 16
 2922 0138 D2010000 		.4byte	.LCFI9-.Ltext0
 2923 013c D4010000 		.4byte	.LCFI10-.Ltext0
 2924 0140 0200     		.2byte	0x2
 2925 0142 7D       		.byte	0x7d
 2926 0143 00       		.sleb128 0
 2927 0144 D4010000 		.4byte	.LCFI10-.Ltext0
 2928 0148 D8010000 		.4byte	.LCFI11-.Ltext0
 2929 014c 0200     		.2byte	0x2
 2930 014e 7D       		.byte	0x7d
 2931 014f 10       		.sleb128 16
 2932 0150 D8010000 		.4byte	.LCFI11-.Ltext0
 2933 0154 E0010000 		.4byte	.LFE178-.Ltext0
 2934 0158 0200     		.2byte	0x2
 2935 015a 7D       		.byte	0x7d
 2936 015b 00       		.sleb128 0
 2937 015c 00000000 		.4byte	0
 2938 0160 00000000 		.4byte	0
 2939              	.LLST27:
 2940 0164 78010000 		.4byte	.LVL42-.Ltext0
 2941 0168 8E010000 		.4byte	.LVL44-.Ltext0
 2942 016c 0100     		.2byte	0x1
 2943 016e 50       		.byte	0x50
 2944 016f 8E010000 		.4byte	.LVL44-.Ltext0
 2945 0173 D4010000 		.4byte	.LVL51-.Ltext0
 2946 0177 0400     		.2byte	0x4
 2947 0179 F3       		.byte	0xf3
 2948 017a 01       		.uleb128 0x1
 2949 017b 50       		.byte	0x50
 2950 017c 9F       		.byte	0x9f
 2951 017d D4010000 		.4byte	.LVL51-.Ltext0
 2952 0181 D6010000 		.4byte	.LVL52-.Ltext0
 2953 0185 0100     		.2byte	0x1
 2954 0187 50       		.byte	0x50
 2955 0188 D6010000 		.4byte	.LVL52-.Ltext0
 2956 018c E0010000 		.4byte	.LFE178-.Ltext0
 2957 0190 0400     		.2byte	0x4
 2958 0192 F3       		.byte	0xf3
 2959 0193 01       		.uleb128 0x1
 2960 0194 50       		.byte	0x50
 2961 0195 9F       		.byte	0x9f
 2962 0196 00000000 		.4byte	0
 2963 019a 00000000 		.4byte	0
 2964              	.LLST28:
 2965 019e 78010000 		.4byte	.LVL42-.Ltext0
 2966 01a2 B4010000 		.4byte	.LVL47-.Ltext0
 2967 01a6 0100     		.2byte	0x1
ARM GAS  /tmp/ccgFoonV.s 			page 103


 2968 01a8 51       		.byte	0x51
 2969 01a9 B4010000 		.4byte	.LVL47-.Ltext0
 2970 01ad D4010000 		.4byte	.LVL51-.Ltext0
 2971 01b1 0400     		.2byte	0x4
 2972 01b3 F3       		.byte	0xf3
 2973 01b4 01       		.uleb128 0x1
 2974 01b5 51       		.byte	0x51
 2975 01b6 9F       		.byte	0x9f
 2976 01b7 D4010000 		.4byte	.LVL51-.Ltext0
 2977 01bb E0010000 		.4byte	.LFE178-.Ltext0
 2978 01bf 0100     		.2byte	0x1
 2979 01c1 51       		.byte	0x51
 2980 01c2 00000000 		.4byte	0
 2981 01c6 00000000 		.4byte	0
 2982              	.LLST29:
 2983 01ca 78010000 		.4byte	.LVL42-.Ltext0
 2984 01ce 90010000 		.4byte	.LVL45-.Ltext0
 2985 01d2 0100     		.2byte	0x1
 2986 01d4 52       		.byte	0x52
 2987 01d5 90010000 		.4byte	.LVL45-.Ltext0
 2988 01d9 D4010000 		.4byte	.LVL51-.Ltext0
 2989 01dd 0400     		.2byte	0x4
 2990 01df F3       		.byte	0xf3
 2991 01e0 01       		.uleb128 0x1
 2992 01e1 52       		.byte	0x52
 2993 01e2 9F       		.byte	0x9f
 2994 01e3 D4010000 		.4byte	.LVL51-.Ltext0
 2995 01e7 E0010000 		.4byte	.LFE178-.Ltext0
 2996 01eb 0100     		.2byte	0x1
 2997 01ed 52       		.byte	0x52
 2998 01ee 00000000 		.4byte	0
 2999 01f2 00000000 		.4byte	0
 3000              	.LLST30:
 3001 01f6 78010000 		.4byte	.LVL42-.Ltext0
 3002 01fa D3010000 		.4byte	.LVL51-1-.Ltext0
 3003 01fe 0100     		.2byte	0x1
 3004 0200 53       		.byte	0x53
 3005 0201 D3010000 		.4byte	.LVL51-1-.Ltext0
 3006 0205 D4010000 		.4byte	.LVL51-.Ltext0
 3007 0209 0100     		.2byte	0x1
 3008 020b 51       		.byte	0x51
 3009 020c D4010000 		.4byte	.LVL51-.Ltext0
 3010 0210 E0010000 		.4byte	.LFE178-.Ltext0
 3011 0214 0100     		.2byte	0x1
 3012 0216 53       		.byte	0x53
 3013 0217 00000000 		.4byte	0
 3014 021b 00000000 		.4byte	0
 3015              	.LLST31:
 3016 021f 78010000 		.4byte	.LVL42-.Ltext0
 3017 0223 9A010000 		.4byte	.LVL46-.Ltext0
 3018 0227 0200     		.2byte	0x2
 3019 0229 30       		.byte	0x30
 3020 022a 9F       		.byte	0x9f
 3021 022b D4010000 		.4byte	.LVL51-.Ltext0
 3022 022f E0010000 		.4byte	.LFE178-.Ltext0
 3023 0233 0200     		.2byte	0x2
 3024 0235 30       		.byte	0x30
ARM GAS  /tmp/ccgFoonV.s 			page 104


 3025 0236 9F       		.byte	0x9f
 3026 0237 00000000 		.4byte	0
 3027 023b 00000000 		.4byte	0
 3028              	.LLST32:
 3029 023f 78010000 		.4byte	.LVL42-.Ltext0
 3030 0243 82010000 		.4byte	.LVL43-.Ltext0
 3031 0247 0200     		.2byte	0x2
 3032 0249 30       		.byte	0x30
 3033 024a 9F       		.byte	0x9f
 3034 024b D4010000 		.4byte	.LVL51-.Ltext0
 3035 024f E0010000 		.4byte	.LFE178-.Ltext0
 3036 0253 0200     		.2byte	0x2
 3037 0255 30       		.byte	0x30
 3038 0256 9F       		.byte	0x9f
 3039 0257 00000000 		.4byte	0
 3040 025b 00000000 		.4byte	0
 3041              	.LLST33:
 3042 025f 82010000 		.4byte	.LVL43-.Ltext0
 3043 0263 90010000 		.4byte	.LVL45-.Ltext0
 3044 0267 0100     		.2byte	0x1
 3045 0269 52       		.byte	0x52
 3046 026a 90010000 		.4byte	.LVL45-.Ltext0
 3047 026e 9A010000 		.4byte	.LVL46-.Ltext0
 3048 0272 0400     		.2byte	0x4
 3049 0274 F3       		.byte	0xf3
 3050 0275 01       		.uleb128 0x1
 3051 0276 52       		.byte	0x52
 3052 0277 9F       		.byte	0x9f
 3053 0278 00000000 		.4byte	0
 3054 027c 00000000 		.4byte	0
 3055              	.LLST34:
 3056 0280 82010000 		.4byte	.LVL43-.Ltext0
 3057 0284 8E010000 		.4byte	.LVL44-.Ltext0
 3058 0288 0100     		.2byte	0x1
 3059 028a 50       		.byte	0x50
 3060 028b 8E010000 		.4byte	.LVL44-.Ltext0
 3061 028f 9A010000 		.4byte	.LVL46-.Ltext0
 3062 0293 0400     		.2byte	0x4
 3063 0295 F3       		.byte	0xf3
 3064 0296 01       		.uleb128 0x1
 3065 0297 50       		.byte	0x50
 3066 0298 9F       		.byte	0x9f
 3067 0299 00000000 		.4byte	0
 3068 029d 00000000 		.4byte	0
 3069              	.LLST35:
 3070 02a1 82010000 		.4byte	.LVL43-.Ltext0
 3071 02a5 9A010000 		.4byte	.LVL46-.Ltext0
 3072 02a9 0200     		.2byte	0x2
 3073 02ab 30       		.byte	0x30
 3074 02ac 9F       		.byte	0x9f
 3075 02ad 00000000 		.4byte	0
 3076 02b1 00000000 		.4byte	0
 3077              	.LLST36:
 3078 02b5 BA010000 		.4byte	.LVL48-.Ltext0
 3079 02b9 CE010000 		.4byte	.LVL50-.Ltext0
 3080 02bd 0100     		.2byte	0x1
 3081 02bf 57       		.byte	0x57
ARM GAS  /tmp/ccgFoonV.s 			page 105


 3082 02c0 00000000 		.4byte	0
 3083 02c4 00000000 		.4byte	0
 3084              	.LLST37:
 3085 02c8 BA010000 		.4byte	.LVL48-.Ltext0
 3086 02cc C0010000 		.4byte	.LVL49-.Ltext0
 3087 02d0 0700     		.2byte	0x7
 3088 02d2 76       		.byte	0x76
 3089 02d3 00       		.sleb128 0
 3090 02d4 40       		.byte	0x40
 3091 02d5 3C       		.byte	0x3c
 3092 02d6 24       		.byte	0x24
 3093 02d7 21       		.byte	0x21
 3094 02d8 9F       		.byte	0x9f
 3095 02d9 00000000 		.4byte	0
 3096 02dd 00000000 		.4byte	0
 3097              	.LLST17:
 3098 02e1 2C010000 		.4byte	.LFB177-.Ltext0
 3099 02e5 30010000 		.4byte	.LCFI4-.Ltext0
 3100 02e9 0200     		.2byte	0x2
 3101 02eb 7D       		.byte	0x7d
 3102 02ec 00       		.sleb128 0
 3103 02ed 30010000 		.4byte	.LCFI4-.Ltext0
 3104 02f1 68010000 		.4byte	.LCFI5-.Ltext0
 3105 02f5 0200     		.2byte	0x2
 3106 02f7 7D       		.byte	0x7d
 3107 02f8 08       		.sleb128 8
 3108 02f9 68010000 		.4byte	.LCFI5-.Ltext0
 3109 02fd 6A010000 		.4byte	.LCFI6-.Ltext0
 3110 0301 0200     		.2byte	0x2
 3111 0303 7D       		.byte	0x7d
 3112 0304 00       		.sleb128 0
 3113 0305 6A010000 		.4byte	.LCFI6-.Ltext0
 3114 0309 6E010000 		.4byte	.LCFI7-.Ltext0
 3115 030d 0200     		.2byte	0x2
 3116 030f 7D       		.byte	0x7d
 3117 0310 08       		.sleb128 8
 3118 0311 6E010000 		.4byte	.LCFI7-.Ltext0
 3119 0315 78010000 		.4byte	.LFE177-.Ltext0
 3120 0319 0200     		.2byte	0x2
 3121 031b 7D       		.byte	0x7d
 3122 031c 00       		.sleb128 0
 3123 031d 00000000 		.4byte	0
 3124 0321 00000000 		.4byte	0
 3125              	.LLST18:
 3126 0325 2C010000 		.4byte	.LVL33-.Ltext0
 3127 0329 42010000 		.4byte	.LVL36-.Ltext0
 3128 032d 0100     		.2byte	0x1
 3129 032f 50       		.byte	0x50
 3130 0330 42010000 		.4byte	.LVL36-.Ltext0
 3131 0334 6A010000 		.4byte	.LVL40-.Ltext0
 3132 0338 0400     		.2byte	0x4
 3133 033a F3       		.byte	0xf3
 3134 033b 01       		.uleb128 0x1
 3135 033c 50       		.byte	0x50
 3136 033d 9F       		.byte	0x9f
 3137 033e 6A010000 		.4byte	.LVL40-.Ltext0
 3138 0342 6C010000 		.4byte	.LVL41-.Ltext0
ARM GAS  /tmp/ccgFoonV.s 			page 106


 3139 0346 0100     		.2byte	0x1
 3140 0348 50       		.byte	0x50
 3141 0349 6C010000 		.4byte	.LVL41-.Ltext0
 3142 034d 78010000 		.4byte	.LFE177-.Ltext0
 3143 0351 0400     		.2byte	0x4
 3144 0353 F3       		.byte	0xf3
 3145 0354 01       		.uleb128 0x1
 3146 0355 50       		.byte	0x50
 3147 0356 9F       		.byte	0x9f
 3148 0357 00000000 		.4byte	0
 3149 035b 00000000 		.4byte	0
 3150              	.LLST19:
 3151 035f 2C010000 		.4byte	.LVL33-.Ltext0
 3152 0363 4C010000 		.4byte	.LVL37-.Ltext0
 3153 0367 0200     		.2byte	0x2
 3154 0369 30       		.byte	0x30
 3155 036a 9F       		.byte	0x9f
 3156 036b 6A010000 		.4byte	.LVL40-.Ltext0
 3157 036f 78010000 		.4byte	.LFE177-.Ltext0
 3158 0373 0200     		.2byte	0x2
 3159 0375 30       		.byte	0x30
 3160 0376 9F       		.byte	0x9f
 3161 0377 00000000 		.4byte	0
 3162 037b 00000000 		.4byte	0
 3163              	.LLST20:
 3164 037f 2C010000 		.4byte	.LVL33-.Ltext0
 3165 0383 36010000 		.4byte	.LVL34-.Ltext0
 3166 0387 0200     		.2byte	0x2
 3167 0389 30       		.byte	0x30
 3168 038a 9F       		.byte	0x9f
 3169 038b 6A010000 		.4byte	.LVL40-.Ltext0
 3170 038f 78010000 		.4byte	.LFE177-.Ltext0
 3171 0393 0200     		.2byte	0x2
 3172 0395 30       		.byte	0x30
 3173 0396 9F       		.byte	0x9f
 3174 0397 00000000 		.4byte	0
 3175 039b 00000000 		.4byte	0
 3176              	.LLST21:
 3177 039f 3E010000 		.4byte	.LVL35-.Ltext0
 3178 03a3 42010000 		.4byte	.LVL36-.Ltext0
 3179 03a7 0100     		.2byte	0x1
 3180 03a9 50       		.byte	0x50
 3181 03aa 42010000 		.4byte	.LVL36-.Ltext0
 3182 03ae 4C010000 		.4byte	.LVL37-.Ltext0
 3183 03b2 0400     		.2byte	0x4
 3184 03b4 F3       		.byte	0xf3
 3185 03b5 01       		.uleb128 0x1
 3186 03b6 50       		.byte	0x50
 3187 03b7 9F       		.byte	0x9f
 3188 03b8 00000000 		.4byte	0
 3189 03bc 00000000 		.4byte	0
 3190              	.LLST22:
 3191 03c0 3E010000 		.4byte	.LVL35-.Ltext0
 3192 03c4 4C010000 		.4byte	.LVL37-.Ltext0
 3193 03c8 0600     		.2byte	0x6
 3194 03ca 0C       		.byte	0xc
 3195 03cb 00127A00 		.4byte	0x7a1200
ARM GAS  /tmp/ccgFoonV.s 			page 107


 3196 03cf 9F       		.byte	0x9f
 3197 03d0 00000000 		.4byte	0
 3198 03d4 00000000 		.4byte	0
 3199              	.LLST23:
 3200 03d8 3E010000 		.4byte	.LVL35-.Ltext0
 3201 03dc 4C010000 		.4byte	.LVL37-.Ltext0
 3202 03e0 0200     		.2byte	0x2
 3203 03e2 30       		.byte	0x30
 3204 03e3 9F       		.byte	0x9f
 3205 03e4 00000000 		.4byte	0
 3206 03e8 00000000 		.4byte	0
 3207              	.LLST24:
 3208 03ec 5C010000 		.4byte	.LVL38-.Ltext0
 3209 03f0 66010000 		.4byte	.LVL39-.Ltext0
 3210 03f4 0100     		.2byte	0x1
 3211 03f6 55       		.byte	0x55
 3212 03f7 00000000 		.4byte	0
 3213 03fb 00000000 		.4byte	0
 3214              	.LLST25:
 3215 03ff 5C010000 		.4byte	.LVL38-.Ltext0
 3216 0403 66010000 		.4byte	.LVL39-.Ltext0
 3217 0407 0200     		.2byte	0x2
 3218 0409 30       		.byte	0x30
 3219 040a 9F       		.byte	0x9f
 3220 040b 00000000 		.4byte	0
 3221 040f 00000000 		.4byte	0
 3222              	.LLST15:
 3223 0413 F8000000 		.4byte	.LFB175-.Ltext0
 3224 0417 FC000000 		.4byte	.LCFI1-.Ltext0
 3225 041b 0200     		.2byte	0x2
 3226 041d 7D       		.byte	0x7d
 3227 041e 00       		.sleb128 0
 3228 041f FC000000 		.4byte	.LCFI1-.Ltext0
 3229 0423 0E010000 		.4byte	.LCFI2-.Ltext0
 3230 0427 0200     		.2byte	0x2
 3231 0429 7D       		.byte	0x7d
 3232 042a 08       		.sleb128 8
 3233 042b 0E010000 		.4byte	.LCFI2-.Ltext0
 3234 042f 10010000 		.4byte	.LCFI3-.Ltext0
 3235 0433 0200     		.2byte	0x2
 3236 0435 7D       		.byte	0x7d
 3237 0436 00       		.sleb128 0
 3238 0437 10010000 		.4byte	.LCFI3-.Ltext0
 3239 043b 20010000 		.4byte	.LFE175-.Ltext0
 3240 043f 0200     		.2byte	0x2
 3241 0441 7D       		.byte	0x7d
 3242 0442 08       		.sleb128 8
 3243 0443 00000000 		.4byte	0
 3244 0447 00000000 		.4byte	0
 3245              	.LLST16:
 3246 044b F8000000 		.4byte	.LVL28-.Ltext0
 3247 044f 0A010000 		.4byte	.LVL29-.Ltext0
 3248 0453 0100     		.2byte	0x1
 3249 0455 50       		.byte	0x50
 3250 0456 0A010000 		.4byte	.LVL29-.Ltext0
 3251 045a 10010000 		.4byte	.LVL30-.Ltext0
 3252 045e 0100     		.2byte	0x1
ARM GAS  /tmp/ccgFoonV.s 			page 108


 3253 0460 50       		.byte	0x50
 3254 0461 1A010000 		.4byte	.LVL31-.Ltext0
 3255 0465 20010000 		.4byte	.LFE175-.Ltext0
 3256 0469 0100     		.2byte	0x1
 3257 046b 50       		.byte	0x50
 3258 046c 00000000 		.4byte	0
 3259 0470 00000000 		.4byte	0
 3260              	.LLST12:
 3261 0474 DC000000 		.4byte	.LVL25-.Ltext0
 3262 0478 E4000000 		.4byte	.LVL26-.Ltext0
 3263 047c 0100     		.2byte	0x1
 3264 047e 50       		.byte	0x50
 3265 047f E4000000 		.4byte	.LVL26-.Ltext0
 3266 0483 F8000000 		.4byte	.LFE174-.Ltext0
 3267 0487 0400     		.2byte	0x4
 3268 0489 F3       		.byte	0xf3
 3269 048a 01       		.uleb128 0x1
 3270 048b 50       		.byte	0x50
 3271 048c 9F       		.byte	0x9f
 3272 048d 00000000 		.4byte	0
 3273 0491 00000000 		.4byte	0
 3274              	.LLST13:
 3275 0495 DC000000 		.4byte	.LVL25-.Ltext0
 3276 0499 F2000000 		.4byte	.LVL27-.Ltext0
 3277 049d 0400     		.2byte	0x4
 3278 049f 0A       		.byte	0xa
 3279 04a0 E803     		.2byte	0x3e8
 3280 04a2 9F       		.byte	0x9f
 3281 04a3 00000000 		.4byte	0
 3282 04a7 00000000 		.4byte	0
 3283              	.LLST14:
 3284 04ab DC000000 		.4byte	.LVL25-.Ltext0
 3285 04af E4000000 		.4byte	.LVL26-.Ltext0
 3286 04b3 0100     		.2byte	0x1
 3287 04b5 50       		.byte	0x50
 3288 04b6 E4000000 		.4byte	.LVL26-.Ltext0
 3289 04ba F2000000 		.4byte	.LVL27-.Ltext0
 3290 04be 0400     		.2byte	0x4
 3291 04c0 F3       		.byte	0xf3
 3292 04c1 01       		.uleb128 0x1
 3293 04c2 50       		.byte	0x50
 3294 04c3 9F       		.byte	0x9f
 3295 04c4 00000000 		.4byte	0
 3296 04c8 00000000 		.4byte	0
 3297              	.LLST0:
 3298 04cc 00000000 		.4byte	.LVL0-.Ltext0
 3299 04d0 10000000 		.4byte	.LVL2-.Ltext0
 3300 04d4 0100     		.2byte	0x1
 3301 04d6 50       		.byte	0x50
 3302 04d7 10000000 		.4byte	.LVL2-.Ltext0
 3303 04db 2C000000 		.4byte	.LVL6-.Ltext0
 3304 04df 0400     		.2byte	0x4
 3305 04e1 F3       		.byte	0xf3
 3306 04e2 01       		.uleb128 0x1
 3307 04e3 50       		.byte	0x50
 3308 04e4 9F       		.byte	0x9f
 3309 04e5 2C000000 		.4byte	.LVL6-.Ltext0
ARM GAS  /tmp/ccgFoonV.s 			page 109


 3310 04e9 2E000000 		.4byte	.LVL7-.Ltext0
 3311 04ed 0100     		.2byte	0x1
 3312 04ef 50       		.byte	0x50
 3313 04f0 2E000000 		.4byte	.LVL7-.Ltext0
 3314 04f4 30000000 		.4byte	.LVL8-.Ltext0
 3315 04f8 0400     		.2byte	0x4
 3316 04fa F3       		.byte	0xf3
 3317 04fb 01       		.uleb128 0x1
 3318 04fc 50       		.byte	0x50
 3319 04fd 9F       		.byte	0x9f
 3320 04fe 30000000 		.4byte	.LVL8-.Ltext0
 3321 0502 32000000 		.4byte	.LVL9-.Ltext0
 3322 0506 0100     		.2byte	0x1
 3323 0508 50       		.byte	0x50
 3324 0509 32000000 		.4byte	.LVL9-.Ltext0
 3325 050d 40000000 		.4byte	.LFE179-.Ltext0
 3326 0511 0400     		.2byte	0x4
 3327 0513 F3       		.byte	0xf3
 3328 0514 01       		.uleb128 0x1
 3329 0515 50       		.byte	0x50
 3330 0516 9F       		.byte	0x9f
 3331 0517 00000000 		.4byte	0
 3332 051b 00000000 		.4byte	0
 3333              	.LLST1:
 3334 051f 00000000 		.4byte	.LVL0-.Ltext0
 3335 0523 32000000 		.4byte	.LVL9-.Ltext0
 3336 0527 0200     		.2byte	0x2
 3337 0529 30       		.byte	0x30
 3338 052a 9F       		.byte	0x9f
 3339 052b 32000000 		.4byte	.LVL9-.Ltext0
 3340 052f 40000000 		.4byte	.LFE179-.Ltext0
 3341 0533 0100     		.2byte	0x1
 3342 0535 50       		.byte	0x50
 3343 0536 00000000 		.4byte	0
 3344 053a 00000000 		.4byte	0
 3345              	.LLST2:
 3346 053e 02000000 		.4byte	.LVL1-.Ltext0
 3347 0542 10000000 		.4byte	.LVL2-.Ltext0
 3348 0546 0100     		.2byte	0x1
 3349 0548 50       		.byte	0x50
 3350 0549 10000000 		.4byte	.LVL2-.Ltext0
 3351 054d 2C000000 		.4byte	.LVL6-.Ltext0
 3352 0551 0400     		.2byte	0x4
 3353 0553 F3       		.byte	0xf3
 3354 0554 01       		.uleb128 0x1
 3355 0555 50       		.byte	0x50
 3356 0556 9F       		.byte	0x9f
 3357 0557 2C000000 		.4byte	.LVL6-.Ltext0
 3358 055b 2E000000 		.4byte	.LVL7-.Ltext0
 3359 055f 0100     		.2byte	0x1
 3360 0561 50       		.byte	0x50
 3361 0562 2E000000 		.4byte	.LVL7-.Ltext0
 3362 0566 30000000 		.4byte	.LVL8-.Ltext0
 3363 056a 0400     		.2byte	0x4
 3364 056c F3       		.byte	0xf3
 3365 056d 01       		.uleb128 0x1
 3366 056e 50       		.byte	0x50
ARM GAS  /tmp/ccgFoonV.s 			page 110


 3367 056f 9F       		.byte	0x9f
 3368 0570 00000000 		.4byte	0
 3369 0574 00000000 		.4byte	0
 3370              	.LLST3:
 3371 0578 12000000 		.4byte	.LVL3-.Ltext0
 3372 057c 1E000000 		.4byte	.LVL4-.Ltext0
 3373 0580 0100     		.2byte	0x1
 3374 0582 50       		.byte	0x50
 3375 0583 00000000 		.4byte	0
 3376 0587 00000000 		.4byte	0
 3377              		.section	.debug_aranges,"",%progbits
 3378 0000 1C000000 		.4byte	0x1c
 3379 0004 0200     		.2byte	0x2
 3380 0006 00000000 		.4byte	.Ldebug_info0
 3381 000a 04       		.byte	0x4
 3382 000b 00       		.byte	0
 3383 000c 0000     		.2byte	0
 3384 000e 0000     		.2byte	0
 3385 0010 00000000 		.4byte	.Ltext0
 3386 0014 E0010000 		.4byte	.Letext0-.Ltext0
 3387 0018 00000000 		.4byte	0
 3388 001c 00000000 		.4byte	0
 3389              		.section	.debug_ranges,"",%progbits
 3390              	.Ldebug_ranges0:
 3391 0000 02000000 		.4byte	.LBB18-.Ltext0
 3392 0004 24000000 		.4byte	.LBE18-.Ltext0
 3393 0008 2C000000 		.4byte	.LBB25-.Ltext0
 3394 000c 30000000 		.4byte	.LBE25-.Ltext0
 3395 0010 00000000 		.4byte	0
 3396 0014 00000000 		.4byte	0
 3397 0018 44000000 		.4byte	.LBB44-.Ltext0
 3398 001c 46000000 		.4byte	.LBE44-.Ltext0
 3399 0020 48000000 		.4byte	.LBB47-.Ltext0
 3400 0024 4A000000 		.4byte	.LBE47-.Ltext0
 3401 0028 00000000 		.4byte	0
 3402 002c 00000000 		.4byte	0
 3403 0030 9C000000 		.4byte	.LBB60-.Ltext0
 3404 0034 A6000000 		.4byte	.LBE60-.Ltext0
 3405 0038 A8000000 		.4byte	.LBB63-.Ltext0
 3406 003c AA000000 		.4byte	.LBE63-.Ltext0
 3407 0040 00000000 		.4byte	0
 3408 0044 00000000 		.4byte	0
 3409 0048 B6000000 		.4byte	.LBB64-.Ltext0
 3410 004c B8000000 		.4byte	.LBE64-.Ltext0
 3411 0050 C0000000 		.4byte	.LBB67-.Ltext0
 3412 0054 C4000000 		.4byte	.LBE67-.Ltext0
 3413 0058 00000000 		.4byte	0
 3414 005c 00000000 		.4byte	0
 3415 0060 2C010000 		.4byte	.LBB86-.Ltext0
 3416 0064 2E010000 		.4byte	.LBE86-.Ltext0
 3417 0068 30010000 		.4byte	.LBB93-.Ltext0
 3418 006c 36010000 		.4byte	.LBE93-.Ltext0
 3419 0070 00000000 		.4byte	0
 3420 0074 00000000 		.4byte	0
 3421 0078 2C010000 		.4byte	.LBB88-.Ltext0
 3422 007c 2E010000 		.4byte	.LBE88-.Ltext0
 3423 0080 30010000 		.4byte	.LBB91-.Ltext0
ARM GAS  /tmp/ccgFoonV.s 			page 111


 3424 0084 32010000 		.4byte	.LBE91-.Ltext0
 3425 0088 00000000 		.4byte	0
 3426 008c 00000000 		.4byte	0
 3427 0090 3A010000 		.4byte	.LBB94-.Ltext0
 3428 0094 3C010000 		.4byte	.LBE94-.Ltext0
 3429 0098 40010000 		.4byte	.LBB100-.Ltext0
 3430 009c 46010000 		.4byte	.LBE100-.Ltext0
 3431 00a0 48010000 		.4byte	.LBB101-.Ltext0
 3432 00a4 4C010000 		.4byte	.LBE101-.Ltext0
 3433 00a8 00000000 		.4byte	0
 3434 00ac 00000000 		.4byte	0
 3435 00b0 82010000 		.4byte	.LBB130-.Ltext0
 3436 00b4 8E010000 		.4byte	.LBE130-.Ltext0
 3437 00b8 90010000 		.4byte	.LBB136-.Ltext0
 3438 00bc 94010000 		.4byte	.LBE136-.Ltext0
 3439 00c0 96010000 		.4byte	.LBB137-.Ltext0
 3440 00c4 9A010000 		.4byte	.LBE137-.Ltext0
 3441 00c8 00000000 		.4byte	0
 3442 00cc 00000000 		.4byte	0
 3443 00d0 9C010000 		.4byte	.LBB138-.Ltext0
 3444 00d4 9E010000 		.4byte	.LBE138-.Ltext0
 3445 00d8 A0010000 		.4byte	.LBB141-.Ltext0
 3446 00dc A6010000 		.4byte	.LBE141-.Ltext0
 3447 00e0 00000000 		.4byte	0
 3448 00e4 00000000 		.4byte	0
 3449              		.section	.debug_line,"",%progbits
 3450              	.Ldebug_line0:
 3451 0000 E4020000 		.section	.debug_str,"MS",%progbits,1
 3451      02003C01 
 3451      00000201 
 3451      FB0E0D00 
 3451      01010101 
 3452              	.LASF51:
 3453 0000 5554494C 		.ascii	"UTILS_PLL_IsBusy\000"
 3453      535F504C 
 3453      4C5F4973 
 3453      42757379 
 3453      00
 3454              	.LASF75:
 3455 0011 4C4C5F52 		.ascii	"LL_RCC_GetAHBPrescaler\000"
 3455      43435F47 
 3455      65744148 
 3455      42507265 
 3455      7363616C 
 3456              	.LASF62:
 3457 0028 4C4C5F50 		.ascii	"LL_PLL_ConfigSystemClock_HSI\000"
 3457      4C4C5F43 
 3457      6F6E6669 
 3457      67537973 
 3457      74656D43 
 3458              	.LASF44:
 3459 0045 41504231 		.ascii	"APB1CLKDivider\000"
 3459      434C4B44 
 3459      69766964 
 3459      657200
 3460              	.LASF31:
 3461 0054 41504231 		.ascii	"APB1RSTR\000"
ARM GAS  /tmp/ccgFoonV.s 			page 112


 3461      52535452 
 3461      00
 3462              	.LASF79:
 3463 005d 4C4C5F52 		.ascii	"LL_RCC_SetAHBPrescaler\000"
 3463      43435F53 
 3463      65744148 
 3463      42507265 
 3463      7363616C 
 3464              	.LASF63:
 3465 0074 48434C4B 		.ascii	"HCLKFrequency\000"
 3465      46726571 
 3465      75656E63 
 3465      7900
 3466              	.LASF59:
 3467 0082 48534546 		.ascii	"HSEFrequency\000"
 3467      72657175 
 3467      656E6379 
 3467      00
 3468              	.LASF85:
 3469 008f 4C4C5F52 		.ascii	"LL_RCC_HSE_IsReady\000"
 3469      43435F48 
 3469      53455F49 
 3469      73526561 
 3469      647900
 3470              	.LASF2:
 3471 00a2 73686F72 		.ascii	"short int\000"
 3471      7420696E 
 3471      7400
 3472              	.LASF15:
 3473 00ac 73697A65 		.ascii	"sizetype\000"
 3473      74797065 
 3473      00
 3474              	.LASF35:
 3475 00b5 42444352 		.ascii	"BDCR\000"
 3475      00
 3476              	.LASF80:
 3477 00ba 4C4C5F52 		.ascii	"LL_RCC_GetSysClkSource\000"
 3477      43435F47 
 3477      65745379 
 3477      73436C6B 
 3477      536F7572 
 3478              	.LASF9:
 3479 00d1 6C6F6E67 		.ascii	"long long int\000"
 3479      206C6F6E 
 3479      6720696E 
 3479      7400
 3480              	.LASF7:
 3481 00df 5F5F7569 		.ascii	"__uint32_t\000"
 3481      6E743332 
 3481      5F7400
 3482              	.LASF90:
 3483 00ea 7372632F 		.ascii	"src/stm32f1xx_ll_utils.c\000"
 3483      73746D33 
 3483      32663178 
 3483      785F6C6C 
 3483      5F757469 
 3484              	.LASF65:
ARM GAS  /tmp/ccgFoonV.s 			page 113


 3485 0103 4C4C5F6D 		.ascii	"LL_mDelay\000"
 3485      44656C61 
 3485      7900
 3486              	.LASF61:
 3487 010d 4C4C5F50 		.ascii	"LL_PLL_ConfigSystemClock_HSE\000"
 3487      4C4C5F43 
 3487      6F6E6669 
 3487      67537973 
 3487      74656D43 
 3488              	.LASF16:
 3489 012a 4354524C 		.ascii	"CTRL\000"
 3489      00
 3490              	.LASF24:
 3491 012f 4B455952 		.ascii	"KEYR\000"
 3491      00
 3492              	.LASF29:
 3493 0134 43464752 		.ascii	"CFGR\000"
 3493      00
 3494              	.LASF12:
 3495 0139 75696E74 		.ascii	"uint8_t\000"
 3495      385F7400 
 3496              	.LASF76:
 3497 0141 4C4C5F52 		.ascii	"LL_RCC_SetAPB2Prescaler\000"
 3497      43435F53 
 3497      65744150 
 3497      42325072 
 3497      65736361 
 3498              	.LASF34:
 3499 0159 41504231 		.ascii	"APB1ENR\000"
 3499      454E5200 
 3500              	.LASF84:
 3501 0161 4C4C5F52 		.ascii	"LL_RCC_HSI_Enable\000"
 3501      43435F48 
 3501      53495F45 
 3501      6E61626C 
 3501      6500
 3502              	.LASF70:
 3503 0173 5469636B 		.ascii	"Ticks\000"
 3503      7300
 3504              	.LASF67:
 3505 0179 4C617465 		.ascii	"Latency\000"
 3505      6E637900 
 3506              	.LASF60:
 3507 0181 48534542 		.ascii	"HSEBypass\000"
 3507      79706173 
 3507      7300
 3508              	.LASF54:
 3509 018b 5554494C 		.ascii	"UTILS_PLLInitStruct\000"
 3509      535F504C 
 3509      4C496E69 
 3509      74537472 
 3509      75637400 
 3510              	.LASF52:
 3511 019f 5554494C 		.ascii	"UTILS_GetPLLOutputFrequency\000"
 3511      535F4765 
 3511      74504C4C 
 3511      4F757470 
ARM GAS  /tmp/ccgFoonV.s 			page 114


 3511      75744672 
 3512              	.LASF33:
 3513 01bb 41504232 		.ascii	"APB2ENR\000"
 3513      454E5200 
 3514              	.LASF53:
 3515 01c3 504C4C5F 		.ascii	"PLL_InputFrequency\000"
 3515      496E7075 
 3515      74467265 
 3515      7175656E 
 3515      637900
 3516              	.LASF25:
 3517 01d6 4F50544B 		.ascii	"OPTKEYR\000"
 3517      45595200 
 3518              	.LASF37:
 3519 01de 53554343 		.ascii	"SUCCESS\000"
 3519      45535300 
 3520              	.LASF18:
 3521 01e6 43414C49 		.ascii	"CALIB\000"
 3521      4200
 3522              	.LASF73:
 3523 01ec 4C4C5F46 		.ascii	"LL_FLASH_GetLatency\000"
 3523      4C415348 
 3523      5F476574 
 3523      4C617465 
 3523      6E637900 
 3524              	.LASF6:
 3525 0200 6C6F6E67 		.ascii	"long int\000"
 3525      20696E74 
 3525      00
 3526              	.LASF39:
 3527 0209 4572726F 		.ascii	"ErrorStatus\000"
 3527      72537461 
 3527      74757300 
 3528              	.LASF36:
 3529 0215 5243435F 		.ascii	"RCC_TypeDef\000"
 3529      54797065 
 3529      44656600 
 3530              	.LASF86:
 3531 0221 4C4C5F52 		.ascii	"LL_RCC_HSE_Enable\000"
 3531      43435F48 
 3531      53455F45 
 3531      6E61626C 
 3531      6500
 3532              	.LASF30:
 3533 0233 41504232 		.ascii	"APB2RSTR\000"
 3533      52535452 
 3533      00
 3534              	.LASF4:
 3535 023c 5F5F7569 		.ascii	"__uint8_t\000"
 3535      6E74385F 
 3535      7400
 3536              	.LASF27:
 3537 0246 57525052 		.ascii	"WRPR\000"
 3537      00
 3538              	.LASF38:
 3539 024b 4552524F 		.ascii	"ERROR\000"
 3539      5200
ARM GAS  /tmp/ccgFoonV.s 			page 115


 3540              	.LASF32:
 3541 0251 41484245 		.ascii	"AHBENR\000"
 3541      4E5200
 3542              	.LASF45:
 3543 0258 41504232 		.ascii	"APB2CLKDivider\000"
 3543      434C4B44 
 3543      69766964 
 3543      657200
 3544              	.LASF69:
 3545 0267 4C4C5F49 		.ascii	"LL_InitTick\000"
 3545      6E697454 
 3545      69636B00 
 3546              	.LASF77:
 3547 0273 50726573 		.ascii	"Prescaler\000"
 3547      63616C65 
 3547      7200
 3548              	.LASF66:
 3549 027d 4C4C5F49 		.ascii	"LL_Init1msTick\000"
 3549      6E697431 
 3549      6D735469 
 3549      636B00
 3550              	.LASF1:
 3551 028c 756E7369 		.ascii	"unsigned char\000"
 3551      676E6564 
 3551      20636861 
 3551      7200
 3552              	.LASF71:
 3553 029a 4C4C5F52 		.ascii	"LL_RCC_PLL_ConfigDomain_SYS\000"
 3553      43435F50 
 3553      4C4C5F43 
 3553      6F6E6669 
 3553      67446F6D 
 3554              	.LASF23:
 3555 02b6 41504250 		.ascii	"APBPrescTable\000"
 3555      72657363 
 3555      5461626C 
 3555      6500
 3556              	.LASF92:
 3557 02c4 5554494C 		.ascii	"UTILS_EnablePLLAndSwitchSystem\000"
 3557      535F456E 
 3557      61626C65 
 3557      504C4C41 
 3557      6E645377 
 3558              	.LASF43:
 3559 02e3 41484243 		.ascii	"AHBCLKDivider\000"
 3559      4C4B4469 
 3559      76696465 
 3559      7200
 3560              	.LASF0:
 3561 02f1 7369676E 		.ascii	"signed char\000"
 3561      65642063 
 3561      68617200 
 3562              	.LASF10:
 3563 02fd 6C6F6E67 		.ascii	"long long unsigned int\000"
 3563      206C6F6E 
 3563      6720756E 
 3563      7369676E 
ARM GAS  /tmp/ccgFoonV.s 			page 116


 3563      65642069 
 3564              	.LASF14:
 3565 0314 75696E74 		.ascii	"uint32_t\000"
 3565      33325F74 
 3565      00
 3566              	.LASF82:
 3567 031d 4C4C5F52 		.ascii	"LL_RCC_HSI_IsReady\000"
 3567      43435F48 
 3567      53495F49 
 3567      73526561 
 3567      647900
 3568              	.LASF11:
 3569 0330 756E7369 		.ascii	"unsigned int\000"
 3569      676E6564 
 3569      20696E74 
 3569      00
 3570              	.LASF74:
 3571 033d 4C4C5F52 		.ascii	"LL_RCC_PLL_IsReady\000"
 3571      43435F50 
 3571      4C4C5F49 
 3571      73526561 
 3571      647900
 3572              	.LASF19:
 3573 0350 53797354 		.ascii	"SysTick_Type\000"
 3573      69636B5F 
 3573      54797065 
 3573      00
 3574              	.LASF3:
 3575 035d 73686F72 		.ascii	"short unsigned int\000"
 3575      7420756E 
 3575      7369676E 
 3575      65642069 
 3575      6E7400
 3576              	.LASF49:
 3577 0370 73746174 		.ascii	"status\000"
 3577      757300
 3578              	.LASF58:
 3579 0377 6C617465 		.ascii	"latency\000"
 3579      6E637900 
 3580              	.LASF46:
 3581 037f 4C4C5F55 		.ascii	"LL_UTILS_ClkInitTypeDef\000"
 3581      54494C53 
 3581      5F436C6B 
 3581      496E6974 
 3581      54797065 
 3582              	.LASF55:
 3583 0397 706C6C66 		.ascii	"pllfreq\000"
 3583      72657100 
 3584              	.LASF13:
 3585 039f 696E7433 		.ascii	"int32_t\000"
 3585      325F7400 
 3586              	.LASF68:
 3587 03a7 4C4C5F46 		.ascii	"LL_FLASH_SetLatency\000"
 3587      4C415348 
 3587      5F536574 
 3587      4C617465 
 3587      6E637900 
ARM GAS  /tmp/ccgFoonV.s 			page 117


 3588              	.LASF47:
 3589 03bb 53595343 		.ascii	"SYSCLK_Frequency\000"
 3589      4C4B5F46 
 3589      72657175 
 3589      656E6379 
 3589      00
 3590              	.LASF81:
 3591 03cc 4C4C5F52 		.ascii	"LL_RCC_SetSysClkSource\000"
 3591      43435F53 
 3591      65745379 
 3591      73436C6B 
 3591      536F7572 
 3592              	.LASF21:
 3593 03e3 53797374 		.ascii	"SystemCoreClock\000"
 3593      656D436F 
 3593      7265436C 
 3593      6F636B00 
 3594              	.LASF50:
 3595 03f3 73797363 		.ascii	"sysclk_frequency_current\000"
 3595      6C6B5F66 
 3595      72657175 
 3595      656E6379 
 3595      5F637572 
 3596              	.LASF22:
 3597 040c 41484250 		.ascii	"AHBPrescTable\000"
 3597      72657363 
 3597      5461626C 
 3597      6500
 3598              	.LASF87:
 3599 041a 4C4C5F52 		.ascii	"LL_RCC_HSE_DisableBypass\000"
 3599      43435F48 
 3599      53455F44 
 3599      69736162 
 3599      6C654279 
 3600              	.LASF8:
 3601 0433 6C6F6E67 		.ascii	"long unsigned int\000"
 3601      20756E73 
 3601      69676E65 
 3601      6420696E 
 3601      7400
 3602              	.LASF83:
 3603 0445 4C4C5F52 		.ascii	"LL_RCC_PLL_Enable\000"
 3603      43435F50 
 3603      4C4C5F45 
 3603      6E61626C 
 3603      6500
 3604              	.LASF88:
 3605 0457 4C4C5F52 		.ascii	"LL_RCC_HSE_EnableBypass\000"
 3605      43435F48 
 3605      53455F45 
 3605      6E61626C 
 3605      65427970 
 3606              	.LASF89:
 3607 046f 474E5520 		.ascii	"GNU C11 6.3.1 20170620 -mcpu=cortex-m3 -mthumb -g -"
 3607      43313120 
 3607      362E332E 
 3607      31203230 
ARM GAS  /tmp/ccgFoonV.s 			page 118


 3607      31373036 
 3608 04a2 67647761 		.ascii	"gdwarf-2 -Os -fomit-frame-pointer\000"
 3608      72662D32 
 3608      202D4F73 
 3608      202D666F 
 3608      6D69742D 
 3609              	.LASF42:
 3610 04c4 4C4C5F55 		.ascii	"LL_UTILS_PLLInitTypeDef\000"
 3610      54494C53 
 3610      5F504C4C 
 3610      496E6974 
 3610      54797065 
 3611              	.LASF5:
 3612 04dc 5F5F696E 		.ascii	"__int32_t\000"
 3612      7433325F 
 3612      7400
 3613              	.LASF78:
 3614 04e6 4C4C5F52 		.ascii	"LL_RCC_SetAPB1Prescaler\000"
 3614      43435F53 
 3614      65744150 
 3614      42315072 
 3614      65736361 
 3615              	.LASF17:
 3616 04fe 4C4F4144 		.ascii	"LOAD\000"
 3616      00
 3617              	.LASF41:
 3618 0503 50726564 		.ascii	"Prediv\000"
 3618      697600
 3619              	.LASF93:
 3620 050a 4C4C5F53 		.ascii	"LL_SetSystemCoreClock\000"
 3620      65745379 
 3620      7374656D 
 3620      436F7265 
 3620      436C6F63 
 3621              	.LASF72:
 3622 0520 536F7572 		.ascii	"Source\000"
 3622      636500
 3623              	.LASF26:
 3624 0527 52455345 		.ascii	"RESERVED\000"
 3624      52564544 
 3624      00
 3625              	.LASF48:
 3626 0530 5554494C 		.ascii	"UTILS_ClkInitStruct\000"
 3626      535F436C 
 3626      6B496E69 
 3626      74537472 
 3626      75637400 
 3627              	.LASF28:
 3628 0544 464C4153 		.ascii	"FLASH_TypeDef\000"
 3628      485F5479 
 3628      70654465 
 3628      6600
 3629              	.LASF20:
 3630 0552 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3630      52784275 
 3630      66666572 
 3630      00
ARM GAS  /tmp/ccgFoonV.s 			page 119


 3631              	.LASF64:
 3632 055f 44656C61 		.ascii	"Delay\000"
 3632      7900
 3633              	.LASF57:
 3634 0565 46726571 		.ascii	"Frequency\000"
 3634      75656E63 
 3634      7900
 3635              	.LASF91:
 3636 056f 2F686F6D 		.ascii	"/home/berndoj/git/stm32tctst/lib/stm32f1hal\000"
 3636      652F6265 
 3636      726E646F 
 3636      6A2F6769 
 3636      742F7374 
 3637              	.LASF40:
 3638 059b 504C4C4D 		.ascii	"PLLMul\000"
 3638      756C00
 3639              	.LASF56:
 3640 05a2 5554494C 		.ascii	"UTILS_SetFlashLatency\000"
 3640      535F5365 
 3640      74466C61 
 3640      73684C61 
 3640      74656E63 
 3641              		.ident	"GCC: (15:6.3.1+svn253039-1build1) 6.3.1 20170620"
ARM GAS  /tmp/ccgFoonV.s 			page 120


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_ll_utils.c
     /tmp/ccgFoonV.s:69     .text:0000000000000000 $t
     /tmp/ccgFoonV.s:75     .text:0000000000000000 UTILS_SetFlashLatency
     /tmp/ccgFoonV.s:149    .text:0000000000000034 $d
     /tmp/ccgFoonV.s:155    .text:0000000000000040 $t
     /tmp/ccgFoonV.s:161    .text:0000000000000040 UTILS_EnablePLLAndSwitchSystem
     /tmp/ccgFoonV.s:333    .text:00000000000000d0 $d
     /tmp/ccgFoonV.s:339    .text:00000000000000dc $t
     /tmp/ccgFoonV.s:346    .text:00000000000000dc LL_Init1msTick
     /tmp/ccgFoonV.s:377    .text:00000000000000f4 $d
     /tmp/ccgFoonV.s:383    .text:00000000000000f8 $t
     /tmp/ccgFoonV.s:390    .text:00000000000000f8 LL_mDelay
     /tmp/ccgFoonV.s:443    .text:000000000000011c $d
     /tmp/ccgFoonV.s:447    .text:0000000000000120 $t
     /tmp/ccgFoonV.s:454    .text:0000000000000120 LL_SetSystemCoreClock
     /tmp/ccgFoonV.s:469    .text:0000000000000128 $d
     /tmp/ccgFoonV.s:473    .text:000000000000012c $t
     /tmp/ccgFoonV.s:480    .text:000000000000012c LL_PLL_ConfigSystemClock_HSI
     /tmp/ccgFoonV.s:610    .text:0000000000000170 $d
     /tmp/ccgFoonV.s:615    .text:0000000000000178 $t
     /tmp/ccgFoonV.s:622    .text:0000000000000178 LL_PLL_ConfigSystemClock_HSE
     /tmp/ccgFoonV.s:776    .text:00000000000001dc $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
AHBPrescTable
