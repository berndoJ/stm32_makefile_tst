ARM GAS  /tmp/ccTsJCXT.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"stm32f1xx_hal_tim.c"
  12              	@ GNU C11 (15:6.3.1+svn253039-1build1) version 6.3.1 20170620 (arm-none-eabi)
  13              	@	compiled by GNU C version 7.2.0, GMP version 6.1.2, MPFR version 4.0.1-rc1, MPC version 1.1.0, is
  14              	@ warning: MPFR header version 4.0.1-rc1 differs from library version 4.0.1.
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I ./inc -I ./inc/Legacy -I ../cmsisstm32f1xx/inc
  17              	@ -I ../cmsiscore/inc -imultilib thumb/v7-m -D__USES_INITFINI__
  18              	@ -D STM32F103x6 -D RUN_FROM_FLASH=1 -D __c src/stm32f1xx_hal_tim.c
  19              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip bin/stm32f1xx_hal_tim.o -g
  20              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  32              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  33              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  34              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  35              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  36              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  39              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  40              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  41              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  42              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  43              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  44              	@ -freg-struct-return -freorder-blocks -freorder-functions
  45              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  46              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  47              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  48              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  49              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  50              	@ -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  51              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  53              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  54              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  55              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  56              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  57              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
ARM GAS  /tmp/ccTsJCXT.s 			page 2


  58              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  59              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  60              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  61              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  62              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  63              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  64              	@ -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  74              		.type	TIM_OC1_SetConfig, %function
  75              	TIM_OC1_SetConfig:
  76              	.LFB165:
  77              		.file 1 "src/stm32f1xx_hal_tim.c"
   1:src/stm32f1xx_hal_tim.c **** /**
   2:src/stm32f1xx_hal_tim.c ****   ******************************************************************************
   3:src/stm32f1xx_hal_tim.c ****   * @file    stm32f1xx_hal_tim.c
   4:src/stm32f1xx_hal_tim.c ****   * @author  MCD Application Team
   5:src/stm32f1xx_hal_tim.c ****   * @brief   TIM HAL module driver.
   6:src/stm32f1xx_hal_tim.c ****   *          This file provides firmware functions to manage the following
   7:src/stm32f1xx_hal_tim.c ****   *          functionalities of the Timer (TIM) peripheral:
   8:src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Initialization
   9:src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start
  10:src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start Interruption
  11:src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start DMA
  12:src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Initialization
  13:src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Channel Configuration
  14:src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start
  15:src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start Interruption
  16:src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Start DMA
  17:src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Initialization
  18:src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Channel Configuration
  19:src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start
  20:src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start Interruption
  21:src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start DMA
  22:src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Initialization
  23:src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Channel Configuration
  24:src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Start
  25:src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Initialization
  26:src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start
  27:src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start Interruption
  28:src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start DMA
  29:src/stm32f1xx_hal_tim.c ****   *           + Commutation Event configuration with Interruption and DMA
  30:src/stm32f1xx_hal_tim.c ****   *           + TIM OCRef clear configuration
  31:src/stm32f1xx_hal_tim.c ****   *           + TIM External Clock configuration
  32:src/stm32f1xx_hal_tim.c ****   @verbatim
  33:src/stm32f1xx_hal_tim.c ****   ==============================================================================
  34:src/stm32f1xx_hal_tim.c ****                       ##### TIMER Generic features #####
  35:src/stm32f1xx_hal_tim.c ****   ==============================================================================
  36:src/stm32f1xx_hal_tim.c ****   [..] The Timer features include:
  37:src/stm32f1xx_hal_tim.c ****        (#) 16-bit up, down, up/down auto-reload counter.
ARM GAS  /tmp/ccTsJCXT.s 			page 3


  38:src/stm32f1xx_hal_tim.c ****        (#) 16-bit programmable prescaler allowing dividing (also on the fly) the
  39:src/stm32f1xx_hal_tim.c ****            counter clock frequency either by any factor between 1 and 65536.
  40:src/stm32f1xx_hal_tim.c ****        (#) Up to 4 independent channels for:
  41:src/stm32f1xx_hal_tim.c ****            (++) Input Capture
  42:src/stm32f1xx_hal_tim.c ****            (++) Output Compare
  43:src/stm32f1xx_hal_tim.c ****            (++) PWM generation (Edge and Center-aligned Mode)
  44:src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output
  45:src/stm32f1xx_hal_tim.c ****        (#) Synchronization circuit to control the timer with external signals and to interconnect
  46:src/stm32f1xx_hal_tim.c ****             several timers together.
  47:src/stm32f1xx_hal_tim.c ****        (#) Supports incremental encoder for positioning purposes
  48:src/stm32f1xx_hal_tim.c **** 
  49:src/stm32f1xx_hal_tim.c ****             ##### How to use this driver #####
  50:src/stm32f1xx_hal_tim.c ****   ==============================================================================
  51:src/stm32f1xx_hal_tim.c ****     [..]
  52:src/stm32f1xx_hal_tim.c ****      (#) Initialize the TIM low level resources by implementing the following functions
  53:src/stm32f1xx_hal_tim.c ****          depending on the selected feature:
  54:src/stm32f1xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_MspInit()
  55:src/stm32f1xx_hal_tim.c ****            (++) Input Capture : HAL_TIM_IC_MspInit()
  56:src/stm32f1xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_MspInit()
  57:src/stm32f1xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_MspInit()
  58:src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  59:src/stm32f1xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_MspInit()
  60:src/stm32f1xx_hal_tim.c **** 
  61:src/stm32f1xx_hal_tim.c ****      (#) Initialize the TIM low level resources :
  62:src/stm32f1xx_hal_tim.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE();
  63:src/stm32f1xx_hal_tim.c ****         (##) TIM pins configuration
  64:src/stm32f1xx_hal_tim.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  65:src/stm32f1xx_hal_tim.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();
  66:src/stm32f1xx_hal_tim.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();
  67:src/stm32f1xx_hal_tim.c **** 
  68:src/stm32f1xx_hal_tim.c ****      (#) The external Clock can be configured, if needed (the default clock is the
  69:src/stm32f1xx_hal_tim.c ****          internal clock from the APBx), using the following function:
  70:src/stm32f1xx_hal_tim.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before
  71:src/stm32f1xx_hal_tim.c ****          any start function.
  72:src/stm32f1xx_hal_tim.c **** 
  73:src/stm32f1xx_hal_tim.c ****      (#) Configure the TIM in the desired functioning mode using one of the
  74:src/stm32f1xx_hal_tim.c ****        Initialization function of this driver:
  75:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_Base_Init: to use the Timer to generate a simple time base
  76:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_OC_Init and HAL_TIM_OC_ConfigChannel: to use the Timer to generate an
  77:src/stm32f1xx_hal_tim.c ****             Output Compare signal.
  78:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_PWM_Init and HAL_TIM_PWM_ConfigChannel: to use the Timer to generate a
  79:src/stm32f1xx_hal_tim.c ****             PWM signal.
  80:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_IC_Init and HAL_TIM_IC_ConfigChannel: to use the Timer to measure an
  81:src/stm32f1xx_hal_tim.c ****             external signal.
  82:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_OnePulse_Init and HAL_TIM_OnePulse_ConfigChannel: to use the Timer
  83:src/stm32f1xx_hal_tim.c ****             in One Pulse Mode.
  84:src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_Encoder_Init: to use the Timer Encoder Interface.
  85:src/stm32f1xx_hal_tim.c **** 
  86:src/stm32f1xx_hal_tim.c ****      (#) Activate the TIM peripheral using one of the start functions depending from the feature us
  87:src/stm32f1xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_Start(), HAL_TIM_Base_Start_DMA(), HAL_TIM_Base_Start_IT()
  88:src/stm32f1xx_hal_tim.c ****            (++) Input Capture :  HAL_TIM_IC_Start(), HAL_TIM_IC_Start_DMA(), HAL_TIM_IC_Start_IT()
  89:src/stm32f1xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_Start(), HAL_TIM_OC_Start_DMA(), HAL_TIM_OC_Start_IT()
  90:src/stm32f1xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_Start(), HAL_TIM_PWM_Start_DMA(), HAL_TIM_PWM_Start_IT
  91:src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_Start(), HAL_TIM_OnePulse_Start_IT()
  92:src/stm32f1xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_Start(), HAL_TIM_Encoder_Start_DMA(), HAL_TIM
  93:src/stm32f1xx_hal_tim.c **** 
  94:src/stm32f1xx_hal_tim.c ****      (#) The DMA Burst is managed with the two following functions:
ARM GAS  /tmp/ccTsJCXT.s 			page 4


  95:src/stm32f1xx_hal_tim.c ****          HAL_TIM_DMABurst_WriteStart()
  96:src/stm32f1xx_hal_tim.c ****          HAL_TIM_DMABurst_ReadStart()
  97:src/stm32f1xx_hal_tim.c **** 
  98:src/stm32f1xx_hal_tim.c ****     *** Callback registration ***
  99:src/stm32f1xx_hal_tim.c ****   =============================================
 100:src/stm32f1xx_hal_tim.c **** 
 101:src/stm32f1xx_hal_tim.c ****   [..]
 102:src/stm32f1xx_hal_tim.c ****   The compilation define  USE_HAL_TIM_REGISTER_CALLBACKS when set to 1
 103:src/stm32f1xx_hal_tim.c ****   allows the user to configure dynamically the driver callbacks.
 104:src/stm32f1xx_hal_tim.c **** 
 105:src/stm32f1xx_hal_tim.c ****   [..]
 106:src/stm32f1xx_hal_tim.c ****   Use Function @ref HAL_TIM_RegisterCallback() to register a callback.
 107:src/stm32f1xx_hal_tim.c ****   @ref HAL_TIM_RegisterCallback() takes as parameters the HAL peripheral handle,
 108:src/stm32f1xx_hal_tim.c ****   the Callback ID and a pointer to the user callback function.
 109:src/stm32f1xx_hal_tim.c **** 
 110:src/stm32f1xx_hal_tim.c ****   [..]
 111:src/stm32f1xx_hal_tim.c ****   Use function @ref HAL_TIM_UnRegisterCallback() to reset a callback to the default
 112:src/stm32f1xx_hal_tim.c ****   weak function.
 113:src/stm32f1xx_hal_tim.c ****   @ref HAL_TIM_UnRegisterCallback takes as parameters the HAL peripheral handle,
 114:src/stm32f1xx_hal_tim.c ****   and the Callback ID.
 115:src/stm32f1xx_hal_tim.c **** 
 116:src/stm32f1xx_hal_tim.c ****   [..]
 117:src/stm32f1xx_hal_tim.c ****   These functions allow to register/unregister following callbacks:
 118:src/stm32f1xx_hal_tim.c ****     (+) Base_MspInitCallback              : TIM Base Msp Init Callback.
 119:src/stm32f1xx_hal_tim.c ****     (+) Base_MspDeInitCallback            : TIM Base Msp DeInit Callback.
 120:src/stm32f1xx_hal_tim.c ****     (+) IC_MspInitCallback                : TIM IC Msp Init Callback.
 121:src/stm32f1xx_hal_tim.c ****     (+) IC_MspDeInitCallback              : TIM IC Msp DeInit Callback.
 122:src/stm32f1xx_hal_tim.c ****     (+) OC_MspInitCallback                : TIM OC Msp Init Callback.
 123:src/stm32f1xx_hal_tim.c ****     (+) OC_MspDeInitCallback              : TIM OC Msp DeInit Callback.
 124:src/stm32f1xx_hal_tim.c ****     (+) PWM_MspInitCallback               : TIM PWM Msp Init Callback.
 125:src/stm32f1xx_hal_tim.c ****     (+) PWM_MspDeInitCallback             : TIM PWM Msp DeInit Callback.
 126:src/stm32f1xx_hal_tim.c ****     (+) OnePulse_MspInitCallback          : TIM One Pulse Msp Init Callback.
 127:src/stm32f1xx_hal_tim.c ****     (+) OnePulse_MspDeInitCallback        : TIM One Pulse Msp DeInit Callback.
 128:src/stm32f1xx_hal_tim.c ****     (+) Encoder_MspInitCallback           : TIM Encoder Msp Init Callback.
 129:src/stm32f1xx_hal_tim.c ****     (+) Encoder_MspDeInitCallback         : TIM Encoder Msp DeInit Callback.
 130:src/stm32f1xx_hal_tim.c ****     (+) HallSensor_MspInitCallback        : TIM Hall Sensor Msp Init Callback.
 131:src/stm32f1xx_hal_tim.c ****     (+) HallSensor_MspDeInitCallback      : TIM Hall Sensor Msp DeInit Callback.
 132:src/stm32f1xx_hal_tim.c ****     (+) PeriodElapsedCallback             : TIM Period Elapsed Callback.
 133:src/stm32f1xx_hal_tim.c ****     (+) PeriodElapsedHalfCpltCallback     : TIM Period Elapsed half complete Callback.
 134:src/stm32f1xx_hal_tim.c ****     (+) TriggerCallback                   : TIM Trigger Callback.
 135:src/stm32f1xx_hal_tim.c ****     (+) TriggerHalfCpltCallback           : TIM Trigger half complete Callback.
 136:src/stm32f1xx_hal_tim.c ****     (+) IC_CaptureCallback                : TIM Input Capture Callback.
 137:src/stm32f1xx_hal_tim.c ****     (+) IC_CaptureHalfCpltCallback        : TIM Input Capture half complete Callback.
 138:src/stm32f1xx_hal_tim.c ****     (+) OC_DelayElapsedCallback           : TIM Output Compare Delay Elapsed Callback.
 139:src/stm32f1xx_hal_tim.c ****     (+) PWM_PulseFinishedCallback         : TIM PWM Pulse Finished Callback.
 140:src/stm32f1xx_hal_tim.c ****     (+) PWM_PulseFinishedHalfCpltCallback : TIM PWM Pulse Finished half complete Callback.
 141:src/stm32f1xx_hal_tim.c ****     (+) ErrorCallback                     : TIM Error Callback.
 142:src/stm32f1xx_hal_tim.c ****     (+) CommutationCallback               : TIM Commutation Callback.
 143:src/stm32f1xx_hal_tim.c ****     (+) CommutationHalfCpltCallback       : TIM Commutation half complete Callback.
 144:src/stm32f1xx_hal_tim.c ****     (+) BreakCallback                     : TIM Break Callback.
 145:src/stm32f1xx_hal_tim.c **** 
 146:src/stm32f1xx_hal_tim.c ****   [..]
 147:src/stm32f1xx_hal_tim.c **** By default, after the Init and when the state is HAL_TIM_STATE_RESET
 148:src/stm32f1xx_hal_tim.c **** all interrupt callbacks are set to the corresponding weak functions:
 149:src/stm32f1xx_hal_tim.c ****   examples @ref HAL_TIM_TriggerCallback(), @ref HAL_TIM_ErrorCallback().
 150:src/stm32f1xx_hal_tim.c **** 
 151:src/stm32f1xx_hal_tim.c ****   [..]
ARM GAS  /tmp/ccTsJCXT.s 			page 5


 152:src/stm32f1xx_hal_tim.c ****   Exception done for MspInit and MspDeInit functions that are reset to the legacy weak
 153:src/stm32f1xx_hal_tim.c ****   functionalities in the Init / DeInit only when these callbacks are null
 154:src/stm32f1xx_hal_tim.c ****   (not registered beforehand). If not, MspInit or MspDeInit are not null, the Init / DeInit
 155:src/stm32f1xx_hal_tim.c ****     keep and use the user MspInit / MspDeInit callbacks(registered beforehand)
 156:src/stm32f1xx_hal_tim.c **** 
 157:src/stm32f1xx_hal_tim.c ****   [..]
 158:src/stm32f1xx_hal_tim.c ****     Callbacks can be registered / unregistered in HAL_TIM_STATE_READY state only.
 159:src/stm32f1xx_hal_tim.c ****     Exception done MspInit / MspDeInit that can be registered / unregistered
 160:src/stm32f1xx_hal_tim.c ****     in HAL_TIM_STATE_READY or HAL_TIM_STATE_RESET state,
 161:src/stm32f1xx_hal_tim.c ****     thus registered(user) MspInit / DeInit callbacks can be used during the Init / DeInit.
 162:src/stm32f1xx_hal_tim.c ****   In that case first register the MspInit/MspDeInit user callbacks
 163:src/stm32f1xx_hal_tim.c ****       using @ref HAL_TIM_RegisterCallback() before calling DeInit or Init function.
 164:src/stm32f1xx_hal_tim.c **** 
 165:src/stm32f1xx_hal_tim.c ****   [..]
 166:src/stm32f1xx_hal_tim.c ****       When The compilation define USE_HAL_TIM_REGISTER_CALLBACKS is set to 0 or
 167:src/stm32f1xx_hal_tim.c ****       not defined, the callback registration feature is not available and all callbacks
 168:src/stm32f1xx_hal_tim.c ****       are set to the corresponding weak functions.
 169:src/stm32f1xx_hal_tim.c **** 
 170:src/stm32f1xx_hal_tim.c ****   @endverbatim
 171:src/stm32f1xx_hal_tim.c ****   ******************************************************************************
 172:src/stm32f1xx_hal_tim.c ****   * @attention
 173:src/stm32f1xx_hal_tim.c ****   *
 174:src/stm32f1xx_hal_tim.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 175:src/stm32f1xx_hal_tim.c ****   * All rights reserved.</center></h2>
 176:src/stm32f1xx_hal_tim.c ****   *
 177:src/stm32f1xx_hal_tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 178:src/stm32f1xx_hal_tim.c ****   * the "License"; You may not use this file except in compliance with the
 179:src/stm32f1xx_hal_tim.c ****   * License. You may obtain a copy of the License at:
 180:src/stm32f1xx_hal_tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
 181:src/stm32f1xx_hal_tim.c ****   *
 182:src/stm32f1xx_hal_tim.c ****   ******************************************************************************
 183:src/stm32f1xx_hal_tim.c ****   */
 184:src/stm32f1xx_hal_tim.c **** 
 185:src/stm32f1xx_hal_tim.c **** /* Includes ------------------------------------------------------------------*/
 186:src/stm32f1xx_hal_tim.c **** #include "stm32f1xx_hal.h"
 187:src/stm32f1xx_hal_tim.c **** 
 188:src/stm32f1xx_hal_tim.c **** /** @addtogroup STM32F1xx_HAL_Driver
 189:src/stm32f1xx_hal_tim.c ****   * @{
 190:src/stm32f1xx_hal_tim.c ****   */
 191:src/stm32f1xx_hal_tim.c **** 
 192:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM TIM
 193:src/stm32f1xx_hal_tim.c ****   * @brief TIM HAL module driver
 194:src/stm32f1xx_hal_tim.c ****   * @{
 195:src/stm32f1xx_hal_tim.c ****   */
 196:src/stm32f1xx_hal_tim.c **** 
 197:src/stm32f1xx_hal_tim.c **** #ifdef HAL_TIM_MODULE_ENABLED
 198:src/stm32f1xx_hal_tim.c **** 
 199:src/stm32f1xx_hal_tim.c **** /* Private typedef -----------------------------------------------------------*/
 200:src/stm32f1xx_hal_tim.c **** /* Private define ------------------------------------------------------------*/
 201:src/stm32f1xx_hal_tim.c **** /* Private macro -------------------------------------------------------------*/
 202:src/stm32f1xx_hal_tim.c **** /* Private variables ---------------------------------------------------------*/
 203:src/stm32f1xx_hal_tim.c **** /* Private function prototypes -----------------------------------------------*/
 204:src/stm32f1xx_hal_tim.c **** /** @addtogroup TIM_Private_Functions
 205:src/stm32f1xx_hal_tim.c ****   * @{
 206:src/stm32f1xx_hal_tim.c ****   */
 207:src/stm32f1xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 208:src/stm32f1xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
ARM GAS  /tmp/ccTsJCXT.s 			page 6


 209:src/stm32f1xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 210:src/stm32f1xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 211:src/stm32f1xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 212:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 213:src/stm32f1xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 214:src/stm32f1xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 215:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 216:src/stm32f1xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 217:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 218:src/stm32f1xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource);
 219:src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma);
 220:src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma);
 221:src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma);
 222:src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma);
 223:src/stm32f1xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
 224:src/stm32f1xx_hal_tim.c ****                                                   TIM_SlaveConfigTypeDef *sSlaveConfig);
 225:src/stm32f1xx_hal_tim.c **** /**
 226:src/stm32f1xx_hal_tim.c ****   * @}
 227:src/stm32f1xx_hal_tim.c ****   */
 228:src/stm32f1xx_hal_tim.c **** /* Exported functions --------------------------------------------------------*/
 229:src/stm32f1xx_hal_tim.c **** 
 230:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions TIM Exported Functions
 231:src/stm32f1xx_hal_tim.c ****   * @{
 232:src/stm32f1xx_hal_tim.c ****   */
 233:src/stm32f1xx_hal_tim.c **** 
 234:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group1 TIM Time Base functions
 235:src/stm32f1xx_hal_tim.c ****   *  @brief    Time Base functions
 236:src/stm32f1xx_hal_tim.c ****   *
 237:src/stm32f1xx_hal_tim.c **** @verbatim
 238:src/stm32f1xx_hal_tim.c ****   ==============================================================================
 239:src/stm32f1xx_hal_tim.c ****               ##### Time Base functions #####
 240:src/stm32f1xx_hal_tim.c ****   ==============================================================================
 241:src/stm32f1xx_hal_tim.c ****   [..]
 242:src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
 243:src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM base.
 244:src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM base.
 245:src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base.
 246:src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base.
 247:src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base and enable interrupt.
 248:src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base and disable interrupt.
 249:src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base and enable DMA transfer.
 250:src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base and disable DMA transfer.
 251:src/stm32f1xx_hal_tim.c **** 
 252:src/stm32f1xx_hal_tim.c **** @endverbatim
 253:src/stm32f1xx_hal_tim.c ****   * @{
 254:src/stm32f1xx_hal_tim.c ****   */
 255:src/stm32f1xx_hal_tim.c **** /**
 256:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Time base Unit according to the specified
 257:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initialize the associated handle.
 258:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 259:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
 260:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 261:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
 262:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 263:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 264:src/stm32f1xx_hal_tim.c ****   */
 265:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/ccTsJCXT.s 			page 7


 266:src/stm32f1xx_hal_tim.c **** {
 267:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 268:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 269:src/stm32f1xx_hal_tim.c ****   {
 270:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 271:src/stm32f1xx_hal_tim.c ****   }
 272:src/stm32f1xx_hal_tim.c **** 
 273:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 274:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 275:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 276:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 277:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 278:src/stm32f1xx_hal_tim.c **** 
 279:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 280:src/stm32f1xx_hal_tim.c ****   {
 281:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 282:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 283:src/stm32f1xx_hal_tim.c **** 
 284:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 285:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 286:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
 287:src/stm32f1xx_hal_tim.c **** 
 288:src/stm32f1xx_hal_tim.c ****     if (htim->Base_MspInitCallback == NULL)
 289:src/stm32f1xx_hal_tim.c ****     {
 290:src/stm32f1xx_hal_tim.c ****       htim->Base_MspInitCallback = HAL_TIM_Base_MspInit;
 291:src/stm32f1xx_hal_tim.c ****     }
 292:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 293:src/stm32f1xx_hal_tim.c ****     htim->Base_MspInitCallback(htim);
 294:src/stm32f1xx_hal_tim.c **** #else
 295:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 296:src/stm32f1xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 297:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 298:src/stm32f1xx_hal_tim.c ****   }
 299:src/stm32f1xx_hal_tim.c **** 
 300:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 301:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 302:src/stm32f1xx_hal_tim.c **** 
 303:src/stm32f1xx_hal_tim.c ****   /* Set the Time Base configuration */
 304:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 305:src/stm32f1xx_hal_tim.c **** 
 306:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
 307:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 308:src/stm32f1xx_hal_tim.c **** 
 309:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 310:src/stm32f1xx_hal_tim.c **** }
 311:src/stm32f1xx_hal_tim.c **** 
 312:src/stm32f1xx_hal_tim.c **** /**
 313:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM Base peripheral
 314:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 315:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 316:src/stm32f1xx_hal_tim.c ****   */
 317:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_DeInit(TIM_HandleTypeDef *htim)
 318:src/stm32f1xx_hal_tim.c **** {
 319:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 320:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 321:src/stm32f1xx_hal_tim.c **** 
 322:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
ARM GAS  /tmp/ccTsJCXT.s 			page 8


 323:src/stm32f1xx_hal_tim.c **** 
 324:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 325:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 326:src/stm32f1xx_hal_tim.c **** 
 327:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 328:src/stm32f1xx_hal_tim.c ****   if (htim->Base_MspDeInitCallback == NULL)
 329:src/stm32f1xx_hal_tim.c ****   {
 330:src/stm32f1xx_hal_tim.c ****     htim->Base_MspDeInitCallback = HAL_TIM_Base_MspDeInit;
 331:src/stm32f1xx_hal_tim.c ****   }
 332:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
 333:src/stm32f1xx_hal_tim.c ****   htim->Base_MspDeInitCallback(htim);
 334:src/stm32f1xx_hal_tim.c **** #else
 335:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 336:src/stm32f1xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 337:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 338:src/stm32f1xx_hal_tim.c **** 
 339:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
 340:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 341:src/stm32f1xx_hal_tim.c **** 
 342:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
 343:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 344:src/stm32f1xx_hal_tim.c **** 
 345:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 346:src/stm32f1xx_hal_tim.c **** }
 347:src/stm32f1xx_hal_tim.c **** 
 348:src/stm32f1xx_hal_tim.c **** /**
 349:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Base MSP.
 350:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 351:src/stm32f1xx_hal_tim.c ****   * @retval None
 352:src/stm32f1xx_hal_tim.c ****   */
 353:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
 354:src/stm32f1xx_hal_tim.c **** {
 355:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 356:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 357:src/stm32f1xx_hal_tim.c **** 
 358:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 359:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Base_MspInit could be implemented in the user file
 360:src/stm32f1xx_hal_tim.c ****    */
 361:src/stm32f1xx_hal_tim.c **** }
 362:src/stm32f1xx_hal_tim.c **** 
 363:src/stm32f1xx_hal_tim.c **** /**
 364:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Base MSP.
 365:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 366:src/stm32f1xx_hal_tim.c ****   * @retval None
 367:src/stm32f1xx_hal_tim.c ****   */
 368:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim)
 369:src/stm32f1xx_hal_tim.c **** {
 370:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 371:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 372:src/stm32f1xx_hal_tim.c **** 
 373:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 374:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Base_MspDeInit could be implemented in the user file
 375:src/stm32f1xx_hal_tim.c ****    */
 376:src/stm32f1xx_hal_tim.c **** }
 377:src/stm32f1xx_hal_tim.c **** 
 378:src/stm32f1xx_hal_tim.c **** 
 379:src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp/ccTsJCXT.s 			page 9


 380:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation.
 381:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 382:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 383:src/stm32f1xx_hal_tim.c ****   */
 384:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
 385:src/stm32f1xx_hal_tim.c **** {
 386:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 387:src/stm32f1xx_hal_tim.c **** 
 388:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 389:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 390:src/stm32f1xx_hal_tim.c **** 
 391:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 392:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 393:src/stm32f1xx_hal_tim.c **** 
 394:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 395:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 396:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 397:src/stm32f1xx_hal_tim.c ****   {
 398:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 399:src/stm32f1xx_hal_tim.c ****   }
 400:src/stm32f1xx_hal_tim.c **** 
 401:src/stm32f1xx_hal_tim.c ****   /* Change the TIM state*/
 402:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 403:src/stm32f1xx_hal_tim.c **** 
 404:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 405:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 406:src/stm32f1xx_hal_tim.c **** }
 407:src/stm32f1xx_hal_tim.c **** 
 408:src/stm32f1xx_hal_tim.c **** /**
 409:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation.
 410:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 411:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 412:src/stm32f1xx_hal_tim.c ****   */
 413:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
 414:src/stm32f1xx_hal_tim.c **** {
 415:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 416:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 417:src/stm32f1xx_hal_tim.c **** 
 418:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 419:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 420:src/stm32f1xx_hal_tim.c **** 
 421:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 422:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 423:src/stm32f1xx_hal_tim.c **** 
 424:src/stm32f1xx_hal_tim.c ****   /* Change the TIM state*/
 425:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 426:src/stm32f1xx_hal_tim.c **** 
 427:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 428:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 429:src/stm32f1xx_hal_tim.c **** }
 430:src/stm32f1xx_hal_tim.c **** 
 431:src/stm32f1xx_hal_tim.c **** /**
 432:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in interrupt mode.
 433:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 434:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 435:src/stm32f1xx_hal_tim.c ****   */
 436:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/ccTsJCXT.s 			page 10


 437:src/stm32f1xx_hal_tim.c **** {
 438:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 439:src/stm32f1xx_hal_tim.c **** 
 440:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 441:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 442:src/stm32f1xx_hal_tim.c **** 
 443:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Update interrupt */
 444:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 445:src/stm32f1xx_hal_tim.c **** 
 446:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 447:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 448:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 449:src/stm32f1xx_hal_tim.c ****   {
 450:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 451:src/stm32f1xx_hal_tim.c ****   }
 452:src/stm32f1xx_hal_tim.c **** 
 453:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 454:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 455:src/stm32f1xx_hal_tim.c **** }
 456:src/stm32f1xx_hal_tim.c **** 
 457:src/stm32f1xx_hal_tim.c **** /**
 458:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in interrupt mode.
 459:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 460:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 461:src/stm32f1xx_hal_tim.c ****   */
 462:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
 463:src/stm32f1xx_hal_tim.c **** {
 464:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 465:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 466:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Update interrupt */
 467:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 468:src/stm32f1xx_hal_tim.c **** 
 469:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 470:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 471:src/stm32f1xx_hal_tim.c **** 
 472:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 473:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 474:src/stm32f1xx_hal_tim.c **** }
 475:src/stm32f1xx_hal_tim.c **** 
 476:src/stm32f1xx_hal_tim.c **** /**
 477:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in DMA mode.
 478:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 479:src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
 480:src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to peripheral.
 481:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 482:src/stm32f1xx_hal_tim.c ****   */
 483:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_DMA(TIM_HandleTypeDef *htim, uint32_t *pData, uint16_t Length)
 484:src/stm32f1xx_hal_tim.c **** {
 485:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 486:src/stm32f1xx_hal_tim.c **** 
 487:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 488:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 489:src/stm32f1xx_hal_tim.c **** 
 490:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
 491:src/stm32f1xx_hal_tim.c ****   {
 492:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 493:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 11


 494:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
 495:src/stm32f1xx_hal_tim.c ****   {
 496:src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) && (Length > 0U))
 497:src/stm32f1xx_hal_tim.c ****     {
 498:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 499:src/stm32f1xx_hal_tim.c ****     }
 500:src/stm32f1xx_hal_tim.c ****     else
 501:src/stm32f1xx_hal_tim.c ****     {
 502:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 503:src/stm32f1xx_hal_tim.c ****     }
 504:src/stm32f1xx_hal_tim.c ****   }
 505:src/stm32f1xx_hal_tim.c ****   else
 506:src/stm32f1xx_hal_tim.c ****   {
 507:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
 508:src/stm32f1xx_hal_tim.c ****   }
 509:src/stm32f1xx_hal_tim.c **** 
 510:src/stm32f1xx_hal_tim.c ****   /* Set the DMA Period elapsed callbacks */
 511:src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 512:src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 513:src/stm32f1xx_hal_tim.c **** 
 514:src/stm32f1xx_hal_tim.c ****   /* Set the DMA error callback */
 515:src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 516:src/stm32f1xx_hal_tim.c **** 
 517:src/stm32f1xx_hal_tim.c ****   /* Enable the DMA channel */
 518:src/stm32f1xx_hal_tim.c ****   if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->A
 519:src/stm32f1xx_hal_tim.c ****   {
 520:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 521:src/stm32f1xx_hal_tim.c ****   }
 522:src/stm32f1xx_hal_tim.c **** 
 523:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Update DMA request */
 524:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 525:src/stm32f1xx_hal_tim.c **** 
 526:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 527:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 528:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 529:src/stm32f1xx_hal_tim.c ****   {
 530:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 531:src/stm32f1xx_hal_tim.c ****   }
 532:src/stm32f1xx_hal_tim.c **** 
 533:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 534:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 535:src/stm32f1xx_hal_tim.c **** }
 536:src/stm32f1xx_hal_tim.c **** 
 537:src/stm32f1xx_hal_tim.c **** /**
 538:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in DMA mode.
 539:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 540:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 541:src/stm32f1xx_hal_tim.c ****   */
 542:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_DMA(TIM_HandleTypeDef *htim)
 543:src/stm32f1xx_hal_tim.c **** {
 544:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 545:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 546:src/stm32f1xx_hal_tim.c **** 
 547:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
 548:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 549:src/stm32f1xx_hal_tim.c **** 
 550:src/stm32f1xx_hal_tim.c ****   (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
ARM GAS  /tmp/ccTsJCXT.s 			page 12


 551:src/stm32f1xx_hal_tim.c **** 
 552:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 553:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 554:src/stm32f1xx_hal_tim.c **** 
 555:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
 556:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 557:src/stm32f1xx_hal_tim.c **** 
 558:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 559:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 560:src/stm32f1xx_hal_tim.c **** }
 561:src/stm32f1xx_hal_tim.c **** 
 562:src/stm32f1xx_hal_tim.c **** /**
 563:src/stm32f1xx_hal_tim.c ****   * @}
 564:src/stm32f1xx_hal_tim.c ****   */
 565:src/stm32f1xx_hal_tim.c **** 
 566:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group2 TIM Output Compare functions
 567:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Output Compare functions
 568:src/stm32f1xx_hal_tim.c ****   *
 569:src/stm32f1xx_hal_tim.c **** @verbatim
 570:src/stm32f1xx_hal_tim.c ****   ==============================================================================
 571:src/stm32f1xx_hal_tim.c ****                   ##### TIM Output Compare functions #####
 572:src/stm32f1xx_hal_tim.c ****   ==============================================================================
 573:src/stm32f1xx_hal_tim.c ****   [..]
 574:src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
 575:src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM Output Compare.
 576:src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM Output Compare.
 577:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare.
 578:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare.
 579:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable interrupt.
 580:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable interrupt.
 581:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable DMA transfer.
 582:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable DMA transfer.
 583:src/stm32f1xx_hal_tim.c **** 
 584:src/stm32f1xx_hal_tim.c **** @endverbatim
 585:src/stm32f1xx_hal_tim.c ****   * @{
 586:src/stm32f1xx_hal_tim.c ****   */
 587:src/stm32f1xx_hal_tim.c **** /**
 588:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare according to the specified
 589:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
 590:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 591:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
 592:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 593:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OC_DeInit() before HAL_TIM_OC_Init()
 594:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 595:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 596:src/stm32f1xx_hal_tim.c ****   */
 597:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef *htim)
 598:src/stm32f1xx_hal_tim.c **** {
 599:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 600:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 601:src/stm32f1xx_hal_tim.c ****   {
 602:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 603:src/stm32f1xx_hal_tim.c ****   }
 604:src/stm32f1xx_hal_tim.c **** 
 605:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 606:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 607:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
ARM GAS  /tmp/ccTsJCXT.s 			page 13


 608:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 609:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 610:src/stm32f1xx_hal_tim.c **** 
 611:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 612:src/stm32f1xx_hal_tim.c ****   {
 613:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 614:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 615:src/stm32f1xx_hal_tim.c **** 
 616:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 617:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 618:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
 619:src/stm32f1xx_hal_tim.c **** 
 620:src/stm32f1xx_hal_tim.c ****     if (htim->OC_MspInitCallback == NULL)
 621:src/stm32f1xx_hal_tim.c ****     {
 622:src/stm32f1xx_hal_tim.c ****       htim->OC_MspInitCallback = HAL_TIM_OC_MspInit;
 623:src/stm32f1xx_hal_tim.c ****     }
 624:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 625:src/stm32f1xx_hal_tim.c ****     htim->OC_MspInitCallback(htim);
 626:src/stm32f1xx_hal_tim.c **** #else
 627:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 628:src/stm32f1xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 629:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 630:src/stm32f1xx_hal_tim.c ****   }
 631:src/stm32f1xx_hal_tim.c **** 
 632:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 633:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 634:src/stm32f1xx_hal_tim.c **** 
 635:src/stm32f1xx_hal_tim.c ****   /* Init the base time for the Output Compare */
 636:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 637:src/stm32f1xx_hal_tim.c **** 
 638:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
 639:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 640:src/stm32f1xx_hal_tim.c **** 
 641:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 642:src/stm32f1xx_hal_tim.c **** }
 643:src/stm32f1xx_hal_tim.c **** 
 644:src/stm32f1xx_hal_tim.c **** /**
 645:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
 646:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 647:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 648:src/stm32f1xx_hal_tim.c ****   */
 649:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_DeInit(TIM_HandleTypeDef *htim)
 650:src/stm32f1xx_hal_tim.c **** {
 651:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 652:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 653:src/stm32f1xx_hal_tim.c **** 
 654:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 655:src/stm32f1xx_hal_tim.c **** 
 656:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 657:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 658:src/stm32f1xx_hal_tim.c **** 
 659:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 660:src/stm32f1xx_hal_tim.c ****   if (htim->OC_MspDeInitCallback == NULL)
 661:src/stm32f1xx_hal_tim.c ****   {
 662:src/stm32f1xx_hal_tim.c ****     htim->OC_MspDeInitCallback = HAL_TIM_OC_MspDeInit;
 663:src/stm32f1xx_hal_tim.c ****   }
 664:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
ARM GAS  /tmp/ccTsJCXT.s 			page 14


 665:src/stm32f1xx_hal_tim.c ****   htim->OC_MspDeInitCallback(htim);
 666:src/stm32f1xx_hal_tim.c **** #else
 667:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 668:src/stm32f1xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 669:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 670:src/stm32f1xx_hal_tim.c **** 
 671:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
 672:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 673:src/stm32f1xx_hal_tim.c **** 
 674:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
 675:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 676:src/stm32f1xx_hal_tim.c **** 
 677:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 678:src/stm32f1xx_hal_tim.c **** }
 679:src/stm32f1xx_hal_tim.c **** 
 680:src/stm32f1xx_hal_tim.c **** /**
 681:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare MSP.
 682:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 683:src/stm32f1xx_hal_tim.c ****   * @retval None
 684:src/stm32f1xx_hal_tim.c ****   */
 685:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
 686:src/stm32f1xx_hal_tim.c **** {
 687:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 688:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 689:src/stm32f1xx_hal_tim.c **** 
 690:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 691:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_MspInit could be implemented in the user file
 692:src/stm32f1xx_hal_tim.c ****    */
 693:src/stm32f1xx_hal_tim.c **** }
 694:src/stm32f1xx_hal_tim.c **** 
 695:src/stm32f1xx_hal_tim.c **** /**
 696:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Output Compare MSP.
 697:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 698:src/stm32f1xx_hal_tim.c ****   * @retval None
 699:src/stm32f1xx_hal_tim.c ****   */
 700:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef *htim)
 701:src/stm32f1xx_hal_tim.c **** {
 702:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 703:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 704:src/stm32f1xx_hal_tim.c **** 
 705:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 706:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_MspDeInit could be implemented in the user file
 707:src/stm32f1xx_hal_tim.c ****    */
 708:src/stm32f1xx_hal_tim.c **** }
 709:src/stm32f1xx_hal_tim.c **** 
 710:src/stm32f1xx_hal_tim.c **** /**
 711:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation.
 712:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 713:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 714:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 715:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 716:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 717:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 718:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 719:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 720:src/stm32f1xx_hal_tim.c ****   */
 721:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
ARM GAS  /tmp/ccTsJCXT.s 			page 15


 722:src/stm32f1xx_hal_tim.c **** {
 723:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 724:src/stm32f1xx_hal_tim.c **** 
 725:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 726:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 727:src/stm32f1xx_hal_tim.c **** 
 728:src/stm32f1xx_hal_tim.c ****   /* Enable the Output compare channel */
 729:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 730:src/stm32f1xx_hal_tim.c **** 
 731:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 732:src/stm32f1xx_hal_tim.c ****   {
 733:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
 734:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 735:src/stm32f1xx_hal_tim.c ****   }
 736:src/stm32f1xx_hal_tim.c **** 
 737:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 738:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 739:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 740:src/stm32f1xx_hal_tim.c ****   {
 741:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 742:src/stm32f1xx_hal_tim.c ****   }
 743:src/stm32f1xx_hal_tim.c **** 
 744:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 745:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 746:src/stm32f1xx_hal_tim.c **** }
 747:src/stm32f1xx_hal_tim.c **** 
 748:src/stm32f1xx_hal_tim.c **** /**
 749:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation.
 750:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 751:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 752:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 753:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 754:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 755:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 756:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 757:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 758:src/stm32f1xx_hal_tim.c ****   */
 759:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 760:src/stm32f1xx_hal_tim.c **** {
 761:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 762:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 763:src/stm32f1xx_hal_tim.c **** 
 764:src/stm32f1xx_hal_tim.c ****   /* Disable the Output compare channel */
 765:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 766:src/stm32f1xx_hal_tim.c **** 
 767:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 768:src/stm32f1xx_hal_tim.c ****   {
 769:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
 770:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 771:src/stm32f1xx_hal_tim.c ****   }
 772:src/stm32f1xx_hal_tim.c **** 
 773:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 774:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 775:src/stm32f1xx_hal_tim.c **** 
 776:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 777:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 778:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 16


 779:src/stm32f1xx_hal_tim.c **** 
 780:src/stm32f1xx_hal_tim.c **** /**
 781:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode.
 782:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 783:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 784:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 785:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 786:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 787:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 788:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 789:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 790:src/stm32f1xx_hal_tim.c ****   */
 791:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 792:src/stm32f1xx_hal_tim.c **** {
 793:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 794:src/stm32f1xx_hal_tim.c **** 
 795:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 796:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 797:src/stm32f1xx_hal_tim.c **** 
 798:src/stm32f1xx_hal_tim.c ****   switch (Channel)
 799:src/stm32f1xx_hal_tim.c ****   {
 800:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
 801:src/stm32f1xx_hal_tim.c ****     {
 802:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
 803:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 804:src/stm32f1xx_hal_tim.c ****       break;
 805:src/stm32f1xx_hal_tim.c ****     }
 806:src/stm32f1xx_hal_tim.c **** 
 807:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
 808:src/stm32f1xx_hal_tim.c ****     {
 809:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
 810:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 811:src/stm32f1xx_hal_tim.c ****       break;
 812:src/stm32f1xx_hal_tim.c ****     }
 813:src/stm32f1xx_hal_tim.c **** 
 814:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
 815:src/stm32f1xx_hal_tim.c ****     {
 816:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
 817:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 818:src/stm32f1xx_hal_tim.c ****       break;
 819:src/stm32f1xx_hal_tim.c ****     }
 820:src/stm32f1xx_hal_tim.c **** 
 821:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
 822:src/stm32f1xx_hal_tim.c ****     {
 823:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
 824:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 825:src/stm32f1xx_hal_tim.c ****       break;
 826:src/stm32f1xx_hal_tim.c ****     }
 827:src/stm32f1xx_hal_tim.c **** 
 828:src/stm32f1xx_hal_tim.c ****     default:
 829:src/stm32f1xx_hal_tim.c ****       break;
 830:src/stm32f1xx_hal_tim.c ****   }
 831:src/stm32f1xx_hal_tim.c **** 
 832:src/stm32f1xx_hal_tim.c ****   /* Enable the Output compare channel */
 833:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 834:src/stm32f1xx_hal_tim.c **** 
 835:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
ARM GAS  /tmp/ccTsJCXT.s 			page 17


 836:src/stm32f1xx_hal_tim.c ****   {
 837:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
 838:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 839:src/stm32f1xx_hal_tim.c ****   }
 840:src/stm32f1xx_hal_tim.c **** 
 841:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 842:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 843:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 844:src/stm32f1xx_hal_tim.c ****   {
 845:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 846:src/stm32f1xx_hal_tim.c ****   }
 847:src/stm32f1xx_hal_tim.c **** 
 848:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 849:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 850:src/stm32f1xx_hal_tim.c **** }
 851:src/stm32f1xx_hal_tim.c **** 
 852:src/stm32f1xx_hal_tim.c **** /**
 853:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode.
 854:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 855:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 856:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 857:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 858:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 859:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 860:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 861:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 862:src/stm32f1xx_hal_tim.c ****   */
 863:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 864:src/stm32f1xx_hal_tim.c **** {
 865:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 866:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 867:src/stm32f1xx_hal_tim.c **** 
 868:src/stm32f1xx_hal_tim.c ****   switch (Channel)
 869:src/stm32f1xx_hal_tim.c ****   {
 870:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
 871:src/stm32f1xx_hal_tim.c ****     {
 872:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
 873:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 874:src/stm32f1xx_hal_tim.c ****       break;
 875:src/stm32f1xx_hal_tim.c ****     }
 876:src/stm32f1xx_hal_tim.c **** 
 877:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
 878:src/stm32f1xx_hal_tim.c ****     {
 879:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
 880:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 881:src/stm32f1xx_hal_tim.c ****       break;
 882:src/stm32f1xx_hal_tim.c ****     }
 883:src/stm32f1xx_hal_tim.c **** 
 884:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
 885:src/stm32f1xx_hal_tim.c ****     {
 886:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
 887:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 888:src/stm32f1xx_hal_tim.c ****       break;
 889:src/stm32f1xx_hal_tim.c ****     }
 890:src/stm32f1xx_hal_tim.c **** 
 891:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
 892:src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp/ccTsJCXT.s 			page 18


 893:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
 894:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 895:src/stm32f1xx_hal_tim.c ****       break;
 896:src/stm32f1xx_hal_tim.c ****     }
 897:src/stm32f1xx_hal_tim.c **** 
 898:src/stm32f1xx_hal_tim.c ****     default:
 899:src/stm32f1xx_hal_tim.c ****       break;
 900:src/stm32f1xx_hal_tim.c ****   }
 901:src/stm32f1xx_hal_tim.c **** 
 902:src/stm32f1xx_hal_tim.c ****   /* Disable the Output compare channel */
 903:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 904:src/stm32f1xx_hal_tim.c **** 
 905:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 906:src/stm32f1xx_hal_tim.c ****   {
 907:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
 908:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 909:src/stm32f1xx_hal_tim.c ****   }
 910:src/stm32f1xx_hal_tim.c **** 
 911:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 912:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 913:src/stm32f1xx_hal_tim.c **** 
 914:src/stm32f1xx_hal_tim.c ****   /* Return function status */
 915:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 916:src/stm32f1xx_hal_tim.c **** }
 917:src/stm32f1xx_hal_tim.c **** 
 918:src/stm32f1xx_hal_tim.c **** /**
 919:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode.
 920:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 921:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 922:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 923:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 924:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 925:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 926:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 927:src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
 928:src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
 929:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 930:src/stm32f1xx_hal_tim.c ****   */
 931:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
 932:src/stm32f1xx_hal_tim.c **** {
 933:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 934:src/stm32f1xx_hal_tim.c **** 
 935:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 936:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 937:src/stm32f1xx_hal_tim.c **** 
 938:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
 939:src/stm32f1xx_hal_tim.c ****   {
 940:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 941:src/stm32f1xx_hal_tim.c ****   }
 942:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
 943:src/stm32f1xx_hal_tim.c ****   {
 944:src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) && (Length > 0U))
 945:src/stm32f1xx_hal_tim.c ****     {
 946:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 947:src/stm32f1xx_hal_tim.c ****     }
 948:src/stm32f1xx_hal_tim.c ****     else
 949:src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp/ccTsJCXT.s 			page 19


 950:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 951:src/stm32f1xx_hal_tim.c ****     }
 952:src/stm32f1xx_hal_tim.c ****   }
 953:src/stm32f1xx_hal_tim.c ****   else
 954:src/stm32f1xx_hal_tim.c ****   {
 955:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
 956:src/stm32f1xx_hal_tim.c ****   }
 957:src/stm32f1xx_hal_tim.c **** 
 958:src/stm32f1xx_hal_tim.c ****   switch (Channel)
 959:src/stm32f1xx_hal_tim.c ****   {
 960:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
 961:src/stm32f1xx_hal_tim.c ****     {
 962:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
 963:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 964:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 965:src/stm32f1xx_hal_tim.c **** 
 966:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
 967:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 968:src/stm32f1xx_hal_tim.c **** 
 969:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
 970:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
 971:src/stm32f1xx_hal_tim.c ****       {
 972:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 973:src/stm32f1xx_hal_tim.c ****       }
 974:src/stm32f1xx_hal_tim.c **** 
 975:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
 976:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 977:src/stm32f1xx_hal_tim.c ****       break;
 978:src/stm32f1xx_hal_tim.c ****     }
 979:src/stm32f1xx_hal_tim.c **** 
 980:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
 981:src/stm32f1xx_hal_tim.c ****     {
 982:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
 983:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 984:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 985:src/stm32f1xx_hal_tim.c **** 
 986:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
 987:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 988:src/stm32f1xx_hal_tim.c **** 
 989:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
 990:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
 991:src/stm32f1xx_hal_tim.c ****       {
 992:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 993:src/stm32f1xx_hal_tim.c ****       }
 994:src/stm32f1xx_hal_tim.c **** 
 995:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
 996:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 997:src/stm32f1xx_hal_tim.c ****       break;
 998:src/stm32f1xx_hal_tim.c ****     }
 999:src/stm32f1xx_hal_tim.c **** 
1000:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1001:src/stm32f1xx_hal_tim.c ****     {
1002:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1003:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1004:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1005:src/stm32f1xx_hal_tim.c **** 
1006:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp/ccTsJCXT.s 			page 20


1007:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1008:src/stm32f1xx_hal_tim.c **** 
1009:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1010:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
1011:src/stm32f1xx_hal_tim.c ****       {
1012:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1013:src/stm32f1xx_hal_tim.c ****       }
1014:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
1015:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1016:src/stm32f1xx_hal_tim.c ****       break;
1017:src/stm32f1xx_hal_tim.c ****     }
1018:src/stm32f1xx_hal_tim.c **** 
1019:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1020:src/stm32f1xx_hal_tim.c ****     {
1021:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1022:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1023:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1024:src/stm32f1xx_hal_tim.c **** 
1025:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1026:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1027:src/stm32f1xx_hal_tim.c **** 
1028:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1029:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
1030:src/stm32f1xx_hal_tim.c ****       {
1031:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1032:src/stm32f1xx_hal_tim.c ****       }
1033:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1034:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1035:src/stm32f1xx_hal_tim.c ****       break;
1036:src/stm32f1xx_hal_tim.c ****     }
1037:src/stm32f1xx_hal_tim.c **** 
1038:src/stm32f1xx_hal_tim.c ****     default:
1039:src/stm32f1xx_hal_tim.c ****       break;
1040:src/stm32f1xx_hal_tim.c ****   }
1041:src/stm32f1xx_hal_tim.c **** 
1042:src/stm32f1xx_hal_tim.c ****   /* Enable the Output compare channel */
1043:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1044:src/stm32f1xx_hal_tim.c **** 
1045:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1046:src/stm32f1xx_hal_tim.c ****   {
1047:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
1048:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1049:src/stm32f1xx_hal_tim.c ****   }
1050:src/stm32f1xx_hal_tim.c **** 
1051:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1052:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1053:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1054:src/stm32f1xx_hal_tim.c ****   {
1055:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1056:src/stm32f1xx_hal_tim.c ****   }
1057:src/stm32f1xx_hal_tim.c **** 
1058:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1059:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1060:src/stm32f1xx_hal_tim.c **** }
1061:src/stm32f1xx_hal_tim.c **** 
1062:src/stm32f1xx_hal_tim.c **** /**
1063:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode.
ARM GAS  /tmp/ccTsJCXT.s 			page 21


1064:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
1065:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
1066:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1067:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1068:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1069:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1070:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1071:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1072:src/stm32f1xx_hal_tim.c ****   */
1073:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1074:src/stm32f1xx_hal_tim.c **** {
1075:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1076:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1077:src/stm32f1xx_hal_tim.c **** 
1078:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1079:src/stm32f1xx_hal_tim.c ****   {
1080:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1081:src/stm32f1xx_hal_tim.c ****     {
1082:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1083:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1084:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
1085:src/stm32f1xx_hal_tim.c ****       break;
1086:src/stm32f1xx_hal_tim.c ****     }
1087:src/stm32f1xx_hal_tim.c **** 
1088:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1089:src/stm32f1xx_hal_tim.c ****     {
1090:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1091:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1092:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
1093:src/stm32f1xx_hal_tim.c ****       break;
1094:src/stm32f1xx_hal_tim.c ****     }
1095:src/stm32f1xx_hal_tim.c **** 
1096:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1097:src/stm32f1xx_hal_tim.c ****     {
1098:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1099:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1100:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
1101:src/stm32f1xx_hal_tim.c ****       break;
1102:src/stm32f1xx_hal_tim.c ****     }
1103:src/stm32f1xx_hal_tim.c **** 
1104:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1105:src/stm32f1xx_hal_tim.c ****     {
1106:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1107:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1108:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
1109:src/stm32f1xx_hal_tim.c ****       break;
1110:src/stm32f1xx_hal_tim.c ****     }
1111:src/stm32f1xx_hal_tim.c **** 
1112:src/stm32f1xx_hal_tim.c ****     default:
1113:src/stm32f1xx_hal_tim.c ****       break;
1114:src/stm32f1xx_hal_tim.c ****   }
1115:src/stm32f1xx_hal_tim.c **** 
1116:src/stm32f1xx_hal_tim.c ****   /* Disable the Output compare channel */
1117:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1118:src/stm32f1xx_hal_tim.c **** 
1119:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1120:src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp/ccTsJCXT.s 			page 22


1121:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
1122:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1123:src/stm32f1xx_hal_tim.c ****   }
1124:src/stm32f1xx_hal_tim.c **** 
1125:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1126:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1127:src/stm32f1xx_hal_tim.c **** 
1128:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
1129:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1130:src/stm32f1xx_hal_tim.c **** 
1131:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1132:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1133:src/stm32f1xx_hal_tim.c **** }
1134:src/stm32f1xx_hal_tim.c **** 
1135:src/stm32f1xx_hal_tim.c **** /**
1136:src/stm32f1xx_hal_tim.c ****   * @}
1137:src/stm32f1xx_hal_tim.c ****   */
1138:src/stm32f1xx_hal_tim.c **** 
1139:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group3 TIM PWM functions
1140:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM PWM functions
1141:src/stm32f1xx_hal_tim.c ****   *
1142:src/stm32f1xx_hal_tim.c **** @verbatim
1143:src/stm32f1xx_hal_tim.c ****   ==============================================================================
1144:src/stm32f1xx_hal_tim.c ****                           ##### TIM PWM functions #####
1145:src/stm32f1xx_hal_tim.c ****   ==============================================================================
1146:src/stm32f1xx_hal_tim.c ****   [..]
1147:src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
1148:src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM PWM.
1149:src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM PWM.
1150:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM.
1151:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM.
1152:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM and enable interrupt.
1153:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM and disable interrupt.
1154:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM and enable DMA transfer.
1155:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM and disable DMA transfer.
1156:src/stm32f1xx_hal_tim.c **** 
1157:src/stm32f1xx_hal_tim.c **** @endverbatim
1158:src/stm32f1xx_hal_tim.c ****   * @{
1159:src/stm32f1xx_hal_tim.c ****   */
1160:src/stm32f1xx_hal_tim.c **** /**
1161:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM Time Base according to the specified
1162:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1163:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1164:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1165:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1166:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
1167:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1168:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1169:src/stm32f1xx_hal_tim.c ****   */
1170:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
1171:src/stm32f1xx_hal_tim.c **** {
1172:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
1173:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
1174:src/stm32f1xx_hal_tim.c ****   {
1175:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
1176:src/stm32f1xx_hal_tim.c ****   }
1177:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 23


1178:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1179:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1180:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1181:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1182:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1183:src/stm32f1xx_hal_tim.c **** 
1184:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
1185:src/stm32f1xx_hal_tim.c ****   {
1186:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1187:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1188:src/stm32f1xx_hal_tim.c **** 
1189:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1190:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
1191:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
1192:src/stm32f1xx_hal_tim.c **** 
1193:src/stm32f1xx_hal_tim.c ****     if (htim->PWM_MspInitCallback == NULL)
1194:src/stm32f1xx_hal_tim.c ****     {
1195:src/stm32f1xx_hal_tim.c ****       htim->PWM_MspInitCallback = HAL_TIM_PWM_MspInit;
1196:src/stm32f1xx_hal_tim.c ****     }
1197:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
1198:src/stm32f1xx_hal_tim.c ****     htim->PWM_MspInitCallback(htim);
1199:src/stm32f1xx_hal_tim.c **** #else
1200:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1201:src/stm32f1xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
1202:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1203:src/stm32f1xx_hal_tim.c ****   }
1204:src/stm32f1xx_hal_tim.c **** 
1205:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
1206:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1207:src/stm32f1xx_hal_tim.c **** 
1208:src/stm32f1xx_hal_tim.c ****   /* Init the base time for the PWM */
1209:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
1210:src/stm32f1xx_hal_tim.c **** 
1211:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
1212:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1213:src/stm32f1xx_hal_tim.c **** 
1214:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1215:src/stm32f1xx_hal_tim.c **** }
1216:src/stm32f1xx_hal_tim.c **** 
1217:src/stm32f1xx_hal_tim.c **** /**
1218:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
1219:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1220:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1221:src/stm32f1xx_hal_tim.c ****   */
1222:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_DeInit(TIM_HandleTypeDef *htim)
1223:src/stm32f1xx_hal_tim.c **** {
1224:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1225:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1226:src/stm32f1xx_hal_tim.c **** 
1227:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1228:src/stm32f1xx_hal_tim.c **** 
1229:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1230:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1231:src/stm32f1xx_hal_tim.c **** 
1232:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1233:src/stm32f1xx_hal_tim.c ****   if (htim->PWM_MspDeInitCallback == NULL)
1234:src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp/ccTsJCXT.s 			page 24


1235:src/stm32f1xx_hal_tim.c ****     htim->PWM_MspDeInitCallback = HAL_TIM_PWM_MspDeInit;
1236:src/stm32f1xx_hal_tim.c ****   }
1237:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
1238:src/stm32f1xx_hal_tim.c ****   htim->PWM_MspDeInitCallback(htim);
1239:src/stm32f1xx_hal_tim.c **** #else
1240:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1241:src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
1242:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1243:src/stm32f1xx_hal_tim.c **** 
1244:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
1245:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1246:src/stm32f1xx_hal_tim.c **** 
1247:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
1248:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1249:src/stm32f1xx_hal_tim.c **** 
1250:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1251:src/stm32f1xx_hal_tim.c **** }
1252:src/stm32f1xx_hal_tim.c **** 
1253:src/stm32f1xx_hal_tim.c **** /**
1254:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM MSP.
1255:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1256:src/stm32f1xx_hal_tim.c ****   * @retval None
1257:src/stm32f1xx_hal_tim.c ****   */
1258:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
1259:src/stm32f1xx_hal_tim.c **** {
1260:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1261:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1262:src/stm32f1xx_hal_tim.c **** 
1263:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1264:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_MspInit could be implemented in the user file
1265:src/stm32f1xx_hal_tim.c ****    */
1266:src/stm32f1xx_hal_tim.c **** }
1267:src/stm32f1xx_hal_tim.c **** 
1268:src/stm32f1xx_hal_tim.c **** /**
1269:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM PWM MSP.
1270:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1271:src/stm32f1xx_hal_tim.c ****   * @retval None
1272:src/stm32f1xx_hal_tim.c ****   */
1273:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef *htim)
1274:src/stm32f1xx_hal_tim.c **** {
1275:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1276:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1277:src/stm32f1xx_hal_tim.c **** 
1278:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1279:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_MspDeInit could be implemented in the user file
1280:src/stm32f1xx_hal_tim.c ****    */
1281:src/stm32f1xx_hal_tim.c **** }
1282:src/stm32f1xx_hal_tim.c **** 
1283:src/stm32f1xx_hal_tim.c **** /**
1284:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the PWM signal generation.
1285:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
1286:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1287:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1288:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1289:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1290:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1291:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
ARM GAS  /tmp/ccTsJCXT.s 			page 25


1292:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1293:src/stm32f1xx_hal_tim.c ****   */
1294:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1295:src/stm32f1xx_hal_tim.c **** {
1296:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1297:src/stm32f1xx_hal_tim.c **** 
1298:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1299:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1300:src/stm32f1xx_hal_tim.c **** 
1301:src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare channel */
1302:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1303:src/stm32f1xx_hal_tim.c **** 
1304:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1305:src/stm32f1xx_hal_tim.c ****   {
1306:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
1307:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1308:src/stm32f1xx_hal_tim.c ****   }
1309:src/stm32f1xx_hal_tim.c **** 
1310:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1311:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1312:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1313:src/stm32f1xx_hal_tim.c ****   {
1314:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1315:src/stm32f1xx_hal_tim.c ****   }
1316:src/stm32f1xx_hal_tim.c **** 
1317:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1318:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1319:src/stm32f1xx_hal_tim.c **** }
1320:src/stm32f1xx_hal_tim.c **** 
1321:src/stm32f1xx_hal_tim.c **** /**
1322:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the PWM signal generation.
1323:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1324:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1325:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1326:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1327:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1328:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1329:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1330:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1331:src/stm32f1xx_hal_tim.c ****   */
1332:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1333:src/stm32f1xx_hal_tim.c **** {
1334:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1335:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1336:src/stm32f1xx_hal_tim.c **** 
1337:src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare channel */
1338:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1339:src/stm32f1xx_hal_tim.c **** 
1340:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1341:src/stm32f1xx_hal_tim.c ****   {
1342:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
1343:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1344:src/stm32f1xx_hal_tim.c ****   }
1345:src/stm32f1xx_hal_tim.c **** 
1346:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1347:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1348:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 26


1349:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
1350:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1351:src/stm32f1xx_hal_tim.c **** 
1352:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1353:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1354:src/stm32f1xx_hal_tim.c **** }
1355:src/stm32f1xx_hal_tim.c **** 
1356:src/stm32f1xx_hal_tim.c **** /**
1357:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the PWM signal generation in interrupt mode.
1358:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1359:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
1360:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1361:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1362:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1363:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1364:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1365:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1366:src/stm32f1xx_hal_tim.c ****   */
1367:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1368:src/stm32f1xx_hal_tim.c **** {
1369:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1370:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1371:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1372:src/stm32f1xx_hal_tim.c **** 
1373:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1374:src/stm32f1xx_hal_tim.c ****   {
1375:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1376:src/stm32f1xx_hal_tim.c ****     {
1377:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1378:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1379:src/stm32f1xx_hal_tim.c ****       break;
1380:src/stm32f1xx_hal_tim.c ****     }
1381:src/stm32f1xx_hal_tim.c **** 
1382:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1383:src/stm32f1xx_hal_tim.c ****     {
1384:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1385:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1386:src/stm32f1xx_hal_tim.c ****       break;
1387:src/stm32f1xx_hal_tim.c ****     }
1388:src/stm32f1xx_hal_tim.c **** 
1389:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1390:src/stm32f1xx_hal_tim.c ****     {
1391:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1392:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1393:src/stm32f1xx_hal_tim.c ****       break;
1394:src/stm32f1xx_hal_tim.c ****     }
1395:src/stm32f1xx_hal_tim.c **** 
1396:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1397:src/stm32f1xx_hal_tim.c ****     {
1398:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1399:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1400:src/stm32f1xx_hal_tim.c ****       break;
1401:src/stm32f1xx_hal_tim.c ****     }
1402:src/stm32f1xx_hal_tim.c **** 
1403:src/stm32f1xx_hal_tim.c ****     default:
1404:src/stm32f1xx_hal_tim.c ****       break;
1405:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 27


1406:src/stm32f1xx_hal_tim.c **** 
1407:src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare channel */
1408:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1409:src/stm32f1xx_hal_tim.c **** 
1410:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1411:src/stm32f1xx_hal_tim.c ****   {
1412:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
1413:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1414:src/stm32f1xx_hal_tim.c ****   }
1415:src/stm32f1xx_hal_tim.c **** 
1416:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1417:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1418:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1419:src/stm32f1xx_hal_tim.c ****   {
1420:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1421:src/stm32f1xx_hal_tim.c ****   }
1422:src/stm32f1xx_hal_tim.c **** 
1423:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1424:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1425:src/stm32f1xx_hal_tim.c **** }
1426:src/stm32f1xx_hal_tim.c **** 
1427:src/stm32f1xx_hal_tim.c **** /**
1428:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the PWM signal generation in interrupt mode.
1429:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1430:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1431:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1432:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1433:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1434:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1435:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1436:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1437:src/stm32f1xx_hal_tim.c ****   */
1438:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1439:src/stm32f1xx_hal_tim.c **** {
1440:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1441:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1442:src/stm32f1xx_hal_tim.c **** 
1443:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1444:src/stm32f1xx_hal_tim.c ****   {
1445:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1446:src/stm32f1xx_hal_tim.c ****     {
1447:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1448:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1449:src/stm32f1xx_hal_tim.c ****       break;
1450:src/stm32f1xx_hal_tim.c ****     }
1451:src/stm32f1xx_hal_tim.c **** 
1452:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1453:src/stm32f1xx_hal_tim.c ****     {
1454:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1455:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1456:src/stm32f1xx_hal_tim.c ****       break;
1457:src/stm32f1xx_hal_tim.c ****     }
1458:src/stm32f1xx_hal_tim.c **** 
1459:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1460:src/stm32f1xx_hal_tim.c ****     {
1461:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1462:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
ARM GAS  /tmp/ccTsJCXT.s 			page 28


1463:src/stm32f1xx_hal_tim.c ****       break;
1464:src/stm32f1xx_hal_tim.c ****     }
1465:src/stm32f1xx_hal_tim.c **** 
1466:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1467:src/stm32f1xx_hal_tim.c ****     {
1468:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1469:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1470:src/stm32f1xx_hal_tim.c ****       break;
1471:src/stm32f1xx_hal_tim.c ****     }
1472:src/stm32f1xx_hal_tim.c **** 
1473:src/stm32f1xx_hal_tim.c ****     default:
1474:src/stm32f1xx_hal_tim.c ****       break;
1475:src/stm32f1xx_hal_tim.c ****   }
1476:src/stm32f1xx_hal_tim.c **** 
1477:src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare channel */
1478:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1479:src/stm32f1xx_hal_tim.c **** 
1480:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1481:src/stm32f1xx_hal_tim.c ****   {
1482:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
1483:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1484:src/stm32f1xx_hal_tim.c ****   }
1485:src/stm32f1xx_hal_tim.c **** 
1486:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1487:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1488:src/stm32f1xx_hal_tim.c **** 
1489:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1490:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1491:src/stm32f1xx_hal_tim.c **** }
1492:src/stm32f1xx_hal_tim.c **** 
1493:src/stm32f1xx_hal_tim.c **** /**
1494:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode.
1495:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1496:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1497:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1498:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1499:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1500:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1501:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1502:src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
1503:src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1504:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1505:src/stm32f1xx_hal_tim.c ****   */
1506:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData,
1507:src/stm32f1xx_hal_tim.c **** {
1508:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1509:src/stm32f1xx_hal_tim.c **** 
1510:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1511:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1512:src/stm32f1xx_hal_tim.c **** 
1513:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
1514:src/stm32f1xx_hal_tim.c ****   {
1515:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
1516:src/stm32f1xx_hal_tim.c ****   }
1517:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
1518:src/stm32f1xx_hal_tim.c ****   {
1519:src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) && (Length > 0U))
ARM GAS  /tmp/ccTsJCXT.s 			page 29


1520:src/stm32f1xx_hal_tim.c ****     {
1521:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
1522:src/stm32f1xx_hal_tim.c ****     }
1523:src/stm32f1xx_hal_tim.c ****     else
1524:src/stm32f1xx_hal_tim.c ****     {
1525:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
1526:src/stm32f1xx_hal_tim.c ****     }
1527:src/stm32f1xx_hal_tim.c ****   }
1528:src/stm32f1xx_hal_tim.c ****   else
1529:src/stm32f1xx_hal_tim.c ****   {
1530:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
1531:src/stm32f1xx_hal_tim.c ****   }
1532:src/stm32f1xx_hal_tim.c **** 
1533:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1534:src/stm32f1xx_hal_tim.c ****   {
1535:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1536:src/stm32f1xx_hal_tim.c ****     {
1537:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1538:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
1539:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1540:src/stm32f1xx_hal_tim.c **** 
1541:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1542:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1543:src/stm32f1xx_hal_tim.c **** 
1544:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1545:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
1546:src/stm32f1xx_hal_tim.c ****       {
1547:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1548:src/stm32f1xx_hal_tim.c ****       }
1549:src/stm32f1xx_hal_tim.c **** 
1550:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1551:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1552:src/stm32f1xx_hal_tim.c ****       break;
1553:src/stm32f1xx_hal_tim.c ****     }
1554:src/stm32f1xx_hal_tim.c **** 
1555:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1556:src/stm32f1xx_hal_tim.c ****     {
1557:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1558:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
1559:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1560:src/stm32f1xx_hal_tim.c **** 
1561:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1562:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1563:src/stm32f1xx_hal_tim.c **** 
1564:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1565:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
1566:src/stm32f1xx_hal_tim.c ****       {
1567:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1568:src/stm32f1xx_hal_tim.c ****       }
1569:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1570:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1571:src/stm32f1xx_hal_tim.c ****       break;
1572:src/stm32f1xx_hal_tim.c ****     }
1573:src/stm32f1xx_hal_tim.c **** 
1574:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1575:src/stm32f1xx_hal_tim.c ****     {
1576:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
ARM GAS  /tmp/ccTsJCXT.s 			page 30


1577:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1578:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1579:src/stm32f1xx_hal_tim.c **** 
1580:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1581:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1582:src/stm32f1xx_hal_tim.c **** 
1583:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1584:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
1585:src/stm32f1xx_hal_tim.c ****       {
1586:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1587:src/stm32f1xx_hal_tim.c ****       }
1588:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Output Capture/Compare 3 request */
1589:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1590:src/stm32f1xx_hal_tim.c ****       break;
1591:src/stm32f1xx_hal_tim.c ****     }
1592:src/stm32f1xx_hal_tim.c **** 
1593:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1594:src/stm32f1xx_hal_tim.c ****     {
1595:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1596:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1597:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1598:src/stm32f1xx_hal_tim.c **** 
1599:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1600:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1601:src/stm32f1xx_hal_tim.c **** 
1602:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1603:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
1604:src/stm32f1xx_hal_tim.c ****       {
1605:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
1606:src/stm32f1xx_hal_tim.c ****       }
1607:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1608:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1609:src/stm32f1xx_hal_tim.c ****       break;
1610:src/stm32f1xx_hal_tim.c ****     }
1611:src/stm32f1xx_hal_tim.c **** 
1612:src/stm32f1xx_hal_tim.c ****     default:
1613:src/stm32f1xx_hal_tim.c ****       break;
1614:src/stm32f1xx_hal_tim.c ****   }
1615:src/stm32f1xx_hal_tim.c **** 
1616:src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare channel */
1617:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1618:src/stm32f1xx_hal_tim.c **** 
1619:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1620:src/stm32f1xx_hal_tim.c ****   {
1621:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
1622:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1623:src/stm32f1xx_hal_tim.c ****   }
1624:src/stm32f1xx_hal_tim.c **** 
1625:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1626:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1627:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1628:src/stm32f1xx_hal_tim.c ****   {
1629:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1630:src/stm32f1xx_hal_tim.c ****   }
1631:src/stm32f1xx_hal_tim.c **** 
1632:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1633:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp/ccTsJCXT.s 			page 31


1634:src/stm32f1xx_hal_tim.c **** }
1635:src/stm32f1xx_hal_tim.c **** 
1636:src/stm32f1xx_hal_tim.c **** /**
1637:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode.
1638:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1639:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1640:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1641:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1642:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1643:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1644:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1645:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1646:src/stm32f1xx_hal_tim.c ****   */
1647:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1648:src/stm32f1xx_hal_tim.c **** {
1649:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1650:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1651:src/stm32f1xx_hal_tim.c **** 
1652:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1653:src/stm32f1xx_hal_tim.c ****   {
1654:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1655:src/stm32f1xx_hal_tim.c ****     {
1656:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1657:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1658:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
1659:src/stm32f1xx_hal_tim.c ****       break;
1660:src/stm32f1xx_hal_tim.c ****     }
1661:src/stm32f1xx_hal_tim.c **** 
1662:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1663:src/stm32f1xx_hal_tim.c ****     {
1664:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1665:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1666:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
1667:src/stm32f1xx_hal_tim.c ****       break;
1668:src/stm32f1xx_hal_tim.c ****     }
1669:src/stm32f1xx_hal_tim.c **** 
1670:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1671:src/stm32f1xx_hal_tim.c ****     {
1672:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1673:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1674:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
1675:src/stm32f1xx_hal_tim.c ****       break;
1676:src/stm32f1xx_hal_tim.c ****     }
1677:src/stm32f1xx_hal_tim.c **** 
1678:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1679:src/stm32f1xx_hal_tim.c ****     {
1680:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1681:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1682:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
1683:src/stm32f1xx_hal_tim.c ****       break;
1684:src/stm32f1xx_hal_tim.c ****     }
1685:src/stm32f1xx_hal_tim.c **** 
1686:src/stm32f1xx_hal_tim.c ****     default:
1687:src/stm32f1xx_hal_tim.c ****       break;
1688:src/stm32f1xx_hal_tim.c ****   }
1689:src/stm32f1xx_hal_tim.c **** 
1690:src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare channel */
ARM GAS  /tmp/ccTsJCXT.s 			page 32


1691:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1692:src/stm32f1xx_hal_tim.c **** 
1693:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1694:src/stm32f1xx_hal_tim.c ****   {
1695:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
1696:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1697:src/stm32f1xx_hal_tim.c ****   }
1698:src/stm32f1xx_hal_tim.c **** 
1699:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1700:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1701:src/stm32f1xx_hal_tim.c **** 
1702:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
1703:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1704:src/stm32f1xx_hal_tim.c **** 
1705:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1706:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1707:src/stm32f1xx_hal_tim.c **** }
1708:src/stm32f1xx_hal_tim.c **** 
1709:src/stm32f1xx_hal_tim.c **** /**
1710:src/stm32f1xx_hal_tim.c ****   * @}
1711:src/stm32f1xx_hal_tim.c ****   */
1712:src/stm32f1xx_hal_tim.c **** 
1713:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group4 TIM Input Capture functions
1714:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Input Capture functions
1715:src/stm32f1xx_hal_tim.c ****   *
1716:src/stm32f1xx_hal_tim.c **** @verbatim
1717:src/stm32f1xx_hal_tim.c ****   ==============================================================================
1718:src/stm32f1xx_hal_tim.c ****               ##### TIM Input Capture functions #####
1719:src/stm32f1xx_hal_tim.c ****   ==============================================================================
1720:src/stm32f1xx_hal_tim.c ****  [..]
1721:src/stm32f1xx_hal_tim.c ****    This section provides functions allowing to:
1722:src/stm32f1xx_hal_tim.c ****    (+) Initialize and configure the TIM Input Capture.
1723:src/stm32f1xx_hal_tim.c ****    (+) De-initialize the TIM Input Capture.
1724:src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture.
1725:src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture.
1726:src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable interrupt.
1727:src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable interrupt.
1728:src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable DMA transfer.
1729:src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable DMA transfer.
1730:src/stm32f1xx_hal_tim.c **** 
1731:src/stm32f1xx_hal_tim.c **** @endverbatim
1732:src/stm32f1xx_hal_tim.c ****   * @{
1733:src/stm32f1xx_hal_tim.c ****   */
1734:src/stm32f1xx_hal_tim.c **** /**
1735:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Time base according to the specified
1736:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1737:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1738:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1739:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1740:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
1741:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1742:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1743:src/stm32f1xx_hal_tim.c ****   */
1744:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
1745:src/stm32f1xx_hal_tim.c **** {
1746:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
1747:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
ARM GAS  /tmp/ccTsJCXT.s 			page 33


1748:src/stm32f1xx_hal_tim.c ****   {
1749:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
1750:src/stm32f1xx_hal_tim.c ****   }
1751:src/stm32f1xx_hal_tim.c **** 
1752:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1753:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1754:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1755:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1756:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1757:src/stm32f1xx_hal_tim.c **** 
1758:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
1759:src/stm32f1xx_hal_tim.c ****   {
1760:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1761:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1762:src/stm32f1xx_hal_tim.c **** 
1763:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1764:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
1765:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
1766:src/stm32f1xx_hal_tim.c **** 
1767:src/stm32f1xx_hal_tim.c ****     if (htim->IC_MspInitCallback == NULL)
1768:src/stm32f1xx_hal_tim.c ****     {
1769:src/stm32f1xx_hal_tim.c ****       htim->IC_MspInitCallback = HAL_TIM_IC_MspInit;
1770:src/stm32f1xx_hal_tim.c ****     }
1771:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
1772:src/stm32f1xx_hal_tim.c ****     htim->IC_MspInitCallback(htim);
1773:src/stm32f1xx_hal_tim.c **** #else
1774:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1775:src/stm32f1xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
1776:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1777:src/stm32f1xx_hal_tim.c ****   }
1778:src/stm32f1xx_hal_tim.c **** 
1779:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
1780:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1781:src/stm32f1xx_hal_tim.c **** 
1782:src/stm32f1xx_hal_tim.c ****   /* Init the base time for the input capture */
1783:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
1784:src/stm32f1xx_hal_tim.c **** 
1785:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
1786:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1787:src/stm32f1xx_hal_tim.c **** 
1788:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1789:src/stm32f1xx_hal_tim.c **** }
1790:src/stm32f1xx_hal_tim.c **** 
1791:src/stm32f1xx_hal_tim.c **** /**
1792:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
1793:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1794:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1795:src/stm32f1xx_hal_tim.c ****   */
1796:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_DeInit(TIM_HandleTypeDef *htim)
1797:src/stm32f1xx_hal_tim.c **** {
1798:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1799:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1800:src/stm32f1xx_hal_tim.c **** 
1801:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1802:src/stm32f1xx_hal_tim.c **** 
1803:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1804:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
ARM GAS  /tmp/ccTsJCXT.s 			page 34


1805:src/stm32f1xx_hal_tim.c **** 
1806:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1807:src/stm32f1xx_hal_tim.c ****   if (htim->IC_MspDeInitCallback == NULL)
1808:src/stm32f1xx_hal_tim.c ****   {
1809:src/stm32f1xx_hal_tim.c ****     htim->IC_MspDeInitCallback = HAL_TIM_IC_MspDeInit;
1810:src/stm32f1xx_hal_tim.c ****   }
1811:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
1812:src/stm32f1xx_hal_tim.c ****   htim->IC_MspDeInitCallback(htim);
1813:src/stm32f1xx_hal_tim.c **** #else
1814:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1815:src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
1816:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1817:src/stm32f1xx_hal_tim.c **** 
1818:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
1819:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1820:src/stm32f1xx_hal_tim.c **** 
1821:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
1822:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1823:src/stm32f1xx_hal_tim.c **** 
1824:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1825:src/stm32f1xx_hal_tim.c **** }
1826:src/stm32f1xx_hal_tim.c **** 
1827:src/stm32f1xx_hal_tim.c **** /**
1828:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture MSP.
1829:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1830:src/stm32f1xx_hal_tim.c ****   * @retval None
1831:src/stm32f1xx_hal_tim.c ****   */
1832:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
1833:src/stm32f1xx_hal_tim.c **** {
1834:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1835:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1836:src/stm32f1xx_hal_tim.c **** 
1837:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1838:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_MspInit could be implemented in the user file
1839:src/stm32f1xx_hal_tim.c ****    */
1840:src/stm32f1xx_hal_tim.c **** }
1841:src/stm32f1xx_hal_tim.c **** 
1842:src/stm32f1xx_hal_tim.c **** /**
1843:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Input Capture MSP.
1844:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
1845:src/stm32f1xx_hal_tim.c ****   * @retval None
1846:src/stm32f1xx_hal_tim.c ****   */
1847:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef *htim)
1848:src/stm32f1xx_hal_tim.c **** {
1849:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1850:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1851:src/stm32f1xx_hal_tim.c **** 
1852:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1853:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_MspDeInit could be implemented in the user file
1854:src/stm32f1xx_hal_tim.c ****    */
1855:src/stm32f1xx_hal_tim.c **** }
1856:src/stm32f1xx_hal_tim.c **** 
1857:src/stm32f1xx_hal_tim.c **** /**
1858:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement.
1859:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1860:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1861:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccTsJCXT.s 			page 35


1862:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1863:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1864:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1865:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1866:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1867:src/stm32f1xx_hal_tim.c ****   */
1868:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1869:src/stm32f1xx_hal_tim.c **** {
1870:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1871:src/stm32f1xx_hal_tim.c **** 
1872:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1873:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1874:src/stm32f1xx_hal_tim.c **** 
1875:src/stm32f1xx_hal_tim.c ****   /* Enable the Input Capture channel */
1876:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1877:src/stm32f1xx_hal_tim.c **** 
1878:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1879:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1880:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1881:src/stm32f1xx_hal_tim.c ****   {
1882:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1883:src/stm32f1xx_hal_tim.c ****   }
1884:src/stm32f1xx_hal_tim.c **** 
1885:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1886:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1887:src/stm32f1xx_hal_tim.c **** }
1888:src/stm32f1xx_hal_tim.c **** 
1889:src/stm32f1xx_hal_tim.c **** /**
1890:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement.
1891:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1892:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1893:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1894:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1895:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1896:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1897:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1898:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1899:src/stm32f1xx_hal_tim.c ****   */
1900:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1901:src/stm32f1xx_hal_tim.c **** {
1902:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1903:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1904:src/stm32f1xx_hal_tim.c **** 
1905:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channel */
1906:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1907:src/stm32f1xx_hal_tim.c **** 
1908:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1909:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1910:src/stm32f1xx_hal_tim.c **** 
1911:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1912:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1913:src/stm32f1xx_hal_tim.c **** }
1914:src/stm32f1xx_hal_tim.c **** 
1915:src/stm32f1xx_hal_tim.c **** /**
1916:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in interrupt mode.
1917:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1918:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
ARM GAS  /tmp/ccTsJCXT.s 			page 36


1919:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1920:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1921:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1922:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1923:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1924:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1925:src/stm32f1xx_hal_tim.c ****   */
1926:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1927:src/stm32f1xx_hal_tim.c **** {
1928:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1929:src/stm32f1xx_hal_tim.c **** 
1930:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1931:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1932:src/stm32f1xx_hal_tim.c **** 
1933:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1934:src/stm32f1xx_hal_tim.c ****   {
1935:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1936:src/stm32f1xx_hal_tim.c ****     {
1937:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1938:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1939:src/stm32f1xx_hal_tim.c ****       break;
1940:src/stm32f1xx_hal_tim.c ****     }
1941:src/stm32f1xx_hal_tim.c **** 
1942:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1943:src/stm32f1xx_hal_tim.c ****     {
1944:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1945:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1946:src/stm32f1xx_hal_tim.c ****       break;
1947:src/stm32f1xx_hal_tim.c ****     }
1948:src/stm32f1xx_hal_tim.c **** 
1949:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1950:src/stm32f1xx_hal_tim.c ****     {
1951:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1952:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1953:src/stm32f1xx_hal_tim.c ****       break;
1954:src/stm32f1xx_hal_tim.c ****     }
1955:src/stm32f1xx_hal_tim.c **** 
1956:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1957:src/stm32f1xx_hal_tim.c ****     {
1958:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1959:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1960:src/stm32f1xx_hal_tim.c ****       break;
1961:src/stm32f1xx_hal_tim.c ****     }
1962:src/stm32f1xx_hal_tim.c **** 
1963:src/stm32f1xx_hal_tim.c ****     default:
1964:src/stm32f1xx_hal_tim.c ****       break;
1965:src/stm32f1xx_hal_tim.c ****   }
1966:src/stm32f1xx_hal_tim.c ****   /* Enable the Input Capture channel */
1967:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1968:src/stm32f1xx_hal_tim.c **** 
1969:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1970:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1971:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1972:src/stm32f1xx_hal_tim.c ****   {
1973:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1974:src/stm32f1xx_hal_tim.c ****   }
1975:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 37


1976:src/stm32f1xx_hal_tim.c ****   /* Return function status */
1977:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
1978:src/stm32f1xx_hal_tim.c **** }
1979:src/stm32f1xx_hal_tim.c **** 
1980:src/stm32f1xx_hal_tim.c **** /**
1981:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in interrupt mode.
1982:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1983:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1984:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1985:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1986:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1987:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1988:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1989:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1990:src/stm32f1xx_hal_tim.c ****   */
1991:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1992:src/stm32f1xx_hal_tim.c **** {
1993:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1994:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1995:src/stm32f1xx_hal_tim.c **** 
1996:src/stm32f1xx_hal_tim.c ****   switch (Channel)
1997:src/stm32f1xx_hal_tim.c ****   {
1998:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1999:src/stm32f1xx_hal_tim.c ****     {
2000:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
2001:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2002:src/stm32f1xx_hal_tim.c ****       break;
2003:src/stm32f1xx_hal_tim.c ****     }
2004:src/stm32f1xx_hal_tim.c **** 
2005:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2006:src/stm32f1xx_hal_tim.c ****     {
2007:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
2008:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2009:src/stm32f1xx_hal_tim.c ****       break;
2010:src/stm32f1xx_hal_tim.c ****     }
2011:src/stm32f1xx_hal_tim.c **** 
2012:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2013:src/stm32f1xx_hal_tim.c ****     {
2014:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
2015:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
2016:src/stm32f1xx_hal_tim.c ****       break;
2017:src/stm32f1xx_hal_tim.c ****     }
2018:src/stm32f1xx_hal_tim.c **** 
2019:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2020:src/stm32f1xx_hal_tim.c ****     {
2021:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
2022:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
2023:src/stm32f1xx_hal_tim.c ****       break;
2024:src/stm32f1xx_hal_tim.c ****     }
2025:src/stm32f1xx_hal_tim.c **** 
2026:src/stm32f1xx_hal_tim.c ****     default:
2027:src/stm32f1xx_hal_tim.c ****       break;
2028:src/stm32f1xx_hal_tim.c ****   }
2029:src/stm32f1xx_hal_tim.c **** 
2030:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channel */
2031:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
2032:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 38


2033:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2034:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2035:src/stm32f1xx_hal_tim.c **** 
2036:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2037:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2038:src/stm32f1xx_hal_tim.c **** }
2039:src/stm32f1xx_hal_tim.c **** 
2040:src/stm32f1xx_hal_tim.c **** /**
2041:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in DMA mode.
2042:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2043:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2044:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2045:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2046:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2047:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2048:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2049:src/stm32f1xx_hal_tim.c ****   * @param  pData The destination Buffer address.
2050:src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
2051:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2052:src/stm32f1xx_hal_tim.c ****   */
2053:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
2054:src/stm32f1xx_hal_tim.c **** {
2055:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
2056:src/stm32f1xx_hal_tim.c **** 
2057:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2058:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2059:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2060:src/stm32f1xx_hal_tim.c **** 
2061:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
2062:src/stm32f1xx_hal_tim.c ****   {
2063:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
2064:src/stm32f1xx_hal_tim.c ****   }
2065:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
2066:src/stm32f1xx_hal_tim.c ****   {
2067:src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) && (Length > 0U))
2068:src/stm32f1xx_hal_tim.c ****     {
2069:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
2070:src/stm32f1xx_hal_tim.c ****     }
2071:src/stm32f1xx_hal_tim.c ****     else
2072:src/stm32f1xx_hal_tim.c ****     {
2073:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
2074:src/stm32f1xx_hal_tim.c ****     }
2075:src/stm32f1xx_hal_tim.c ****   }
2076:src/stm32f1xx_hal_tim.c ****   else
2077:src/stm32f1xx_hal_tim.c ****   {
2078:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
2079:src/stm32f1xx_hal_tim.c ****   }
2080:src/stm32f1xx_hal_tim.c **** 
2081:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2082:src/stm32f1xx_hal_tim.c ****   {
2083:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2084:src/stm32f1xx_hal_tim.c ****     {
2085:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2086:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2087:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2088:src/stm32f1xx_hal_tim.c **** 
2089:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp/ccTsJCXT.s 			page 39


2090:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2091:src/stm32f1xx_hal_tim.c **** 
2092:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2093:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
2094:src/stm32f1xx_hal_tim.c ****       {
2095:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
2096:src/stm32f1xx_hal_tim.c ****       }
2097:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
2098:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2099:src/stm32f1xx_hal_tim.c ****       break;
2100:src/stm32f1xx_hal_tim.c ****     }
2101:src/stm32f1xx_hal_tim.c **** 
2102:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2103:src/stm32f1xx_hal_tim.c ****     {
2104:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2105:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2106:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2107:src/stm32f1xx_hal_tim.c **** 
2108:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
2109:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
2110:src/stm32f1xx_hal_tim.c **** 
2111:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2112:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
2113:src/stm32f1xx_hal_tim.c ****       {
2114:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
2115:src/stm32f1xx_hal_tim.c ****       }
2116:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2  DMA request */
2117:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2118:src/stm32f1xx_hal_tim.c ****       break;
2119:src/stm32f1xx_hal_tim.c ****     }
2120:src/stm32f1xx_hal_tim.c **** 
2121:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2122:src/stm32f1xx_hal_tim.c ****     {
2123:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2124:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
2125:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2126:src/stm32f1xx_hal_tim.c **** 
2127:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
2128:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
2129:src/stm32f1xx_hal_tim.c **** 
2130:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2131:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)p
2132:src/stm32f1xx_hal_tim.c ****       {
2133:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
2134:src/stm32f1xx_hal_tim.c ****       }
2135:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3  DMA request */
2136:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
2137:src/stm32f1xx_hal_tim.c ****       break;
2138:src/stm32f1xx_hal_tim.c ****     }
2139:src/stm32f1xx_hal_tim.c **** 
2140:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2141:src/stm32f1xx_hal_tim.c ****     {
2142:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2143:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
2144:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2145:src/stm32f1xx_hal_tim.c **** 
2146:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp/ccTsJCXT.s 			page 40


2147:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
2148:src/stm32f1xx_hal_tim.c **** 
2149:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2150:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)p
2151:src/stm32f1xx_hal_tim.c ****       {
2152:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
2153:src/stm32f1xx_hal_tim.c ****       }
2154:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4  DMA request */
2155:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
2156:src/stm32f1xx_hal_tim.c ****       break;
2157:src/stm32f1xx_hal_tim.c ****     }
2158:src/stm32f1xx_hal_tim.c **** 
2159:src/stm32f1xx_hal_tim.c ****     default:
2160:src/stm32f1xx_hal_tim.c ****       break;
2161:src/stm32f1xx_hal_tim.c ****   }
2162:src/stm32f1xx_hal_tim.c **** 
2163:src/stm32f1xx_hal_tim.c ****   /* Enable the Input Capture channel */
2164:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
2165:src/stm32f1xx_hal_tim.c **** 
2166:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
2167:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
2168:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
2169:src/stm32f1xx_hal_tim.c ****   {
2170:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
2171:src/stm32f1xx_hal_tim.c ****   }
2172:src/stm32f1xx_hal_tim.c **** 
2173:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2174:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2175:src/stm32f1xx_hal_tim.c **** }
2176:src/stm32f1xx_hal_tim.c **** 
2177:src/stm32f1xx_hal_tim.c **** /**
2178:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in DMA mode.
2179:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2180:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2181:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2182:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2183:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2184:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2185:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2186:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2187:src/stm32f1xx_hal_tim.c ****   */
2188:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
2189:src/stm32f1xx_hal_tim.c **** {
2190:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2191:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2192:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2193:src/stm32f1xx_hal_tim.c **** 
2194:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2195:src/stm32f1xx_hal_tim.c ****   {
2196:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2197:src/stm32f1xx_hal_tim.c ****     {
2198:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
2199:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2200:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
2201:src/stm32f1xx_hal_tim.c ****       break;
2202:src/stm32f1xx_hal_tim.c ****     }
2203:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 41


2204:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2205:src/stm32f1xx_hal_tim.c ****     {
2206:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
2207:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2208:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
2209:src/stm32f1xx_hal_tim.c ****       break;
2210:src/stm32f1xx_hal_tim.c ****     }
2211:src/stm32f1xx_hal_tim.c **** 
2212:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2213:src/stm32f1xx_hal_tim.c ****     {
2214:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3  DMA request */
2215:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
2216:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
2217:src/stm32f1xx_hal_tim.c ****       break;
2218:src/stm32f1xx_hal_tim.c ****     }
2219:src/stm32f1xx_hal_tim.c **** 
2220:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2221:src/stm32f1xx_hal_tim.c ****     {
2222:src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4  DMA request */
2223:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
2224:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
2225:src/stm32f1xx_hal_tim.c ****       break;
2226:src/stm32f1xx_hal_tim.c ****     }
2227:src/stm32f1xx_hal_tim.c **** 
2228:src/stm32f1xx_hal_tim.c ****     default:
2229:src/stm32f1xx_hal_tim.c ****       break;
2230:src/stm32f1xx_hal_tim.c ****   }
2231:src/stm32f1xx_hal_tim.c **** 
2232:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channel */
2233:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
2234:src/stm32f1xx_hal_tim.c **** 
2235:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2236:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2237:src/stm32f1xx_hal_tim.c **** 
2238:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
2239:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2240:src/stm32f1xx_hal_tim.c **** 
2241:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2242:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2243:src/stm32f1xx_hal_tim.c **** }
2244:src/stm32f1xx_hal_tim.c **** /**
2245:src/stm32f1xx_hal_tim.c ****   * @}
2246:src/stm32f1xx_hal_tim.c ****   */
2247:src/stm32f1xx_hal_tim.c **** 
2248:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group5 TIM One Pulse functions
2249:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM One Pulse functions
2250:src/stm32f1xx_hal_tim.c ****   *
2251:src/stm32f1xx_hal_tim.c **** @verbatim
2252:src/stm32f1xx_hal_tim.c ****   ==============================================================================
2253:src/stm32f1xx_hal_tim.c ****                         ##### TIM One Pulse functions #####
2254:src/stm32f1xx_hal_tim.c ****   ==============================================================================
2255:src/stm32f1xx_hal_tim.c ****   [..]
2256:src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
2257:src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM One Pulse.
2258:src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM One Pulse.
2259:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse.
2260:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse.
ARM GAS  /tmp/ccTsJCXT.s 			page 42


2261:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable interrupt.
2262:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable interrupt.
2263:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable DMA transfer.
2264:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable DMA transfer.
2265:src/stm32f1xx_hal_tim.c **** 
2266:src/stm32f1xx_hal_tim.c **** @endverbatim
2267:src/stm32f1xx_hal_tim.c ****   * @{
2268:src/stm32f1xx_hal_tim.c ****   */
2269:src/stm32f1xx_hal_tim.c **** /**
2270:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Time Base according to the specified
2271:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
2272:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2273:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
2274:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
2275:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OnePulse_DeInit() before HAL_TIM_OnePulse_Init()
2276:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2277:src/stm32f1xx_hal_tim.c ****   * @param  OnePulseMode Select the One pulse mode.
2278:src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
2279:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_OPMODE_SINGLE: Only one pulse will be generated.
2280:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_OPMODE_REPETITIVE: Repetitive pulses will be generated.
2281:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2282:src/stm32f1xx_hal_tim.c ****   */
2283:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Init(TIM_HandleTypeDef *htim, uint32_t OnePulseMode)
2284:src/stm32f1xx_hal_tim.c **** {
2285:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
2286:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
2287:src/stm32f1xx_hal_tim.c ****   {
2288:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
2289:src/stm32f1xx_hal_tim.c ****   }
2290:src/stm32f1xx_hal_tim.c **** 
2291:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2292:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2293:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2294:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2295:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_MODE(OnePulseMode));
2296:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2297:src/stm32f1xx_hal_tim.c **** 
2298:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
2299:src/stm32f1xx_hal_tim.c ****   {
2300:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2301:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
2302:src/stm32f1xx_hal_tim.c **** 
2303:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2304:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2305:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
2306:src/stm32f1xx_hal_tim.c **** 
2307:src/stm32f1xx_hal_tim.c ****     if (htim->OnePulse_MspInitCallback == NULL)
2308:src/stm32f1xx_hal_tim.c ****     {
2309:src/stm32f1xx_hal_tim.c ****       htim->OnePulse_MspInitCallback = HAL_TIM_OnePulse_MspInit;
2310:src/stm32f1xx_hal_tim.c ****     }
2311:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2312:src/stm32f1xx_hal_tim.c ****     htim->OnePulse_MspInitCallback(htim);
2313:src/stm32f1xx_hal_tim.c **** #else
2314:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2315:src/stm32f1xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
2316:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2317:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 43


2318:src/stm32f1xx_hal_tim.c **** 
2319:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
2320:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2321:src/stm32f1xx_hal_tim.c **** 
2322:src/stm32f1xx_hal_tim.c ****   /* Configure the Time base in the One Pulse Mode */
2323:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2324:src/stm32f1xx_hal_tim.c **** 
2325:src/stm32f1xx_hal_tim.c ****   /* Reset the OPM Bit */
2326:src/stm32f1xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
2327:src/stm32f1xx_hal_tim.c **** 
2328:src/stm32f1xx_hal_tim.c ****   /* Configure the OPM Mode */
2329:src/stm32f1xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
2330:src/stm32f1xx_hal_tim.c **** 
2331:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
2332:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2333:src/stm32f1xx_hal_tim.c **** 
2334:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2335:src/stm32f1xx_hal_tim.c **** }
2336:src/stm32f1xx_hal_tim.c **** 
2337:src/stm32f1xx_hal_tim.c **** /**
2338:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM One Pulse
2339:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2340:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2341:src/stm32f1xx_hal_tim.c ****   */
2342:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_DeInit(TIM_HandleTypeDef *htim)
2343:src/stm32f1xx_hal_tim.c **** {
2344:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2345:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2346:src/stm32f1xx_hal_tim.c **** 
2347:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2348:src/stm32f1xx_hal_tim.c **** 
2349:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2350:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2351:src/stm32f1xx_hal_tim.c **** 
2352:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2353:src/stm32f1xx_hal_tim.c ****   if (htim->OnePulse_MspDeInitCallback == NULL)
2354:src/stm32f1xx_hal_tim.c ****   {
2355:src/stm32f1xx_hal_tim.c ****     htim->OnePulse_MspDeInitCallback = HAL_TIM_OnePulse_MspDeInit;
2356:src/stm32f1xx_hal_tim.c ****   }
2357:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
2358:src/stm32f1xx_hal_tim.c ****   htim->OnePulse_MspDeInitCallback(htim);
2359:src/stm32f1xx_hal_tim.c **** #else
2360:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2361:src/stm32f1xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
2362:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2363:src/stm32f1xx_hal_tim.c **** 
2364:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
2365:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2366:src/stm32f1xx_hal_tim.c **** 
2367:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
2368:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2369:src/stm32f1xx_hal_tim.c **** 
2370:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2371:src/stm32f1xx_hal_tim.c **** }
2372:src/stm32f1xx_hal_tim.c **** 
2373:src/stm32f1xx_hal_tim.c **** /**
2374:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse MSP.
ARM GAS  /tmp/ccTsJCXT.s 			page 44


2375:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2376:src/stm32f1xx_hal_tim.c ****   * @retval None
2377:src/stm32f1xx_hal_tim.c ****   */
2378:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspInit(TIM_HandleTypeDef *htim)
2379:src/stm32f1xx_hal_tim.c **** {
2380:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2381:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2382:src/stm32f1xx_hal_tim.c **** 
2383:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2384:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspInit could be implemented in the user file
2385:src/stm32f1xx_hal_tim.c ****    */
2386:src/stm32f1xx_hal_tim.c **** }
2387:src/stm32f1xx_hal_tim.c **** 
2388:src/stm32f1xx_hal_tim.c **** /**
2389:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM One Pulse MSP.
2390:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2391:src/stm32f1xx_hal_tim.c ****   * @retval None
2392:src/stm32f1xx_hal_tim.c ****   */
2393:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspDeInit(TIM_HandleTypeDef *htim)
2394:src/stm32f1xx_hal_tim.c **** {
2395:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2396:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2397:src/stm32f1xx_hal_tim.c **** 
2398:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2399:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspDeInit could be implemented in the user file
2400:src/stm32f1xx_hal_tim.c ****    */
2401:src/stm32f1xx_hal_tim.c **** }
2402:src/stm32f1xx_hal_tim.c **** 
2403:src/stm32f1xx_hal_tim.c **** /**
2404:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation.
2405:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2406:src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM Channels to be enabled
2407:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2408:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2409:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2410:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2411:src/stm32f1xx_hal_tim.c ****   */
2412:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2413:src/stm32f1xx_hal_tim.c **** {
2414:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2415:src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2416:src/stm32f1xx_hal_tim.c **** 
2417:src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2418:src/stm32f1xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2419:src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2420:src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2421:src/stm32f1xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2422:src/stm32f1xx_hal_tim.c **** 
2423:src/stm32f1xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2424:src/stm32f1xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2425:src/stm32f1xx_hal_tim.c **** 
2426:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2427:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2428:src/stm32f1xx_hal_tim.c **** 
2429:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2430:src/stm32f1xx_hal_tim.c ****   {
2431:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
ARM GAS  /tmp/ccTsJCXT.s 			page 45


2432:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2433:src/stm32f1xx_hal_tim.c ****   }
2434:src/stm32f1xx_hal_tim.c **** 
2435:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2436:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2437:src/stm32f1xx_hal_tim.c **** }
2438:src/stm32f1xx_hal_tim.c **** 
2439:src/stm32f1xx_hal_tim.c **** /**
2440:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation.
2441:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2442:src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM Channels to be disable
2443:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2444:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2445:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2446:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2447:src/stm32f1xx_hal_tim.c ****   */
2448:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2449:src/stm32f1xx_hal_tim.c **** {
2450:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2451:src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2452:src/stm32f1xx_hal_tim.c **** 
2453:src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2454:src/stm32f1xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2455:src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2456:src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2457:src/stm32f1xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2458:src/stm32f1xx_hal_tim.c **** 
2459:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2460:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2461:src/stm32f1xx_hal_tim.c **** 
2462:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2463:src/stm32f1xx_hal_tim.c ****   {
2464:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
2465:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2466:src/stm32f1xx_hal_tim.c ****   }
2467:src/stm32f1xx_hal_tim.c **** 
2468:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2469:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2470:src/stm32f1xx_hal_tim.c **** 
2471:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2472:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2473:src/stm32f1xx_hal_tim.c **** }
2474:src/stm32f1xx_hal_tim.c **** 
2475:src/stm32f1xx_hal_tim.c **** /**
2476:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode.
2477:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2478:src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM Channels to be enabled
2479:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2480:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2481:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2482:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2483:src/stm32f1xx_hal_tim.c ****   */
2484:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2485:src/stm32f1xx_hal_tim.c **** {
2486:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2487:src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2488:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 46


2489:src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2490:src/stm32f1xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2491:src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2492:src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2493:src/stm32f1xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2494:src/stm32f1xx_hal_tim.c **** 
2495:src/stm32f1xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2496:src/stm32f1xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2497:src/stm32f1xx_hal_tim.c **** 
2498:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
2499:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2500:src/stm32f1xx_hal_tim.c **** 
2501:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
2502:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2503:src/stm32f1xx_hal_tim.c **** 
2504:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2505:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2506:src/stm32f1xx_hal_tim.c **** 
2507:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2508:src/stm32f1xx_hal_tim.c ****   {
2509:src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
2510:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2511:src/stm32f1xx_hal_tim.c ****   }
2512:src/stm32f1xx_hal_tim.c **** 
2513:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2514:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2515:src/stm32f1xx_hal_tim.c **** }
2516:src/stm32f1xx_hal_tim.c **** 
2517:src/stm32f1xx_hal_tim.c **** /**
2518:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode.
2519:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2520:src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM Channels to be enabled
2521:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2522:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2523:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2524:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2525:src/stm32f1xx_hal_tim.c ****   */
2526:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2527:src/stm32f1xx_hal_tim.c **** {
2528:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2529:src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2530:src/stm32f1xx_hal_tim.c **** 
2531:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
2532:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2533:src/stm32f1xx_hal_tim.c **** 
2534:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
2535:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2536:src/stm32f1xx_hal_tim.c **** 
2537:src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2538:src/stm32f1xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2539:src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2540:src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2541:src/stm32f1xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2542:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2543:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2544:src/stm32f1xx_hal_tim.c **** 
2545:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
ARM GAS  /tmp/ccTsJCXT.s 			page 47


2546:src/stm32f1xx_hal_tim.c ****   {
2547:src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
2548:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2549:src/stm32f1xx_hal_tim.c ****   }
2550:src/stm32f1xx_hal_tim.c **** 
2551:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2552:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2553:src/stm32f1xx_hal_tim.c **** 
2554:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2555:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2556:src/stm32f1xx_hal_tim.c **** }
2557:src/stm32f1xx_hal_tim.c **** 
2558:src/stm32f1xx_hal_tim.c **** /**
2559:src/stm32f1xx_hal_tim.c ****   * @}
2560:src/stm32f1xx_hal_tim.c ****   */
2561:src/stm32f1xx_hal_tim.c **** 
2562:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group6 TIM Encoder functions
2563:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Encoder functions
2564:src/stm32f1xx_hal_tim.c ****   *
2565:src/stm32f1xx_hal_tim.c **** @verbatim
2566:src/stm32f1xx_hal_tim.c ****   ==============================================================================
2567:src/stm32f1xx_hal_tim.c ****                           ##### TIM Encoder functions #####
2568:src/stm32f1xx_hal_tim.c ****   ==============================================================================
2569:src/stm32f1xx_hal_tim.c ****   [..]
2570:src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
2571:src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM Encoder.
2572:src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM Encoder.
2573:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder.
2574:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder.
2575:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder and enable interrupt.
2576:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable interrupt.
2577:src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder and enable DMA transfer.
2578:src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable DMA transfer.
2579:src/stm32f1xx_hal_tim.c **** 
2580:src/stm32f1xx_hal_tim.c **** @endverbatim
2581:src/stm32f1xx_hal_tim.c ****   * @{
2582:src/stm32f1xx_hal_tim.c ****   */
2583:src/stm32f1xx_hal_tim.c **** /**
2584:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface and initialize the associated handle.
2585:src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2586:src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
2587:src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
2588:src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Encoder_DeInit() before HAL_TIM_Encoder_Init()
2589:src/stm32f1xx_hal_tim.c ****   * @note   Encoder mode and External clock mode 2 are not compatible and must not be selected toge
2590:src/stm32f1xx_hal_tim.c ****   *         Ex: A call for @ref HAL_TIM_Encoder_Init will erase the settings of @ref HAL_TIM_Config
2591:src/stm32f1xx_hal_tim.c ****   *         using TIM_CLOCKSOURCE_ETRMODE2 and vice versa
2592:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2593:src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Encoder Interface configuration structure
2594:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2595:src/stm32f1xx_hal_tim.c ****   */
2596:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef *sConfig)
2597:src/stm32f1xx_hal_tim.c **** {
2598:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
2599:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
2600:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
2601:src/stm32f1xx_hal_tim.c **** 
2602:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
ARM GAS  /tmp/ccTsJCXT.s 			page 48


2603:src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
2604:src/stm32f1xx_hal_tim.c ****   {
2605:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
2606:src/stm32f1xx_hal_tim.c ****   }
2607:src/stm32f1xx_hal_tim.c **** 
2608:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2609:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2610:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2611:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2612:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2613:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(sConfig->EncoderMode));
2614:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC1Selection));
2615:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC2Selection));
2616:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC1Polarity));
2617:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC2Polarity));
2618:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
2619:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
2620:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
2621:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
2622:src/stm32f1xx_hal_tim.c **** 
2623:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
2624:src/stm32f1xx_hal_tim.c ****   {
2625:src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2626:src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
2627:src/stm32f1xx_hal_tim.c **** 
2628:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2629:src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2630:src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
2631:src/stm32f1xx_hal_tim.c **** 
2632:src/stm32f1xx_hal_tim.c ****     if (htim->Encoder_MspInitCallback == NULL)
2633:src/stm32f1xx_hal_tim.c ****     {
2634:src/stm32f1xx_hal_tim.c ****       htim->Encoder_MspInitCallback = HAL_TIM_Encoder_MspInit;
2635:src/stm32f1xx_hal_tim.c ****     }
2636:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2637:src/stm32f1xx_hal_tim.c ****     htim->Encoder_MspInitCallback(htim);
2638:src/stm32f1xx_hal_tim.c **** #else
2639:src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2640:src/stm32f1xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
2641:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2642:src/stm32f1xx_hal_tim.c ****   }
2643:src/stm32f1xx_hal_tim.c **** 
2644:src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
2645:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2646:src/stm32f1xx_hal_tim.c **** 
2647:src/stm32f1xx_hal_tim.c ****   /* Reset the SMS and ECE bits */
2648:src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR &= ~(TIM_SMCR_SMS | TIM_SMCR_ECE);
2649:src/stm32f1xx_hal_tim.c **** 
2650:src/stm32f1xx_hal_tim.c ****   /* Configure the Time base in the Encoder Mode */
2651:src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2652:src/stm32f1xx_hal_tim.c **** 
2653:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
2654:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
2655:src/stm32f1xx_hal_tim.c **** 
2656:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
2657:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
2658:src/stm32f1xx_hal_tim.c **** 
2659:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
ARM GAS  /tmp/ccTsJCXT.s 			page 49


2660:src/stm32f1xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
2661:src/stm32f1xx_hal_tim.c **** 
2662:src/stm32f1xx_hal_tim.c ****   /* Set the encoder Mode */
2663:src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
2664:src/stm32f1xx_hal_tim.c **** 
2665:src/stm32f1xx_hal_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
2666:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
2667:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
2668:src/stm32f1xx_hal_tim.c **** 
2669:src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
2670:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
2671:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
2672:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
2673:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
2674:src/stm32f1xx_hal_tim.c **** 
2675:src/stm32f1xx_hal_tim.c ****   /* Set the TI1 and the TI2 Polarities */
2676:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
2677:src/stm32f1xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
2678:src/stm32f1xx_hal_tim.c **** 
2679:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
2680:src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
2681:src/stm32f1xx_hal_tim.c **** 
2682:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
2683:src/stm32f1xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
2684:src/stm32f1xx_hal_tim.c **** 
2685:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
2686:src/stm32f1xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
2687:src/stm32f1xx_hal_tim.c **** 
2688:src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
2689:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2690:src/stm32f1xx_hal_tim.c **** 
2691:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2692:src/stm32f1xx_hal_tim.c **** }
2693:src/stm32f1xx_hal_tim.c **** 
2694:src/stm32f1xx_hal_tim.c **** 
2695:src/stm32f1xx_hal_tim.c **** /**
2696:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM Encoder interface
2697:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2698:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2699:src/stm32f1xx_hal_tim.c ****   */
2700:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_DeInit(TIM_HandleTypeDef *htim)
2701:src/stm32f1xx_hal_tim.c **** {
2702:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2703:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2704:src/stm32f1xx_hal_tim.c **** 
2705:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2706:src/stm32f1xx_hal_tim.c **** 
2707:src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2708:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2709:src/stm32f1xx_hal_tim.c **** 
2710:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2711:src/stm32f1xx_hal_tim.c ****   if (htim->Encoder_MspDeInitCallback == NULL)
2712:src/stm32f1xx_hal_tim.c ****   {
2713:src/stm32f1xx_hal_tim.c ****     htim->Encoder_MspDeInitCallback = HAL_TIM_Encoder_MspDeInit;
2714:src/stm32f1xx_hal_tim.c ****   }
2715:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
2716:src/stm32f1xx_hal_tim.c ****   htim->Encoder_MspDeInitCallback(htim);
ARM GAS  /tmp/ccTsJCXT.s 			page 50


2717:src/stm32f1xx_hal_tim.c **** #else
2718:src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2719:src/stm32f1xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
2720:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2721:src/stm32f1xx_hal_tim.c **** 
2722:src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
2723:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2724:src/stm32f1xx_hal_tim.c **** 
2725:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
2726:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2727:src/stm32f1xx_hal_tim.c **** 
2728:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2729:src/stm32f1xx_hal_tim.c **** }
2730:src/stm32f1xx_hal_tim.c **** 
2731:src/stm32f1xx_hal_tim.c **** /**
2732:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface MSP.
2733:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2734:src/stm32f1xx_hal_tim.c ****   * @retval None
2735:src/stm32f1xx_hal_tim.c ****   */
2736:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef *htim)
2737:src/stm32f1xx_hal_tim.c **** {
2738:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2739:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2740:src/stm32f1xx_hal_tim.c **** 
2741:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2742:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Encoder_MspInit could be implemented in the user file
2743:src/stm32f1xx_hal_tim.c ****    */
2744:src/stm32f1xx_hal_tim.c **** }
2745:src/stm32f1xx_hal_tim.c **** 
2746:src/stm32f1xx_hal_tim.c **** /**
2747:src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Encoder Interface MSP.
2748:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2749:src/stm32f1xx_hal_tim.c ****   * @retval None
2750:src/stm32f1xx_hal_tim.c ****   */
2751:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef *htim)
2752:src/stm32f1xx_hal_tim.c **** {
2753:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2754:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2755:src/stm32f1xx_hal_tim.c **** 
2756:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2757:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Encoder_MspDeInit could be implemented in the user file
2758:src/stm32f1xx_hal_tim.c ****    */
2759:src/stm32f1xx_hal_tim.c **** }
2760:src/stm32f1xx_hal_tim.c **** 
2761:src/stm32f1xx_hal_tim.c **** /**
2762:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface.
2763:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2764:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2765:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2766:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2767:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2768:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2769:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2770:src/stm32f1xx_hal_tim.c ****   */
2771:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
2772:src/stm32f1xx_hal_tim.c **** {
2773:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccTsJCXT.s 			page 51


2774:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2775:src/stm32f1xx_hal_tim.c **** 
2776:src/stm32f1xx_hal_tim.c ****   /* Enable the encoder interface channels */
2777:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2778:src/stm32f1xx_hal_tim.c ****   {
2779:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2780:src/stm32f1xx_hal_tim.c ****     {
2781:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2782:src/stm32f1xx_hal_tim.c ****       break;
2783:src/stm32f1xx_hal_tim.c ****     }
2784:src/stm32f1xx_hal_tim.c **** 
2785:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2786:src/stm32f1xx_hal_tim.c ****     {
2787:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2788:src/stm32f1xx_hal_tim.c ****       break;
2789:src/stm32f1xx_hal_tim.c ****     }
2790:src/stm32f1xx_hal_tim.c **** 
2791:src/stm32f1xx_hal_tim.c ****     default :
2792:src/stm32f1xx_hal_tim.c ****     {
2793:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2794:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2795:src/stm32f1xx_hal_tim.c ****       break;
2796:src/stm32f1xx_hal_tim.c ****     }
2797:src/stm32f1xx_hal_tim.c ****   }
2798:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral */
2799:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
2800:src/stm32f1xx_hal_tim.c **** 
2801:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2802:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2803:src/stm32f1xx_hal_tim.c **** }
2804:src/stm32f1xx_hal_tim.c **** 
2805:src/stm32f1xx_hal_tim.c **** /**
2806:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface.
2807:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2808:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2809:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2810:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2811:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2812:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2813:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2814:src/stm32f1xx_hal_tim.c ****   */
2815:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
2816:src/stm32f1xx_hal_tim.c **** {
2817:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2818:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2819:src/stm32f1xx_hal_tim.c **** 
2820:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2821:src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
2822:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2823:src/stm32f1xx_hal_tim.c ****   {
2824:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2825:src/stm32f1xx_hal_tim.c ****     {
2826:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2827:src/stm32f1xx_hal_tim.c ****       break;
2828:src/stm32f1xx_hal_tim.c ****     }
2829:src/stm32f1xx_hal_tim.c **** 
2830:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
ARM GAS  /tmp/ccTsJCXT.s 			page 52


2831:src/stm32f1xx_hal_tim.c ****     {
2832:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2833:src/stm32f1xx_hal_tim.c ****       break;
2834:src/stm32f1xx_hal_tim.c ****     }
2835:src/stm32f1xx_hal_tim.c **** 
2836:src/stm32f1xx_hal_tim.c ****     default :
2837:src/stm32f1xx_hal_tim.c ****     {
2838:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2839:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2840:src/stm32f1xx_hal_tim.c ****       break;
2841:src/stm32f1xx_hal_tim.c ****     }
2842:src/stm32f1xx_hal_tim.c ****   }
2843:src/stm32f1xx_hal_tim.c **** 
2844:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2845:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2846:src/stm32f1xx_hal_tim.c **** 
2847:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2848:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2849:src/stm32f1xx_hal_tim.c **** }
2850:src/stm32f1xx_hal_tim.c **** 
2851:src/stm32f1xx_hal_tim.c **** /**
2852:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in interrupt mode.
2853:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2854:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2855:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2856:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2857:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2858:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2859:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2860:src/stm32f1xx_hal_tim.c ****   */
2861:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2862:src/stm32f1xx_hal_tim.c **** {
2863:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2864:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2865:src/stm32f1xx_hal_tim.c **** 
2866:src/stm32f1xx_hal_tim.c ****   /* Enable the encoder interface channels */
2867:src/stm32f1xx_hal_tim.c ****   /* Enable the capture compare Interrupts 1 and/or 2 */
2868:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2869:src/stm32f1xx_hal_tim.c ****   {
2870:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2871:src/stm32f1xx_hal_tim.c ****     {
2872:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2873:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2874:src/stm32f1xx_hal_tim.c ****       break;
2875:src/stm32f1xx_hal_tim.c ****     }
2876:src/stm32f1xx_hal_tim.c **** 
2877:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2878:src/stm32f1xx_hal_tim.c ****     {
2879:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2880:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2881:src/stm32f1xx_hal_tim.c ****       break;
2882:src/stm32f1xx_hal_tim.c ****     }
2883:src/stm32f1xx_hal_tim.c **** 
2884:src/stm32f1xx_hal_tim.c ****     default :
2885:src/stm32f1xx_hal_tim.c ****     {
2886:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2887:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
ARM GAS  /tmp/ccTsJCXT.s 			page 53


2888:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2889:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2890:src/stm32f1xx_hal_tim.c ****       break;
2891:src/stm32f1xx_hal_tim.c ****     }
2892:src/stm32f1xx_hal_tim.c ****   }
2893:src/stm32f1xx_hal_tim.c **** 
2894:src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral */
2895:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
2896:src/stm32f1xx_hal_tim.c **** 
2897:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2898:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2899:src/stm32f1xx_hal_tim.c **** }
2900:src/stm32f1xx_hal_tim.c **** 
2901:src/stm32f1xx_hal_tim.c **** /**
2902:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in interrupt mode.
2903:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2904:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2905:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2906:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2907:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2908:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2909:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2910:src/stm32f1xx_hal_tim.c ****   */
2911:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2912:src/stm32f1xx_hal_tim.c **** {
2913:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2914:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2915:src/stm32f1xx_hal_tim.c **** 
2916:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2917:src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
2918:src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
2919:src/stm32f1xx_hal_tim.c ****   {
2920:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2921:src/stm32f1xx_hal_tim.c **** 
2922:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 */
2923:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2924:src/stm32f1xx_hal_tim.c ****   }
2925:src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
2926:src/stm32f1xx_hal_tim.c ****   {
2927:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2928:src/stm32f1xx_hal_tim.c **** 
2929:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 2 */
2930:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2931:src/stm32f1xx_hal_tim.c ****   }
2932:src/stm32f1xx_hal_tim.c ****   else
2933:src/stm32f1xx_hal_tim.c ****   {
2934:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2935:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2936:src/stm32f1xx_hal_tim.c **** 
2937:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 and 2 */
2938:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2939:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2940:src/stm32f1xx_hal_tim.c ****   }
2941:src/stm32f1xx_hal_tim.c **** 
2942:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2943:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2944:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 54


2945:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
2946:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2947:src/stm32f1xx_hal_tim.c **** 
2948:src/stm32f1xx_hal_tim.c ****   /* Return function status */
2949:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
2950:src/stm32f1xx_hal_tim.c **** }
2951:src/stm32f1xx_hal_tim.c **** 
2952:src/stm32f1xx_hal_tim.c **** /**
2953:src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in DMA mode.
2954:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
2955:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2956:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2957:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2958:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2959:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2960:src/stm32f1xx_hal_tim.c ****   * @param  pData1 The destination Buffer address for IC1.
2961:src/stm32f1xx_hal_tim.c ****   * @param  pData2 The destination Buffer address for IC2.
2962:src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
2963:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2964:src/stm32f1xx_hal_tim.c ****   */
2965:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pD
2966:src/stm32f1xx_hal_tim.c ****                                             uint32_t *pData2, uint16_t Length)
2967:src/stm32f1xx_hal_tim.c **** {
2968:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2969:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2970:src/stm32f1xx_hal_tim.c **** 
2971:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
2972:src/stm32f1xx_hal_tim.c ****   {
2973:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
2974:src/stm32f1xx_hal_tim.c ****   }
2975:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
2976:src/stm32f1xx_hal_tim.c ****   {
2977:src/stm32f1xx_hal_tim.c ****     if ((((pData1 == NULL) || (pData2 == NULL))) && (Length > 0U))
2978:src/stm32f1xx_hal_tim.c ****     {
2979:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
2980:src/stm32f1xx_hal_tim.c ****     }
2981:src/stm32f1xx_hal_tim.c ****     else
2982:src/stm32f1xx_hal_tim.c ****     {
2983:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
2984:src/stm32f1xx_hal_tim.c ****     }
2985:src/stm32f1xx_hal_tim.c ****   }
2986:src/stm32f1xx_hal_tim.c ****   else
2987:src/stm32f1xx_hal_tim.c ****   {
2988:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
2989:src/stm32f1xx_hal_tim.c ****   }
2990:src/stm32f1xx_hal_tim.c **** 
2991:src/stm32f1xx_hal_tim.c ****   switch (Channel)
2992:src/stm32f1xx_hal_tim.c ****   {
2993:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2994:src/stm32f1xx_hal_tim.c ****     {
2995:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2996:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2997:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2998:src/stm32f1xx_hal_tim.c **** 
2999:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3000:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3001:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 55


3002:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3003:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
3004:src/stm32f1xx_hal_tim.c ****       {
3005:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3006:src/stm32f1xx_hal_tim.c ****       }
3007:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture DMA request */
3008:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
3009:src/stm32f1xx_hal_tim.c **** 
3010:src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3011:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3012:src/stm32f1xx_hal_tim.c **** 
3013:src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3014:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3015:src/stm32f1xx_hal_tim.c ****       break;
3016:src/stm32f1xx_hal_tim.c ****     }
3017:src/stm32f1xx_hal_tim.c **** 
3018:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3019:src/stm32f1xx_hal_tim.c ****     {
3020:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3021:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
3022:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3023:src/stm32f1xx_hal_tim.c **** 
3024:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3025:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
3026:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3027:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
3028:src/stm32f1xx_hal_tim.c ****       {
3029:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3030:src/stm32f1xx_hal_tim.c ****       }
3031:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3032:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
3033:src/stm32f1xx_hal_tim.c **** 
3034:src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3035:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3036:src/stm32f1xx_hal_tim.c **** 
3037:src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3038:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3039:src/stm32f1xx_hal_tim.c ****       break;
3040:src/stm32f1xx_hal_tim.c ****     }
3041:src/stm32f1xx_hal_tim.c **** 
3042:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_ALL:
3043:src/stm32f1xx_hal_tim.c ****     {
3044:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3045:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
3046:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3047:src/stm32f1xx_hal_tim.c **** 
3048:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3049:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3050:src/stm32f1xx_hal_tim.c **** 
3051:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3052:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
3053:src/stm32f1xx_hal_tim.c ****       {
3054:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3055:src/stm32f1xx_hal_tim.c ****       }
3056:src/stm32f1xx_hal_tim.c **** 
3057:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3058:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
ARM GAS  /tmp/ccTsJCXT.s 			page 56


3059:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3060:src/stm32f1xx_hal_tim.c **** 
3061:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3062:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3063:src/stm32f1xx_hal_tim.c **** 
3064:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3065:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
3066:src/stm32f1xx_hal_tim.c ****       {
3067:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3068:src/stm32f1xx_hal_tim.c ****       }
3069:src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3070:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3071:src/stm32f1xx_hal_tim.c **** 
3072:src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3073:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3074:src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3075:src/stm32f1xx_hal_tim.c **** 
3076:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3077:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
3078:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3079:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
3080:src/stm32f1xx_hal_tim.c ****       break;
3081:src/stm32f1xx_hal_tim.c ****     }
3082:src/stm32f1xx_hal_tim.c **** 
3083:src/stm32f1xx_hal_tim.c ****     default:
3084:src/stm32f1xx_hal_tim.c ****       break;
3085:src/stm32f1xx_hal_tim.c ****   }
3086:src/stm32f1xx_hal_tim.c ****   /* Return function status */
3087:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3088:src/stm32f1xx_hal_tim.c **** }
3089:src/stm32f1xx_hal_tim.c **** 
3090:src/stm32f1xx_hal_tim.c **** /**
3091:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in DMA mode.
3092:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3093:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3094:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3095:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3096:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3097:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3098:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3099:src/stm32f1xx_hal_tim.c ****   */
3100:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
3101:src/stm32f1xx_hal_tim.c **** {
3102:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3103:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
3104:src/stm32f1xx_hal_tim.c **** 
3105:src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3106:src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3107:src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3108:src/stm32f1xx_hal_tim.c ****   {
3109:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3110:src/stm32f1xx_hal_tim.c **** 
3111:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 */
3112:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
3113:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
3114:src/stm32f1xx_hal_tim.c ****   }
3115:src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
ARM GAS  /tmp/ccTsJCXT.s 			page 57


3116:src/stm32f1xx_hal_tim.c ****   {
3117:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3118:src/stm32f1xx_hal_tim.c **** 
3119:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 2 */
3120:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
3121:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
3122:src/stm32f1xx_hal_tim.c ****   }
3123:src/stm32f1xx_hal_tim.c ****   else
3124:src/stm32f1xx_hal_tim.c ****   {
3125:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3126:src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3127:src/stm32f1xx_hal_tim.c **** 
3128:src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 and 2 */
3129:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
3130:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
3131:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
3132:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
3133:src/stm32f1xx_hal_tim.c ****   }
3134:src/stm32f1xx_hal_tim.c **** 
3135:src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
3136:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
3137:src/stm32f1xx_hal_tim.c **** 
3138:src/stm32f1xx_hal_tim.c ****   /* Change the htim state */
3139:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3140:src/stm32f1xx_hal_tim.c **** 
3141:src/stm32f1xx_hal_tim.c ****   /* Return function status */
3142:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3143:src/stm32f1xx_hal_tim.c **** }
3144:src/stm32f1xx_hal_tim.c **** 
3145:src/stm32f1xx_hal_tim.c **** /**
3146:src/stm32f1xx_hal_tim.c ****   * @}
3147:src/stm32f1xx_hal_tim.c ****   */
3148:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group7 TIM IRQ handler management
3149:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM IRQ handler management
3150:src/stm32f1xx_hal_tim.c ****   *
3151:src/stm32f1xx_hal_tim.c **** @verbatim
3152:src/stm32f1xx_hal_tim.c ****   ==============================================================================
3153:src/stm32f1xx_hal_tim.c ****                         ##### IRQ handler management #####
3154:src/stm32f1xx_hal_tim.c ****   ==============================================================================
3155:src/stm32f1xx_hal_tim.c ****   [..]
3156:src/stm32f1xx_hal_tim.c ****     This section provides Timer IRQ handler function.
3157:src/stm32f1xx_hal_tim.c **** 
3158:src/stm32f1xx_hal_tim.c **** @endverbatim
3159:src/stm32f1xx_hal_tim.c ****   * @{
3160:src/stm32f1xx_hal_tim.c ****   */
3161:src/stm32f1xx_hal_tim.c **** /**
3162:src/stm32f1xx_hal_tim.c ****   * @brief  This function handles TIM interrupts requests.
3163:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM  handle
3164:src/stm32f1xx_hal_tim.c ****   * @retval None
3165:src/stm32f1xx_hal_tim.c ****   */
3166:src/stm32f1xx_hal_tim.c **** void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
3167:src/stm32f1xx_hal_tim.c **** {
3168:src/stm32f1xx_hal_tim.c ****   /* Capture compare 1 event */
3169:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
3170:src/stm32f1xx_hal_tim.c ****   {
3171:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
3172:src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp/ccTsJCXT.s 			page 58


3173:src/stm32f1xx_hal_tim.c ****       {
3174:src/stm32f1xx_hal_tim.c ****         __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
3175:src/stm32f1xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
3176:src/stm32f1xx_hal_tim.c **** 
3177:src/stm32f1xx_hal_tim.c ****         /* Input capture event */
3178:src/stm32f1xx_hal_tim.c ****         if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
3179:src/stm32f1xx_hal_tim.c ****         {
3180:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3181:src/stm32f1xx_hal_tim.c ****           htim->IC_CaptureCallback(htim);
3182:src/stm32f1xx_hal_tim.c **** #else
3183:src/stm32f1xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
3184:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3185:src/stm32f1xx_hal_tim.c ****         }
3186:src/stm32f1xx_hal_tim.c ****         /* Output compare event */
3187:src/stm32f1xx_hal_tim.c ****         else
3188:src/stm32f1xx_hal_tim.c ****         {
3189:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3190:src/stm32f1xx_hal_tim.c ****           htim->OC_DelayElapsedCallback(htim);
3191:src/stm32f1xx_hal_tim.c ****           htim->PWM_PulseFinishedCallback(htim);
3192:src/stm32f1xx_hal_tim.c **** #else
3193:src/stm32f1xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
3194:src/stm32f1xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
3195:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3196:src/stm32f1xx_hal_tim.c ****         }
3197:src/stm32f1xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3198:src/stm32f1xx_hal_tim.c ****       }
3199:src/stm32f1xx_hal_tim.c ****     }
3200:src/stm32f1xx_hal_tim.c ****   }
3201:src/stm32f1xx_hal_tim.c ****   /* Capture compare 2 event */
3202:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
3203:src/stm32f1xx_hal_tim.c ****   {
3204:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
3205:src/stm32f1xx_hal_tim.c ****     {
3206:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
3207:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
3208:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3209:src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
3210:src/stm32f1xx_hal_tim.c ****       {
3211:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3212:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3213:src/stm32f1xx_hal_tim.c **** #else
3214:src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3215:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3216:src/stm32f1xx_hal_tim.c ****       }
3217:src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3218:src/stm32f1xx_hal_tim.c ****       else
3219:src/stm32f1xx_hal_tim.c ****       {
3220:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3221:src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3222:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3223:src/stm32f1xx_hal_tim.c **** #else
3224:src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3225:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3226:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3227:src/stm32f1xx_hal_tim.c ****       }
3228:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3229:src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp/ccTsJCXT.s 			page 59


3230:src/stm32f1xx_hal_tim.c ****   }
3231:src/stm32f1xx_hal_tim.c ****   /* Capture compare 3 event */
3232:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
3233:src/stm32f1xx_hal_tim.c ****   {
3234:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
3235:src/stm32f1xx_hal_tim.c ****     {
3236:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
3237:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
3238:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3239:src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
3240:src/stm32f1xx_hal_tim.c ****       {
3241:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3242:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3243:src/stm32f1xx_hal_tim.c **** #else
3244:src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3245:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3246:src/stm32f1xx_hal_tim.c ****       }
3247:src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3248:src/stm32f1xx_hal_tim.c ****       else
3249:src/stm32f1xx_hal_tim.c ****       {
3250:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3251:src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3252:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3253:src/stm32f1xx_hal_tim.c **** #else
3254:src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3255:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3256:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3257:src/stm32f1xx_hal_tim.c ****       }
3258:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3259:src/stm32f1xx_hal_tim.c ****     }
3260:src/stm32f1xx_hal_tim.c ****   }
3261:src/stm32f1xx_hal_tim.c ****   /* Capture compare 4 event */
3262:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
3263:src/stm32f1xx_hal_tim.c ****   {
3264:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
3265:src/stm32f1xx_hal_tim.c ****     {
3266:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
3267:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
3268:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3269:src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
3270:src/stm32f1xx_hal_tim.c ****       {
3271:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3272:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3273:src/stm32f1xx_hal_tim.c **** #else
3274:src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3275:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3276:src/stm32f1xx_hal_tim.c ****       }
3277:src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3278:src/stm32f1xx_hal_tim.c ****       else
3279:src/stm32f1xx_hal_tim.c ****       {
3280:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3281:src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3282:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3283:src/stm32f1xx_hal_tim.c **** #else
3284:src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3285:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3286:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccTsJCXT.s 			page 60


3287:src/stm32f1xx_hal_tim.c ****       }
3288:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3289:src/stm32f1xx_hal_tim.c ****     }
3290:src/stm32f1xx_hal_tim.c ****   }
3291:src/stm32f1xx_hal_tim.c ****   /* TIM Update event */
3292:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
3293:src/stm32f1xx_hal_tim.c ****   {
3294:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
3295:src/stm32f1xx_hal_tim.c ****     {
3296:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
3297:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3298:src/stm32f1xx_hal_tim.c ****       htim->PeriodElapsedCallback(htim);
3299:src/stm32f1xx_hal_tim.c **** #else
3300:src/stm32f1xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
3301:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3302:src/stm32f1xx_hal_tim.c ****     }
3303:src/stm32f1xx_hal_tim.c ****   }
3304:src/stm32f1xx_hal_tim.c ****   /* TIM Break input event */
3305:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
3306:src/stm32f1xx_hal_tim.c ****   {
3307:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
3308:src/stm32f1xx_hal_tim.c ****     {
3309:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
3310:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3311:src/stm32f1xx_hal_tim.c ****       htim->BreakCallback(htim);
3312:src/stm32f1xx_hal_tim.c **** #else
3313:src/stm32f1xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
3314:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3315:src/stm32f1xx_hal_tim.c ****     }
3316:src/stm32f1xx_hal_tim.c ****   }
3317:src/stm32f1xx_hal_tim.c ****   /* TIM Trigger detection event */
3318:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
3319:src/stm32f1xx_hal_tim.c ****   {
3320:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
3321:src/stm32f1xx_hal_tim.c ****     {
3322:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
3323:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3324:src/stm32f1xx_hal_tim.c ****       htim->TriggerCallback(htim);
3325:src/stm32f1xx_hal_tim.c **** #else
3326:src/stm32f1xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
3327:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3328:src/stm32f1xx_hal_tim.c ****     }
3329:src/stm32f1xx_hal_tim.c ****   }
3330:src/stm32f1xx_hal_tim.c ****   /* TIM commutation event */
3331:src/stm32f1xx_hal_tim.c ****   if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
3332:src/stm32f1xx_hal_tim.c ****   {
3333:src/stm32f1xx_hal_tim.c ****     if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
3334:src/stm32f1xx_hal_tim.c ****     {
3335:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
3336:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3337:src/stm32f1xx_hal_tim.c ****       htim->CommutationCallback(htim);
3338:src/stm32f1xx_hal_tim.c **** #else
3339:src/stm32f1xx_hal_tim.c ****       HAL_TIMEx_CommutCallback(htim);
3340:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3341:src/stm32f1xx_hal_tim.c ****     }
3342:src/stm32f1xx_hal_tim.c ****   }
3343:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 61


3344:src/stm32f1xx_hal_tim.c **** 
3345:src/stm32f1xx_hal_tim.c **** /**
3346:src/stm32f1xx_hal_tim.c ****   * @}
3347:src/stm32f1xx_hal_tim.c ****   */
3348:src/stm32f1xx_hal_tim.c **** 
3349:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group8 TIM Peripheral Control functions
3350:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Peripheral Control functions
3351:src/stm32f1xx_hal_tim.c ****   *
3352:src/stm32f1xx_hal_tim.c **** @verbatim
3353:src/stm32f1xx_hal_tim.c ****   ==============================================================================
3354:src/stm32f1xx_hal_tim.c ****                    ##### Peripheral Control functions #####
3355:src/stm32f1xx_hal_tim.c ****   ==============================================================================
3356:src/stm32f1xx_hal_tim.c ****  [..]
3357:src/stm32f1xx_hal_tim.c ****    This section provides functions allowing to:
3358:src/stm32f1xx_hal_tim.c ****       (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode.
3359:src/stm32f1xx_hal_tim.c ****       (+) Configure External Clock source.
3360:src/stm32f1xx_hal_tim.c ****       (+) Configure Complementary channels, break features and dead time.
3361:src/stm32f1xx_hal_tim.c ****       (+) Configure Master and the Slave synchronization.
3362:src/stm32f1xx_hal_tim.c ****       (+) Configure the DMA Burst Mode.
3363:src/stm32f1xx_hal_tim.c **** 
3364:src/stm32f1xx_hal_tim.c **** @endverbatim
3365:src/stm32f1xx_hal_tim.c ****   * @{
3366:src/stm32f1xx_hal_tim.c ****   */
3367:src/stm32f1xx_hal_tim.c **** 
3368:src/stm32f1xx_hal_tim.c **** /**
3369:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
3370:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
3371:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
3372:src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Output Compare configuration structure
3373:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to configure
3374:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3375:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3376:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3377:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
3378:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
3379:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3380:src/stm32f1xx_hal_tim.c ****   */
3381:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim,
3382:src/stm32f1xx_hal_tim.c ****                                            TIM_OC_InitTypeDef *sConfig,
3383:src/stm32f1xx_hal_tim.c ****                                            uint32_t Channel)
3384:src/stm32f1xx_hal_tim.c **** {
3385:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3386:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
3387:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
3388:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
3389:src/stm32f1xx_hal_tim.c **** 
3390:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
3391:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
3392:src/stm32f1xx_hal_tim.c **** 
3393:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3394:src/stm32f1xx_hal_tim.c **** 
3395:src/stm32f1xx_hal_tim.c ****   switch (Channel)
3396:src/stm32f1xx_hal_tim.c ****   {
3397:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3398:src/stm32f1xx_hal_tim.c ****     {
3399:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3400:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
ARM GAS  /tmp/ccTsJCXT.s 			page 62


3401:src/stm32f1xx_hal_tim.c **** 
3402:src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 1 in Output Compare */
3403:src/stm32f1xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
3404:src/stm32f1xx_hal_tim.c ****       break;
3405:src/stm32f1xx_hal_tim.c ****     }
3406:src/stm32f1xx_hal_tim.c **** 
3407:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3408:src/stm32f1xx_hal_tim.c ****     {
3409:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3410:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3411:src/stm32f1xx_hal_tim.c **** 
3412:src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 2 in Output Compare */
3413:src/stm32f1xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
3414:src/stm32f1xx_hal_tim.c ****       break;
3415:src/stm32f1xx_hal_tim.c ****     }
3416:src/stm32f1xx_hal_tim.c **** 
3417:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
3418:src/stm32f1xx_hal_tim.c ****     {
3419:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3420:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3421:src/stm32f1xx_hal_tim.c **** 
3422:src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 3 in Output Compare */
3423:src/stm32f1xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
3424:src/stm32f1xx_hal_tim.c ****       break;
3425:src/stm32f1xx_hal_tim.c ****     }
3426:src/stm32f1xx_hal_tim.c **** 
3427:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
3428:src/stm32f1xx_hal_tim.c ****     {
3429:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3430:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3431:src/stm32f1xx_hal_tim.c **** 
3432:src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 4 in Output Compare */
3433:src/stm32f1xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
3434:src/stm32f1xx_hal_tim.c ****       break;
3435:src/stm32f1xx_hal_tim.c ****     }
3436:src/stm32f1xx_hal_tim.c **** 
3437:src/stm32f1xx_hal_tim.c ****     default:
3438:src/stm32f1xx_hal_tim.c ****       break;
3439:src/stm32f1xx_hal_tim.c ****   }
3440:src/stm32f1xx_hal_tim.c **** 
3441:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3442:src/stm32f1xx_hal_tim.c **** 
3443:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3444:src/stm32f1xx_hal_tim.c **** 
3445:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3446:src/stm32f1xx_hal_tim.c **** }
3447:src/stm32f1xx_hal_tim.c **** 
3448:src/stm32f1xx_hal_tim.c **** /**
3449:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Channels according to the specified
3450:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_IC_InitTypeDef.
3451:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
3452:src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Input Capture configuration structure
3453:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to configure
3454:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3455:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3456:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3457:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
ARM GAS  /tmp/ccTsJCXT.s 			page 63


3458:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
3459:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3460:src/stm32f1xx_hal_tim.c ****   */
3461:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef *sConfig, ui
3462:src/stm32f1xx_hal_tim.c **** {
3463:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3464:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3465:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->ICPolarity));
3466:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
3467:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
3468:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));
3469:src/stm32f1xx_hal_tim.c **** 
3470:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
3471:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
3472:src/stm32f1xx_hal_tim.c **** 
3473:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3474:src/stm32f1xx_hal_tim.c **** 
3475:src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3476:src/stm32f1xx_hal_tim.c ****   {
3477:src/stm32f1xx_hal_tim.c ****     /* TI1 Configuration */
3478:src/stm32f1xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
3479:src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
3480:src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
3481:src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
3482:src/stm32f1xx_hal_tim.c **** 
3483:src/stm32f1xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
3484:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3485:src/stm32f1xx_hal_tim.c **** 
3486:src/stm32f1xx_hal_tim.c ****     /* Set the IC1PSC value */
3487:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
3488:src/stm32f1xx_hal_tim.c ****   }
3489:src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3490:src/stm32f1xx_hal_tim.c ****   {
3491:src/stm32f1xx_hal_tim.c ****     /* TI2 Configuration */
3492:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3493:src/stm32f1xx_hal_tim.c **** 
3494:src/stm32f1xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance,
3495:src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
3496:src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
3497:src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
3498:src/stm32f1xx_hal_tim.c **** 
3499:src/stm32f1xx_hal_tim.c ****     /* Reset the IC2PSC Bits */
3500:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3501:src/stm32f1xx_hal_tim.c **** 
3502:src/stm32f1xx_hal_tim.c ****     /* Set the IC2PSC value */
3503:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
3504:src/stm32f1xx_hal_tim.c ****   }
3505:src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
3506:src/stm32f1xx_hal_tim.c ****   {
3507:src/stm32f1xx_hal_tim.c ****     /* TI3 Configuration */
3508:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3509:src/stm32f1xx_hal_tim.c **** 
3510:src/stm32f1xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,
3511:src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
3512:src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
3513:src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
3514:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 64


3515:src/stm32f1xx_hal_tim.c ****     /* Reset the IC3PSC Bits */
3516:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
3517:src/stm32f1xx_hal_tim.c **** 
3518:src/stm32f1xx_hal_tim.c ****     /* Set the IC3PSC value */
3519:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
3520:src/stm32f1xx_hal_tim.c ****   }
3521:src/stm32f1xx_hal_tim.c ****   else
3522:src/stm32f1xx_hal_tim.c ****   {
3523:src/stm32f1xx_hal_tim.c ****     /* TI4 Configuration */
3524:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3525:src/stm32f1xx_hal_tim.c **** 
3526:src/stm32f1xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance,
3527:src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
3528:src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
3529:src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
3530:src/stm32f1xx_hal_tim.c **** 
3531:src/stm32f1xx_hal_tim.c ****     /* Reset the IC4PSC Bits */
3532:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
3533:src/stm32f1xx_hal_tim.c **** 
3534:src/stm32f1xx_hal_tim.c ****     /* Set the IC4PSC value */
3535:src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
3536:src/stm32f1xx_hal_tim.c ****   }
3537:src/stm32f1xx_hal_tim.c **** 
3538:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3539:src/stm32f1xx_hal_tim.c **** 
3540:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3541:src/stm32f1xx_hal_tim.c **** 
3542:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3543:src/stm32f1xx_hal_tim.c **** }
3544:src/stm32f1xx_hal_tim.c **** 
3545:src/stm32f1xx_hal_tim.c **** /**
3546:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
3547:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
3548:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
3549:src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM PWM configuration structure
3550:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be configured
3551:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3552:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3553:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3554:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
3555:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
3556:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3557:src/stm32f1xx_hal_tim.c ****   */
3558:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
3559:src/stm32f1xx_hal_tim.c ****                                             TIM_OC_InitTypeDef *sConfig,
3560:src/stm32f1xx_hal_tim.c ****                                             uint32_t Channel)
3561:src/stm32f1xx_hal_tim.c **** {
3562:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3563:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
3564:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
3565:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
3566:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
3567:src/stm32f1xx_hal_tim.c **** 
3568:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
3569:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
3570:src/stm32f1xx_hal_tim.c **** 
3571:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
ARM GAS  /tmp/ccTsJCXT.s 			page 65


3572:src/stm32f1xx_hal_tim.c **** 
3573:src/stm32f1xx_hal_tim.c ****   switch (Channel)
3574:src/stm32f1xx_hal_tim.c ****   {
3575:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3576:src/stm32f1xx_hal_tim.c ****     {
3577:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3578:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3579:src/stm32f1xx_hal_tim.c **** 
3580:src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 1 in PWM mode */
3581:src/stm32f1xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
3582:src/stm32f1xx_hal_tim.c **** 
3583:src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel1 */
3584:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
3585:src/stm32f1xx_hal_tim.c **** 
3586:src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
3587:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
3588:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
3589:src/stm32f1xx_hal_tim.c ****       break;
3590:src/stm32f1xx_hal_tim.c ****     }
3591:src/stm32f1xx_hal_tim.c **** 
3592:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3593:src/stm32f1xx_hal_tim.c ****     {
3594:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3595:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3596:src/stm32f1xx_hal_tim.c **** 
3597:src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 2 in PWM mode */
3598:src/stm32f1xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
3599:src/stm32f1xx_hal_tim.c **** 
3600:src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel2 */
3601:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
3602:src/stm32f1xx_hal_tim.c **** 
3603:src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
3604:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
3605:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
3606:src/stm32f1xx_hal_tim.c ****       break;
3607:src/stm32f1xx_hal_tim.c ****     }
3608:src/stm32f1xx_hal_tim.c **** 
3609:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
3610:src/stm32f1xx_hal_tim.c ****     {
3611:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
3612:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3613:src/stm32f1xx_hal_tim.c **** 
3614:src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 3 in PWM mode */
3615:src/stm32f1xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
3616:src/stm32f1xx_hal_tim.c **** 
3617:src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel3 */
3618:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
3619:src/stm32f1xx_hal_tim.c **** 
3620:src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
3621:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
3622:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
3623:src/stm32f1xx_hal_tim.c ****       break;
3624:src/stm32f1xx_hal_tim.c ****     }
3625:src/stm32f1xx_hal_tim.c **** 
3626:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
3627:src/stm32f1xx_hal_tim.c ****     {
3628:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
ARM GAS  /tmp/ccTsJCXT.s 			page 66


3629:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3630:src/stm32f1xx_hal_tim.c **** 
3631:src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 4 in PWM mode */
3632:src/stm32f1xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
3633:src/stm32f1xx_hal_tim.c **** 
3634:src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel4 */
3635:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
3636:src/stm32f1xx_hal_tim.c **** 
3637:src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
3638:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
3639:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
3640:src/stm32f1xx_hal_tim.c ****       break;
3641:src/stm32f1xx_hal_tim.c ****     }
3642:src/stm32f1xx_hal_tim.c **** 
3643:src/stm32f1xx_hal_tim.c ****     default:
3644:src/stm32f1xx_hal_tim.c ****       break;
3645:src/stm32f1xx_hal_tim.c ****   }
3646:src/stm32f1xx_hal_tim.c **** 
3647:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3648:src/stm32f1xx_hal_tim.c **** 
3649:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3650:src/stm32f1xx_hal_tim.c **** 
3651:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3652:src/stm32f1xx_hal_tim.c **** }
3653:src/stm32f1xx_hal_tim.c **** 
3654:src/stm32f1xx_hal_tim.c **** /**
3655:src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Channels according to the specified
3656:src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OnePulse_InitTypeDef.
3657:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
3658:src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM One Pulse configuration structure
3659:src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM output channel to configure
3660:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3661:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3662:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3663:src/stm32f1xx_hal_tim.c ****   * @param  InputChannel TIM input Channel to configure
3664:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3665:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3666:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3667:src/stm32f1xx_hal_tim.c ****   * @note  To output a waveform with a minimum delay user can enable the fast
3668:src/stm32f1xx_hal_tim.c ****   *        mode by calling the @ref __HAL_TIM_ENABLE_OCxFAST macro. Then CCx
3669:src/stm32f1xx_hal_tim.c ****   *        output is forced in response to the edge detection on TIx input,
3670:src/stm32f1xx_hal_tim.c ****   *        without taking in account the comparison.
3671:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3672:src/stm32f1xx_hal_tim.c ****   */
3673:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_ConfigChannel(TIM_HandleTypeDef *htim,  TIM_OnePulse_InitTypeDef
3674:src/stm32f1xx_hal_tim.c ****                                                  uint32_t OutputChannel,  uint32_t InputChannel)
3675:src/stm32f1xx_hal_tim.c **** {
3676:src/stm32f1xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
3677:src/stm32f1xx_hal_tim.c **** 
3678:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3679:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(OutputChannel));
3680:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(InputChannel));
3681:src/stm32f1xx_hal_tim.c **** 
3682:src/stm32f1xx_hal_tim.c ****   if (OutputChannel != InputChannel)
3683:src/stm32f1xx_hal_tim.c ****   {
3684:src/stm32f1xx_hal_tim.c ****     /* Process Locked */
3685:src/stm32f1xx_hal_tim.c ****     __HAL_LOCK(htim);
ARM GAS  /tmp/ccTsJCXT.s 			page 67


3686:src/stm32f1xx_hal_tim.c **** 
3687:src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_BUSY;
3688:src/stm32f1xx_hal_tim.c **** 
3689:src/stm32f1xx_hal_tim.c ****     /* Extract the Output compare configuration from sConfig structure */
3690:src/stm32f1xx_hal_tim.c ****     temp1.OCMode = sConfig->OCMode;
3691:src/stm32f1xx_hal_tim.c ****     temp1.Pulse = sConfig->Pulse;
3692:src/stm32f1xx_hal_tim.c ****     temp1.OCPolarity = sConfig->OCPolarity;
3693:src/stm32f1xx_hal_tim.c ****     temp1.OCNPolarity = sConfig->OCNPolarity;
3694:src/stm32f1xx_hal_tim.c ****     temp1.OCIdleState = sConfig->OCIdleState;
3695:src/stm32f1xx_hal_tim.c ****     temp1.OCNIdleState = sConfig->OCNIdleState;
3696:src/stm32f1xx_hal_tim.c **** 
3697:src/stm32f1xx_hal_tim.c ****     switch (OutputChannel)
3698:src/stm32f1xx_hal_tim.c ****     {
3699:src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_1:
3700:src/stm32f1xx_hal_tim.c ****       {
3701:src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3702:src/stm32f1xx_hal_tim.c **** 
3703:src/stm32f1xx_hal_tim.c ****         TIM_OC1_SetConfig(htim->Instance, &temp1);
3704:src/stm32f1xx_hal_tim.c ****         break;
3705:src/stm32f1xx_hal_tim.c ****       }
3706:src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_2:
3707:src/stm32f1xx_hal_tim.c ****       {
3708:src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3709:src/stm32f1xx_hal_tim.c **** 
3710:src/stm32f1xx_hal_tim.c ****         TIM_OC2_SetConfig(htim->Instance, &temp1);
3711:src/stm32f1xx_hal_tim.c ****         break;
3712:src/stm32f1xx_hal_tim.c ****       }
3713:src/stm32f1xx_hal_tim.c ****       default:
3714:src/stm32f1xx_hal_tim.c ****         break;
3715:src/stm32f1xx_hal_tim.c ****     }
3716:src/stm32f1xx_hal_tim.c **** 
3717:src/stm32f1xx_hal_tim.c ****     switch (InputChannel)
3718:src/stm32f1xx_hal_tim.c ****     {
3719:src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_1:
3720:src/stm32f1xx_hal_tim.c ****       {
3721:src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3722:src/stm32f1xx_hal_tim.c **** 
3723:src/stm32f1xx_hal_tim.c ****         TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
3724:src/stm32f1xx_hal_tim.c ****                           sConfig->ICSelection, sConfig->ICFilter);
3725:src/stm32f1xx_hal_tim.c **** 
3726:src/stm32f1xx_hal_tim.c ****         /* Reset the IC1PSC Bits */
3727:src/stm32f1xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3728:src/stm32f1xx_hal_tim.c **** 
3729:src/stm32f1xx_hal_tim.c ****         /* Select the Trigger source */
3730:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3731:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_TS_TI1FP1;
3732:src/stm32f1xx_hal_tim.c **** 
3733:src/stm32f1xx_hal_tim.c ****         /* Select the Slave Mode */
3734:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3735:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3736:src/stm32f1xx_hal_tim.c ****         break;
3737:src/stm32f1xx_hal_tim.c ****       }
3738:src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_2:
3739:src/stm32f1xx_hal_tim.c ****       {
3740:src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3741:src/stm32f1xx_hal_tim.c **** 
3742:src/stm32f1xx_hal_tim.c ****         TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
ARM GAS  /tmp/ccTsJCXT.s 			page 68


3743:src/stm32f1xx_hal_tim.c ****                           sConfig->ICSelection, sConfig->ICFilter);
3744:src/stm32f1xx_hal_tim.c **** 
3745:src/stm32f1xx_hal_tim.c ****         /* Reset the IC2PSC Bits */
3746:src/stm32f1xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3747:src/stm32f1xx_hal_tim.c **** 
3748:src/stm32f1xx_hal_tim.c ****         /* Select the Trigger source */
3749:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3750:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_TS_TI2FP2;
3751:src/stm32f1xx_hal_tim.c **** 
3752:src/stm32f1xx_hal_tim.c ****         /* Select the Slave Mode */
3753:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3754:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3755:src/stm32f1xx_hal_tim.c ****         break;
3756:src/stm32f1xx_hal_tim.c ****       }
3757:src/stm32f1xx_hal_tim.c **** 
3758:src/stm32f1xx_hal_tim.c ****       default:
3759:src/stm32f1xx_hal_tim.c ****         break;
3760:src/stm32f1xx_hal_tim.c ****     }
3761:src/stm32f1xx_hal_tim.c **** 
3762:src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
3763:src/stm32f1xx_hal_tim.c **** 
3764:src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
3765:src/stm32f1xx_hal_tim.c **** 
3766:src/stm32f1xx_hal_tim.c ****     return HAL_OK;
3767:src/stm32f1xx_hal_tim.c ****   }
3768:src/stm32f1xx_hal_tim.c ****   else
3769:src/stm32f1xx_hal_tim.c ****   {
3770:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
3771:src/stm32f1xx_hal_tim.c ****   }
3772:src/stm32f1xx_hal_tim.c **** }
3773:src/stm32f1xx_hal_tim.c **** 
3774:src/stm32f1xx_hal_tim.c **** /**
3775:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the memory to the TIM peripheral
3776:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
3777:src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data write
3778:src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
3779:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
3780:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3781:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3782:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3783:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3784:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3785:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3786:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3787:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3788:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
3789:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
3790:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3791:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3792:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3793:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3794:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
3795:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3796:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3797:src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
3798:src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
3799:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
ARM GAS  /tmp/ccTsJCXT.s 			page 69


3800:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3801:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3802:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3803:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3804:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3805:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3806:src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
3807:src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
3808:src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3809:src/stm32f1xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
3810:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3811:src/stm32f1xx_hal_tim.c ****   */
3812:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress, u
3813:src/stm32f1xx_hal_tim.c ****                                               uint32_t *BurstBuffer, uint32_t  BurstLength)
3814:src/stm32f1xx_hal_tim.c **** {
3815:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3816:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
3817:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
3818:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3819:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
3820:src/stm32f1xx_hal_tim.c **** 
3821:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
3822:src/stm32f1xx_hal_tim.c ****   {
3823:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
3824:src/stm32f1xx_hal_tim.c ****   }
3825:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
3826:src/stm32f1xx_hal_tim.c ****   {
3827:src/stm32f1xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
3828:src/stm32f1xx_hal_tim.c ****     {
3829:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
3830:src/stm32f1xx_hal_tim.c ****     }
3831:src/stm32f1xx_hal_tim.c ****     else
3832:src/stm32f1xx_hal_tim.c ****     {
3833:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
3834:src/stm32f1xx_hal_tim.c ****     }
3835:src/stm32f1xx_hal_tim.c ****   }
3836:src/stm32f1xx_hal_tim.c ****   else
3837:src/stm32f1xx_hal_tim.c ****   {
3838:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
3839:src/stm32f1xx_hal_tim.c ****   }
3840:src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
3841:src/stm32f1xx_hal_tim.c ****   {
3842:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3843:src/stm32f1xx_hal_tim.c ****     {
3844:src/stm32f1xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
3845:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
3846:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
3847:src/stm32f1xx_hal_tim.c **** 
3848:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3849:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
3850:src/stm32f1xx_hal_tim.c **** 
3851:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3852:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer, (uint32_t)&htim->I
3853:src/stm32f1xx_hal_tim.c ****       {
3854:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3855:src/stm32f1xx_hal_tim.c ****       }
3856:src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccTsJCXT.s 			page 70


3857:src/stm32f1xx_hal_tim.c ****     }
3858:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
3859:src/stm32f1xx_hal_tim.c ****     {
3860:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
3861:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
3862:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
3863:src/stm32f1xx_hal_tim.c **** 
3864:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3865:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3866:src/stm32f1xx_hal_tim.c **** 
3867:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3868:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer,
3869:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3870:src/stm32f1xx_hal_tim.c ****       {
3871:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3872:src/stm32f1xx_hal_tim.c ****       }
3873:src/stm32f1xx_hal_tim.c ****       break;
3874:src/stm32f1xx_hal_tim.c ****     }
3875:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
3876:src/stm32f1xx_hal_tim.c ****     {
3877:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
3878:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
3879:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
3880:src/stm32f1xx_hal_tim.c **** 
3881:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3882:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3883:src/stm32f1xx_hal_tim.c **** 
3884:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3885:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer,
3886:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3887:src/stm32f1xx_hal_tim.c ****       {
3888:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3889:src/stm32f1xx_hal_tim.c ****       }
3890:src/stm32f1xx_hal_tim.c ****       break;
3891:src/stm32f1xx_hal_tim.c ****     }
3892:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
3893:src/stm32f1xx_hal_tim.c ****     {
3894:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
3895:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
3896:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
3897:src/stm32f1xx_hal_tim.c **** 
3898:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3899:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
3900:src/stm32f1xx_hal_tim.c **** 
3901:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3902:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer,
3903:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3904:src/stm32f1xx_hal_tim.c ****       {
3905:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3906:src/stm32f1xx_hal_tim.c ****       }
3907:src/stm32f1xx_hal_tim.c ****       break;
3908:src/stm32f1xx_hal_tim.c ****     }
3909:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
3910:src/stm32f1xx_hal_tim.c ****     {
3911:src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
3912:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
3913:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
ARM GAS  /tmp/ccTsJCXT.s 			page 71


3914:src/stm32f1xx_hal_tim.c **** 
3915:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3916:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
3917:src/stm32f1xx_hal_tim.c **** 
3918:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3919:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer,
3920:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3921:src/stm32f1xx_hal_tim.c ****       {
3922:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3923:src/stm32f1xx_hal_tim.c ****       }
3924:src/stm32f1xx_hal_tim.c ****       break;
3925:src/stm32f1xx_hal_tim.c ****     }
3926:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
3927:src/stm32f1xx_hal_tim.c ****     {
3928:src/stm32f1xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
3929:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
3930:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
3931:src/stm32f1xx_hal_tim.c **** 
3932:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3933:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
3934:src/stm32f1xx_hal_tim.c **** 
3935:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3936:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer,
3937:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3938:src/stm32f1xx_hal_tim.c ****       {
3939:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3940:src/stm32f1xx_hal_tim.c ****       }
3941:src/stm32f1xx_hal_tim.c ****       break;
3942:src/stm32f1xx_hal_tim.c ****     }
3943:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3944:src/stm32f1xx_hal_tim.c ****     {
3945:src/stm32f1xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
3946:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
3947:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
3948:src/stm32f1xx_hal_tim.c **** 
3949:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3950:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
3951:src/stm32f1xx_hal_tim.c **** 
3952:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3953:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer,
3954:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
3955:src/stm32f1xx_hal_tim.c ****       {
3956:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
3957:src/stm32f1xx_hal_tim.c ****       }
3958:src/stm32f1xx_hal_tim.c ****       break;
3959:src/stm32f1xx_hal_tim.c ****     }
3960:src/stm32f1xx_hal_tim.c ****     default:
3961:src/stm32f1xx_hal_tim.c ****       break;
3962:src/stm32f1xx_hal_tim.c ****   }
3963:src/stm32f1xx_hal_tim.c ****   /* configure the DMA Burst Mode */
3964:src/stm32f1xx_hal_tim.c ****   htim->Instance->DCR = (BurstBaseAddress | BurstLength);
3965:src/stm32f1xx_hal_tim.c **** 
3966:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM DMA Request */
3967:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
3968:src/stm32f1xx_hal_tim.c **** 
3969:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3970:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 72


3971:src/stm32f1xx_hal_tim.c ****   /* Return function status */
3972:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
3973:src/stm32f1xx_hal_tim.c **** }
3974:src/stm32f1xx_hal_tim.c **** 
3975:src/stm32f1xx_hal_tim.c **** /**
3976:src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM DMA Burst mode
3977:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
3978:src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable
3979:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3980:src/stm32f1xx_hal_tim.c ****   */
3981:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
3982:src/stm32f1xx_hal_tim.c **** {
3983:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
3984:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3985:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3986:src/stm32f1xx_hal_tim.c **** 
3987:src/stm32f1xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
3988:src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
3989:src/stm32f1xx_hal_tim.c ****   {
3990:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3991:src/stm32f1xx_hal_tim.c ****     {
3992:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
3993:src/stm32f1xx_hal_tim.c ****       break;
3994:src/stm32f1xx_hal_tim.c ****     }
3995:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
3996:src/stm32f1xx_hal_tim.c ****     {
3997:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
3998:src/stm32f1xx_hal_tim.c ****       break;
3999:src/stm32f1xx_hal_tim.c ****     }
4000:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4001:src/stm32f1xx_hal_tim.c ****     {
4002:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
4003:src/stm32f1xx_hal_tim.c ****       break;
4004:src/stm32f1xx_hal_tim.c ****     }
4005:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4006:src/stm32f1xx_hal_tim.c ****     {
4007:src/stm32f1xx_hal_tim.c ****       status =  HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
4008:src/stm32f1xx_hal_tim.c ****       break;
4009:src/stm32f1xx_hal_tim.c ****     }
4010:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4011:src/stm32f1xx_hal_tim.c ****     {
4012:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
4013:src/stm32f1xx_hal_tim.c ****       break;
4014:src/stm32f1xx_hal_tim.c ****     }
4015:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4016:src/stm32f1xx_hal_tim.c ****     {
4017:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
4018:src/stm32f1xx_hal_tim.c ****       break;
4019:src/stm32f1xx_hal_tim.c ****     }
4020:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4021:src/stm32f1xx_hal_tim.c ****     {
4022:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
4023:src/stm32f1xx_hal_tim.c ****       break;
4024:src/stm32f1xx_hal_tim.c ****     }
4025:src/stm32f1xx_hal_tim.c ****     default:
4026:src/stm32f1xx_hal_tim.c ****       break;
4027:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 73


4028:src/stm32f1xx_hal_tim.c **** 
4029:src/stm32f1xx_hal_tim.c ****   if (HAL_OK == status)
4030:src/stm32f1xx_hal_tim.c ****   {
4031:src/stm32f1xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
4032:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
4033:src/stm32f1xx_hal_tim.c ****   }
4034:src/stm32f1xx_hal_tim.c **** 
4035:src/stm32f1xx_hal_tim.c ****   /* Return function status */
4036:src/stm32f1xx_hal_tim.c ****   return status;
4037:src/stm32f1xx_hal_tim.c **** }
4038:src/stm32f1xx_hal_tim.c **** 
4039:src/stm32f1xx_hal_tim.c **** /**
4040:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory
4041:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4042:src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data read
4043:src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4044:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4045:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4046:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4047:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4048:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4049:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4050:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4051:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4052:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4053:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4054:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4055:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4056:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4057:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4058:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4059:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4060:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4061:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4062:src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4063:src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4064:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4065:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4066:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4067:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4068:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4069:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4070:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4071:src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4072:src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4073:src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4074:src/stm32f1xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
4075:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4076:src/stm32f1xx_hal_tim.c ****   */
4077:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress,
4078:src/stm32f1xx_hal_tim.c ****                                              uint32_t BurstRequestSrc, uint32_t  *BurstBuffer, uint
4079:src/stm32f1xx_hal_tim.c **** {
4080:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4081:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
4082:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
4083:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4084:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
ARM GAS  /tmp/ccTsJCXT.s 			page 74


4085:src/stm32f1xx_hal_tim.c **** 
4086:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
4087:src/stm32f1xx_hal_tim.c ****   {
4088:src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
4089:src/stm32f1xx_hal_tim.c ****   }
4090:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
4091:src/stm32f1xx_hal_tim.c ****   {
4092:src/stm32f1xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
4093:src/stm32f1xx_hal_tim.c ****     {
4094:src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
4095:src/stm32f1xx_hal_tim.c ****     }
4096:src/stm32f1xx_hal_tim.c ****     else
4097:src/stm32f1xx_hal_tim.c ****     {
4098:src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
4099:src/stm32f1xx_hal_tim.c ****     }
4100:src/stm32f1xx_hal_tim.c ****   }
4101:src/stm32f1xx_hal_tim.c ****   else
4102:src/stm32f1xx_hal_tim.c ****   {
4103:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
4104:src/stm32f1xx_hal_tim.c ****   }
4105:src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
4106:src/stm32f1xx_hal_tim.c ****   {
4107:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4108:src/stm32f1xx_hal_tim.c ****     {
4109:src/stm32f1xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
4110:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
4111:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
4112:src/stm32f1xx_hal_tim.c **** 
4113:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4114:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
4115:src/stm32f1xx_hal_tim.c **** 
4116:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4117:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_
4118:src/stm32f1xx_hal_tim.c ****       {
4119:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4120:src/stm32f1xx_hal_tim.c ****       }
4121:src/stm32f1xx_hal_tim.c ****       break;
4122:src/stm32f1xx_hal_tim.c ****     }
4123:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
4124:src/stm32f1xx_hal_tim.c ****     {
4125:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4126:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
4127:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4128:src/stm32f1xx_hal_tim.c **** 
4129:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4130:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
4131:src/stm32f1xx_hal_tim.c **** 
4132:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4133:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4134:src/stm32f1xx_hal_tim.c ****       {
4135:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4136:src/stm32f1xx_hal_tim.c ****       }
4137:src/stm32f1xx_hal_tim.c ****       break;
4138:src/stm32f1xx_hal_tim.c ****     }
4139:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4140:src/stm32f1xx_hal_tim.c ****     {
4141:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture/compare callbacks */
ARM GAS  /tmp/ccTsJCXT.s 			page 75


4142:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
4143:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4144:src/stm32f1xx_hal_tim.c **** 
4145:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4146:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
4147:src/stm32f1xx_hal_tim.c **** 
4148:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4149:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4150:src/stm32f1xx_hal_tim.c ****       {
4151:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4152:src/stm32f1xx_hal_tim.c ****       }
4153:src/stm32f1xx_hal_tim.c ****       break;
4154:src/stm32f1xx_hal_tim.c ****     }
4155:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4156:src/stm32f1xx_hal_tim.c ****     {
4157:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4158:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
4159:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4160:src/stm32f1xx_hal_tim.c **** 
4161:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4162:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
4163:src/stm32f1xx_hal_tim.c **** 
4164:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4165:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4166:src/stm32f1xx_hal_tim.c ****       {
4167:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4168:src/stm32f1xx_hal_tim.c ****       }
4169:src/stm32f1xx_hal_tim.c ****       break;
4170:src/stm32f1xx_hal_tim.c ****     }
4171:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4172:src/stm32f1xx_hal_tim.c ****     {
4173:src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4174:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
4175:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4176:src/stm32f1xx_hal_tim.c **** 
4177:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4178:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
4179:src/stm32f1xx_hal_tim.c **** 
4180:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4181:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4182:src/stm32f1xx_hal_tim.c ****       {
4183:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4184:src/stm32f1xx_hal_tim.c ****       }
4185:src/stm32f1xx_hal_tim.c ****       break;
4186:src/stm32f1xx_hal_tim.c ****     }
4187:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4188:src/stm32f1xx_hal_tim.c ****     {
4189:src/stm32f1xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
4190:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
4191:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
4192:src/stm32f1xx_hal_tim.c **** 
4193:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4194:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
4195:src/stm32f1xx_hal_tim.c **** 
4196:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4197:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (ui
4198:src/stm32f1xx_hal_tim.c ****       {
ARM GAS  /tmp/ccTsJCXT.s 			page 76


4199:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4200:src/stm32f1xx_hal_tim.c ****       }
4201:src/stm32f1xx_hal_tim.c ****       break;
4202:src/stm32f1xx_hal_tim.c ****     }
4203:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4204:src/stm32f1xx_hal_tim.c ****     {
4205:src/stm32f1xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
4206:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
4207:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
4208:src/stm32f1xx_hal_tim.c **** 
4209:src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4210:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
4211:src/stm32f1xx_hal_tim.c **** 
4212:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4213:src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32
4214:src/stm32f1xx_hal_tim.c ****       {
4215:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4216:src/stm32f1xx_hal_tim.c ****       }
4217:src/stm32f1xx_hal_tim.c ****       break;
4218:src/stm32f1xx_hal_tim.c ****     }
4219:src/stm32f1xx_hal_tim.c ****     default:
4220:src/stm32f1xx_hal_tim.c ****       break;
4221:src/stm32f1xx_hal_tim.c ****   }
4222:src/stm32f1xx_hal_tim.c **** 
4223:src/stm32f1xx_hal_tim.c ****   /* configure the DMA Burst Mode */
4224:src/stm32f1xx_hal_tim.c ****   htim->Instance->DCR = (BurstBaseAddress | BurstLength);
4225:src/stm32f1xx_hal_tim.c **** 
4226:src/stm32f1xx_hal_tim.c ****   /* Enable the TIM DMA Request */
4227:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
4228:src/stm32f1xx_hal_tim.c **** 
4229:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4230:src/stm32f1xx_hal_tim.c **** 
4231:src/stm32f1xx_hal_tim.c ****   /* Return function status */
4232:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4233:src/stm32f1xx_hal_tim.c **** }
4234:src/stm32f1xx_hal_tim.c **** 
4235:src/stm32f1xx_hal_tim.c **** /**
4236:src/stm32f1xx_hal_tim.c ****   * @brief  Stop the DMA burst reading
4237:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4238:src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable.
4239:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4240:src/stm32f1xx_hal_tim.c ****   */
4241:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
4242:src/stm32f1xx_hal_tim.c **** {
4243:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4244:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4245:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4246:src/stm32f1xx_hal_tim.c **** 
4247:src/stm32f1xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
4248:src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
4249:src/stm32f1xx_hal_tim.c ****   {
4250:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4251:src/stm32f1xx_hal_tim.c ****     {
4252:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
4253:src/stm32f1xx_hal_tim.c ****       break;
4254:src/stm32f1xx_hal_tim.c ****     }
4255:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
ARM GAS  /tmp/ccTsJCXT.s 			page 77


4256:src/stm32f1xx_hal_tim.c ****     {
4257:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
4258:src/stm32f1xx_hal_tim.c ****       break;
4259:src/stm32f1xx_hal_tim.c ****     }
4260:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4261:src/stm32f1xx_hal_tim.c ****     {
4262:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
4263:src/stm32f1xx_hal_tim.c ****       break;
4264:src/stm32f1xx_hal_tim.c ****     }
4265:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4266:src/stm32f1xx_hal_tim.c ****     {
4267:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
4268:src/stm32f1xx_hal_tim.c ****       break;
4269:src/stm32f1xx_hal_tim.c ****     }
4270:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4271:src/stm32f1xx_hal_tim.c ****     {
4272:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
4273:src/stm32f1xx_hal_tim.c ****       break;
4274:src/stm32f1xx_hal_tim.c ****     }
4275:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4276:src/stm32f1xx_hal_tim.c ****     {
4277:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
4278:src/stm32f1xx_hal_tim.c ****       break;
4279:src/stm32f1xx_hal_tim.c ****     }
4280:src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4281:src/stm32f1xx_hal_tim.c ****     {
4282:src/stm32f1xx_hal_tim.c ****       status = HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
4283:src/stm32f1xx_hal_tim.c ****       break;
4284:src/stm32f1xx_hal_tim.c ****     }
4285:src/stm32f1xx_hal_tim.c ****     default:
4286:src/stm32f1xx_hal_tim.c ****       break;
4287:src/stm32f1xx_hal_tim.c ****   }
4288:src/stm32f1xx_hal_tim.c **** 
4289:src/stm32f1xx_hal_tim.c ****   if (HAL_OK == status)
4290:src/stm32f1xx_hal_tim.c ****   {
4291:src/stm32f1xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
4292:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
4293:src/stm32f1xx_hal_tim.c ****   }
4294:src/stm32f1xx_hal_tim.c **** 
4295:src/stm32f1xx_hal_tim.c ****   /* Return function status */
4296:src/stm32f1xx_hal_tim.c ****   return status;
4297:src/stm32f1xx_hal_tim.c **** }
4298:src/stm32f1xx_hal_tim.c **** 
4299:src/stm32f1xx_hal_tim.c **** /**
4300:src/stm32f1xx_hal_tim.c ****   * @brief  Generate a software event
4301:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4302:src/stm32f1xx_hal_tim.c ****   * @param  EventSource specifies the event source.
4303:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4304:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_UPDATE: Timer update Event source
4305:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC1: Timer Capture Compare 1 Event source
4306:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC2: Timer Capture Compare 2 Event source
4307:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC3: Timer Capture Compare 3 Event source
4308:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC4: Timer Capture Compare 4 Event source
4309:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_COM: Timer COM event source
4310:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_TRIGGER: Timer Trigger Event source
4311:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK: Timer Break event source
4312:src/stm32f1xx_hal_tim.c ****   * @note   Basic timers can only generate an update event.
ARM GAS  /tmp/ccTsJCXT.s 			page 78


4313:src/stm32f1xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_COM is relevant only with advanced timer instances.
4314:src/stm32f1xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_BREAK are relevant only for timer instances
4315:src/stm32f1xx_hal_tim.c ****   *         supporting a break input.
4316:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4317:src/stm32f1xx_hal_tim.c ****   */
4318:src/stm32f1xx_hal_tim.c **** 
4319:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_GenerateEvent(TIM_HandleTypeDef *htim, uint32_t EventSource)
4320:src/stm32f1xx_hal_tim.c **** {
4321:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4322:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
4323:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(EventSource));
4324:src/stm32f1xx_hal_tim.c **** 
4325:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4326:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
4327:src/stm32f1xx_hal_tim.c **** 
4328:src/stm32f1xx_hal_tim.c ****   /* Change the TIM state */
4329:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4330:src/stm32f1xx_hal_tim.c **** 
4331:src/stm32f1xx_hal_tim.c ****   /* Set the event sources */
4332:src/stm32f1xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
4333:src/stm32f1xx_hal_tim.c **** 
4334:src/stm32f1xx_hal_tim.c ****   /* Change the TIM state */
4335:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4336:src/stm32f1xx_hal_tim.c **** 
4337:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4338:src/stm32f1xx_hal_tim.c **** 
4339:src/stm32f1xx_hal_tim.c ****   /* Return function status */
4340:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4341:src/stm32f1xx_hal_tim.c **** }
4342:src/stm32f1xx_hal_tim.c **** 
4343:src/stm32f1xx_hal_tim.c **** /**
4344:src/stm32f1xx_hal_tim.c ****   * @brief  Configures the OCRef clear feature
4345:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4346:src/stm32f1xx_hal_tim.c ****   * @param  sClearInputConfig pointer to a TIM_ClearInputConfigTypeDef structure that
4347:src/stm32f1xx_hal_tim.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral.
4348:src/stm32f1xx_hal_tim.c ****   * @param  Channel specifies the TIM Channel
4349:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4350:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
4351:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
4352:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
4353:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
4354:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4355:src/stm32f1xx_hal_tim.c ****   */
4356:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim,
4357:src/stm32f1xx_hal_tim.c ****                                            TIM_ClearInputConfigTypeDef *sClearInputConfig,
4358:src/stm32f1xx_hal_tim.c ****                                            uint32_t Channel)
4359:src/stm32f1xx_hal_tim.c **** {
4360:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4361:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OCXREF_CLEAR_INSTANCE(htim->Instance));
4362:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
4363:src/stm32f1xx_hal_tim.c **** 
4364:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4365:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
4366:src/stm32f1xx_hal_tim.c **** 
4367:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4368:src/stm32f1xx_hal_tim.c **** 
4369:src/stm32f1xx_hal_tim.c ****   switch (sClearInputConfig->ClearInputSource)
ARM GAS  /tmp/ccTsJCXT.s 			page 79


4370:src/stm32f1xx_hal_tim.c ****   {
4371:src/stm32f1xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_NONE:
4372:src/stm32f1xx_hal_tim.c ****     {
4373:src/stm32f1xx_hal_tim.c ****       /* Clear the OCREF clear selection bit and the the ETR Bits */
4374:src/stm32f1xx_hal_tim.c ****       CLEAR_BIT(htim->Instance->SMCR, (TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP))
4375:src/stm32f1xx_hal_tim.c ****       break;
4376:src/stm32f1xx_hal_tim.c ****     }
4377:src/stm32f1xx_hal_tim.c **** 
4378:src/stm32f1xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_ETR:
4379:src/stm32f1xx_hal_tim.c ****     {
4380:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4381:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
4382:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
4383:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
4384:src/stm32f1xx_hal_tim.c **** 
4385:src/stm32f1xx_hal_tim.c ****       /* When OCRef clear feature is used with ETR source, ETR prescaler must be off */
4386:src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputPrescaler != TIM_CLEARINPUTPRESCALER_DIV1)
4387:src/stm32f1xx_hal_tim.c ****       {
4388:src/stm32f1xx_hal_tim.c ****         htim->State = HAL_TIM_STATE_READY;
4389:src/stm32f1xx_hal_tim.c ****         __HAL_UNLOCK(htim);
4390:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
4391:src/stm32f1xx_hal_tim.c ****       }
4392:src/stm32f1xx_hal_tim.c **** 
4393:src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
4394:src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
4395:src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPolarity,
4396:src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputFilter);
4397:src/stm32f1xx_hal_tim.c ****       break;
4398:src/stm32f1xx_hal_tim.c ****     }
4399:src/stm32f1xx_hal_tim.c **** 
4400:src/stm32f1xx_hal_tim.c ****     default:
4401:src/stm32f1xx_hal_tim.c ****       break;
4402:src/stm32f1xx_hal_tim.c ****   }
4403:src/stm32f1xx_hal_tim.c **** 
4404:src/stm32f1xx_hal_tim.c ****   switch (Channel)
4405:src/stm32f1xx_hal_tim.c ****   {
4406:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
4407:src/stm32f1xx_hal_tim.c ****     {
4408:src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
4409:src/stm32f1xx_hal_tim.c ****       {
4410:src/stm32f1xx_hal_tim.c ****         /* Enable the OCREF clear feature for Channel 1 */
4411:src/stm32f1xx_hal_tim.c ****         SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
4412:src/stm32f1xx_hal_tim.c ****       }
4413:src/stm32f1xx_hal_tim.c ****       else
4414:src/stm32f1xx_hal_tim.c ****       {
4415:src/stm32f1xx_hal_tim.c ****         /* Disable the OCREF clear feature for Channel 1 */
4416:src/stm32f1xx_hal_tim.c ****         CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
4417:src/stm32f1xx_hal_tim.c ****       }
4418:src/stm32f1xx_hal_tim.c ****       break;
4419:src/stm32f1xx_hal_tim.c ****     }
4420:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
4421:src/stm32f1xx_hal_tim.c ****     {
4422:src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
4423:src/stm32f1xx_hal_tim.c ****       {
4424:src/stm32f1xx_hal_tim.c ****         /* Enable the OCREF clear feature for Channel 2 */
4425:src/stm32f1xx_hal_tim.c ****         SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
4426:src/stm32f1xx_hal_tim.c ****       }
ARM GAS  /tmp/ccTsJCXT.s 			page 80


4427:src/stm32f1xx_hal_tim.c ****       else
4428:src/stm32f1xx_hal_tim.c ****       {
4429:src/stm32f1xx_hal_tim.c ****         /* Disable the OCREF clear feature for Channel 2 */
4430:src/stm32f1xx_hal_tim.c ****         CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
4431:src/stm32f1xx_hal_tim.c ****       }
4432:src/stm32f1xx_hal_tim.c ****       break;
4433:src/stm32f1xx_hal_tim.c ****     }
4434:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
4435:src/stm32f1xx_hal_tim.c ****     {
4436:src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
4437:src/stm32f1xx_hal_tim.c ****       {
4438:src/stm32f1xx_hal_tim.c ****         /* Enable the OCREF clear feature for Channel 3 */
4439:src/stm32f1xx_hal_tim.c ****         SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
4440:src/stm32f1xx_hal_tim.c ****       }
4441:src/stm32f1xx_hal_tim.c ****       else
4442:src/stm32f1xx_hal_tim.c ****       {
4443:src/stm32f1xx_hal_tim.c ****         /* Disable the OCREF clear feature for Channel 3 */
4444:src/stm32f1xx_hal_tim.c ****         CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
4445:src/stm32f1xx_hal_tim.c ****       }
4446:src/stm32f1xx_hal_tim.c ****       break;
4447:src/stm32f1xx_hal_tim.c ****     }
4448:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
4449:src/stm32f1xx_hal_tim.c ****     {
4450:src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
4451:src/stm32f1xx_hal_tim.c ****       {
4452:src/stm32f1xx_hal_tim.c ****         /* Enable the OCREF clear feature for Channel 4 */
4453:src/stm32f1xx_hal_tim.c ****         SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
4454:src/stm32f1xx_hal_tim.c ****       }
4455:src/stm32f1xx_hal_tim.c ****       else
4456:src/stm32f1xx_hal_tim.c ****       {
4457:src/stm32f1xx_hal_tim.c ****         /* Disable the OCREF clear feature for Channel 4 */
4458:src/stm32f1xx_hal_tim.c ****         CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
4459:src/stm32f1xx_hal_tim.c ****       }
4460:src/stm32f1xx_hal_tim.c ****       break;
4461:src/stm32f1xx_hal_tim.c ****     }
4462:src/stm32f1xx_hal_tim.c ****     default:
4463:src/stm32f1xx_hal_tim.c ****       break;
4464:src/stm32f1xx_hal_tim.c ****   }
4465:src/stm32f1xx_hal_tim.c **** 
4466:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4467:src/stm32f1xx_hal_tim.c **** 
4468:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4469:src/stm32f1xx_hal_tim.c **** 
4470:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4471:src/stm32f1xx_hal_tim.c **** }
4472:src/stm32f1xx_hal_tim.c **** 
4473:src/stm32f1xx_hal_tim.c **** /**
4474:src/stm32f1xx_hal_tim.c ****   * @brief   Configures the clock source to be used
4475:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4476:src/stm32f1xx_hal_tim.c ****   * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
4477:src/stm32f1xx_hal_tim.c ****   *         contains the clock source information for the TIM peripheral.
4478:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4479:src/stm32f1xx_hal_tim.c ****   */
4480:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClock
4481:src/stm32f1xx_hal_tim.c **** {
4482:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
4483:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 81


4484:src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4485:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
4486:src/stm32f1xx_hal_tim.c **** 
4487:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4488:src/stm32f1xx_hal_tim.c **** 
4489:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4490:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
4491:src/stm32f1xx_hal_tim.c **** 
4492:src/stm32f1xx_hal_tim.c ****   /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
4493:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
4494:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
4495:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
4496:src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
4497:src/stm32f1xx_hal_tim.c **** 
4498:src/stm32f1xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
4499:src/stm32f1xx_hal_tim.c ****   {
4500:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_INTERNAL:
4501:src/stm32f1xx_hal_tim.c ****     {
4502:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_INSTANCE(htim->Instance));
4503:src/stm32f1xx_hal_tim.c ****       break;
4504:src/stm32f1xx_hal_tim.c ****     }
4505:src/stm32f1xx_hal_tim.c **** 
4506:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE1:
4507:src/stm32f1xx_hal_tim.c ****     {
4508:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 1 (ETRF)*/
4509:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
4510:src/stm32f1xx_hal_tim.c **** 
4511:src/stm32f1xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
4512:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
4513:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4514:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4515:src/stm32f1xx_hal_tim.c **** 
4516:src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Clock source */
4517:src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
4518:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
4519:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
4520:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
4521:src/stm32f1xx_hal_tim.c **** 
4522:src/stm32f1xx_hal_tim.c ****       /* Select the External clock mode1 and the ETRF trigger */
4523:src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
4524:src/stm32f1xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
4525:src/stm32f1xx_hal_tim.c ****       /* Write to TIMx SMCR */
4526:src/stm32f1xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
4527:src/stm32f1xx_hal_tim.c ****       break;
4528:src/stm32f1xx_hal_tim.c ****     }
4529:src/stm32f1xx_hal_tim.c **** 
4530:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE2:
4531:src/stm32f1xx_hal_tim.c ****     {
4532:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 2 (ETRF)*/
4533:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(htim->Instance));
4534:src/stm32f1xx_hal_tim.c **** 
4535:src/stm32f1xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
4536:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
4537:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4538:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4539:src/stm32f1xx_hal_tim.c **** 
4540:src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Clock source */
ARM GAS  /tmp/ccTsJCXT.s 			page 82


4541:src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
4542:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
4543:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
4544:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
4545:src/stm32f1xx_hal_tim.c ****       /* Enable the External clock mode2 */
4546:src/stm32f1xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
4547:src/stm32f1xx_hal_tim.c ****       break;
4548:src/stm32f1xx_hal_tim.c ****     }
4549:src/stm32f1xx_hal_tim.c **** 
4550:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1:
4551:src/stm32f1xx_hal_tim.c ****     {
4552:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4553:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4554:src/stm32f1xx_hal_tim.c **** 
4555:src/stm32f1xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
4556:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4557:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4558:src/stm32f1xx_hal_tim.c **** 
4559:src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
4560:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4561:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4562:src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
4563:src/stm32f1xx_hal_tim.c ****       break;
4564:src/stm32f1xx_hal_tim.c ****     }
4565:src/stm32f1xx_hal_tim.c **** 
4566:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI2:
4567:src/stm32f1xx_hal_tim.c ****     {
4568:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 (ETRF)*/
4569:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4570:src/stm32f1xx_hal_tim.c **** 
4571:src/stm32f1xx_hal_tim.c ****       /* Check TI2 input conditioning related parameters */
4572:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4573:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4574:src/stm32f1xx_hal_tim.c **** 
4575:src/stm32f1xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
4576:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4577:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4578:src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
4579:src/stm32f1xx_hal_tim.c ****       break;
4580:src/stm32f1xx_hal_tim.c ****     }
4581:src/stm32f1xx_hal_tim.c **** 
4582:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1ED:
4583:src/stm32f1xx_hal_tim.c ****     {
4584:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4585:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4586:src/stm32f1xx_hal_tim.c **** 
4587:src/stm32f1xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
4588:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4589:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4590:src/stm32f1xx_hal_tim.c **** 
4591:src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
4592:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4593:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4594:src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
4595:src/stm32f1xx_hal_tim.c ****       break;
4596:src/stm32f1xx_hal_tim.c ****     }
4597:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 83


4598:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR0:
4599:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR1:
4600:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR2:
4601:src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR3:
4602:src/stm32f1xx_hal_tim.c ****     {
4603:src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports internal trigger input */
4604:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4605:src/stm32f1xx_hal_tim.c **** 
4606:src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
4607:src/stm32f1xx_hal_tim.c ****       break;
4608:src/stm32f1xx_hal_tim.c ****     }
4609:src/stm32f1xx_hal_tim.c **** 
4610:src/stm32f1xx_hal_tim.c ****     default:
4611:src/stm32f1xx_hal_tim.c ****       break;
4612:src/stm32f1xx_hal_tim.c ****   }
4613:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4614:src/stm32f1xx_hal_tim.c **** 
4615:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4616:src/stm32f1xx_hal_tim.c **** 
4617:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4618:src/stm32f1xx_hal_tim.c **** }
4619:src/stm32f1xx_hal_tim.c **** 
4620:src/stm32f1xx_hal_tim.c **** /**
4621:src/stm32f1xx_hal_tim.c ****   * @brief  Selects the signal connected to the TI1 input: direct from CH1_input
4622:src/stm32f1xx_hal_tim.c ****   *         or a XOR combination between CH1_input, CH2_input & CH3_input
4623:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
4624:src/stm32f1xx_hal_tim.c ****   * @param  TI1_Selection Indicate whether or not channel 1 is connected to the
4625:src/stm32f1xx_hal_tim.c ****   *         output of a XOR gate.
4626:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4627:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_CH1: The TIMx_CH1 pin is connected to TI1 input
4628:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_XORCOMBINATION: The TIMx_CH1, CH2 and CH3
4629:src/stm32f1xx_hal_tim.c ****   *            pins are connected to the TI1 input (XOR combination)
4630:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4631:src/stm32f1xx_hal_tim.c ****   */
4632:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigTI1Input(TIM_HandleTypeDef *htim, uint32_t TI1_Selection)
4633:src/stm32f1xx_hal_tim.c **** {
4634:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
4635:src/stm32f1xx_hal_tim.c **** 
4636:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4637:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
4638:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TI1SELECTION(TI1_Selection));
4639:src/stm32f1xx_hal_tim.c **** 
4640:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4641:src/stm32f1xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
4642:src/stm32f1xx_hal_tim.c **** 
4643:src/stm32f1xx_hal_tim.c ****   /* Reset the TI1 selection */
4644:src/stm32f1xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
4645:src/stm32f1xx_hal_tim.c **** 
4646:src/stm32f1xx_hal_tim.c ****   /* Set the TI1 selection */
4647:src/stm32f1xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
4648:src/stm32f1xx_hal_tim.c **** 
4649:src/stm32f1xx_hal_tim.c ****   /* Write to TIMxCR2 */
4650:src/stm32f1xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
4651:src/stm32f1xx_hal_tim.c **** 
4652:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4653:src/stm32f1xx_hal_tim.c **** }
4654:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 84


4655:src/stm32f1xx_hal_tim.c **** /**
4656:src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode
4657:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
4658:src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
4659:src/stm32f1xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4660:src/stm32f1xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
4661:src/stm32f1xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
4662:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4663:src/stm32f1xx_hal_tim.c ****   */
4664:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro(TIM_HandleTypeDef *htim, TIM_SlaveConfigTypeDef *sSlav
4665:src/stm32f1xx_hal_tim.c **** {
4666:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4667:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4668:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4669:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4670:src/stm32f1xx_hal_tim.c **** 
4671:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
4672:src/stm32f1xx_hal_tim.c **** 
4673:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4674:src/stm32f1xx_hal_tim.c **** 
4675:src/stm32f1xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
4676:src/stm32f1xx_hal_tim.c ****   {
4677:src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
4678:src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
4679:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
4680:src/stm32f1xx_hal_tim.c ****   }
4681:src/stm32f1xx_hal_tim.c **** 
4682:src/stm32f1xx_hal_tim.c ****   /* Disable Trigger Interrupt */
4683:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
4684:src/stm32f1xx_hal_tim.c **** 
4685:src/stm32f1xx_hal_tim.c ****   /* Disable Trigger DMA request */
4686:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4687:src/stm32f1xx_hal_tim.c **** 
4688:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4689:src/stm32f1xx_hal_tim.c **** 
4690:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4691:src/stm32f1xx_hal_tim.c **** 
4692:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4693:src/stm32f1xx_hal_tim.c **** }
4694:src/stm32f1xx_hal_tim.c **** 
4695:src/stm32f1xx_hal_tim.c **** /**
4696:src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode in interrupt mode
4697:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
4698:src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
4699:src/stm32f1xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4700:src/stm32f1xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
4701:src/stm32f1xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
4702:src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4703:src/stm32f1xx_hal_tim.c ****   */
4704:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro_IT(TIM_HandleTypeDef *htim,
4705:src/stm32f1xx_hal_tim.c ****                                                 TIM_SlaveConfigTypeDef *sSlaveConfig)
4706:src/stm32f1xx_hal_tim.c **** {
4707:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4708:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4709:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4710:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4711:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 85


4712:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
4713:src/stm32f1xx_hal_tim.c **** 
4714:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4715:src/stm32f1xx_hal_tim.c **** 
4716:src/stm32f1xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
4717:src/stm32f1xx_hal_tim.c ****   {
4718:src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
4719:src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
4720:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
4721:src/stm32f1xx_hal_tim.c ****   }
4722:src/stm32f1xx_hal_tim.c **** 
4723:src/stm32f1xx_hal_tim.c ****   /* Enable Trigger Interrupt */
4724:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
4725:src/stm32f1xx_hal_tim.c **** 
4726:src/stm32f1xx_hal_tim.c ****   /* Disable Trigger DMA request */
4727:src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4728:src/stm32f1xx_hal_tim.c **** 
4729:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4730:src/stm32f1xx_hal_tim.c **** 
4731:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4732:src/stm32f1xx_hal_tim.c **** 
4733:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
4734:src/stm32f1xx_hal_tim.c **** }
4735:src/stm32f1xx_hal_tim.c **** 
4736:src/stm32f1xx_hal_tim.c **** /**
4737:src/stm32f1xx_hal_tim.c ****   * @brief  Read the captured value from Capture Compare unit
4738:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
4739:src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
4740:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4741:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4742:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4743:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4744:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4745:src/stm32f1xx_hal_tim.c ****   * @retval Captured value
4746:src/stm32f1xx_hal_tim.c ****   */
4747:src/stm32f1xx_hal_tim.c **** uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
4748:src/stm32f1xx_hal_tim.c **** {
4749:src/stm32f1xx_hal_tim.c ****   uint32_t tmpreg = 0U;
4750:src/stm32f1xx_hal_tim.c **** 
4751:src/stm32f1xx_hal_tim.c ****   switch (Channel)
4752:src/stm32f1xx_hal_tim.c ****   {
4753:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
4754:src/stm32f1xx_hal_tim.c ****     {
4755:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4756:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4757:src/stm32f1xx_hal_tim.c **** 
4758:src/stm32f1xx_hal_tim.c ****       /* Return the capture 1 value */
4759:src/stm32f1xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
4760:src/stm32f1xx_hal_tim.c **** 
4761:src/stm32f1xx_hal_tim.c ****       break;
4762:src/stm32f1xx_hal_tim.c ****     }
4763:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
4764:src/stm32f1xx_hal_tim.c ****     {
4765:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4766:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4767:src/stm32f1xx_hal_tim.c **** 
4768:src/stm32f1xx_hal_tim.c ****       /* Return the capture 2 value */
ARM GAS  /tmp/ccTsJCXT.s 			page 86


4769:src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
4770:src/stm32f1xx_hal_tim.c **** 
4771:src/stm32f1xx_hal_tim.c ****       break;
4772:src/stm32f1xx_hal_tim.c ****     }
4773:src/stm32f1xx_hal_tim.c **** 
4774:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
4775:src/stm32f1xx_hal_tim.c ****     {
4776:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4777:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4778:src/stm32f1xx_hal_tim.c **** 
4779:src/stm32f1xx_hal_tim.c ****       /* Return the capture 3 value */
4780:src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
4781:src/stm32f1xx_hal_tim.c **** 
4782:src/stm32f1xx_hal_tim.c ****       break;
4783:src/stm32f1xx_hal_tim.c ****     }
4784:src/stm32f1xx_hal_tim.c **** 
4785:src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
4786:src/stm32f1xx_hal_tim.c ****     {
4787:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4788:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4789:src/stm32f1xx_hal_tim.c **** 
4790:src/stm32f1xx_hal_tim.c ****       /* Return the capture 4 value */
4791:src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
4792:src/stm32f1xx_hal_tim.c **** 
4793:src/stm32f1xx_hal_tim.c ****       break;
4794:src/stm32f1xx_hal_tim.c ****     }
4795:src/stm32f1xx_hal_tim.c **** 
4796:src/stm32f1xx_hal_tim.c ****     default:
4797:src/stm32f1xx_hal_tim.c ****       break;
4798:src/stm32f1xx_hal_tim.c ****   }
4799:src/stm32f1xx_hal_tim.c **** 
4800:src/stm32f1xx_hal_tim.c ****   return tmpreg;
4801:src/stm32f1xx_hal_tim.c **** }
4802:src/stm32f1xx_hal_tim.c **** 
4803:src/stm32f1xx_hal_tim.c **** /**
4804:src/stm32f1xx_hal_tim.c ****   * @}
4805:src/stm32f1xx_hal_tim.c ****   */
4806:src/stm32f1xx_hal_tim.c **** 
4807:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group9 TIM Callbacks functions
4808:src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Callbacks functions
4809:src/stm32f1xx_hal_tim.c ****   *
4810:src/stm32f1xx_hal_tim.c **** @verbatim
4811:src/stm32f1xx_hal_tim.c ****   ==============================================================================
4812:src/stm32f1xx_hal_tim.c ****                         ##### TIM Callbacks functions #####
4813:src/stm32f1xx_hal_tim.c ****   ==============================================================================
4814:src/stm32f1xx_hal_tim.c ****  [..]
4815:src/stm32f1xx_hal_tim.c ****    This section provides TIM callback functions:
4816:src/stm32f1xx_hal_tim.c ****    (+) TIM Period elapsed callback
4817:src/stm32f1xx_hal_tim.c ****    (+) TIM Output Compare callback
4818:src/stm32f1xx_hal_tim.c ****    (+) TIM Input capture callback
4819:src/stm32f1xx_hal_tim.c ****    (+) TIM Trigger callback
4820:src/stm32f1xx_hal_tim.c ****    (+) TIM Error callback
4821:src/stm32f1xx_hal_tim.c **** 
4822:src/stm32f1xx_hal_tim.c **** @endverbatim
4823:src/stm32f1xx_hal_tim.c ****   * @{
4824:src/stm32f1xx_hal_tim.c ****   */
4825:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 87


4826:src/stm32f1xx_hal_tim.c **** /**
4827:src/stm32f1xx_hal_tim.c ****   * @brief  Period elapsed callback in non-blocking mode
4828:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4829:src/stm32f1xx_hal_tim.c ****   * @retval None
4830:src/stm32f1xx_hal_tim.c ****   */
4831:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
4832:src/stm32f1xx_hal_tim.c **** {
4833:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4834:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4835:src/stm32f1xx_hal_tim.c **** 
4836:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4837:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
4838:src/stm32f1xx_hal_tim.c ****    */
4839:src/stm32f1xx_hal_tim.c **** }
4840:src/stm32f1xx_hal_tim.c **** 
4841:src/stm32f1xx_hal_tim.c **** /**
4842:src/stm32f1xx_hal_tim.c ****   * @brief  Period elapsed half complete callback in non-blocking mode
4843:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4844:src/stm32f1xx_hal_tim.c ****   * @retval None
4845:src/stm32f1xx_hal_tim.c ****   */
4846:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedHalfCpltCallback(TIM_HandleTypeDef *htim)
4847:src/stm32f1xx_hal_tim.c **** {
4848:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4849:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4850:src/stm32f1xx_hal_tim.c **** 
4851:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4852:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedHalfCpltCallback could be implemented in the user file
4853:src/stm32f1xx_hal_tim.c ****    */
4854:src/stm32f1xx_hal_tim.c **** }
4855:src/stm32f1xx_hal_tim.c **** 
4856:src/stm32f1xx_hal_tim.c **** /**
4857:src/stm32f1xx_hal_tim.c ****   * @brief  Output Compare callback in non-blocking mode
4858:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM OC handle
4859:src/stm32f1xx_hal_tim.c ****   * @retval None
4860:src/stm32f1xx_hal_tim.c ****   */
4861:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
4862:src/stm32f1xx_hal_tim.c **** {
4863:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4864:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4865:src/stm32f1xx_hal_tim.c **** 
4866:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4867:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
4868:src/stm32f1xx_hal_tim.c ****    */
4869:src/stm32f1xx_hal_tim.c **** }
4870:src/stm32f1xx_hal_tim.c **** 
4871:src/stm32f1xx_hal_tim.c **** /**
4872:src/stm32f1xx_hal_tim.c ****   * @brief  Input Capture callback in non-blocking mode
4873:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
4874:src/stm32f1xx_hal_tim.c ****   * @retval None
4875:src/stm32f1xx_hal_tim.c ****   */
4876:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
4877:src/stm32f1xx_hal_tim.c **** {
4878:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4879:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4880:src/stm32f1xx_hal_tim.c **** 
4881:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4882:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_CaptureCallback could be implemented in the user file
ARM GAS  /tmp/ccTsJCXT.s 			page 88


4883:src/stm32f1xx_hal_tim.c ****    */
4884:src/stm32f1xx_hal_tim.c **** }
4885:src/stm32f1xx_hal_tim.c **** 
4886:src/stm32f1xx_hal_tim.c **** /**
4887:src/stm32f1xx_hal_tim.c ****   * @brief  Input Capture half complete callback in non-blocking mode
4888:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
4889:src/stm32f1xx_hal_tim.c ****   * @retval None
4890:src/stm32f1xx_hal_tim.c ****   */
4891:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureHalfCpltCallback(TIM_HandleTypeDef *htim)
4892:src/stm32f1xx_hal_tim.c **** {
4893:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4894:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4895:src/stm32f1xx_hal_tim.c **** 
4896:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4897:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_CaptureHalfCpltCallback could be implemented in the user file
4898:src/stm32f1xx_hal_tim.c ****    */
4899:src/stm32f1xx_hal_tim.c **** }
4900:src/stm32f1xx_hal_tim.c **** 
4901:src/stm32f1xx_hal_tim.c **** /**
4902:src/stm32f1xx_hal_tim.c ****   * @brief  PWM Pulse finished callback in non-blocking mode
4903:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4904:src/stm32f1xx_hal_tim.c ****   * @retval None
4905:src/stm32f1xx_hal_tim.c ****   */
4906:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
4907:src/stm32f1xx_hal_tim.c **** {
4908:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4909:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4910:src/stm32f1xx_hal_tim.c **** 
4911:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4912:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
4913:src/stm32f1xx_hal_tim.c ****    */
4914:src/stm32f1xx_hal_tim.c **** }
4915:src/stm32f1xx_hal_tim.c **** 
4916:src/stm32f1xx_hal_tim.c **** /**
4917:src/stm32f1xx_hal_tim.c ****   * @brief  PWM Pulse finished half complete callback in non-blocking mode
4918:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4919:src/stm32f1xx_hal_tim.c ****   * @retval None
4920:src/stm32f1xx_hal_tim.c ****   */
4921:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedHalfCpltCallback(TIM_HandleTypeDef *htim)
4922:src/stm32f1xx_hal_tim.c **** {
4923:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4924:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4925:src/stm32f1xx_hal_tim.c **** 
4926:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4927:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedHalfCpltCallback could be implemented in the user file
4928:src/stm32f1xx_hal_tim.c ****    */
4929:src/stm32f1xx_hal_tim.c **** }
4930:src/stm32f1xx_hal_tim.c **** 
4931:src/stm32f1xx_hal_tim.c **** /**
4932:src/stm32f1xx_hal_tim.c ****   * @brief  Hall Trigger detection callback in non-blocking mode
4933:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4934:src/stm32f1xx_hal_tim.c ****   * @retval None
4935:src/stm32f1xx_hal_tim.c ****   */
4936:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
4937:src/stm32f1xx_hal_tim.c **** {
4938:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4939:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
ARM GAS  /tmp/ccTsJCXT.s 			page 89


4940:src/stm32f1xx_hal_tim.c **** 
4941:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4942:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_TriggerCallback could be implemented in the user file
4943:src/stm32f1xx_hal_tim.c ****    */
4944:src/stm32f1xx_hal_tim.c **** }
4945:src/stm32f1xx_hal_tim.c **** 
4946:src/stm32f1xx_hal_tim.c **** /**
4947:src/stm32f1xx_hal_tim.c ****   * @brief  Hall Trigger detection half complete callback in non-blocking mode
4948:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4949:src/stm32f1xx_hal_tim.c ****   * @retval None
4950:src/stm32f1xx_hal_tim.c ****   */
4951:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_TriggerHalfCpltCallback(TIM_HandleTypeDef *htim)
4952:src/stm32f1xx_hal_tim.c **** {
4953:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4954:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4955:src/stm32f1xx_hal_tim.c **** 
4956:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4957:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_TriggerHalfCpltCallback could be implemented in the user file
4958:src/stm32f1xx_hal_tim.c ****    */
4959:src/stm32f1xx_hal_tim.c **** }
4960:src/stm32f1xx_hal_tim.c **** 
4961:src/stm32f1xx_hal_tim.c **** /**
4962:src/stm32f1xx_hal_tim.c ****   * @brief  Timer error callback in non-blocking mode
4963:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4964:src/stm32f1xx_hal_tim.c ****   * @retval None
4965:src/stm32f1xx_hal_tim.c ****   */
4966:src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
4967:src/stm32f1xx_hal_tim.c **** {
4968:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4969:src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
4970:src/stm32f1xx_hal_tim.c **** 
4971:src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4972:src/stm32f1xx_hal_tim.c ****             the HAL_TIM_ErrorCallback could be implemented in the user file
4973:src/stm32f1xx_hal_tim.c ****    */
4974:src/stm32f1xx_hal_tim.c **** }
4975:src/stm32f1xx_hal_tim.c **** 
4976:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
4977:src/stm32f1xx_hal_tim.c **** /**
4978:src/stm32f1xx_hal_tim.c ****   * @brief  Register a User TIM callback to be used instead of the weak predefined callback
4979:src/stm32f1xx_hal_tim.c ****   * @param htim tim handle
4980:src/stm32f1xx_hal_tim.c ****   * @param CallbackID ID of the callback to be registered
4981:src/stm32f1xx_hal_tim.c ****   *        This parameter can be one of the following values:
4982:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
4983:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
4984:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
4985:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
4986:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
4987:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
4988:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
4989:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
4990:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
4991:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
4992:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
4993:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
4994:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
4995:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
4996:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
ARM GAS  /tmp/ccTsJCXT.s 			page 90


4997:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
4998:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
4999:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
5000:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
5001:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
5002:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
5003:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
5004:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
5005:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
5006:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
5007:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
5008:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
5009:src/stm32f1xx_hal_tim.c ****   *          @param pCallback pointer to the callback function
5010:src/stm32f1xx_hal_tim.c ****   *          @retval status
5011:src/stm32f1xx_hal_tim.c ****   */
5012:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_RegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Callb
5013:src/stm32f1xx_hal_tim.c ****                                            pTIM_CallbackTypeDef pCallback)
5014:src/stm32f1xx_hal_tim.c **** {
5015:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5016:src/stm32f1xx_hal_tim.c **** 
5017:src/stm32f1xx_hal_tim.c ****   if (pCallback == NULL)
5018:src/stm32f1xx_hal_tim.c ****   {
5019:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
5020:src/stm32f1xx_hal_tim.c ****   }
5021:src/stm32f1xx_hal_tim.c ****   /* Process locked */
5022:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
5023:src/stm32f1xx_hal_tim.c **** 
5024:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
5025:src/stm32f1xx_hal_tim.c ****   {
5026:src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5027:src/stm32f1xx_hal_tim.c ****     {
5028:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5029:src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback                 = pCallback;
5030:src/stm32f1xx_hal_tim.c ****         break;
5031:src/stm32f1xx_hal_tim.c **** 
5032:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5033:src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback               = pCallback;
5034:src/stm32f1xx_hal_tim.c ****         break;
5035:src/stm32f1xx_hal_tim.c **** 
5036:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5037:src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback                   = pCallback;
5038:src/stm32f1xx_hal_tim.c ****         break;
5039:src/stm32f1xx_hal_tim.c **** 
5040:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5041:src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback                 = pCallback;
5042:src/stm32f1xx_hal_tim.c ****         break;
5043:src/stm32f1xx_hal_tim.c **** 
5044:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5045:src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback                   = pCallback;
5046:src/stm32f1xx_hal_tim.c ****         break;
5047:src/stm32f1xx_hal_tim.c **** 
5048:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5049:src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback                 = pCallback;
5050:src/stm32f1xx_hal_tim.c ****         break;
5051:src/stm32f1xx_hal_tim.c **** 
5052:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5053:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback                  = pCallback;
ARM GAS  /tmp/ccTsJCXT.s 			page 91


5054:src/stm32f1xx_hal_tim.c ****         break;
5055:src/stm32f1xx_hal_tim.c **** 
5056:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5057:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback                = pCallback;
5058:src/stm32f1xx_hal_tim.c ****         break;
5059:src/stm32f1xx_hal_tim.c **** 
5060:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5061:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback             = pCallback;
5062:src/stm32f1xx_hal_tim.c ****         break;
5063:src/stm32f1xx_hal_tim.c **** 
5064:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5065:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback           = pCallback;
5066:src/stm32f1xx_hal_tim.c ****         break;
5067:src/stm32f1xx_hal_tim.c **** 
5068:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5069:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback              = pCallback;
5070:src/stm32f1xx_hal_tim.c ****         break;
5071:src/stm32f1xx_hal_tim.c **** 
5072:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5073:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback            = pCallback;
5074:src/stm32f1xx_hal_tim.c ****         break;
5075:src/stm32f1xx_hal_tim.c **** 
5076:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5077:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback           = pCallback;
5078:src/stm32f1xx_hal_tim.c ****         break;
5079:src/stm32f1xx_hal_tim.c **** 
5080:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5081:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback         = pCallback;
5082:src/stm32f1xx_hal_tim.c ****         break;
5083:src/stm32f1xx_hal_tim.c **** 
5084:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
5085:src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedCallback                = pCallback;
5086:src/stm32f1xx_hal_tim.c ****         break;
5087:src/stm32f1xx_hal_tim.c **** 
5088:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
5089:src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback        = pCallback;
5090:src/stm32f1xx_hal_tim.c ****         break;
5091:src/stm32f1xx_hal_tim.c **** 
5092:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
5093:src/stm32f1xx_hal_tim.c ****         htim->TriggerCallback                      = pCallback;
5094:src/stm32f1xx_hal_tim.c ****         break;
5095:src/stm32f1xx_hal_tim.c **** 
5096:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
5097:src/stm32f1xx_hal_tim.c ****         htim->TriggerHalfCpltCallback              = pCallback;
5098:src/stm32f1xx_hal_tim.c ****         break;
5099:src/stm32f1xx_hal_tim.c **** 
5100:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
5101:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback                   = pCallback;
5102:src/stm32f1xx_hal_tim.c ****         break;
5103:src/stm32f1xx_hal_tim.c **** 
5104:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
5105:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback           = pCallback;
5106:src/stm32f1xx_hal_tim.c ****         break;
5107:src/stm32f1xx_hal_tim.c **** 
5108:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
5109:src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback              = pCallback;
5110:src/stm32f1xx_hal_tim.c ****         break;
ARM GAS  /tmp/ccTsJCXT.s 			page 92


5111:src/stm32f1xx_hal_tim.c **** 
5112:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
5113:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback            = pCallback;
5114:src/stm32f1xx_hal_tim.c ****         break;
5115:src/stm32f1xx_hal_tim.c **** 
5116:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
5117:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback    = pCallback;
5118:src/stm32f1xx_hal_tim.c ****         break;
5119:src/stm32f1xx_hal_tim.c **** 
5120:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
5121:src/stm32f1xx_hal_tim.c ****         htim->ErrorCallback                        = pCallback;
5122:src/stm32f1xx_hal_tim.c ****         break;
5123:src/stm32f1xx_hal_tim.c **** 
5124:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
5125:src/stm32f1xx_hal_tim.c ****         htim->CommutationCallback                  = pCallback;
5126:src/stm32f1xx_hal_tim.c ****         break;
5127:src/stm32f1xx_hal_tim.c **** 
5128:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
5129:src/stm32f1xx_hal_tim.c ****         htim->CommutationHalfCpltCallback          = pCallback;
5130:src/stm32f1xx_hal_tim.c ****         break;
5131:src/stm32f1xx_hal_tim.c **** 
5132:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
5133:src/stm32f1xx_hal_tim.c ****         htim->BreakCallback                        = pCallback;
5134:src/stm32f1xx_hal_tim.c ****         break;
5135:src/stm32f1xx_hal_tim.c **** 
5136:src/stm32f1xx_hal_tim.c ****       default :
5137:src/stm32f1xx_hal_tim.c ****         /* Return error status */
5138:src/stm32f1xx_hal_tim.c ****         status =  HAL_ERROR;
5139:src/stm32f1xx_hal_tim.c ****         break;
5140:src/stm32f1xx_hal_tim.c ****     }
5141:src/stm32f1xx_hal_tim.c ****   }
5142:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
5143:src/stm32f1xx_hal_tim.c ****   {
5144:src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5145:src/stm32f1xx_hal_tim.c ****     {
5146:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5147:src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback         = pCallback;
5148:src/stm32f1xx_hal_tim.c ****         break;
5149:src/stm32f1xx_hal_tim.c **** 
5150:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5151:src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = pCallback;
5152:src/stm32f1xx_hal_tim.c ****         break;
5153:src/stm32f1xx_hal_tim.c **** 
5154:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5155:src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback           = pCallback;
5156:src/stm32f1xx_hal_tim.c ****         break;
5157:src/stm32f1xx_hal_tim.c **** 
5158:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5159:src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = pCallback;
5160:src/stm32f1xx_hal_tim.c ****         break;
5161:src/stm32f1xx_hal_tim.c **** 
5162:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5163:src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback           = pCallback;
5164:src/stm32f1xx_hal_tim.c ****         break;
5165:src/stm32f1xx_hal_tim.c **** 
5166:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5167:src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = pCallback;
ARM GAS  /tmp/ccTsJCXT.s 			page 93


5168:src/stm32f1xx_hal_tim.c ****         break;
5169:src/stm32f1xx_hal_tim.c **** 
5170:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5171:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback          = pCallback;
5172:src/stm32f1xx_hal_tim.c ****         break;
5173:src/stm32f1xx_hal_tim.c **** 
5174:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5175:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = pCallback;
5176:src/stm32f1xx_hal_tim.c ****         break;
5177:src/stm32f1xx_hal_tim.c **** 
5178:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5179:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = pCallback;
5180:src/stm32f1xx_hal_tim.c ****         break;
5181:src/stm32f1xx_hal_tim.c **** 
5182:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5183:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = pCallback;
5184:src/stm32f1xx_hal_tim.c ****         break;
5185:src/stm32f1xx_hal_tim.c **** 
5186:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5187:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = pCallback;
5188:src/stm32f1xx_hal_tim.c ****         break;
5189:src/stm32f1xx_hal_tim.c **** 
5190:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5191:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = pCallback;
5192:src/stm32f1xx_hal_tim.c ****         break;
5193:src/stm32f1xx_hal_tim.c **** 
5194:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5195:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = pCallback;
5196:src/stm32f1xx_hal_tim.c ****         break;
5197:src/stm32f1xx_hal_tim.c **** 
5198:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5199:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = pCallback;
5200:src/stm32f1xx_hal_tim.c ****         break;
5201:src/stm32f1xx_hal_tim.c **** 
5202:src/stm32f1xx_hal_tim.c ****       default :
5203:src/stm32f1xx_hal_tim.c ****         /* Return error status */
5204:src/stm32f1xx_hal_tim.c ****         status =  HAL_ERROR;
5205:src/stm32f1xx_hal_tim.c ****         break;
5206:src/stm32f1xx_hal_tim.c ****     }
5207:src/stm32f1xx_hal_tim.c ****   }
5208:src/stm32f1xx_hal_tim.c ****   else
5209:src/stm32f1xx_hal_tim.c ****   {
5210:src/stm32f1xx_hal_tim.c ****     /* Return error status */
5211:src/stm32f1xx_hal_tim.c ****     status =  HAL_ERROR;
5212:src/stm32f1xx_hal_tim.c ****   }
5213:src/stm32f1xx_hal_tim.c **** 
5214:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
5215:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5216:src/stm32f1xx_hal_tim.c **** 
5217:src/stm32f1xx_hal_tim.c ****   return status;
5218:src/stm32f1xx_hal_tim.c **** }
5219:src/stm32f1xx_hal_tim.c **** 
5220:src/stm32f1xx_hal_tim.c **** /**
5221:src/stm32f1xx_hal_tim.c ****   * @brief  Unregister a TIM callback
5222:src/stm32f1xx_hal_tim.c ****   *         TIM callback is redirected to the weak predefined callback
5223:src/stm32f1xx_hal_tim.c ****   * @param htim tim handle
5224:src/stm32f1xx_hal_tim.c ****   * @param CallbackID ID of the callback to be unregistered
ARM GAS  /tmp/ccTsJCXT.s 			page 94


5225:src/stm32f1xx_hal_tim.c ****   *        This parameter can be one of the following values:
5226:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
5227:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
5228:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
5229:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
5230:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
5231:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
5232:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
5233:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
5234:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
5235:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
5236:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
5237:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
5238:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
5239:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
5240:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
5241:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
5242:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
5243:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
5244:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
5245:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
5246:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
5247:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
5248:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
5249:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
5250:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
5251:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
5252:src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
5253:src/stm32f1xx_hal_tim.c ****   *          @retval status
5254:src/stm32f1xx_hal_tim.c ****   */
5255:src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_UnRegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Cal
5256:src/stm32f1xx_hal_tim.c **** {
5257:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5258:src/stm32f1xx_hal_tim.c **** 
5259:src/stm32f1xx_hal_tim.c ****   /* Process locked */
5260:src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
5261:src/stm32f1xx_hal_tim.c **** 
5262:src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
5263:src/stm32f1xx_hal_tim.c ****   {
5264:src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5265:src/stm32f1xx_hal_tim.c ****     {
5266:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5267:src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback              = HAL_TIM_Base_MspInit;                      /* Leg
5268:src/stm32f1xx_hal_tim.c ****         break;
5269:src/stm32f1xx_hal_tim.c **** 
5270:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5271:src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback            = HAL_TIM_Base_MspDeInit;                    /* Leg
5272:src/stm32f1xx_hal_tim.c ****         break;
5273:src/stm32f1xx_hal_tim.c **** 
5274:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5275:src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback                = HAL_TIM_IC_MspInit;                        /* Leg
5276:src/stm32f1xx_hal_tim.c ****         break;
5277:src/stm32f1xx_hal_tim.c **** 
5278:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5279:src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback              = HAL_TIM_IC_MspDeInit;                      /* Leg
5280:src/stm32f1xx_hal_tim.c ****         break;
5281:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 95


5282:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5283:src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback                = HAL_TIM_OC_MspInit;                        /* Leg
5284:src/stm32f1xx_hal_tim.c ****         break;
5285:src/stm32f1xx_hal_tim.c **** 
5286:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5287:src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback              = HAL_TIM_OC_MspDeInit;                      /* Leg
5288:src/stm32f1xx_hal_tim.c ****         break;
5289:src/stm32f1xx_hal_tim.c **** 
5290:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5291:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback               = HAL_TIM_PWM_MspInit;                       /* Leg
5292:src/stm32f1xx_hal_tim.c ****         break;
5293:src/stm32f1xx_hal_tim.c **** 
5294:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5295:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback             = HAL_TIM_PWM_MspDeInit;                     /* Leg
5296:src/stm32f1xx_hal_tim.c ****         break;
5297:src/stm32f1xx_hal_tim.c **** 
5298:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5299:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback          = HAL_TIM_OnePulse_MspInit;                  /* Leg
5300:src/stm32f1xx_hal_tim.c ****         break;
5301:src/stm32f1xx_hal_tim.c **** 
5302:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5303:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback        = HAL_TIM_OnePulse_MspDeInit;                /* Leg
5304:src/stm32f1xx_hal_tim.c ****         break;
5305:src/stm32f1xx_hal_tim.c **** 
5306:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5307:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback           = HAL_TIM_Encoder_MspInit;                   /* Leg
5308:src/stm32f1xx_hal_tim.c ****         break;
5309:src/stm32f1xx_hal_tim.c **** 
5310:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5311:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback         = HAL_TIM_Encoder_MspDeInit;                 /* Leg
5312:src/stm32f1xx_hal_tim.c ****         break;
5313:src/stm32f1xx_hal_tim.c **** 
5314:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5315:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback        = HAL_TIMEx_HallSensor_MspInit;              /* Leg
5316:src/stm32f1xx_hal_tim.c ****         break;
5317:src/stm32f1xx_hal_tim.c **** 
5318:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5319:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback      = HAL_TIMEx_HallSensor_MspDeInit;            /* Leg
5320:src/stm32f1xx_hal_tim.c ****         break;
5321:src/stm32f1xx_hal_tim.c **** 
5322:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
5323:src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedCallback             = HAL_TIM_PeriodElapsedCallback;             /* Leg
5324:src/stm32f1xx_hal_tim.c ****         break;
5325:src/stm32f1xx_hal_tim.c **** 
5326:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
5327:src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback     = HAL_TIM_PeriodElapsedHalfCpltCallback;     /* Leg
5328:src/stm32f1xx_hal_tim.c ****         break;
5329:src/stm32f1xx_hal_tim.c **** 
5330:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
5331:src/stm32f1xx_hal_tim.c ****         htim->TriggerCallback                   = HAL_TIM_TriggerCallback;                   /* Leg
5332:src/stm32f1xx_hal_tim.c ****         break;
5333:src/stm32f1xx_hal_tim.c **** 
5334:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
5335:src/stm32f1xx_hal_tim.c ****         htim->TriggerHalfCpltCallback           = HAL_TIM_TriggerHalfCpltCallback;           /* Leg
5336:src/stm32f1xx_hal_tim.c ****         break;
5337:src/stm32f1xx_hal_tim.c **** 
5338:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
ARM GAS  /tmp/ccTsJCXT.s 			page 96


5339:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback                = HAL_TIM_IC_CaptureCallback;                /* Leg
5340:src/stm32f1xx_hal_tim.c ****         break;
5341:src/stm32f1xx_hal_tim.c **** 
5342:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
5343:src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback        = HAL_TIM_IC_CaptureHalfCpltCallback;        /* Leg
5344:src/stm32f1xx_hal_tim.c ****         break;
5345:src/stm32f1xx_hal_tim.c **** 
5346:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
5347:src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback           = HAL_TIM_OC_DelayElapsedCallback;           /* Leg
5348:src/stm32f1xx_hal_tim.c ****         break;
5349:src/stm32f1xx_hal_tim.c **** 
5350:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
5351:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback         = HAL_TIM_PWM_PulseFinishedCallback;         /* Leg
5352:src/stm32f1xx_hal_tim.c ****         break;
5353:src/stm32f1xx_hal_tim.c **** 
5354:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
5355:src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback = HAL_TIM_PWM_PulseFinishedHalfCpltCallback; /* Leg
5356:src/stm32f1xx_hal_tim.c ****         break;
5357:src/stm32f1xx_hal_tim.c **** 
5358:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
5359:src/stm32f1xx_hal_tim.c ****         htim->ErrorCallback                     = HAL_TIM_ErrorCallback;                     /* Leg
5360:src/stm32f1xx_hal_tim.c ****         break;
5361:src/stm32f1xx_hal_tim.c **** 
5362:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
5363:src/stm32f1xx_hal_tim.c ****         htim->CommutationCallback               = HAL_TIMEx_CommutCallback;                  /* Leg
5364:src/stm32f1xx_hal_tim.c ****         break;
5365:src/stm32f1xx_hal_tim.c **** 
5366:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
5367:src/stm32f1xx_hal_tim.c ****         htim->CommutationHalfCpltCallback       = HAL_TIMEx_CommutHalfCpltCallback;          /* Leg
5368:src/stm32f1xx_hal_tim.c ****         break;
5369:src/stm32f1xx_hal_tim.c **** 
5370:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
5371:src/stm32f1xx_hal_tim.c ****         htim->BreakCallback                     = HAL_TIMEx_BreakCallback;                   /* Leg
5372:src/stm32f1xx_hal_tim.c ****         break;
5373:src/stm32f1xx_hal_tim.c **** 
5374:src/stm32f1xx_hal_tim.c ****       default :
5375:src/stm32f1xx_hal_tim.c ****         /* Return error status */
5376:src/stm32f1xx_hal_tim.c ****         status =  HAL_ERROR;
5377:src/stm32f1xx_hal_tim.c ****         break;
5378:src/stm32f1xx_hal_tim.c ****     }
5379:src/stm32f1xx_hal_tim.c ****   }
5380:src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
5381:src/stm32f1xx_hal_tim.c ****   {
5382:src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5383:src/stm32f1xx_hal_tim.c ****     {
5384:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5385:src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback         = HAL_TIM_Base_MspInit;              /* Legacy weak Base
5386:src/stm32f1xx_hal_tim.c ****         break;
5387:src/stm32f1xx_hal_tim.c **** 
5388:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5389:src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = HAL_TIM_Base_MspDeInit;            /* Legacy weak Base
5390:src/stm32f1xx_hal_tim.c ****         break;
5391:src/stm32f1xx_hal_tim.c **** 
5392:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5393:src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback           = HAL_TIM_IC_MspInit;                /* Legacy weak IC M
5394:src/stm32f1xx_hal_tim.c ****         break;
5395:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 97


5396:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5397:src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = HAL_TIM_IC_MspDeInit;              /* Legacy weak IC M
5398:src/stm32f1xx_hal_tim.c ****         break;
5399:src/stm32f1xx_hal_tim.c **** 
5400:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5401:src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback           = HAL_TIM_OC_MspInit;                /* Legacy weak OC M
5402:src/stm32f1xx_hal_tim.c ****         break;
5403:src/stm32f1xx_hal_tim.c **** 
5404:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5405:src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = HAL_TIM_OC_MspDeInit;              /* Legacy weak OC M
5406:src/stm32f1xx_hal_tim.c ****         break;
5407:src/stm32f1xx_hal_tim.c **** 
5408:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5409:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback          = HAL_TIM_PWM_MspInit;               /* Legacy weak PWM 
5410:src/stm32f1xx_hal_tim.c ****         break;
5411:src/stm32f1xx_hal_tim.c **** 
5412:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5413:src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = HAL_TIM_PWM_MspDeInit;             /* Legacy weak PWM 
5414:src/stm32f1xx_hal_tim.c ****         break;
5415:src/stm32f1xx_hal_tim.c **** 
5416:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5417:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = HAL_TIM_OnePulse_MspInit;          /* Legacy weak One 
5418:src/stm32f1xx_hal_tim.c ****         break;
5419:src/stm32f1xx_hal_tim.c **** 
5420:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5421:src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = HAL_TIM_OnePulse_MspDeInit;        /* Legacy weak One 
5422:src/stm32f1xx_hal_tim.c ****         break;
5423:src/stm32f1xx_hal_tim.c **** 
5424:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5425:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = HAL_TIM_Encoder_MspInit;           /* Legacy weak Enco
5426:src/stm32f1xx_hal_tim.c ****         break;
5427:src/stm32f1xx_hal_tim.c **** 
5428:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5429:src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = HAL_TIM_Encoder_MspDeInit;         /* Legacy weak Enco
5430:src/stm32f1xx_hal_tim.c ****         break;
5431:src/stm32f1xx_hal_tim.c **** 
5432:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5433:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = HAL_TIMEx_HallSensor_MspInit;      /* Legacy weak Hall
5434:src/stm32f1xx_hal_tim.c ****         break;
5435:src/stm32f1xx_hal_tim.c **** 
5436:src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5437:src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = HAL_TIMEx_HallSensor_MspDeInit;    /* Legacy weak Hall
5438:src/stm32f1xx_hal_tim.c ****         break;
5439:src/stm32f1xx_hal_tim.c **** 
5440:src/stm32f1xx_hal_tim.c ****       default :
5441:src/stm32f1xx_hal_tim.c ****         /* Return error status */
5442:src/stm32f1xx_hal_tim.c ****         status =  HAL_ERROR;
5443:src/stm32f1xx_hal_tim.c ****         break;
5444:src/stm32f1xx_hal_tim.c ****     }
5445:src/stm32f1xx_hal_tim.c ****   }
5446:src/stm32f1xx_hal_tim.c ****   else
5447:src/stm32f1xx_hal_tim.c ****   {
5448:src/stm32f1xx_hal_tim.c ****     /* Return error status */
5449:src/stm32f1xx_hal_tim.c ****     status =  HAL_ERROR;
5450:src/stm32f1xx_hal_tim.c ****   }
5451:src/stm32f1xx_hal_tim.c **** 
5452:src/stm32f1xx_hal_tim.c ****   /* Release Lock */
ARM GAS  /tmp/ccTsJCXT.s 			page 98


5453:src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5454:src/stm32f1xx_hal_tim.c **** 
5455:src/stm32f1xx_hal_tim.c ****   return status;
5456:src/stm32f1xx_hal_tim.c **** }
5457:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5458:src/stm32f1xx_hal_tim.c **** 
5459:src/stm32f1xx_hal_tim.c **** /**
5460:src/stm32f1xx_hal_tim.c ****   * @}
5461:src/stm32f1xx_hal_tim.c ****   */
5462:src/stm32f1xx_hal_tim.c **** 
5463:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group10 TIM Peripheral State functions
5464:src/stm32f1xx_hal_tim.c ****   *  @brief   TIM Peripheral State functions
5465:src/stm32f1xx_hal_tim.c ****   *
5466:src/stm32f1xx_hal_tim.c **** @verbatim
5467:src/stm32f1xx_hal_tim.c ****   ==============================================================================
5468:src/stm32f1xx_hal_tim.c ****                         ##### Peripheral State functions #####
5469:src/stm32f1xx_hal_tim.c ****   ==============================================================================
5470:src/stm32f1xx_hal_tim.c ****     [..]
5471:src/stm32f1xx_hal_tim.c ****     This subsection permits to get in run-time the status of the peripheral
5472:src/stm32f1xx_hal_tim.c ****     and the data flow.
5473:src/stm32f1xx_hal_tim.c **** 
5474:src/stm32f1xx_hal_tim.c **** @endverbatim
5475:src/stm32f1xx_hal_tim.c ****   * @{
5476:src/stm32f1xx_hal_tim.c ****   */
5477:src/stm32f1xx_hal_tim.c **** 
5478:src/stm32f1xx_hal_tim.c **** /**
5479:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Base handle state.
5480:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
5481:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5482:src/stm32f1xx_hal_tim.c ****   */
5483:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Base_GetState(TIM_HandleTypeDef *htim)
5484:src/stm32f1xx_hal_tim.c **** {
5485:src/stm32f1xx_hal_tim.c ****   return htim->State;
5486:src/stm32f1xx_hal_tim.c **** }
5487:src/stm32f1xx_hal_tim.c **** 
5488:src/stm32f1xx_hal_tim.c **** /**
5489:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM OC handle state.
5490:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
5491:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5492:src/stm32f1xx_hal_tim.c ****   */
5493:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OC_GetState(TIM_HandleTypeDef *htim)
5494:src/stm32f1xx_hal_tim.c **** {
5495:src/stm32f1xx_hal_tim.c ****   return htim->State;
5496:src/stm32f1xx_hal_tim.c **** }
5497:src/stm32f1xx_hal_tim.c **** 
5498:src/stm32f1xx_hal_tim.c **** /**
5499:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM PWM handle state.
5500:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5501:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5502:src/stm32f1xx_hal_tim.c ****   */
5503:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_PWM_GetState(TIM_HandleTypeDef *htim)
5504:src/stm32f1xx_hal_tim.c **** {
5505:src/stm32f1xx_hal_tim.c ****   return htim->State;
5506:src/stm32f1xx_hal_tim.c **** }
5507:src/stm32f1xx_hal_tim.c **** 
5508:src/stm32f1xx_hal_tim.c **** /**
5509:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Input Capture handle state.
ARM GAS  /tmp/ccTsJCXT.s 			page 99


5510:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
5511:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5512:src/stm32f1xx_hal_tim.c ****   */
5513:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_IC_GetState(TIM_HandleTypeDef *htim)
5514:src/stm32f1xx_hal_tim.c **** {
5515:src/stm32f1xx_hal_tim.c ****   return htim->State;
5516:src/stm32f1xx_hal_tim.c **** }
5517:src/stm32f1xx_hal_tim.c **** 
5518:src/stm32f1xx_hal_tim.c **** /**
5519:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM One Pulse Mode handle state.
5520:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM OPM handle
5521:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5522:src/stm32f1xx_hal_tim.c ****   */
5523:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OnePulse_GetState(TIM_HandleTypeDef *htim)
5524:src/stm32f1xx_hal_tim.c **** {
5525:src/stm32f1xx_hal_tim.c ****   return htim->State;
5526:src/stm32f1xx_hal_tim.c **** }
5527:src/stm32f1xx_hal_tim.c **** 
5528:src/stm32f1xx_hal_tim.c **** /**
5529:src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode handle state.
5530:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
5531:src/stm32f1xx_hal_tim.c ****   * @retval HAL state
5532:src/stm32f1xx_hal_tim.c ****   */
5533:src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Encoder_GetState(TIM_HandleTypeDef *htim)
5534:src/stm32f1xx_hal_tim.c **** {
5535:src/stm32f1xx_hal_tim.c ****   return htim->State;
5536:src/stm32f1xx_hal_tim.c **** }
5537:src/stm32f1xx_hal_tim.c **** 
5538:src/stm32f1xx_hal_tim.c **** /**
5539:src/stm32f1xx_hal_tim.c ****   * @}
5540:src/stm32f1xx_hal_tim.c ****   */
5541:src/stm32f1xx_hal_tim.c **** 
5542:src/stm32f1xx_hal_tim.c **** /**
5543:src/stm32f1xx_hal_tim.c ****   * @}
5544:src/stm32f1xx_hal_tim.c ****   */
5545:src/stm32f1xx_hal_tim.c **** 
5546:src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Private_Functions TIM Private Functions
5547:src/stm32f1xx_hal_tim.c ****   * @{
5548:src/stm32f1xx_hal_tim.c ****   */
5549:src/stm32f1xx_hal_tim.c **** 
5550:src/stm32f1xx_hal_tim.c **** /**
5551:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA error callback
5552:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5553:src/stm32f1xx_hal_tim.c ****   * @retval None
5554:src/stm32f1xx_hal_tim.c ****   */
5555:src/stm32f1xx_hal_tim.c **** void TIM_DMAError(DMA_HandleTypeDef *hdma)
5556:src/stm32f1xx_hal_tim.c **** {
5557:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5558:src/stm32f1xx_hal_tim.c **** 
5559:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5560:src/stm32f1xx_hal_tim.c **** 
5561:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5562:src/stm32f1xx_hal_tim.c ****   htim->ErrorCallback(htim);
5563:src/stm32f1xx_hal_tim.c **** #else
5564:src/stm32f1xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
5565:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5566:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 100


5567:src/stm32f1xx_hal_tim.c **** 
5568:src/stm32f1xx_hal_tim.c **** /**
5569:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse complete callback.
5570:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5571:src/stm32f1xx_hal_tim.c ****   * @retval None
5572:src/stm32f1xx_hal_tim.c ****   */
5573:src/stm32f1xx_hal_tim.c **** void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma)
5574:src/stm32f1xx_hal_tim.c **** {
5575:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5576:src/stm32f1xx_hal_tim.c **** 
5577:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5578:src/stm32f1xx_hal_tim.c **** 
5579:src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
5580:src/stm32f1xx_hal_tim.c ****   {
5581:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
5582:src/stm32f1xx_hal_tim.c ****   }
5583:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
5584:src/stm32f1xx_hal_tim.c ****   {
5585:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
5586:src/stm32f1xx_hal_tim.c ****   }
5587:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
5588:src/stm32f1xx_hal_tim.c ****   {
5589:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
5590:src/stm32f1xx_hal_tim.c ****   }
5591:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
5592:src/stm32f1xx_hal_tim.c ****   {
5593:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
5594:src/stm32f1xx_hal_tim.c ****   }
5595:src/stm32f1xx_hal_tim.c ****   else
5596:src/stm32f1xx_hal_tim.c ****   {
5597:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
5598:src/stm32f1xx_hal_tim.c ****   }
5599:src/stm32f1xx_hal_tim.c **** 
5600:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5601:src/stm32f1xx_hal_tim.c ****   htim->PWM_PulseFinishedCallback(htim);
5602:src/stm32f1xx_hal_tim.c **** #else
5603:src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
5604:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5605:src/stm32f1xx_hal_tim.c **** 
5606:src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
5607:src/stm32f1xx_hal_tim.c **** }
5608:src/stm32f1xx_hal_tim.c **** 
5609:src/stm32f1xx_hal_tim.c **** /**
5610:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse half complete callback.
5611:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5612:src/stm32f1xx_hal_tim.c ****   * @retval None
5613:src/stm32f1xx_hal_tim.c ****   */
5614:src/stm32f1xx_hal_tim.c **** void TIM_DMADelayPulseHalfCplt(DMA_HandleTypeDef *hdma)
5615:src/stm32f1xx_hal_tim.c **** {
5616:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5617:src/stm32f1xx_hal_tim.c **** 
5618:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5619:src/stm32f1xx_hal_tim.c **** 
5620:src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
5621:src/stm32f1xx_hal_tim.c ****   {
5622:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
5623:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 101


5624:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
5625:src/stm32f1xx_hal_tim.c ****   {
5626:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
5627:src/stm32f1xx_hal_tim.c ****   }
5628:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
5629:src/stm32f1xx_hal_tim.c ****   {
5630:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
5631:src/stm32f1xx_hal_tim.c ****   }
5632:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
5633:src/stm32f1xx_hal_tim.c ****   {
5634:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
5635:src/stm32f1xx_hal_tim.c ****   }
5636:src/stm32f1xx_hal_tim.c ****   else
5637:src/stm32f1xx_hal_tim.c ****   {
5638:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
5639:src/stm32f1xx_hal_tim.c ****   }
5640:src/stm32f1xx_hal_tim.c **** 
5641:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5642:src/stm32f1xx_hal_tim.c ****   htim->PWM_PulseFinishedHalfCpltCallback(htim);
5643:src/stm32f1xx_hal_tim.c **** #else
5644:src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
5645:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5646:src/stm32f1xx_hal_tim.c **** 
5647:src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
5648:src/stm32f1xx_hal_tim.c **** }
5649:src/stm32f1xx_hal_tim.c **** 
5650:src/stm32f1xx_hal_tim.c **** /**
5651:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Capture complete callback.
5652:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5653:src/stm32f1xx_hal_tim.c ****   * @retval None
5654:src/stm32f1xx_hal_tim.c ****   */
5655:src/stm32f1xx_hal_tim.c **** void TIM_DMACaptureCplt(DMA_HandleTypeDef *hdma)
5656:src/stm32f1xx_hal_tim.c **** {
5657:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5658:src/stm32f1xx_hal_tim.c **** 
5659:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5660:src/stm32f1xx_hal_tim.c **** 
5661:src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
5662:src/stm32f1xx_hal_tim.c ****   {
5663:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
5664:src/stm32f1xx_hal_tim.c ****   }
5665:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
5666:src/stm32f1xx_hal_tim.c ****   {
5667:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
5668:src/stm32f1xx_hal_tim.c ****   }
5669:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
5670:src/stm32f1xx_hal_tim.c ****   {
5671:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
5672:src/stm32f1xx_hal_tim.c ****   }
5673:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
5674:src/stm32f1xx_hal_tim.c ****   {
5675:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
5676:src/stm32f1xx_hal_tim.c ****   }
5677:src/stm32f1xx_hal_tim.c ****   else
5678:src/stm32f1xx_hal_tim.c ****   {
5679:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
5680:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 102


5681:src/stm32f1xx_hal_tim.c **** 
5682:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5683:src/stm32f1xx_hal_tim.c ****   htim->IC_CaptureCallback(htim);
5684:src/stm32f1xx_hal_tim.c **** #else
5685:src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim);
5686:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5687:src/stm32f1xx_hal_tim.c **** 
5688:src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
5689:src/stm32f1xx_hal_tim.c **** }
5690:src/stm32f1xx_hal_tim.c **** 
5691:src/stm32f1xx_hal_tim.c **** /**
5692:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Capture half complete callback.
5693:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5694:src/stm32f1xx_hal_tim.c ****   * @retval None
5695:src/stm32f1xx_hal_tim.c ****   */
5696:src/stm32f1xx_hal_tim.c **** void TIM_DMACaptureHalfCplt(DMA_HandleTypeDef *hdma)
5697:src/stm32f1xx_hal_tim.c **** {
5698:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5699:src/stm32f1xx_hal_tim.c **** 
5700:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5701:src/stm32f1xx_hal_tim.c **** 
5702:src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
5703:src/stm32f1xx_hal_tim.c ****   {
5704:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
5705:src/stm32f1xx_hal_tim.c ****   }
5706:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
5707:src/stm32f1xx_hal_tim.c ****   {
5708:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
5709:src/stm32f1xx_hal_tim.c ****   }
5710:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
5711:src/stm32f1xx_hal_tim.c ****   {
5712:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
5713:src/stm32f1xx_hal_tim.c ****   }
5714:src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
5715:src/stm32f1xx_hal_tim.c ****   {
5716:src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
5717:src/stm32f1xx_hal_tim.c ****   }
5718:src/stm32f1xx_hal_tim.c ****   else
5719:src/stm32f1xx_hal_tim.c ****   {
5720:src/stm32f1xx_hal_tim.c ****     /* nothing to do */
5721:src/stm32f1xx_hal_tim.c ****   }
5722:src/stm32f1xx_hal_tim.c **** 
5723:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5724:src/stm32f1xx_hal_tim.c ****   htim->IC_CaptureHalfCpltCallback(htim);
5725:src/stm32f1xx_hal_tim.c **** #else
5726:src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_CaptureHalfCpltCallback(htim);
5727:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5728:src/stm32f1xx_hal_tim.c **** 
5729:src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
5730:src/stm32f1xx_hal_tim.c **** }
5731:src/stm32f1xx_hal_tim.c **** 
5732:src/stm32f1xx_hal_tim.c **** /**
5733:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse complete callback.
5734:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5735:src/stm32f1xx_hal_tim.c ****   * @retval None
5736:src/stm32f1xx_hal_tim.c ****   */
5737:src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccTsJCXT.s 			page 103


5738:src/stm32f1xx_hal_tim.c **** {
5739:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5740:src/stm32f1xx_hal_tim.c **** 
5741:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5742:src/stm32f1xx_hal_tim.c **** 
5743:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5744:src/stm32f1xx_hal_tim.c ****   htim->PeriodElapsedCallback(htim);
5745:src/stm32f1xx_hal_tim.c **** #else
5746:src/stm32f1xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
5747:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5748:src/stm32f1xx_hal_tim.c **** }
5749:src/stm32f1xx_hal_tim.c **** 
5750:src/stm32f1xx_hal_tim.c **** /**
5751:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse half complete callback.
5752:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5753:src/stm32f1xx_hal_tim.c ****   * @retval None
5754:src/stm32f1xx_hal_tim.c ****   */
5755:src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma)
5756:src/stm32f1xx_hal_tim.c **** {
5757:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5758:src/stm32f1xx_hal_tim.c **** 
5759:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5760:src/stm32f1xx_hal_tim.c **** 
5761:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5762:src/stm32f1xx_hal_tim.c ****   htim->PeriodElapsedHalfCpltCallback(htim);
5763:src/stm32f1xx_hal_tim.c **** #else
5764:src/stm32f1xx_hal_tim.c ****   HAL_TIM_PeriodElapsedHalfCpltCallback(htim);
5765:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5766:src/stm32f1xx_hal_tim.c **** }
5767:src/stm32f1xx_hal_tim.c **** 
5768:src/stm32f1xx_hal_tim.c **** /**
5769:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Trigger callback.
5770:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5771:src/stm32f1xx_hal_tim.c ****   * @retval None
5772:src/stm32f1xx_hal_tim.c ****   */
5773:src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma)
5774:src/stm32f1xx_hal_tim.c **** {
5775:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5776:src/stm32f1xx_hal_tim.c **** 
5777:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5778:src/stm32f1xx_hal_tim.c **** 
5779:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5780:src/stm32f1xx_hal_tim.c ****   htim->TriggerCallback(htim);
5781:src/stm32f1xx_hal_tim.c **** #else
5782:src/stm32f1xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
5783:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5784:src/stm32f1xx_hal_tim.c **** }
5785:src/stm32f1xx_hal_tim.c **** 
5786:src/stm32f1xx_hal_tim.c **** /**
5787:src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Trigger half complete callback.
5788:src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
5789:src/stm32f1xx_hal_tim.c ****   * @retval None
5790:src/stm32f1xx_hal_tim.c ****   */
5791:src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma)
5792:src/stm32f1xx_hal_tim.c **** {
5793:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
5794:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 104


5795:src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5796:src/stm32f1xx_hal_tim.c **** 
5797:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5798:src/stm32f1xx_hal_tim.c ****   htim->TriggerHalfCpltCallback(htim);
5799:src/stm32f1xx_hal_tim.c **** #else
5800:src/stm32f1xx_hal_tim.c ****   HAL_TIM_TriggerHalfCpltCallback(htim);
5801:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
5802:src/stm32f1xx_hal_tim.c **** }
5803:src/stm32f1xx_hal_tim.c **** 
5804:src/stm32f1xx_hal_tim.c **** /**
5805:src/stm32f1xx_hal_tim.c ****   * @brief  Time Base configuration
5806:src/stm32f1xx_hal_tim.c ****   * @param  TIMx TIM peripheral
5807:src/stm32f1xx_hal_tim.c ****   * @param  Structure TIM Base configuration structure
5808:src/stm32f1xx_hal_tim.c ****   * @retval None
5809:src/stm32f1xx_hal_tim.c ****   */
5810:src/stm32f1xx_hal_tim.c **** void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
5811:src/stm32f1xx_hal_tim.c **** {
5812:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr1;
5813:src/stm32f1xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
5814:src/stm32f1xx_hal_tim.c **** 
5815:src/stm32f1xx_hal_tim.c ****   /* Set TIM Time Base Unit parameters ---------------------------------------*/
5816:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
5817:src/stm32f1xx_hal_tim.c ****   {
5818:src/stm32f1xx_hal_tim.c ****     /* Select the Counter Mode */
5819:src/stm32f1xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
5820:src/stm32f1xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
5821:src/stm32f1xx_hal_tim.c ****   }
5822:src/stm32f1xx_hal_tim.c **** 
5823:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
5824:src/stm32f1xx_hal_tim.c ****   {
5825:src/stm32f1xx_hal_tim.c ****     /* Set the clock division */
5826:src/stm32f1xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
5827:src/stm32f1xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
5828:src/stm32f1xx_hal_tim.c ****   }
5829:src/stm32f1xx_hal_tim.c **** 
5830:src/stm32f1xx_hal_tim.c ****   /* Set the auto-reload preload */
5831:src/stm32f1xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
5832:src/stm32f1xx_hal_tim.c **** 
5833:src/stm32f1xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
5834:src/stm32f1xx_hal_tim.c **** 
5835:src/stm32f1xx_hal_tim.c ****   /* Set the Autoreload value */
5836:src/stm32f1xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
5837:src/stm32f1xx_hal_tim.c **** 
5838:src/stm32f1xx_hal_tim.c ****   /* Set the Prescaler value */
5839:src/stm32f1xx_hal_tim.c ****   TIMx->PSC = Structure->Prescaler;
5840:src/stm32f1xx_hal_tim.c **** 
5841:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
5842:src/stm32f1xx_hal_tim.c ****   {
5843:src/stm32f1xx_hal_tim.c ****     /* Set the Repetition Counter value */
5844:src/stm32f1xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
5845:src/stm32f1xx_hal_tim.c ****   }
5846:src/stm32f1xx_hal_tim.c **** 
5847:src/stm32f1xx_hal_tim.c ****   /* Generate an update event to reload the Prescaler
5848:src/stm32f1xx_hal_tim.c ****      and the repetition counter (only for advanced timer) value immediately */
5849:src/stm32f1xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
5850:src/stm32f1xx_hal_tim.c **** }
5851:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 105


5852:src/stm32f1xx_hal_tim.c **** /**
5853:src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 1 configuration
5854:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5855:src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The ouput configuration structure
5856:src/stm32f1xx_hal_tim.c ****   * @retval None
5857:src/stm32f1xx_hal_tim.c ****   */
5858:src/stm32f1xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
5859:src/stm32f1xx_hal_tim.c **** {
  78              		.loc 1 5859 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL0:
5860:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
5861:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
5862:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
5863:src/stm32f1xx_hal_tim.c **** 
5864:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
5865:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
  83              		.loc 1 5865 0
  84 0000 036A     		ldr	r3, [r0, #32]	@ _5, TIMx_4(D)->CCER
5859:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
  85              		.loc 1 5859 0
  86 0002 70B5     		push	{r4, r5, r6, lr}	@
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 4, -16
  90              		.cfi_offset 5, -12
  91              		.cfi_offset 6, -8
  92              		.cfi_offset 14, -4
  93              		.loc 1 5865 0
  94 0004 23F00103 		bic	r3, r3, #1	@ _6, _5,
  95 0008 0362     		str	r3, [r0, #32]	@ _6, TIMx_4(D)->CCER
5866:src/stm32f1xx_hal_tim.c **** 
5867:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
5868:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
  96              		.loc 1 5868 0
  97 000a 036A     		ldr	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
  98              	.LVL1:
5869:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
5870:src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
  99              		.loc 1 5870 0
 100 000c 4468     		ldr	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
 101              	.LVL2:
5871:src/stm32f1xx_hal_tim.c **** 
5872:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
5873:src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 102              		.loc 1 5873 0
 103 000e 8269     		ldr	r2, [r0, #24]	@ tmpccmrx, TIMx_4(D)->CCMR1
 104              	.LVL3:
5874:src/stm32f1xx_hal_tim.c **** 
5875:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare Mode Bits */
5876:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC1M;
5877:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
5878:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
5879:src/stm32f1xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 105              		.loc 1 5879 0
ARM GAS  /tmp/ccTsJCXT.s 			page 106


 106 0010 0D68     		ldr	r5, [r1]	@ OC_Config_12(D)->OCMode, OC_Config_12(D)->OCMode
5877:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
 107              		.loc 1 5877 0
 108 0012 22F07302 		bic	r2, r2, #115	@ tmpccmrx, tmpccmrx,
 109              	.LVL4:
 110              		.loc 1 5879 0
 111 0016 2A43     		orrs	r2, r2, r5	@, tmpccmrx, tmpccmrx, OC_Config_12(D)->OCMode
 112              	.LVL5:
5880:src/stm32f1xx_hal_tim.c **** 
5881:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
5882:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
5883:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
5884:src/stm32f1xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
 113              		.loc 1 5884 0
 114 0018 8D68     		ldr	r5, [r1, #8]	@ OC_Config_12(D)->OCPolarity, OC_Config_12(D)->OCPolarity
5882:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
 115              		.loc 1 5882 0
 116 001a 23F00203 		bic	r3, r3, #2	@ tmpccer, tmpccer,
 117              	.LVL6:
 118              		.loc 1 5884 0
 119 001e 2B43     		orrs	r3, r3, r5	@, tmpccer, tmpccer, OC_Config_12(D)->OCPolarity
 120              	.LVL7:
5885:src/stm32f1xx_hal_tim.c **** 
5886:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 121              		.loc 1 5886 0
 122 0020 0A4D     		ldr	r5, .L3	@ tmp133,
 123 0022 A842     		cmp	r0, r5	@ TIMx, tmp133
 124 0024 0BD1     		bne	.L2	@,
5887:src/stm32f1xx_hal_tim.c ****   {
5888:src/stm32f1xx_hal_tim.c ****     /* Check parameters */
5889:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
5890:src/stm32f1xx_hal_tim.c **** 
5891:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
5892:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
5893:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
5894:src/stm32f1xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
 125              		.loc 1 5894 0
 126 0026 CD68     		ldr	r5, [r1, #12]	@ OC_Config_12(D)->OCNPolarity, OC_Config_12(D)->OCNPolarity
5892:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
 127              		.loc 1 5892 0
 128 0028 23F00803 		bic	r3, r3, #8	@ tmpccer, tmpccer,
 129              	.LVL8:
 130              		.loc 1 5894 0
 131 002c 2B43     		orrs	r3, r3, r5	@, tmpccer, tmpccer, OC_Config_12(D)->OCNPolarity
 132              	.LVL9:
5895:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
5896:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
5897:src/stm32f1xx_hal_tim.c ****   }
5898:src/stm32f1xx_hal_tim.c **** 
5899:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
5900:src/stm32f1xx_hal_tim.c ****   {
5901:src/stm32f1xx_hal_tim.c ****     /* Check parameters */
5902:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
5903:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
5904:src/stm32f1xx_hal_tim.c **** 
5905:src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
5906:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1;
ARM GAS  /tmp/ccTsJCXT.s 			page 107


5907:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
5908:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
5909:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
5910:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
5911:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
 133              		.loc 1 5911 0
 134 002e 8E69     		ldr	r6, [r1, #24]	@ OC_Config_12(D)->OCNIdleState, OC_Config_12(D)->OCNIdleState
 135 0030 4D69     		ldr	r5, [r1, #20]	@ OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCIdleState
5907:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
 136              		.loc 1 5907 0
 137 0032 24F44074 		bic	r4, r4, #768	@ tmpcr2, tmpcr2,
 138              	.LVL10:
 139              		.loc 1 5911 0
 140 0036 3543     		orrs	r5, r5, r6	@, tmp135, OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCNIdleState
5896:src/stm32f1xx_hal_tim.c ****   }
 141              		.loc 1 5896 0
 142 0038 23F00403 		bic	r3, r3, #4	@ tmpccer, tmpccer,
 143              	.LVL11:
 144              		.loc 1 5911 0
 145 003c 2C43     		orrs	r4, r4, r5	@, tmpcr2, tmpcr2, tmp135
 146              	.LVL12:
 147              	.L2:
5912:src/stm32f1xx_hal_tim.c ****   }
5913:src/stm32f1xx_hal_tim.c **** 
5914:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
5915:src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 148              		.loc 1 5915 0
 149 003e 4460     		str	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
5916:src/stm32f1xx_hal_tim.c **** 
5917:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
5918:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 150              		.loc 1 5918 0
 151 0040 8261     		str	r2, [r0, #24]	@ tmpccmrx, TIMx_4(D)->CCMR1
5919:src/stm32f1xx_hal_tim.c **** 
5920:src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
5921:src/stm32f1xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
 152              		.loc 1 5921 0
 153 0042 4A68     		ldr	r2, [r1, #4]	@ _29, OC_Config_12(D)->Pulse
 154              	.LVL13:
 155 0044 4263     		str	r2, [r0, #52]	@ _29, TIMx_4(D)->CCR1
 156              	.LVL14:
5922:src/stm32f1xx_hal_tim.c **** 
5923:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
5924:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 157              		.loc 1 5924 0
 158 0046 0362     		str	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 159 0048 70BD     		pop	{r4, r5, r6, pc}	@
 160              	.LVL15:
 161              	.L4:
 162 004a 00BF     		.align	2
 163              	.L3:
 164 004c 002C0140 		.word	1073818624
 165              		.cfi_endproc
 166              	.LFE165:
 167              		.size	TIM_OC1_SetConfig, .-TIM_OC1_SetConfig
 168              		.align	1
 169              		.syntax unified
ARM GAS  /tmp/ccTsJCXT.s 			page 108


 170              		.thumb
 171              		.thumb_func
 172              		.fpu softvfp
 173              		.type	TIM_OC3_SetConfig, %function
 174              	TIM_OC3_SetConfig:
 175              	.LFB167:
5925:src/stm32f1xx_hal_tim.c **** }
5926:src/stm32f1xx_hal_tim.c **** 
5927:src/stm32f1xx_hal_tim.c **** /**
5928:src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 2 configuration
5929:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5930:src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The ouput configuration structure
5931:src/stm32f1xx_hal_tim.c ****   * @retval None
5932:src/stm32f1xx_hal_tim.c ****   */
5933:src/stm32f1xx_hal_tim.c **** void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
5934:src/stm32f1xx_hal_tim.c **** {
5935:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
5936:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
5937:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
5938:src/stm32f1xx_hal_tim.c **** 
5939:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
5940:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
5941:src/stm32f1xx_hal_tim.c **** 
5942:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
5943:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
5944:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
5945:src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
5946:src/stm32f1xx_hal_tim.c **** 
5947:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
5948:src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
5949:src/stm32f1xx_hal_tim.c **** 
5950:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
5951:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC2M;
5952:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
5953:src/stm32f1xx_hal_tim.c **** 
5954:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
5955:src/stm32f1xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
5956:src/stm32f1xx_hal_tim.c **** 
5957:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
5958:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
5959:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
5960:src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
5961:src/stm32f1xx_hal_tim.c **** 
5962:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
5963:src/stm32f1xx_hal_tim.c ****   {
5964:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
5965:src/stm32f1xx_hal_tim.c **** 
5966:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
5967:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
5968:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
5969:src/stm32f1xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
5970:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
5971:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
5972:src/stm32f1xx_hal_tim.c **** 
5973:src/stm32f1xx_hal_tim.c ****   }
5974:src/stm32f1xx_hal_tim.c **** 
5975:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
ARM GAS  /tmp/ccTsJCXT.s 			page 109


5976:src/stm32f1xx_hal_tim.c ****   {
5977:src/stm32f1xx_hal_tim.c ****     /* Check parameters */
5978:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
5979:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
5980:src/stm32f1xx_hal_tim.c **** 
5981:src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
5982:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2;
5983:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
5984:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
5985:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
5986:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
5987:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
5988:src/stm32f1xx_hal_tim.c ****   }
5989:src/stm32f1xx_hal_tim.c **** 
5990:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
5991:src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
5992:src/stm32f1xx_hal_tim.c **** 
5993:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
5994:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
5995:src/stm32f1xx_hal_tim.c **** 
5996:src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
5997:src/stm32f1xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
5998:src/stm32f1xx_hal_tim.c **** 
5999:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
6000:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6001:src/stm32f1xx_hal_tim.c **** }
6002:src/stm32f1xx_hal_tim.c **** 
6003:src/stm32f1xx_hal_tim.c **** /**
6004:src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 3 configuration
6005:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6006:src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The ouput configuration structure
6007:src/stm32f1xx_hal_tim.c ****   * @retval None
6008:src/stm32f1xx_hal_tim.c ****   */
6009:src/stm32f1xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
6010:src/stm32f1xx_hal_tim.c **** {
 176              		.loc 1 6010 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              	.LVL16:
6011:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
6012:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6013:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
6014:src/stm32f1xx_hal_tim.c **** 
6015:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
6016:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 181              		.loc 1 6016 0
 182 0050 036A     		ldr	r3, [r0, #32]	@ _5, TIMx_4(D)->CCER
6010:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
 183              		.loc 1 6010 0
 184 0052 70B5     		push	{r4, r5, r6, lr}	@
 185              	.LCFI1:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 4, -16
 188              		.cfi_offset 5, -12
 189              		.cfi_offset 6, -8
 190              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTsJCXT.s 			page 110


 191              		.loc 1 6016 0
 192 0054 23F48073 		bic	r3, r3, #256	@ _6, _5,
 193 0058 0362     		str	r3, [r0, #32]	@ _6, TIMx_4(D)->CCER
6017:src/stm32f1xx_hal_tim.c **** 
6018:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6019:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 194              		.loc 1 6019 0
 195 005a 036A     		ldr	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 196              	.LVL17:
6020:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6021:src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 197              		.loc 1 6021 0
 198 005c 4468     		ldr	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
 199              	.LVL18:
6022:src/stm32f1xx_hal_tim.c **** 
6023:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
6024:src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 200              		.loc 1 6024 0
 201 005e C269     		ldr	r2, [r0, #28]	@ tmpccmrx, TIMx_4(D)->CCMR2
 202              	.LVL19:
6025:src/stm32f1xx_hal_tim.c **** 
6026:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
6027:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC3M;
6028:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;
6029:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
6030:src/stm32f1xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 203              		.loc 1 6030 0
 204 0060 0D68     		ldr	r5, [r1]	@ OC_Config_12(D)->OCMode, OC_Config_12(D)->OCMode
6028:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
 205              		.loc 1 6028 0
 206 0062 22F07302 		bic	r2, r2, #115	@ tmpccmrx, tmpccmrx,
 207              	.LVL20:
 208              		.loc 1 6030 0
 209 0066 2A43     		orrs	r2, r2, r5	@, tmpccmrx, tmpccmrx, OC_Config_12(D)->OCMode
 210              	.LVL21:
6031:src/stm32f1xx_hal_tim.c **** 
6032:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
6033:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
6034:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6035:src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
 211              		.loc 1 6035 0
 212 0068 8D68     		ldr	r5, [r1, #8]	@ OC_Config_12(D)->OCPolarity, OC_Config_12(D)->OCPolarity
6033:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
 213              		.loc 1 6033 0
 214 006a 23F40073 		bic	r3, r3, #512	@ tmpccer, tmpccer,
 215              	.LVL22:
 216              		.loc 1 6035 0
 217 006e 43EA0523 		orr	r3, r3, r5, lsl #8	@ tmpccer, tmpccer, OC_Config_12(D)->OCPolarity,
 218              	.LVL23:
6036:src/stm32f1xx_hal_tim.c **** 
6037:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 219              		.loc 1 6037 0
 220 0072 0B4D     		ldr	r5, .L7	@ tmp138,
 221 0074 A842     		cmp	r0, r5	@ TIMx, tmp138
 222 0076 0DD1     		bne	.L6	@,
6038:src/stm32f1xx_hal_tim.c ****   {
6039:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
ARM GAS  /tmp/ccTsJCXT.s 			page 111


6040:src/stm32f1xx_hal_tim.c **** 
6041:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
6042:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
6043:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
6044:src/stm32f1xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
 223              		.loc 1 6044 0
 224 0078 CD68     		ldr	r5, [r1, #12]	@ OC_Config_12(D)->OCNPolarity, OC_Config_12(D)->OCNPolarity
6042:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
 225              		.loc 1 6042 0
 226 007a 23F40063 		bic	r3, r3, #2048	@ tmpccer, tmpccer,
 227              	.LVL24:
 228              		.loc 1 6044 0
 229 007e 43EA0523 		orr	r3, r3, r5, lsl #8	@ tmpccer, tmpccer, OC_Config_12(D)->OCNPolarity,
 230              	.LVL25:
6045:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
6046:src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
6047:src/stm32f1xx_hal_tim.c ****   }
6048:src/stm32f1xx_hal_tim.c **** 
6049:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
6050:src/stm32f1xx_hal_tim.c ****   {
6051:src/stm32f1xx_hal_tim.c ****     /* Check parameters */
6052:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
6053:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
6054:src/stm32f1xx_hal_tim.c **** 
6055:src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
6056:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3;
6057:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
6058:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
6059:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
6060:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
6061:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 231              		.loc 1 6061 0
 232 0082 8E69     		ldr	r6, [r1, #24]	@ OC_Config_12(D)->OCNIdleState, OC_Config_12(D)->OCNIdleState
6059:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
 233              		.loc 1 6059 0
 234 0084 4D69     		ldr	r5, [r1, #20]	@ OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCIdleState
6057:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
 235              		.loc 1 6057 0
 236 0086 24F44054 		bic	r4, r4, #12288	@ tmpcr2, tmpcr2,
 237              	.LVL26:
 238              		.loc 1 6061 0
 239 008a 3543     		orrs	r5, r5, r6	@, tmp145, OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCNIdleState
6046:src/stm32f1xx_hal_tim.c ****   }
 240              		.loc 1 6046 0
 241 008c 23F48063 		bic	r3, r3, #1024	@ tmpccer, tmpccer,
 242              	.LVL27:
 243              		.loc 1 6061 0
 244 0090 44EA0514 		orr	r4, r4, r5, lsl #4	@ tmpcr2, tmpcr2, tmp145,
 245              	.LVL28:
 246              	.L6:
6062:src/stm32f1xx_hal_tim.c ****   }
6063:src/stm32f1xx_hal_tim.c **** 
6064:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
6065:src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 247              		.loc 1 6065 0
 248 0094 4460     		str	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
6066:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 112


6067:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
6068:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 249              		.loc 1 6068 0
 250 0096 C261     		str	r2, [r0, #28]	@ tmpccmrx, TIMx_4(D)->CCMR2
6069:src/stm32f1xx_hal_tim.c **** 
6070:src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6071:src/stm32f1xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
 251              		.loc 1 6071 0
 252 0098 4A68     		ldr	r2, [r1, #4]	@ _33, OC_Config_12(D)->Pulse
 253              	.LVL29:
 254 009a C263     		str	r2, [r0, #60]	@ _33, TIMx_4(D)->CCR3
 255              	.LVL30:
6072:src/stm32f1xx_hal_tim.c **** 
6073:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
6074:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 256              		.loc 1 6074 0
 257 009c 0362     		str	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 258 009e 70BD     		pop	{r4, r5, r6, pc}	@
 259              	.LVL31:
 260              	.L8:
 261              		.align	2
 262              	.L7:
 263 00a0 002C0140 		.word	1073818624
 264              		.cfi_endproc
 265              	.LFE167:
 266              		.size	TIM_OC3_SetConfig, .-TIM_OC3_SetConfig
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu softvfp
 272              		.type	TIM_OC4_SetConfig, %function
 273              	TIM_OC4_SetConfig:
 274              	.LFB168:
6075:src/stm32f1xx_hal_tim.c **** }
6076:src/stm32f1xx_hal_tim.c **** 
6077:src/stm32f1xx_hal_tim.c **** /**
6078:src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 4 configuration
6079:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6080:src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The ouput configuration structure
6081:src/stm32f1xx_hal_tim.c ****   * @retval None
6082:src/stm32f1xx_hal_tim.c ****   */
6083:src/stm32f1xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
6084:src/stm32f1xx_hal_tim.c **** {
 275              		.loc 1 6084 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL32:
6085:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
6086:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6087:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
6088:src/stm32f1xx_hal_tim.c **** 
6089:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
6090:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 280              		.loc 1 6090 0
 281 00a4 036A     		ldr	r3, [r0, #32]	@ _4, TIMx_3(D)->CCER
ARM GAS  /tmp/ccTsJCXT.s 			page 113


6084:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
 282              		.loc 1 6084 0
 283 00a6 30B5     		push	{r4, r5, lr}	@
 284              	.LCFI2:
 285              		.cfi_def_cfa_offset 12
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 289              		.loc 1 6090 0
 290 00a8 23F48053 		bic	r3, r3, #4096	@ _5, _4,
 291 00ac 0362     		str	r3, [r0, #32]	@ _5, TIMx_3(D)->CCER
6091:src/stm32f1xx_hal_tim.c **** 
6092:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6093:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 292              		.loc 1 6093 0
 293 00ae 036A     		ldr	r3, [r0, #32]	@ tmpccer, TIMx_3(D)->CCER
 294              	.LVL33:
6094:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6095:src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 295              		.loc 1 6095 0
 296 00b0 4468     		ldr	r4, [r0, #4]	@ tmpcr2, TIMx_3(D)->CR2
 297              	.LVL34:
6096:src/stm32f1xx_hal_tim.c **** 
6097:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
6098:src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 298              		.loc 1 6098 0
 299 00b2 C269     		ldr	r2, [r0, #28]	@ tmpccmrx, TIMx_3(D)->CCMR2
 300              	.LVL35:
6099:src/stm32f1xx_hal_tim.c **** 
6100:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
6101:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC4M;
6102:src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
6103:src/stm32f1xx_hal_tim.c **** 
6104:src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
6105:src/stm32f1xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 301              		.loc 1 6105 0
 302 00b4 0D68     		ldr	r5, [r1]	@ OC_Config_11(D)->OCMode, OC_Config_11(D)->OCMode
6102:src/stm32f1xx_hal_tim.c **** 
 303              		.loc 1 6102 0
 304 00b6 22F4E642 		bic	r2, r2, #29440	@ tmpccmrx, tmpccmrx,
 305              	.LVL36:
 306              		.loc 1 6105 0
 307 00ba 42EA0522 		orr	r2, r2, r5, lsl #8	@ tmpccmrx, tmpccmrx, OC_Config_11(D)->OCMode,
 308              	.LVL37:
6106:src/stm32f1xx_hal_tim.c **** 
6107:src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
6108:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
6109:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6110:src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
 309              		.loc 1 6110 0
 310 00be 8D68     		ldr	r5, [r1, #8]	@ OC_Config_11(D)->OCPolarity, OC_Config_11(D)->OCPolarity
6108:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
 311              		.loc 1 6108 0
 312 00c0 23F40053 		bic	r3, r3, #8192	@ tmpccer, tmpccer,
 313              	.LVL38:
 314              		.loc 1 6110 0
 315 00c4 43EA0533 		orr	r3, r3, r5, lsl #12	@ tmpccer, tmpccer, OC_Config_11(D)->OCPolarity,
ARM GAS  /tmp/ccTsJCXT.s 			page 114


 316              	.LVL39:
6111:src/stm32f1xx_hal_tim.c **** 
6112:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 317              		.loc 1 6112 0
 318 00c8 064D     		ldr	r5, .L11	@ tmp133,
 319 00ca A842     		cmp	r0, r5	@ TIMx, tmp133
6113:src/stm32f1xx_hal_tim.c ****   {
6114:src/stm32f1xx_hal_tim.c ****     /* Check parameters */
6115:src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
6116:src/stm32f1xx_hal_tim.c **** 
6117:src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare IDLE State */
6118:src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
6119:src/stm32f1xx_hal_tim.c **** 
6120:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
6121:src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
 320              		.loc 1 6121 0
 321 00cc 02BF     		ittt	eq
 322 00ce 4D69     		ldreq	r5, [r1, #20]	@ OC_Config_11(D)->OCIdleState, OC_Config_11(D)->OCIdleState
6118:src/stm32f1xx_hal_tim.c **** 
 323              		.loc 1 6118 0
 324 00d0 24F48044 		biceq	r4, r4, #16384	@ tmpcr2, tmpcr2,
 325              	.LVL40:
 326              		.loc 1 6121 0
 327 00d4 44EA8514 		orreq	r4, r4, r5, lsl #6	@ tmpcr2, tmpcr2, OC_Config_11(D)->OCIdleState,
 328              	.LVL41:
6122:src/stm32f1xx_hal_tim.c ****   }
6123:src/stm32f1xx_hal_tim.c **** 
6124:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
6125:src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 329              		.loc 1 6125 0
 330 00d8 4460     		str	r4, [r0, #4]	@ tmpcr2, TIMx_3(D)->CR2
6126:src/stm32f1xx_hal_tim.c **** 
6127:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
6128:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 331              		.loc 1 6128 0
 332 00da C261     		str	r2, [r0, #28]	@ tmpccmrx, TIMx_3(D)->CCMR2
6129:src/stm32f1xx_hal_tim.c **** 
6130:src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6131:src/stm32f1xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
 333              		.loc 1 6131 0
 334 00dc 4A68     		ldr	r2, [r1, #4]	@ _25, OC_Config_11(D)->Pulse
 335              	.LVL42:
 336 00de 0264     		str	r2, [r0, #64]	@ _25, TIMx_3(D)->CCR4
 337              	.LVL43:
6132:src/stm32f1xx_hal_tim.c **** 
6133:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
6134:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 338              		.loc 1 6134 0
 339 00e0 0362     		str	r3, [r0, #32]	@ tmpccer, TIMx_3(D)->CCER
 340 00e2 30BD     		pop	{r4, r5, pc}	@
 341              	.LVL44:
 342              	.L12:
 343              		.align	2
 344              	.L11:
 345 00e4 002C0140 		.word	1073818624
 346              		.cfi_endproc
 347              	.LFE168:
ARM GAS  /tmp/ccTsJCXT.s 			page 115


 348              		.size	TIM_OC4_SetConfig, .-TIM_OC4_SetConfig
 349              		.align	1
 350              		.weak	HAL_TIM_Base_MspInit
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu softvfp
 355              		.type	HAL_TIM_Base_MspInit, %function
 356              	HAL_TIM_Base_MspInit:
 357              	.LFB220:
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 00e8 7047     		bx	lr	@
 363              		.cfi_endproc
 364              	.LFE220:
 365              		.size	HAL_TIM_Base_MspInit, .-HAL_TIM_Base_MspInit
 366              		.align	1
 367              		.weak	HAL_TIM_Base_MspDeInit
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu softvfp
 372              		.type	HAL_TIM_Base_MspDeInit, %function
 373              	HAL_TIM_Base_MspDeInit:
 374              	.LFB218:
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 00ea 7047     		bx	lr	@
 380              		.cfi_endproc
 381              	.LFE218:
 382              		.size	HAL_TIM_Base_MspDeInit, .-HAL_TIM_Base_MspDeInit
 383              		.align	1
 384              		.global	HAL_TIM_Base_DeInit
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 389              		.type	HAL_TIM_Base_DeInit, %function
 390              	HAL_TIM_Base_DeInit:
 391              	.LFB66:
 318:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 392              		.loc 1 318 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL45:
 322:src/stm32f1xx_hal_tim.c **** 
 397              		.loc 1 322 0
 398 00ec 0223     		movs	r3, #2	@ tmp119,
 325:src/stm32f1xx_hal_tim.c **** 
 399              		.loc 1 325 0
 400 00ee 41F21112 		movw	r2, #4369	@ tmp121,
 318:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccTsJCXT.s 			page 116


 401              		.loc 1 318 0
 402 00f2 10B5     		push	{r4, lr}	@
 403              	.LCFI3:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 4, -8
 406              		.cfi_offset 14, -4
 322:src/stm32f1xx_hal_tim.c **** 
 407              		.loc 1 322 0
 408 00f4 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
 325:src/stm32f1xx_hal_tim.c **** 
 409              		.loc 1 325 0
 410 00f8 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
 318:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 411              		.loc 1 318 0
 412 00fa 0446     		mov	r4, r0	@ htim, htim
 325:src/stm32f1xx_hal_tim.c **** 
 413              		.loc 1 325 0
 414 00fc 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 415 00fe 1142     		tst	r1, r2	@ _6, tmp121
 416 0100 08D1     		bne	.L16	@,
 325:src/stm32f1xx_hal_tim.c **** 
 417              		.loc 1 325 0 is_stmt 0 discriminator 1
 418 0102 40F24442 		movw	r2, #1092	@ tmp123,
 419 0106 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 420 0108 1142     		tst	r1, r2	@ _8, tmp123
 421 010a 02BF     		ittt	eq
 422 010c 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 423 010e 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 424 0112 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 425              	.L16:
 336:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 426              		.loc 1 336 0 is_stmt 1
 427 0114 2046     		mov	r0, r4	@, htim
 428              	.LVL46:
 429 0116 FFF7FEFF 		bl	HAL_TIM_Base_MspDeInit	@
 430              	.LVL47:
 340:src/stm32f1xx_hal_tim.c **** 
 431              		.loc 1 340 0
 432 011a 0020     		movs	r0, #0	@ tmp125,
 433 011c 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
 343:src/stm32f1xx_hal_tim.c **** 
 434              		.loc 1 343 0
 435 0120 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
 346:src/stm32f1xx_hal_tim.c **** 
 436              		.loc 1 346 0
 437 0124 10BD     		pop	{r4, pc}	@
 438              		.cfi_endproc
 439              	.LFE66:
 440              		.size	HAL_TIM_Base_DeInit, .-HAL_TIM_Base_DeInit
 441              		.align	1
 442              		.global	HAL_TIM_Base_Start
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 447              		.type	HAL_TIM_Base_Start, %function
 448              	HAL_TIM_Base_Start:
ARM GAS  /tmp/ccTsJCXT.s 			page 117


 449              	.LFB69:
 385:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 450              		.loc 1 385 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL48:
 392:src/stm32f1xx_hal_tim.c **** 
 456              		.loc 1 392 0
 457 0126 0223     		movs	r3, #2	@ tmp117,
 458 0128 80F83D30 		strb	r3, [r0, #61]	@ tmp117, htim_3(D)->State
 395:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 459              		.loc 1 395 0
 460 012c 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
 461 012e 9A68     		ldr	r2, [r3, #8]	@ _6, _5->SMCR
 462              	.LVL49:
 463 0130 02F00702 		and	r2, r2, #7	@ tmpsmcr, _6,
 464              	.LVL50:
 396:src/stm32f1xx_hal_tim.c ****   {
 465              		.loc 1 396 0
 466 0134 062A     		cmp	r2, #6	@ tmpsmcr,
 398:src/stm32f1xx_hal_tim.c ****   }
 467              		.loc 1 398 0
 468 0136 1EBF     		ittt	ne
 469 0138 1A68     		ldrne	r2, [r3]	@ _8, _5->CR1
 470              	.LVL51:
 471 013a 42F00102 		orrne	r2, r2, #1	@ _9, _8,
 472 013e 1A60     		strne	r2, [r3]	@ _9, _5->CR1
 402:src/stm32f1xx_hal_tim.c **** 
 473              		.loc 1 402 0
 474 0140 0123     		movs	r3, #1	@ tmp120,
 475 0142 80F83D30 		strb	r3, [r0, #61]	@ tmp120, htim_3(D)->State
 406:src/stm32f1xx_hal_tim.c **** 
 476              		.loc 1 406 0
 477 0146 0020     		movs	r0, #0	@,
 478              	.LVL52:
 479 0148 7047     		bx	lr	@
 480              		.cfi_endproc
 481              	.LFE69:
 482              		.size	HAL_TIM_Base_Start, .-HAL_TIM_Base_Start
 483              		.align	1
 484              		.global	HAL_TIM_Base_Stop
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu softvfp
 489              		.type	HAL_TIM_Base_Stop, %function
 490              	HAL_TIM_Base_Stop:
 491              	.LFB70:
 414:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 492              		.loc 1 414 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497              	.LVL53:
ARM GAS  /tmp/ccTsJCXT.s 			page 118


 419:src/stm32f1xx_hal_tim.c **** 
 498              		.loc 1 419 0
 499 014a 0223     		movs	r3, #2	@ tmp119,
 422:src/stm32f1xx_hal_tim.c **** 
 500              		.loc 1 422 0
 501 014c 41F21112 		movw	r2, #4369	@ tmp121,
 419:src/stm32f1xx_hal_tim.c **** 
 502              		.loc 1 419 0
 503 0150 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
 422:src/stm32f1xx_hal_tim.c **** 
 504              		.loc 1 422 0
 505 0154 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
 506 0156 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 507 0158 1142     		tst	r1, r2	@ _6, tmp121
 508 015a 08D1     		bne	.L23	@,
 422:src/stm32f1xx_hal_tim.c **** 
 509              		.loc 1 422 0 is_stmt 0 discriminator 1
 510 015c 40F24442 		movw	r2, #1092	@ tmp123,
 511 0160 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 512 0162 1142     		tst	r1, r2	@ _8, tmp123
 513 0164 02BF     		ittt	eq
 514 0166 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 515 0168 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 516 016c 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 517              	.L23:
 425:src/stm32f1xx_hal_tim.c **** 
 518              		.loc 1 425 0 is_stmt 1
 519 016e 0123     		movs	r3, #1	@ tmp125,
 520 0170 80F83D30 		strb	r3, [r0, #61]	@ tmp125, htim_3(D)->State
 429:src/stm32f1xx_hal_tim.c **** 
 521              		.loc 1 429 0
 522 0174 0020     		movs	r0, #0	@,
 523              	.LVL54:
 524 0176 7047     		bx	lr	@
 525              		.cfi_endproc
 526              	.LFE70:
 527              		.size	HAL_TIM_Base_Stop, .-HAL_TIM_Base_Stop
 528              		.align	1
 529              		.global	HAL_TIM_Base_Start_IT
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu softvfp
 534              		.type	HAL_TIM_Base_Start_IT, %function
 535              	HAL_TIM_Base_Start_IT:
 536              	.LFB71:
 437:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 537              		.loc 1 437 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542              	.LVL55:
 444:src/stm32f1xx_hal_tim.c **** 
 543              		.loc 1 444 0
 544 0178 0368     		ldr	r3, [r0]	@ _4, htim_3(D)->Instance
 455:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 119


 545              		.loc 1 455 0
 546 017a 0020     		movs	r0, #0	@,
 547              	.LVL56:
 444:src/stm32f1xx_hal_tim.c **** 
 548              		.loc 1 444 0
 549 017c DA68     		ldr	r2, [r3, #12]	@ _5, _4->DIER
 550 017e 42F00102 		orr	r2, r2, #1	@ _6, _5,
 551 0182 DA60     		str	r2, [r3, #12]	@ _6, _4->DIER
 447:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 552              		.loc 1 447 0
 553 0184 9A68     		ldr	r2, [r3, #8]	@ _8, _4->SMCR
 554              	.LVL57:
 555 0186 02F00702 		and	r2, r2, #7	@ tmpsmcr, _8,
 556              	.LVL58:
 448:src/stm32f1xx_hal_tim.c ****   {
 557              		.loc 1 448 0
 558 018a 062A     		cmp	r2, #6	@ tmpsmcr,
 450:src/stm32f1xx_hal_tim.c ****   }
 559              		.loc 1 450 0
 560 018c 1EBF     		ittt	ne
 561 018e 1A68     		ldrne	r2, [r3]	@ _10, _4->CR1
 562              	.LVL59:
 563 0190 42F00102 		orrne	r2, r2, #1	@ _11, _10,
 564 0194 1A60     		strne	r2, [r3]	@ _11, _4->CR1
 455:src/stm32f1xx_hal_tim.c **** 
 565              		.loc 1 455 0
 566 0196 7047     		bx	lr	@
 567              		.cfi_endproc
 568              	.LFE71:
 569              		.size	HAL_TIM_Base_Start_IT, .-HAL_TIM_Base_Start_IT
 570              		.align	1
 571              		.global	HAL_TIM_Base_Stop_IT
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu softvfp
 576              		.type	HAL_TIM_Base_Stop_IT, %function
 577              	HAL_TIM_Base_Stop_IT:
 578              	.LFB72:
 463:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 579              		.loc 1 463 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL60:
 467:src/stm32f1xx_hal_tim.c **** 
 585              		.loc 1 467 0
 586 0198 0368     		ldr	r3, [r0]	@ _4, htim_3(D)->Instance
 587 019a DA68     		ldr	r2, [r3, #12]	@ _5, _4->DIER
 588 019c 22F00102 		bic	r2, r2, #1	@ _6, _5,
 589 01a0 DA60     		str	r2, [r3, #12]	@ _6, _4->DIER
 470:src/stm32f1xx_hal_tim.c **** 
 590              		.loc 1 470 0
 591 01a2 41F21112 		movw	r2, #4369	@ tmp121,
 592 01a6 196A     		ldr	r1, [r3, #32]	@ _8, _4->CCER
 593 01a8 1142     		tst	r1, r2	@ _8, tmp121
ARM GAS  /tmp/ccTsJCXT.s 			page 120


 594 01aa 08D1     		bne	.L30	@,
 470:src/stm32f1xx_hal_tim.c **** 
 595              		.loc 1 470 0 is_stmt 0 discriminator 1
 596 01ac 40F24442 		movw	r2, #1092	@ tmp123,
 597 01b0 196A     		ldr	r1, [r3, #32]	@ _10, _4->CCER
 598 01b2 1142     		tst	r1, r2	@ _10, tmp123
 599 01b4 02BF     		ittt	eq
 600 01b6 1A68     		ldreq	r2, [r3]	@ _12, _4->CR1
 601 01b8 22F00102 		biceq	r2, r2, #1	@ _13, _12,
 602 01bc 1A60     		streq	r2, [r3]	@ _13, _4->CR1
 603              	.L30:
 474:src/stm32f1xx_hal_tim.c **** 
 604              		.loc 1 474 0 is_stmt 1
 605 01be 0020     		movs	r0, #0	@,
 606              	.LVL61:
 607 01c0 7047     		bx	lr	@
 608              		.cfi_endproc
 609              	.LFE72:
 610              		.size	HAL_TIM_Base_Stop_IT, .-HAL_TIM_Base_Stop_IT
 611              		.align	1
 612              		.global	HAL_TIM_Base_Start_DMA
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu softvfp
 617              		.type	HAL_TIM_Base_Start_DMA, %function
 618              	HAL_TIM_Base_Start_DMA:
 619              	.LFB73:
 484:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 620              		.loc 1 484 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL62:
 625 01c2 10B5     		push	{r4, lr}	@
 626              	.LCFI4:
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 484:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 630              		.loc 1 484 0
 631 01c4 0446     		mov	r4, r0	@ htim, htim
 490:src/stm32f1xx_hal_tim.c ****   {
 632              		.loc 1 490 0
 633 01c6 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_5(D)->State, htim_5(D)->State
 634              	.LVL63:
 484:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 635              		.loc 1 484 0
 636 01ca 1346     		mov	r3, r2	@ Length, Length
 490:src/stm32f1xx_hal_tim.c ****   {
 637              		.loc 1 490 0
 638 01cc C0B2     		uxtb	r0, r0	@ _6, htim_5(D)->State
 639 01ce 0228     		cmp	r0, #2	@ _6,
 640 01d0 25D0     		beq	.L32	@,
 494:src/stm32f1xx_hal_tim.c ****   {
 641              		.loc 1 494 0
 642 01d2 94F83D20 		ldrb	r2, [r4, #61]	@ zero_extendqisi2	@ htim_5(D)->State, htim_5(D)->State
ARM GAS  /tmp/ccTsJCXT.s 			page 121


 643              	.LVL64:
 644 01d6 012A     		cmp	r2, #1	@ htim_5(D)->State,
 645 01d8 06D1     		bne	.L33	@,
 496:src/stm32f1xx_hal_tim.c ****     {
 646              		.loc 1 496 0
 647 01da 11B9     		cbnz	r1, .L34	@ pData,
 496:src/stm32f1xx_hal_tim.c ****     {
 648              		.loc 1 496 0 is_stmt 0 discriminator 1
 649 01dc 0BB1     		cbz	r3, .L34	@ Length,
 650              	.LVL65:
 651              	.L35:
 498:src/stm32f1xx_hal_tim.c ****     }
 652              		.loc 1 498 0 is_stmt 1
 653 01de 0120     		movs	r0, #1	@ <retval>,
 654 01e0 10BD     		pop	{r4, pc}	@
 655              	.LVL66:
 656              	.L34:
 502:src/stm32f1xx_hal_tim.c ****     }
 657              		.loc 1 502 0
 658 01e2 0222     		movs	r2, #2	@ tmp135,
 659 01e4 84F83D20 		strb	r2, [r4, #61]	@ tmp135, htim_5(D)->State
 660              	.L33:
 511:src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 661              		.loc 1 511 0
 662 01e8 206A     		ldr	r0, [r4, #32]	@ _11, htim_5(D)->hdma
 663 01ea 0D4A     		ldr	r2, .L43	@ tmp137,
 664 01ec 8262     		str	r2, [r0, #40]	@ tmp137, _11->XferCpltCallback
 512:src/stm32f1xx_hal_tim.c **** 
 665              		.loc 1 512 0
 666 01ee 0D4A     		ldr	r2, .L43+4	@ tmp138,
 667 01f0 C262     		str	r2, [r0, #44]	@ tmp138, _11->XferHalfCpltCallback
 515:src/stm32f1xx_hal_tim.c **** 
 668              		.loc 1 515 0
 669 01f2 0D4A     		ldr	r2, .L43+8	@ tmp139,
 670 01f4 0263     		str	r2, [r0, #48]	@ tmp139, _11->XferErrorCallback
 518:src/stm32f1xx_hal_tim.c ****   {
 671              		.loc 1 518 0
 672 01f6 2268     		ldr	r2, [r4]	@ htim_5(D)->Instance, htim_5(D)->Instance
 673 01f8 2C32     		adds	r2, r2, #44	@, htim_5(D)->Instance,
 674 01fa FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 675              	.LVL67:
 676 01fe 0028     		cmp	r0, #0	@ <retval>
 677 0200 EDD1     		bne	.L35	@
 524:src/stm32f1xx_hal_tim.c **** 
 678              		.loc 1 524 0
 679 0202 2368     		ldr	r3, [r4]	@ _22, htim_5(D)->Instance
 680 0204 DA68     		ldr	r2, [r3, #12]	@ _23, _22->DIER
 681 0206 42F48072 		orr	r2, r2, #256	@ _24, _23,
 682 020a DA60     		str	r2, [r3, #12]	@ _24, _22->DIER
 527:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 683              		.loc 1 527 0
 684 020c 9A68     		ldr	r2, [r3, #8]	@ _26, _22->SMCR
 685              	.LVL68:
 686 020e 02F00702 		and	r2, r2, #7	@ tmpsmcr, _26,
 687              	.LVL69:
 528:src/stm32f1xx_hal_tim.c ****   {
 688              		.loc 1 528 0
ARM GAS  /tmp/ccTsJCXT.s 			page 122


 689 0212 062A     		cmp	r2, #6	@ tmpsmcr,
 530:src/stm32f1xx_hal_tim.c ****   }
 690              		.loc 1 530 0
 691 0214 1EBF     		ittt	ne
 692 0216 1A68     		ldrne	r2, [r3]	@ _28, _22->CR1
 693              	.LVL70:
 694 0218 42F00102 		orrne	r2, r2, #1	@ _29, _28,
 695 021c 1A60     		strne	r2, [r3]	@ _29, _22->CR1
 696              	.L32:
 535:src/stm32f1xx_hal_tim.c **** 
 697              		.loc 1 535 0
 698 021e 10BD     		pop	{r4, pc}	@
 699              	.LVL71:
 700              	.L44:
 701              		.align	2
 702              	.L43:
 703 0220 00000000 		.word	TIM_DMAPeriodElapsedCplt
 704 0224 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 705 0228 00000000 		.word	TIM_DMAError
 706              		.cfi_endproc
 707              	.LFE73:
 708              		.size	HAL_TIM_Base_Start_DMA, .-HAL_TIM_Base_Start_DMA
 709              		.align	1
 710              		.global	HAL_TIM_Base_Stop_DMA
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 714              		.fpu softvfp
 715              		.type	HAL_TIM_Base_Stop_DMA, %function
 716              	HAL_TIM_Base_Stop_DMA:
 717              	.LFB74:
 543:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 718              		.loc 1 543 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL72:
 548:src/stm32f1xx_hal_tim.c **** 
 723              		.loc 1 548 0
 724 022c 0268     		ldr	r2, [r0]	@ _4, htim_3(D)->Instance
 543:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 725              		.loc 1 543 0
 726 022e 10B5     		push	{r4, lr}	@
 727              	.LCFI5:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 4, -8
 730              		.cfi_offset 14, -4
 548:src/stm32f1xx_hal_tim.c **** 
 731              		.loc 1 548 0
 732 0230 D368     		ldr	r3, [r2, #12]	@ _5, _4->DIER
 543:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 733              		.loc 1 543 0
 734 0232 0446     		mov	r4, r0	@ htim, htim
 548:src/stm32f1xx_hal_tim.c **** 
 735              		.loc 1 548 0
 736 0234 23F48073 		bic	r3, r3, #256	@ _6, _5,
 737 0238 D360     		str	r3, [r2, #12]	@ _6, _4->DIER
ARM GAS  /tmp/ccTsJCXT.s 			page 123


 550:src/stm32f1xx_hal_tim.c **** 
 738              		.loc 1 550 0
 739 023a 006A     		ldr	r0, [r0, #32]	@, htim_3(D)->hdma
 740              	.LVL73:
 741 023c FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 742              	.LVL74:
 553:src/stm32f1xx_hal_tim.c **** 
 743              		.loc 1 553 0
 744 0240 41F21112 		movw	r2, #4369	@ tmp123,
 745 0244 2368     		ldr	r3, [r4]	@ _10, htim_3(D)->Instance
 746 0246 196A     		ldr	r1, [r3, #32]	@ _11, _10->CCER
 747 0248 1142     		tst	r1, r2	@ _11, tmp123
 748 024a 08D1     		bne	.L46	@,
 553:src/stm32f1xx_hal_tim.c **** 
 749              		.loc 1 553 0 is_stmt 0 discriminator 1
 750 024c 40F24442 		movw	r2, #1092	@ tmp125,
 751 0250 196A     		ldr	r1, [r3, #32]	@ _13, _10->CCER
 752 0252 1142     		tst	r1, r2	@ _13, tmp125
 753 0254 02BF     		ittt	eq
 754 0256 1A68     		ldreq	r2, [r3]	@ _15, _10->CR1
 755 0258 22F00102 		biceq	r2, r2, #1	@ _16, _15,
 756 025c 1A60     		streq	r2, [r3]	@ _16, _10->CR1
 757              	.L46:
 556:src/stm32f1xx_hal_tim.c **** 
 758              		.loc 1 556 0 is_stmt 1
 759 025e 0123     		movs	r3, #1	@ tmp127,
 560:src/stm32f1xx_hal_tim.c **** 
 760              		.loc 1 560 0
 761 0260 0020     		movs	r0, #0	@,
 556:src/stm32f1xx_hal_tim.c **** 
 762              		.loc 1 556 0
 763 0262 84F83D30 		strb	r3, [r4, #61]	@ tmp127, htim_3(D)->State
 560:src/stm32f1xx_hal_tim.c **** 
 764              		.loc 1 560 0
 765 0266 10BD     		pop	{r4, pc}	@
 766              		.cfi_endproc
 767              	.LFE74:
 768              		.size	HAL_TIM_Base_Stop_DMA, .-HAL_TIM_Base_Stop_DMA
 769              		.align	1
 770              		.weak	HAL_TIM_OC_MspInit
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu softvfp
 775              		.type	HAL_TIM_OC_MspInit, %function
 776              	HAL_TIM_OC_MspInit:
 777              	.LFB216:
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0268 7047     		bx	lr	@
 783              		.cfi_endproc
 784              	.LFE216:
 785              		.size	HAL_TIM_OC_MspInit, .-HAL_TIM_OC_MspInit
 786              		.align	1
 787              		.weak	HAL_TIM_OC_MspDeInit
ARM GAS  /tmp/ccTsJCXT.s 			page 124


 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu softvfp
 792              		.type	HAL_TIM_OC_MspDeInit, %function
 793              	HAL_TIM_OC_MspDeInit:
 794              	.LFB214:
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 026a 7047     		bx	lr	@
 800              		.cfi_endproc
 801              	.LFE214:
 802              		.size	HAL_TIM_OC_MspDeInit, .-HAL_TIM_OC_MspDeInit
 803              		.align	1
 804              		.global	HAL_TIM_OC_DeInit
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu softvfp
 809              		.type	HAL_TIM_OC_DeInit, %function
 810              	HAL_TIM_OC_DeInit:
 811              	.LFB76:
 650:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 812              		.loc 1 650 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              	.LVL75:
 654:src/stm32f1xx_hal_tim.c **** 
 817              		.loc 1 654 0
 818 026c 0223     		movs	r3, #2	@ tmp119,
 657:src/stm32f1xx_hal_tim.c **** 
 819              		.loc 1 657 0
 820 026e 41F21112 		movw	r2, #4369	@ tmp121,
 650:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 821              		.loc 1 650 0
 822 0272 10B5     		push	{r4, lr}	@
 823              	.LCFI6:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 654:src/stm32f1xx_hal_tim.c **** 
 827              		.loc 1 654 0
 828 0274 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
 657:src/stm32f1xx_hal_tim.c **** 
 829              		.loc 1 657 0
 830 0278 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
 650:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 831              		.loc 1 650 0
 832 027a 0446     		mov	r4, r0	@ htim, htim
 657:src/stm32f1xx_hal_tim.c **** 
 833              		.loc 1 657 0
 834 027c 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 835 027e 1142     		tst	r1, r2	@ _6, tmp121
 836 0280 08D1     		bne	.L50	@,
ARM GAS  /tmp/ccTsJCXT.s 			page 125


 657:src/stm32f1xx_hal_tim.c **** 
 837              		.loc 1 657 0 is_stmt 0 discriminator 1
 838 0282 40F24442 		movw	r2, #1092	@ tmp123,
 839 0286 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 840 0288 1142     		tst	r1, r2	@ _8, tmp123
 841 028a 02BF     		ittt	eq
 842 028c 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 843 028e 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 844 0292 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 845              	.L50:
 668:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 846              		.loc 1 668 0 is_stmt 1
 847 0294 2046     		mov	r0, r4	@, htim
 848              	.LVL76:
 849 0296 FFF7FEFF 		bl	HAL_TIM_OC_MspDeInit	@
 850              	.LVL77:
 672:src/stm32f1xx_hal_tim.c **** 
 851              		.loc 1 672 0
 852 029a 0020     		movs	r0, #0	@ tmp125,
 853 029c 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
 675:src/stm32f1xx_hal_tim.c **** 
 854              		.loc 1 675 0
 855 02a0 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
 678:src/stm32f1xx_hal_tim.c **** 
 856              		.loc 1 678 0
 857 02a4 10BD     		pop	{r4, pc}	@
 858              		.cfi_endproc
 859              	.LFE76:
 860              		.size	HAL_TIM_OC_DeInit, .-HAL_TIM_OC_DeInit
 861              		.align	1
 862              		.weak	HAL_TIM_PWM_MspInit
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu softvfp
 867              		.type	HAL_TIM_PWM_MspInit, %function
 868              	HAL_TIM_PWM_MspInit:
 869              	.LFB212:
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 02a6 7047     		bx	lr	@
 875              		.cfi_endproc
 876              	.LFE212:
 877              		.size	HAL_TIM_PWM_MspInit, .-HAL_TIM_PWM_MspInit
 878              		.align	1
 879              		.weak	HAL_TIM_PWM_MspDeInit
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu softvfp
 884              		.type	HAL_TIM_PWM_MspDeInit, %function
 885              	HAL_TIM_PWM_MspDeInit:
 886              	.LFB210:
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccTsJCXT.s 			page 126


 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 02a8 7047     		bx	lr	@
 892              		.cfi_endproc
 893              	.LFE210:
 894              		.size	HAL_TIM_PWM_MspDeInit, .-HAL_TIM_PWM_MspDeInit
 895              		.align	1
 896              		.global	HAL_TIM_PWM_DeInit
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu softvfp
 901              		.type	HAL_TIM_PWM_DeInit, %function
 902              	HAL_TIM_PWM_DeInit:
 903              	.LFB86:
1223:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 904              		.loc 1 1223 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL78:
1227:src/stm32f1xx_hal_tim.c **** 
 909              		.loc 1 1227 0
 910 02aa 0223     		movs	r3, #2	@ tmp119,
1230:src/stm32f1xx_hal_tim.c **** 
 911              		.loc 1 1230 0
 912 02ac 41F21112 		movw	r2, #4369	@ tmp121,
1223:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 913              		.loc 1 1223 0
 914 02b0 10B5     		push	{r4, lr}	@
 915              	.LCFI7:
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 4, -8
 918              		.cfi_offset 14, -4
1227:src/stm32f1xx_hal_tim.c **** 
 919              		.loc 1 1227 0
 920 02b2 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
1230:src/stm32f1xx_hal_tim.c **** 
 921              		.loc 1 1230 0
 922 02b6 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
1223:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 923              		.loc 1 1223 0
 924 02b8 0446     		mov	r4, r0	@ htim, htim
1230:src/stm32f1xx_hal_tim.c **** 
 925              		.loc 1 1230 0
 926 02ba 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 927 02bc 1142     		tst	r1, r2	@ _6, tmp121
 928 02be 08D1     		bne	.L54	@,
1230:src/stm32f1xx_hal_tim.c **** 
 929              		.loc 1 1230 0 is_stmt 0 discriminator 1
 930 02c0 40F24442 		movw	r2, #1092	@ tmp123,
 931 02c4 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 932 02c6 1142     		tst	r1, r2	@ _8, tmp123
 933 02c8 02BF     		ittt	eq
 934 02ca 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 935 02cc 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 936 02d0 1A60     		streq	r2, [r3]	@ _11, _5->CR1
ARM GAS  /tmp/ccTsJCXT.s 			page 127


 937              	.L54:
1241:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 938              		.loc 1 1241 0 is_stmt 1
 939 02d2 2046     		mov	r0, r4	@, htim
 940              	.LVL79:
 941 02d4 FFF7FEFF 		bl	HAL_TIM_PWM_MspDeInit	@
 942              	.LVL80:
1245:src/stm32f1xx_hal_tim.c **** 
 943              		.loc 1 1245 0
 944 02d8 0020     		movs	r0, #0	@ tmp125,
 945 02da 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
1248:src/stm32f1xx_hal_tim.c **** 
 946              		.loc 1 1248 0
 947 02de 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
1251:src/stm32f1xx_hal_tim.c **** 
 948              		.loc 1 1251 0
 949 02e2 10BD     		pop	{r4, pc}	@
 950              		.cfi_endproc
 951              	.LFE86:
 952              		.size	HAL_TIM_PWM_DeInit, .-HAL_TIM_PWM_DeInit
 953              		.align	1
 954              		.weak	HAL_TIM_IC_MspInit
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 959              		.type	HAL_TIM_IC_MspInit, %function
 960              	HAL_TIM_IC_MspInit:
 961              	.LFB208:
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 966 02e4 7047     		bx	lr	@
 967              		.cfi_endproc
 968              	.LFE208:
 969              		.size	HAL_TIM_IC_MspInit, .-HAL_TIM_IC_MspInit
 970              		.align	1
 971              		.weak	HAL_TIM_IC_MspDeInit
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu softvfp
 976              		.type	HAL_TIM_IC_MspDeInit, %function
 977              	HAL_TIM_IC_MspDeInit:
 978              	.LFB206:
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 02e6 7047     		bx	lr	@
 984              		.cfi_endproc
 985              	.LFE206:
 986              		.size	HAL_TIM_IC_MspDeInit, .-HAL_TIM_IC_MspDeInit
 987              		.align	1
 988              		.global	HAL_TIM_IC_DeInit
 989              		.syntax unified
ARM GAS  /tmp/ccTsJCXT.s 			page 128


 990              		.thumb
 991              		.thumb_func
 992              		.fpu softvfp
 993              		.type	HAL_TIM_IC_DeInit, %function
 994              	HAL_TIM_IC_DeInit:
 995              	.LFB96:
1797:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 996              		.loc 1 1797 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL81:
1801:src/stm32f1xx_hal_tim.c **** 
 1001              		.loc 1 1801 0
 1002 02e8 0223     		movs	r3, #2	@ tmp119,
1804:src/stm32f1xx_hal_tim.c **** 
 1003              		.loc 1 1804 0
 1004 02ea 41F21112 		movw	r2, #4369	@ tmp121,
1797:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1005              		.loc 1 1797 0
 1006 02ee 10B5     		push	{r4, lr}	@
 1007              	.LCFI8:
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 4, -8
 1010              		.cfi_offset 14, -4
1801:src/stm32f1xx_hal_tim.c **** 
 1011              		.loc 1 1801 0
 1012 02f0 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
1804:src/stm32f1xx_hal_tim.c **** 
 1013              		.loc 1 1804 0
 1014 02f4 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
1797:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1015              		.loc 1 1797 0
 1016 02f6 0446     		mov	r4, r0	@ htim, htim
1804:src/stm32f1xx_hal_tim.c **** 
 1017              		.loc 1 1804 0
 1018 02f8 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 1019 02fa 1142     		tst	r1, r2	@ _6, tmp121
 1020 02fc 08D1     		bne	.L58	@,
1804:src/stm32f1xx_hal_tim.c **** 
 1021              		.loc 1 1804 0 is_stmt 0 discriminator 1
 1022 02fe 40F24442 		movw	r2, #1092	@ tmp123,
 1023 0302 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 1024 0304 1142     		tst	r1, r2	@ _8, tmp123
 1025 0306 02BF     		ittt	eq
 1026 0308 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 1027 030a 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 1028 030e 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 1029              	.L58:
1815:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 1030              		.loc 1 1815 0 is_stmt 1
 1031 0310 2046     		mov	r0, r4	@, htim
 1032              	.LVL82:
 1033 0312 FFF7FEFF 		bl	HAL_TIM_IC_MspDeInit	@
 1034              	.LVL83:
1819:src/stm32f1xx_hal_tim.c **** 
 1035              		.loc 1 1819 0
ARM GAS  /tmp/ccTsJCXT.s 			page 129


 1036 0316 0020     		movs	r0, #0	@ tmp125,
 1037 0318 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
1822:src/stm32f1xx_hal_tim.c **** 
 1038              		.loc 1 1822 0
 1039 031c 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
1825:src/stm32f1xx_hal_tim.c **** 
 1040              		.loc 1 1825 0
 1041 0320 10BD     		pop	{r4, pc}	@
 1042              		.cfi_endproc
 1043              	.LFE96:
 1044              		.size	HAL_TIM_IC_DeInit, .-HAL_TIM_IC_DeInit
 1045              		.align	1
 1046              		.weak	HAL_TIM_OnePulse_MspInit
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1050              		.fpu softvfp
 1051              		.type	HAL_TIM_OnePulse_MspInit, %function
 1052              	HAL_TIM_OnePulse_MspInit:
 1053              	.LFB204:
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0322 7047     		bx	lr	@
 1059              		.cfi_endproc
 1060              	.LFE204:
 1061              		.size	HAL_TIM_OnePulse_MspInit, .-HAL_TIM_OnePulse_MspInit
 1062              		.align	1
 1063              		.weak	HAL_TIM_OnePulse_MspDeInit
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1067              		.fpu softvfp
 1068              		.type	HAL_TIM_OnePulse_MspDeInit, %function
 1069              	HAL_TIM_OnePulse_MspDeInit:
 1070              	.LFB202:
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075 0324 7047     		bx	lr	@
 1076              		.cfi_endproc
 1077              	.LFE202:
 1078              		.size	HAL_TIM_OnePulse_MspDeInit, .-HAL_TIM_OnePulse_MspDeInit
 1079              		.align	1
 1080              		.global	HAL_TIM_OnePulse_DeInit
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu softvfp
 1085              		.type	HAL_TIM_OnePulse_DeInit, %function
 1086              	HAL_TIM_OnePulse_DeInit:
 1087              	.LFB106:
2343:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1088              		.loc 1 2343 0
 1089              		.cfi_startproc
ARM GAS  /tmp/ccTsJCXT.s 			page 130


 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              	.LVL84:
2347:src/stm32f1xx_hal_tim.c **** 
 1093              		.loc 1 2347 0
 1094 0326 0223     		movs	r3, #2	@ tmp119,
2350:src/stm32f1xx_hal_tim.c **** 
 1095              		.loc 1 2350 0
 1096 0328 41F21112 		movw	r2, #4369	@ tmp121,
2343:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1097              		.loc 1 2343 0
 1098 032c 10B5     		push	{r4, lr}	@
 1099              	.LCFI9:
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 4, -8
 1102              		.cfi_offset 14, -4
2347:src/stm32f1xx_hal_tim.c **** 
 1103              		.loc 1 2347 0
 1104 032e 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
2350:src/stm32f1xx_hal_tim.c **** 
 1105              		.loc 1 2350 0
 1106 0332 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
2343:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1107              		.loc 1 2343 0
 1108 0334 0446     		mov	r4, r0	@ htim, htim
2350:src/stm32f1xx_hal_tim.c **** 
 1109              		.loc 1 2350 0
 1110 0336 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 1111 0338 1142     		tst	r1, r2	@ _6, tmp121
 1112 033a 08D1     		bne	.L62	@,
2350:src/stm32f1xx_hal_tim.c **** 
 1113              		.loc 1 2350 0 is_stmt 0 discriminator 1
 1114 033c 40F24442 		movw	r2, #1092	@ tmp123,
 1115 0340 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 1116 0342 1142     		tst	r1, r2	@ _8, tmp123
 1117 0344 02BF     		ittt	eq
 1118 0346 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 1119 0348 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 1120 034c 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 1121              	.L62:
2361:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 1122              		.loc 1 2361 0 is_stmt 1
 1123 034e 2046     		mov	r0, r4	@, htim
 1124              	.LVL85:
 1125 0350 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspDeInit	@
 1126              	.LVL86:
2365:src/stm32f1xx_hal_tim.c **** 
 1127              		.loc 1 2365 0
 1128 0354 0020     		movs	r0, #0	@ tmp125,
 1129 0356 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
2368:src/stm32f1xx_hal_tim.c **** 
 1130              		.loc 1 2368 0
 1131 035a 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
2371:src/stm32f1xx_hal_tim.c **** 
 1132              		.loc 1 2371 0
 1133 035e 10BD     		pop	{r4, pc}	@
 1134              		.cfi_endproc
ARM GAS  /tmp/ccTsJCXT.s 			page 131


 1135              	.LFE106:
 1136              		.size	HAL_TIM_OnePulse_DeInit, .-HAL_TIM_OnePulse_DeInit
 1137              		.align	1
 1138              		.global	HAL_TIM_OnePulse_Start
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu softvfp
 1143              		.type	HAL_TIM_OnePulse_Start, %function
 1144              	HAL_TIM_OnePulse_Start:
 1145              	.LFB109:
2413:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 1146              		.loc 1 2413 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              		@ link register save eliminated.
 1151              	.LVL87:
2426:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 1152              		.loc 1 2426 0
 1153 0360 0368     		ldr	r3, [r0]	@ _4, htim_3(D)->Instance
 1154              	.LVL88:
2437:src/stm32f1xx_hal_tim.c **** 
 1155              		.loc 1 2437 0
 1156 0362 0020     		movs	r0, #0	@,
 1157              	.LVL89:
 1158              	.LBB66:
 1159              	.LBB67:
6135:src/stm32f1xx_hal_tim.c **** }
6136:src/stm32f1xx_hal_tim.c **** 
6137:src/stm32f1xx_hal_tim.c **** /**
6138:src/stm32f1xx_hal_tim.c ****   * @brief  Slave Timer configuration function
6139:src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
6140:src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig Slave timer configuration
6141:src/stm32f1xx_hal_tim.c ****   * @retval None
6142:src/stm32f1xx_hal_tim.c ****   */
6143:src/stm32f1xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
6144:src/stm32f1xx_hal_tim.c ****                                                   TIM_SlaveConfigTypeDef *sSlaveConfig)
6145:src/stm32f1xx_hal_tim.c **** {
6146:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
6147:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
6148:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6149:src/stm32f1xx_hal_tim.c **** 
6150:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
6151:src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
6152:src/stm32f1xx_hal_tim.c **** 
6153:src/stm32f1xx_hal_tim.c ****   /* Reset the Trigger Selection Bits */
6154:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
6155:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source */
6156:src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
6157:src/stm32f1xx_hal_tim.c **** 
6158:src/stm32f1xx_hal_tim.c ****   /* Reset the slave mode Bits */
6159:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
6160:src/stm32f1xx_hal_tim.c ****   /* Set the slave mode */
6161:src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
6162:src/stm32f1xx_hal_tim.c **** 
6163:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
ARM GAS  /tmp/ccTsJCXT.s 			page 132


6164:src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
6165:src/stm32f1xx_hal_tim.c **** 
6166:src/stm32f1xx_hal_tim.c ****   /* Configure the trigger prescaler, filter, and polarity */
6167:src/stm32f1xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
6168:src/stm32f1xx_hal_tim.c ****   {
6169:src/stm32f1xx_hal_tim.c ****     case TIM_TS_ETRF:
6170:src/stm32f1xx_hal_tim.c ****     {
6171:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
6172:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
6173:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPRESCALER(sSlaveConfig->TriggerPrescaler));
6174:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
6175:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
6176:src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Trigger source */
6177:src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
6178:src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
6179:src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPolarity,
6180:src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerFilter);
6181:src/stm32f1xx_hal_tim.c ****       break;
6182:src/stm32f1xx_hal_tim.c ****     }
6183:src/stm32f1xx_hal_tim.c **** 
6184:src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI1F_ED:
6185:src/stm32f1xx_hal_tim.c ****     {
6186:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
6187:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
6188:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
6189:src/stm32f1xx_hal_tim.c **** 
6190:src/stm32f1xx_hal_tim.c ****       if(sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
6191:src/stm32f1xx_hal_tim.c ****       {
6192:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
6193:src/stm32f1xx_hal_tim.c ****       }
6194:src/stm32f1xx_hal_tim.c **** 
6195:src/stm32f1xx_hal_tim.c ****       /* Disable the Channel 1: Reset the CC1E Bit */
6196:src/stm32f1xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
6197:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
6198:src/stm32f1xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
6199:src/stm32f1xx_hal_tim.c **** 
6200:src/stm32f1xx_hal_tim.c ****       /* Set the filter */
6201:src/stm32f1xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
6202:src/stm32f1xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
6203:src/stm32f1xx_hal_tim.c **** 
6204:src/stm32f1xx_hal_tim.c ****       /* Write to TIMx CCMR1 and CCER registers */
6205:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
6206:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;
6207:src/stm32f1xx_hal_tim.c ****       break;
6208:src/stm32f1xx_hal_tim.c ****     }
6209:src/stm32f1xx_hal_tim.c **** 
6210:src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI1FP1:
6211:src/stm32f1xx_hal_tim.c ****     {
6212:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
6213:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
6214:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
6215:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
6216:src/stm32f1xx_hal_tim.c **** 
6217:src/stm32f1xx_hal_tim.c ****       /* Configure TI1 Filter and Polarity */
6218:src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
6219:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
6220:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
ARM GAS  /tmp/ccTsJCXT.s 			page 133


6221:src/stm32f1xx_hal_tim.c ****       break;
6222:src/stm32f1xx_hal_tim.c ****     }
6223:src/stm32f1xx_hal_tim.c **** 
6224:src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI2FP2:
6225:src/stm32f1xx_hal_tim.c ****     {
6226:src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
6227:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
6228:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
6229:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
6230:src/stm32f1xx_hal_tim.c **** 
6231:src/stm32f1xx_hal_tim.c ****       /* Configure TI2 Filter and Polarity */
6232:src/stm32f1xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
6233:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
6234:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
6235:src/stm32f1xx_hal_tim.c ****       break;
6236:src/stm32f1xx_hal_tim.c ****     }
6237:src/stm32f1xx_hal_tim.c **** 
6238:src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR0:
6239:src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR1:
6240:src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR2:
6241:src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR3:
6242:src/stm32f1xx_hal_tim.c ****     {
6243:src/stm32f1xx_hal_tim.c ****       /* Check the parameter */
6244:src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
6245:src/stm32f1xx_hal_tim.c ****       break;
6246:src/stm32f1xx_hal_tim.c ****     }
6247:src/stm32f1xx_hal_tim.c **** 
6248:src/stm32f1xx_hal_tim.c ****     default:
6249:src/stm32f1xx_hal_tim.c ****       break;
6250:src/stm32f1xx_hal_tim.c ****   }
6251:src/stm32f1xx_hal_tim.c ****   return HAL_OK;
6252:src/stm32f1xx_hal_tim.c **** }
6253:src/stm32f1xx_hal_tim.c **** 
6254:src/stm32f1xx_hal_tim.c **** /**
6255:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI1 as Input.
6256:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
6257:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6258:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6259:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6260:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6261:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
6262:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
6263:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6264:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 1 is selected to be connected to IC1.
6265:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 1 is selected to be connected to IC2.
6266:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 1 is selected to be connected to TRC.
6267:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6268:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6269:src/stm32f1xx_hal_tim.c ****   * @retval None
6270:src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI2FP1
6271:src/stm32f1xx_hal_tim.c ****   *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
6272:src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
6273:src/stm32f1xx_hal_tim.c ****   */
6274:src/stm32f1xx_hal_tim.c **** void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
6275:src/stm32f1xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
6276:src/stm32f1xx_hal_tim.c **** {
6277:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
ARM GAS  /tmp/ccTsJCXT.s 			page 134


6278:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6279:src/stm32f1xx_hal_tim.c **** 
6280:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
6281:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
6282:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
6283:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6284:src/stm32f1xx_hal_tim.c **** 
6285:src/stm32f1xx_hal_tim.c ****   /* Select the Input */
6286:src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
6287:src/stm32f1xx_hal_tim.c ****   {
6288:src/stm32f1xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
6289:src/stm32f1xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
6290:src/stm32f1xx_hal_tim.c ****   }
6291:src/stm32f1xx_hal_tim.c ****   else
6292:src/stm32f1xx_hal_tim.c ****   {
6293:src/stm32f1xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
6294:src/stm32f1xx_hal_tim.c ****   }
6295:src/stm32f1xx_hal_tim.c **** 
6296:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6297:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
6298:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
6299:src/stm32f1xx_hal_tim.c **** 
6300:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
6301:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
6302:src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
6303:src/stm32f1xx_hal_tim.c **** 
6304:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
6305:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
6306:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6307:src/stm32f1xx_hal_tim.c **** }
6308:src/stm32f1xx_hal_tim.c **** 
6309:src/stm32f1xx_hal_tim.c **** /**
6310:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI1.
6311:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
6312:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6313:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6314:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6315:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6316:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
6317:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6318:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6319:src/stm32f1xx_hal_tim.c ****   * @retval None
6320:src/stm32f1xx_hal_tim.c ****   */
6321:src/stm32f1xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
6322:src/stm32f1xx_hal_tim.c **** {
6323:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
6324:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6325:src/stm32f1xx_hal_tim.c **** 
6326:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
6327:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6328:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
6329:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
6330:src/stm32f1xx_hal_tim.c **** 
6331:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6332:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
6333:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
6334:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 135


6335:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
6336:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
6337:src/stm32f1xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
6338:src/stm32f1xx_hal_tim.c **** 
6339:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
6340:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
6341:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6342:src/stm32f1xx_hal_tim.c **** }
6343:src/stm32f1xx_hal_tim.c **** 
6344:src/stm32f1xx_hal_tim.c **** /**
6345:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI2 as Input.
6346:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6347:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6348:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6349:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6350:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6351:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
6352:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
6353:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6354:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 2 is selected to be connected to IC2.
6355:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 2 is selected to be connected to IC1.
6356:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 2 is selected to be connected to TRC.
6357:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6358:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6359:src/stm32f1xx_hal_tim.c ****   * @retval None
6360:src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI1FP2
6361:src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
6362:src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
6363:src/stm32f1xx_hal_tim.c ****   */
6364:src/stm32f1xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
6365:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
6366:src/stm32f1xx_hal_tim.c **** {
6367:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
6368:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6369:src/stm32f1xx_hal_tim.c **** 
6370:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
6371:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
6372:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
6373:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6374:src/stm32f1xx_hal_tim.c **** 
6375:src/stm32f1xx_hal_tim.c ****   /* Select the Input */
6376:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_CC2S;
6377:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
6378:src/stm32f1xx_hal_tim.c **** 
6379:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6380:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
6381:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
6382:src/stm32f1xx_hal_tim.c **** 
6383:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
6384:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
6385:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
6386:src/stm32f1xx_hal_tim.c **** 
6387:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
6388:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
6389:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6390:src/stm32f1xx_hal_tim.c **** }
6391:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 136


6392:src/stm32f1xx_hal_tim.c **** /**
6393:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI2.
6394:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
6395:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6396:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6397:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6398:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6399:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
6400:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6401:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6402:src/stm32f1xx_hal_tim.c ****   * @retval None
6403:src/stm32f1xx_hal_tim.c ****   */
6404:src/stm32f1xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
6405:src/stm32f1xx_hal_tim.c **** {
6406:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
6407:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6408:src/stm32f1xx_hal_tim.c **** 
6409:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
6410:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
6411:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
6412:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6413:src/stm32f1xx_hal_tim.c **** 
6414:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6415:src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
6416:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
6417:src/stm32f1xx_hal_tim.c **** 
6418:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
6419:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
6420:src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
6421:src/stm32f1xx_hal_tim.c **** 
6422:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
6423:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
6424:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6425:src/stm32f1xx_hal_tim.c **** }
6426:src/stm32f1xx_hal_tim.c **** 
6427:src/stm32f1xx_hal_tim.c **** /**
6428:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI3 as Input.
6429:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6430:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6431:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6432:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6433:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6434:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
6435:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6436:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 3 is selected to be connected to IC3.
6437:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 3 is selected to be connected to IC4.
6438:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 3 is selected to be connected to TRC.
6439:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6440:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6441:src/stm32f1xx_hal_tim.c ****   * @retval None
6442:src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI3FP4
6443:src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
6444:src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
6445:src/stm32f1xx_hal_tim.c ****   */
6446:src/stm32f1xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
6447:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
6448:src/stm32f1xx_hal_tim.c **** {
ARM GAS  /tmp/ccTsJCXT.s 			page 137


6449:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr2;
6450:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6451:src/stm32f1xx_hal_tim.c **** 
6452:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
6453:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
6454:src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
6455:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6456:src/stm32f1xx_hal_tim.c **** 
6457:src/stm32f1xx_hal_tim.c ****   /* Select the Input */
6458:src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC3S;
6459:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
6460:src/stm32f1xx_hal_tim.c **** 
6461:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6462:src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC3F;
6463:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
6464:src/stm32f1xx_hal_tim.c **** 
6465:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC3E Bit */
6466:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC3P);
6467:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & TIM_CCER_CC3P);
6468:src/stm32f1xx_hal_tim.c **** 
6469:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
6470:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
6471:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6472:src/stm32f1xx_hal_tim.c **** }
6473:src/stm32f1xx_hal_tim.c **** 
6474:src/stm32f1xx_hal_tim.c **** /**
6475:src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI4 as Input.
6476:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6477:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
6478:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6479:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
6480:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
6481:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
6482:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6483:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 4 is selected to be connected to IC4.
6484:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 4 is selected to be connected to IC3.
6485:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 4 is selected to be connected to TRC.
6486:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
6487:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
6488:src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI4FP3
6489:src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
6490:src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
6491:src/stm32f1xx_hal_tim.c ****   * @retval None
6492:src/stm32f1xx_hal_tim.c ****   */
6493:src/stm32f1xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
6494:src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
6495:src/stm32f1xx_hal_tim.c **** {
6496:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr2;
6497:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6498:src/stm32f1xx_hal_tim.c **** 
6499:src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
6500:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
6501:src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
6502:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6503:src/stm32f1xx_hal_tim.c **** 
6504:src/stm32f1xx_hal_tim.c ****   /* Select the Input */
6505:src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC4S;
ARM GAS  /tmp/ccTsJCXT.s 			page 138


6506:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
6507:src/stm32f1xx_hal_tim.c **** 
6508:src/stm32f1xx_hal_tim.c ****   /* Set the filter */
6509:src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC4F;
6510:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
6511:src/stm32f1xx_hal_tim.c **** 
6512:src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC4E Bit */
6513:src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC4P);
6514:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & TIM_CCER_CC4P);
6515:src/stm32f1xx_hal_tim.c **** 
6516:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
6517:src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
6518:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
6519:src/stm32f1xx_hal_tim.c **** }
6520:src/stm32f1xx_hal_tim.c **** 
6521:src/stm32f1xx_hal_tim.c **** /**
6522:src/stm32f1xx_hal_tim.c ****   * @brief  Selects the Input Trigger source
6523:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6524:src/stm32f1xx_hal_tim.c ****   * @param  InputTriggerSource The Input Trigger source.
6525:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6526:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
6527:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
6528:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
6529:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
6530:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
6531:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
6532:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
6533:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
6534:src/stm32f1xx_hal_tim.c ****   * @retval None
6535:src/stm32f1xx_hal_tim.c ****   */
6536:src/stm32f1xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
6537:src/stm32f1xx_hal_tim.c **** {
6538:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
6539:src/stm32f1xx_hal_tim.c **** 
6540:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
6541:src/stm32f1xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
6542:src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
6543:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
6544:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
6545:src/stm32f1xx_hal_tim.c ****   tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
6546:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
6547:src/stm32f1xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
6548:src/stm32f1xx_hal_tim.c **** }
6549:src/stm32f1xx_hal_tim.c **** /**
6550:src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
6551:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6552:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ExtTRGPrescaler The external Trigger Prescaler.
6553:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6554:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV1: ETRP Prescaler OFF.
6555:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV2: ETRP frequency divided by 2.
6556:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV4: ETRP frequency divided by 4.
6557:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV8: ETRP frequency divided by 8.
6558:src/stm32f1xx_hal_tim.c ****   * @param  TIM_ExtTRGPolarity The external Trigger Polarity.
6559:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6560:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_INVERTED: active low or falling edge active.
6561:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_NONINVERTED: active high or rising edge active.
6562:src/stm32f1xx_hal_tim.c ****   * @param  ExtTRGFilter External Trigger Filter.
ARM GAS  /tmp/ccTsJCXT.s 			page 139


6563:src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
6564:src/stm32f1xx_hal_tim.c ****   * @retval None
6565:src/stm32f1xx_hal_tim.c ****   */
6566:src/stm32f1xx_hal_tim.c **** void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
6567:src/stm32f1xx_hal_tim.c ****                        uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
6568:src/stm32f1xx_hal_tim.c **** {
6569:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
6570:src/stm32f1xx_hal_tim.c **** 
6571:src/stm32f1xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
6572:src/stm32f1xx_hal_tim.c **** 
6573:src/stm32f1xx_hal_tim.c ****   /* Reset the ETR Bits */
6574:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
6575:src/stm32f1xx_hal_tim.c **** 
6576:src/stm32f1xx_hal_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
6577:src/stm32f1xx_hal_tim.c ****   tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
6578:src/stm32f1xx_hal_tim.c **** 
6579:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
6580:src/stm32f1xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
6581:src/stm32f1xx_hal_tim.c **** }
6582:src/stm32f1xx_hal_tim.c **** 
6583:src/stm32f1xx_hal_tim.c **** /**
6584:src/stm32f1xx_hal_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
6585:src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6586:src/stm32f1xx_hal_tim.c ****   * @param  Channel specifies the TIM Channel
6587:src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6588:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
6589:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
6590:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
6591:src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
6592:src/stm32f1xx_hal_tim.c ****   * @param  ChannelState specifies the TIM Channel CCxE bit new state.
6593:src/stm32f1xx_hal_tim.c ****   *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
6594:src/stm32f1xx_hal_tim.c ****   * @retval None
6595:src/stm32f1xx_hal_tim.c ****   */
6596:src/stm32f1xx_hal_tim.c **** void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
6597:src/stm32f1xx_hal_tim.c **** {
6598:src/stm32f1xx_hal_tim.c ****   uint32_t tmp;
6599:src/stm32f1xx_hal_tim.c **** 
6600:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
6601:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(TIMx));
6602:src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
6603:src/stm32f1xx_hal_tim.c **** 
6604:src/stm32f1xx_hal_tim.c ****   tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
6605:src/stm32f1xx_hal_tim.c **** 
6606:src/stm32f1xx_hal_tim.c ****   /* Reset the CCxE Bit */
6607:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~tmp;
 1160              		.loc 1 6607 0
 1161 0364 1A6A     		ldr	r2, [r3, #32]	@ _12, _4->CCER
 1162 0366 22F00102 		bic	r2, r2, #1	@ _13, _12,
 1163 036a 1A62     		str	r2, [r3, #32]	@ _13, _4->CCER
6608:src/stm32f1xx_hal_tim.c **** 
6609:src/stm32f1xx_hal_tim.c ****   /* Set or reset the CCxE Bit */
6610:src/stm32f1xx_hal_tim.c ****   TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 1164              		.loc 1 6610 0
 1165 036c 1A6A     		ldr	r2, [r3, #32]	@ _14, _4->CCER
 1166 036e 42F00102 		orr	r2, r2, #1	@ _15, _14,
 1167 0372 1A62     		str	r2, [r3, #32]	@ _15, _4->CCER
 1168              	.LVL90:
ARM GAS  /tmp/ccTsJCXT.s 			page 140


 1169              	.LBE67:
 1170              	.LBE66:
 1171              	.LBB68:
 1172              	.LBB69:
6607:src/stm32f1xx_hal_tim.c **** 
 1173              		.loc 1 6607 0
 1174 0374 1A6A     		ldr	r2, [r3, #32]	@ _8, _4->CCER
 1175 0376 22F01002 		bic	r2, r2, #16	@ _9, _8,
 1176 037a 1A62     		str	r2, [r3, #32]	@ _9, _4->CCER
 1177              		.loc 1 6610 0
 1178 037c 1A6A     		ldr	r2, [r3, #32]	@ _10, _4->CCER
 1179 037e 42F01002 		orr	r2, r2, #16	@ _11, _10,
 1180 0382 1A62     		str	r2, [r3, #32]	@ _11, _4->CCER
 1181              	.LVL91:
 1182              	.LBE69:
 1183              	.LBE68:
2429:src/stm32f1xx_hal_tim.c ****   {
 1184              		.loc 1 2429 0
 1185 0384 034A     		ldr	r2, .L65	@ tmp124,
 1186 0386 9342     		cmp	r3, r2	@ _4, tmp124
2432:src/stm32f1xx_hal_tim.c ****   }
 1187              		.loc 1 2432 0
 1188 0388 02BF     		ittt	eq
 1189 038a 5A6C     		ldreq	r2, [r3, #68]	@ _5, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1190 038c 42F40042 		orreq	r2, r2, #32768	@ _6, _5,
 1191 0390 5A64     		streq	r2, [r3, #68]	@ _6, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
2437:src/stm32f1xx_hal_tim.c **** 
 1192              		.loc 1 2437 0
 1193 0392 7047     		bx	lr	@
 1194              	.L66:
 1195              		.align	2
 1196              	.L65:
 1197 0394 002C0140 		.word	1073818624
 1198              		.cfi_endproc
 1199              	.LFE109:
 1200              		.size	HAL_TIM_OnePulse_Start, .-HAL_TIM_OnePulse_Start
 1201              		.align	1
 1202              		.global	HAL_TIM_OnePulse_Stop
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu softvfp
 1207              		.type	HAL_TIM_OnePulse_Stop, %function
 1208              	HAL_TIM_OnePulse_Stop:
 1209              	.LFB110:
2449:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 1210              		.loc 1 2449 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              	.LVL92:
2459:src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 1216              		.loc 1 2459 0
 1217 0398 0368     		ldr	r3, [r0]	@ _5, htim_4(D)->Instance
 1218              	.LVL93:
 1219              	.LBB70:
ARM GAS  /tmp/ccTsJCXT.s 			page 141


 1220              	.LBB71:
6607:src/stm32f1xx_hal_tim.c **** 
 1221              		.loc 1 6607 0
 1222 039a 1A6A     		ldr	r2, [r3, #32]	@ _23, _5->CCER
 1223 039c 22F00102 		bic	r2, r2, #1	@ _24, _23,
 1224 03a0 1A62     		str	r2, [r3, #32]	@ _24, _5->CCER
 1225              		.loc 1 6610 0
 1226 03a2 1A6A     		ldr	r2, [r3, #32]	@ _25, _5->CCER
 1227 03a4 1A62     		str	r2, [r3, #32]	@ _25, _5->CCER
 1228              	.LVL94:
 1229              	.LBE71:
 1230              	.LBE70:
 1231              	.LBB72:
 1232              	.LBB73:
6607:src/stm32f1xx_hal_tim.c **** 
 1233              		.loc 1 6607 0
 1234 03a6 1A6A     		ldr	r2, [r3, #32]	@ _20, _5->CCER
 1235 03a8 22F01002 		bic	r2, r2, #16	@ _21, _20,
 1236 03ac 1A62     		str	r2, [r3, #32]	@ _21, _5->CCER
 1237              		.loc 1 6610 0
 1238 03ae 1A6A     		ldr	r2, [r3, #32]	@ _22, _5->CCER
 1239 03b0 1A62     		str	r2, [r3, #32]	@ _22, _5->CCER
 1240              	.LVL95:
 1241              	.LBE73:
 1242              	.LBE72:
2462:src/stm32f1xx_hal_tim.c ****   {
 1243              		.loc 1 2462 0
 1244 03b2 104A     		ldr	r2, .L70	@ tmp132,
 1245 03b4 9342     		cmp	r3, r2	@ _5, tmp132
 1246 03b6 0DD1     		bne	.L68	@,
2465:src/stm32f1xx_hal_tim.c ****   }
 1247              		.loc 1 2465 0
 1248 03b8 41F21112 		movw	r2, #4369	@ tmp134,
 1249 03bc 196A     		ldr	r1, [r3, #32]	@ _6, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 1250              	.LVL96:
 1251 03be 1142     		tst	r1, r2	@ _6, tmp134
 1252 03c0 08D1     		bne	.L68	@,
2465:src/stm32f1xx_hal_tim.c ****   }
 1253              		.loc 1 2465 0 is_stmt 0 discriminator 1
 1254 03c2 40F24442 		movw	r2, #1092	@ tmp137,
 1255 03c6 196A     		ldr	r1, [r3, #32]	@ _8, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 1256 03c8 1142     		tst	r1, r2	@ _8, tmp137
 1257 03ca 02BF     		ittt	eq
 1258 03cc 5A6C     		ldreq	r2, [r3, #68]	@ _10, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1259 03ce 22F40042 		biceq	r2, r2, #32768	@ _11, _10,
 1260 03d2 5A64     		streq	r2, [r3, #68]	@ _11, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1261              	.L68:
2469:src/stm32f1xx_hal_tim.c **** 
 1262              		.loc 1 2469 0 is_stmt 1
 1263 03d4 41F21112 		movw	r2, #4369	@ tmp141,
 1264 03d8 196A     		ldr	r1, [r3, #32]	@ _13, _5->CCER
 1265 03da 1142     		tst	r1, r2	@ _13, tmp141
 1266 03dc 08D1     		bne	.L69	@,
2469:src/stm32f1xx_hal_tim.c **** 
 1267              		.loc 1 2469 0 is_stmt 0 discriminator 1
 1268 03de 40F24442 		movw	r2, #1092	@ tmp143,
 1269 03e2 196A     		ldr	r1, [r3, #32]	@ _15, _5->CCER
ARM GAS  /tmp/ccTsJCXT.s 			page 142


 1270 03e4 1142     		tst	r1, r2	@ _15, tmp143
 1271 03e6 02BF     		ittt	eq
 1272 03e8 1A68     		ldreq	r2, [r3]	@ _17, _5->CR1
 1273 03ea 22F00102 		biceq	r2, r2, #1	@ _18, _17,
 1274 03ee 1A60     		streq	r2, [r3]	@ _18, _5->CR1
 1275              	.L69:
2473:src/stm32f1xx_hal_tim.c **** 
 1276              		.loc 1 2473 0 is_stmt 1
 1277 03f0 0020     		movs	r0, #0	@,
 1278              	.LVL97:
 1279 03f2 7047     		bx	lr	@
 1280              	.L71:
 1281              		.align	2
 1282              	.L70:
 1283 03f4 002C0140 		.word	1073818624
 1284              		.cfi_endproc
 1285              	.LFE110:
 1286              		.size	HAL_TIM_OnePulse_Stop, .-HAL_TIM_OnePulse_Stop
 1287              		.align	1
 1288              		.global	HAL_TIM_OnePulse_Start_IT
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu softvfp
 1293              		.type	HAL_TIM_OnePulse_Start_IT, %function
 1294              	HAL_TIM_OnePulse_Start_IT:
 1295              	.LFB111:
2485:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 1296              		.loc 1 2485 0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
 1301              	.LVL98:
2499:src/stm32f1xx_hal_tim.c **** 
 1302              		.loc 1 2499 0
 1303 03f8 0368     		ldr	r3, [r0]	@ _4, htim_3(D)->Instance
2515:src/stm32f1xx_hal_tim.c **** 
 1304              		.loc 1 2515 0
 1305 03fa 0020     		movs	r0, #0	@,
 1306              	.LVL99:
2499:src/stm32f1xx_hal_tim.c **** 
 1307              		.loc 1 2499 0
 1308 03fc DA68     		ldr	r2, [r3, #12]	@ _5, _4->DIER
 1309 03fe 42F00202 		orr	r2, r2, #2	@ _6, _5,
 1310 0402 DA60     		str	r2, [r3, #12]	@ _6, _4->DIER
2502:src/stm32f1xx_hal_tim.c **** 
 1311              		.loc 1 2502 0
 1312 0404 DA68     		ldr	r2, [r3, #12]	@ _8, _4->DIER
 1313 0406 42F00402 		orr	r2, r2, #4	@ _9, _8,
 1314 040a DA60     		str	r2, [r3, #12]	@ _9, _4->DIER
 1315              	.LVL100:
 1316              	.LBB74:
 1317              	.LBB75:
6607:src/stm32f1xx_hal_tim.c **** 
 1318              		.loc 1 6607 0
 1319 040c 1A6A     		ldr	r2, [r3, #32]	@ _18, _4->CCER
ARM GAS  /tmp/ccTsJCXT.s 			page 143


 1320 040e 22F00102 		bic	r2, r2, #1	@ _19, _18,
 1321 0412 1A62     		str	r2, [r3, #32]	@ _19, _4->CCER
 1322              		.loc 1 6610 0
 1323 0414 1A6A     		ldr	r2, [r3, #32]	@ _20, _4->CCER
 1324 0416 42F00102 		orr	r2, r2, #1	@ _21, _20,
 1325 041a 1A62     		str	r2, [r3, #32]	@ _21, _4->CCER
 1326              	.LVL101:
 1327              	.LBE75:
 1328              	.LBE74:
 1329              	.LBB76:
 1330              	.LBB77:
6607:src/stm32f1xx_hal_tim.c **** 
 1331              		.loc 1 6607 0
 1332 041c 1A6A     		ldr	r2, [r3, #32]	@ _14, _4->CCER
 1333 041e 22F01002 		bic	r2, r2, #16	@ _15, _14,
 1334 0422 1A62     		str	r2, [r3, #32]	@ _15, _4->CCER
 1335              		.loc 1 6610 0
 1336 0424 1A6A     		ldr	r2, [r3, #32]	@ _16, _4->CCER
 1337 0426 42F01002 		orr	r2, r2, #16	@ _17, _16,
 1338 042a 1A62     		str	r2, [r3, #32]	@ _17, _4->CCER
 1339              	.LVL102:
 1340              	.LBE77:
 1341              	.LBE76:
2507:src/stm32f1xx_hal_tim.c ****   {
 1342              		.loc 1 2507 0
 1343 042c 034A     		ldr	r2, .L74	@ tmp128,
 1344 042e 9342     		cmp	r3, r2	@ _4, tmp128
2510:src/stm32f1xx_hal_tim.c ****   }
 1345              		.loc 1 2510 0
 1346 0430 02BF     		ittt	eq
 1347 0432 5A6C     		ldreq	r2, [r3, #68]	@ _11, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1348 0434 42F40042 		orreq	r2, r2, #32768	@ _12, _11,
 1349 0438 5A64     		streq	r2, [r3, #68]	@ _12, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
2515:src/stm32f1xx_hal_tim.c **** 
 1350              		.loc 1 2515 0
 1351 043a 7047     		bx	lr	@
 1352              	.L75:
 1353              		.align	2
 1354              	.L74:
 1355 043c 002C0140 		.word	1073818624
 1356              		.cfi_endproc
 1357              	.LFE111:
 1358              		.size	HAL_TIM_OnePulse_Start_IT, .-HAL_TIM_OnePulse_Start_IT
 1359              		.align	1
 1360              		.global	HAL_TIM_OnePulse_Stop_IT
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu softvfp
 1365              		.type	HAL_TIM_OnePulse_Stop_IT, %function
 1366              	HAL_TIM_OnePulse_Stop_IT:
 1367              	.LFB112:
2527:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 1368              		.loc 1 2527 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccTsJCXT.s 			page 144


 1372              		@ link register save eliminated.
 1373              	.LVL103:
2532:src/stm32f1xx_hal_tim.c **** 
 1374              		.loc 1 2532 0
 1375 0440 0368     		ldr	r3, [r0]	@ _5, htim_4(D)->Instance
 1376 0442 DA68     		ldr	r2, [r3, #12]	@ _6, _5->DIER
 1377 0444 22F00202 		bic	r2, r2, #2	@ _7, _6,
 1378 0448 DA60     		str	r2, [r3, #12]	@ _7, _5->DIER
2535:src/stm32f1xx_hal_tim.c **** 
 1379              		.loc 1 2535 0
 1380 044a DA68     		ldr	r2, [r3, #12]	@ _9, _5->DIER
 1381 044c 22F00402 		bic	r2, r2, #4	@ _10, _9,
 1382 0450 DA60     		str	r2, [r3, #12]	@ _10, _5->DIER
 1383              	.LVL104:
 1384              	.LBB78:
 1385              	.LBB79:
6607:src/stm32f1xx_hal_tim.c **** 
 1386              		.loc 1 6607 0
 1387 0452 1A6A     		ldr	r2, [r3, #32]	@ _29, _5->CCER
 1388 0454 22F00102 		bic	r2, r2, #1	@ _30, _29,
 1389 0458 1A62     		str	r2, [r3, #32]	@ _30, _5->CCER
 1390              		.loc 1 6610 0
 1391 045a 1A6A     		ldr	r2, [r3, #32]	@ _31, _5->CCER
 1392 045c 1A62     		str	r2, [r3, #32]	@ _31, _5->CCER
 1393              	.LVL105:
 1394              	.LBE79:
 1395              	.LBE78:
 1396              	.LBB80:
 1397              	.LBB81:
6607:src/stm32f1xx_hal_tim.c **** 
 1398              		.loc 1 6607 0
 1399 045e 1A6A     		ldr	r2, [r3, #32]	@ _26, _5->CCER
 1400 0460 22F01002 		bic	r2, r2, #16	@ _27, _26,
 1401 0464 1A62     		str	r2, [r3, #32]	@ _27, _5->CCER
 1402              		.loc 1 6610 0
 1403 0466 1A6A     		ldr	r2, [r3, #32]	@ _28, _5->CCER
 1404 0468 1A62     		str	r2, [r3, #32]	@ _28, _5->CCER
 1405              	.LVL106:
 1406              	.LBE81:
 1407              	.LBE80:
2545:src/stm32f1xx_hal_tim.c ****   {
 1408              		.loc 1 2545 0
 1409 046a 104A     		ldr	r2, .L79	@ tmp136,
 1410 046c 9342     		cmp	r3, r2	@ _5, tmp136
 1411 046e 0DD1     		bne	.L77	@,
2548:src/stm32f1xx_hal_tim.c ****   }
 1412              		.loc 1 2548 0
 1413 0470 41F21112 		movw	r2, #4369	@ tmp138,
 1414 0474 196A     		ldr	r1, [r3, #32]	@ _12, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 1415              	.LVL107:
 1416 0476 1142     		tst	r1, r2	@ _12, tmp138
 1417 0478 08D1     		bne	.L77	@,
2548:src/stm32f1xx_hal_tim.c ****   }
 1418              		.loc 1 2548 0 is_stmt 0 discriminator 1
 1419 047a 40F24442 		movw	r2, #1092	@ tmp141,
 1420 047e 196A     		ldr	r1, [r3, #32]	@ _14, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 1421 0480 1142     		tst	r1, r2	@ _14, tmp141
ARM GAS  /tmp/ccTsJCXT.s 			page 145


 1422 0482 02BF     		ittt	eq
 1423 0484 5A6C     		ldreq	r2, [r3, #68]	@ _16, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1424 0486 22F40042 		biceq	r2, r2, #32768	@ _17, _16,
 1425 048a 5A64     		streq	r2, [r3, #68]	@ _17, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 1426              	.L77:
2552:src/stm32f1xx_hal_tim.c **** 
 1427              		.loc 1 2552 0 is_stmt 1
 1428 048c 41F21112 		movw	r2, #4369	@ tmp145,
 1429 0490 196A     		ldr	r1, [r3, #32]	@ _19, _5->CCER
 1430 0492 1142     		tst	r1, r2	@ _19, tmp145
 1431 0494 08D1     		bne	.L78	@,
2552:src/stm32f1xx_hal_tim.c **** 
 1432              		.loc 1 2552 0 is_stmt 0 discriminator 1
 1433 0496 40F24442 		movw	r2, #1092	@ tmp147,
 1434 049a 196A     		ldr	r1, [r3, #32]	@ _21, _5->CCER
 1435 049c 1142     		tst	r1, r2	@ _21, tmp147
 1436 049e 02BF     		ittt	eq
 1437 04a0 1A68     		ldreq	r2, [r3]	@ _23, _5->CR1
 1438 04a2 22F00102 		biceq	r2, r2, #1	@ _24, _23,
 1439 04a6 1A60     		streq	r2, [r3]	@ _24, _5->CR1
 1440              	.L78:
2556:src/stm32f1xx_hal_tim.c **** 
 1441              		.loc 1 2556 0 is_stmt 1
 1442 04a8 0020     		movs	r0, #0	@,
 1443              	.LVL108:
 1444 04aa 7047     		bx	lr	@
 1445              	.L80:
 1446              		.align	2
 1447              	.L79:
 1448 04ac 002C0140 		.word	1073818624
 1449              		.cfi_endproc
 1450              	.LFE112:
 1451              		.size	HAL_TIM_OnePulse_Stop_IT, .-HAL_TIM_OnePulse_Stop_IT
 1452              		.align	1
 1453              		.weak	HAL_TIM_Encoder_MspInit
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu softvfp
 1458              		.type	HAL_TIM_Encoder_MspInit, %function
 1459              	HAL_TIM_Encoder_MspInit:
 1460              	.LFB200:
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		@ link register save eliminated.
 1465 04b0 7047     		bx	lr	@
 1466              		.cfi_endproc
 1467              	.LFE200:
 1468              		.size	HAL_TIM_Encoder_MspInit, .-HAL_TIM_Encoder_MspInit
 1469              		.align	1
 1470              		.weak	HAL_TIM_Encoder_MspDeInit
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu softvfp
 1475              		.type	HAL_TIM_Encoder_MspDeInit, %function
ARM GAS  /tmp/ccTsJCXT.s 			page 146


 1476              	HAL_TIM_Encoder_MspDeInit:
 1477              	.LFB198:
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482 04b2 7047     		bx	lr	@
 1483              		.cfi_endproc
 1484              	.LFE198:
 1485              		.size	HAL_TIM_Encoder_MspDeInit, .-HAL_TIM_Encoder_MspDeInit
 1486              		.align	1
 1487              		.global	HAL_TIM_Encoder_DeInit
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1491              		.fpu softvfp
 1492              		.type	HAL_TIM_Encoder_DeInit, %function
 1493              	HAL_TIM_Encoder_DeInit:
 1494              	.LFB114:
2701:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1495              		.loc 1 2701 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL109:
2705:src/stm32f1xx_hal_tim.c **** 
 1500              		.loc 1 2705 0
 1501 04b4 0223     		movs	r3, #2	@ tmp119,
2708:src/stm32f1xx_hal_tim.c **** 
 1502              		.loc 1 2708 0
 1503 04b6 41F21112 		movw	r2, #4369	@ tmp121,
2701:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1504              		.loc 1 2701 0
 1505 04ba 10B5     		push	{r4, lr}	@
 1506              	.LCFI10:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
2705:src/stm32f1xx_hal_tim.c **** 
 1510              		.loc 1 2705 0
 1511 04bc 80F83D30 		strb	r3, [r0, #61]	@ tmp119, htim_3(D)->State
2708:src/stm32f1xx_hal_tim.c **** 
 1512              		.loc 1 2708 0
 1513 04c0 0368     		ldr	r3, [r0]	@ _5, htim_3(D)->Instance
2701:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1514              		.loc 1 2701 0
 1515 04c2 0446     		mov	r4, r0	@ htim, htim
2708:src/stm32f1xx_hal_tim.c **** 
 1516              		.loc 1 2708 0
 1517 04c4 196A     		ldr	r1, [r3, #32]	@ _6, _5->CCER
 1518 04c6 1142     		tst	r1, r2	@ _6, tmp121
 1519 04c8 08D1     		bne	.L84	@,
2708:src/stm32f1xx_hal_tim.c **** 
 1520              		.loc 1 2708 0 is_stmt 0 discriminator 1
 1521 04ca 40F24442 		movw	r2, #1092	@ tmp123,
 1522 04ce 196A     		ldr	r1, [r3, #32]	@ _8, _5->CCER
 1523 04d0 1142     		tst	r1, r2	@ _8, tmp123
ARM GAS  /tmp/ccTsJCXT.s 			page 147


 1524 04d2 02BF     		ittt	eq
 1525 04d4 1A68     		ldreq	r2, [r3]	@ _10, _5->CR1
 1526 04d6 22F00102 		biceq	r2, r2, #1	@ _11, _10,
 1527 04da 1A60     		streq	r2, [r3]	@ _11, _5->CR1
 1528              	.L84:
2719:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 1529              		.loc 1 2719 0 is_stmt 1
 1530 04dc 2046     		mov	r0, r4	@, htim
 1531              	.LVL110:
 1532 04de FFF7FEFF 		bl	HAL_TIM_Encoder_MspDeInit	@
 1533              	.LVL111:
2723:src/stm32f1xx_hal_tim.c **** 
 1534              		.loc 1 2723 0
 1535 04e2 0020     		movs	r0, #0	@ tmp125,
 1536 04e4 84F83D00 		strb	r0, [r4, #61]	@ tmp125, htim_3(D)->State
2726:src/stm32f1xx_hal_tim.c **** 
 1537              		.loc 1 2726 0
 1538 04e8 84F83C00 		strb	r0, [r4, #60]	@ tmp125, htim_3(D)->Lock
2729:src/stm32f1xx_hal_tim.c **** 
 1539              		.loc 1 2729 0
 1540 04ec 10BD     		pop	{r4, pc}	@
 1541              		.cfi_endproc
 1542              	.LFE114:
 1543              		.size	HAL_TIM_Encoder_DeInit, .-HAL_TIM_Encoder_DeInit
 1544              		.align	1
 1545              		.global	HAL_TIM_Encoder_Start
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu softvfp
 1550              		.type	HAL_TIM_Encoder_Start, %function
 1551              	HAL_TIM_Encoder_Start:
 1552              	.LFB117:
2772:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1553              		.loc 1 2772 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              		@ link register save eliminated.
 1558              	.LVL112:
 1559 04ee 0368     		ldr	r3, [r0]	@ _8, htim_4(D)->Instance
2777:src/stm32f1xx_hal_tim.c ****   {
 1560              		.loc 1 2777 0
 1561 04f0 89B1     		cbz	r1, .L87	@ Channel,
 1562 04f2 0429     		cmp	r1, #4	@ Channel,
 1563 04f4 07D0     		beq	.L92	@,
 1564              	.LVL113:
 1565              	.LBB82:
 1566              	.LBB83:
6607:src/stm32f1xx_hal_tim.c **** 
 1567              		.loc 1 6607 0
 1568 04f6 1A6A     		ldr	r2, [r3, #32]	@ _24, _7->CCER
 1569 04f8 22F00102 		bic	r2, r2, #1	@ _25, _24,
 1570 04fc 1A62     		str	r2, [r3, #32]	@ _25, _7->CCER
 1571              		.loc 1 6610 0
 1572 04fe 1A6A     		ldr	r2, [r3, #32]	@ _26, _7->CCER
 1573 0500 42F00102 		orr	r2, r2, #1	@ _27, _26,
ARM GAS  /tmp/ccTsJCXT.s 			page 148


 1574 0504 1A62     		str	r2, [r3, #32]	@ _27, _7->CCER
 1575              	.LVL114:
 1576              	.L92:
 1577              	.LBE83:
 1578              	.LBE82:
 1579              	.LBB84:
 1580              	.LBB85:
6607:src/stm32f1xx_hal_tim.c **** 
 1581              		.loc 1 6607 0
 1582 0506 1A6A     		ldr	r2, [r3, #32]	@ _20,
 1583 0508 22F01002 		bic	r2, r2, #16	@ _21, _20,
 1584 050c 1A62     		str	r2, [r3, #32]	@ _21,
 1585              		.loc 1 6610 0
 1586 050e 1A6A     		ldr	r2, [r3, #32]	@ _22,
 1587 0510 42F01002 		orr	r2, r2, #16	@ _23, _22,
 1588 0514 06E0     		b	.L91	@
 1589              	.LVL115:
 1590              	.L87:
 1591              	.LBE85:
 1592              	.LBE84:
 1593              	.LBB87:
 1594              	.LBB88:
6607:src/stm32f1xx_hal_tim.c **** 
 1595              		.loc 1 6607 0
 1596 0516 1A6A     		ldr	r2, [r3, #32]	@ _12, _5->CCER
 1597 0518 22F00102 		bic	r2, r2, #1	@ _13, _12,
 1598 051c 1A62     		str	r2, [r3, #32]	@ _13, _5->CCER
 1599              		.loc 1 6610 0
 1600 051e 1A6A     		ldr	r2, [r3, #32]	@ _14, _5->CCER
 1601 0520 42F00102 		orr	r2, r2, #1	@ _15, _14,
 1602              	.LVL116:
 1603              	.L91:
 1604              	.LBE88:
 1605              	.LBE87:
 1606              	.LBB89:
 1607              	.LBB86:
 1608 0524 1A62     		str	r2, [r3, #32]	@ _23,
 1609              	.LBE86:
 1610              	.LBE89:
2799:src/stm32f1xx_hal_tim.c **** 
 1611              		.loc 1 2799 0
 1612 0526 1A68     		ldr	r2, [r3]	@ _9, _8->CR1
2803:src/stm32f1xx_hal_tim.c **** 
 1613              		.loc 1 2803 0
 1614 0528 0020     		movs	r0, #0	@,
 1615              	.LVL117:
2799:src/stm32f1xx_hal_tim.c **** 
 1616              		.loc 1 2799 0
 1617 052a 42F00102 		orr	r2, r2, #1	@ _10, _9,
 1618 052e 1A60     		str	r2, [r3]	@ _10, _8->CR1
2803:src/stm32f1xx_hal_tim.c **** 
 1619              		.loc 1 2803 0
 1620 0530 7047     		bx	lr	@
 1621              		.cfi_endproc
 1622              	.LFE117:
 1623              		.size	HAL_TIM_Encoder_Start, .-HAL_TIM_Encoder_Start
 1624              		.align	1
ARM GAS  /tmp/ccTsJCXT.s 			page 149


 1625              		.global	HAL_TIM_Encoder_Stop
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu softvfp
 1630              		.type	HAL_TIM_Encoder_Stop, %function
 1631              	HAL_TIM_Encoder_Stop:
 1632              	.LFB118:
2816:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1633              		.loc 1 2816 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638              	.LVL118:
 1639 0532 0368     		ldr	r3, [r0]	@ _9, htim_5(D)->Instance
2822:src/stm32f1xx_hal_tim.c ****   {
 1640              		.loc 1 2822 0
 1641 0534 59B1     		cbz	r1, .L95	@ Channel,
 1642 0536 0429     		cmp	r1, #4	@ Channel,
 1643 0538 05D0     		beq	.L101	@,
 1644              	.LVL119:
 1645              	.LBB90:
 1646              	.LBB91:
6607:src/stm32f1xx_hal_tim.c **** 
 1647              		.loc 1 6607 0
 1648 053a 1A6A     		ldr	r2, [r3, #32]	@ _26, _8->CCER
 1649 053c 22F00102 		bic	r2, r2, #1	@ _27, _26,
 1650 0540 1A62     		str	r2, [r3, #32]	@ _27, _8->CCER
 1651              		.loc 1 6610 0
 1652 0542 1A6A     		ldr	r2, [r3, #32]	@ _28, _8->CCER
 1653 0544 1A62     		str	r2, [r3, #32]	@ _28, _8->CCER
 1654              	.LVL120:
 1655              	.L101:
 1656              	.LBE91:
 1657              	.LBE90:
 1658              	.LBB92:
 1659              	.LBB93:
6607:src/stm32f1xx_hal_tim.c **** 
 1660              		.loc 1 6607 0
 1661 0546 1A6A     		ldr	r2, [r3, #32]	@ _23,
 1662 0548 22F01002 		bic	r2, r2, #16	@ _24, _23,
 1663 054c 02E0     		b	.L100	@
 1664              	.LVL121:
 1665              	.L95:
 1666              	.LBE93:
 1667              	.LBE92:
 1668              	.LBB95:
 1669              	.LBB96:
 1670 054e 1A6A     		ldr	r2, [r3, #32]	@ _17, _6->CCER
 1671 0550 22F00102 		bic	r2, r2, #1	@ _18, _17,
 1672              	.LVL122:
 1673              	.L100:
 1674              	.LBE96:
 1675              	.LBE95:
 1676              	.LBB97:
 1677              	.LBB94:
ARM GAS  /tmp/ccTsJCXT.s 			page 150


 1678 0554 1A62     		str	r2, [r3, #32]	@ _24,
 1679              		.loc 1 6610 0
 1680 0556 1A6A     		ldr	r2, [r3, #32]	@ _25,
 1681 0558 1A62     		str	r2, [r3, #32]	@ _25,
 1682              	.LBE94:
 1683              	.LBE97:
2845:src/stm32f1xx_hal_tim.c **** 
 1684              		.loc 1 2845 0
 1685 055a 41F21112 		movw	r2, #4369	@ tmp135,
 1686 055e 196A     		ldr	r1, [r3, #32]	@ _10, _9->CCER
 1687              	.LVL123:
 1688 0560 1142     		tst	r1, r2	@ _10, tmp135
 1689 0562 08D1     		bne	.L98	@,
2845:src/stm32f1xx_hal_tim.c **** 
 1690              		.loc 1 2845 0 is_stmt 0 discriminator 1
 1691 0564 40F24442 		movw	r2, #1092	@ tmp137,
 1692 0568 196A     		ldr	r1, [r3, #32]	@ _12, _9->CCER
 1693 056a 1142     		tst	r1, r2	@ _12, tmp137
 1694 056c 02BF     		ittt	eq
 1695 056e 1A68     		ldreq	r2, [r3]	@ _14, _9->CR1
 1696 0570 22F00102 		biceq	r2, r2, #1	@ _15, _14,
 1697 0574 1A60     		streq	r2, [r3]	@ _15, _9->CR1
 1698              	.L98:
2849:src/stm32f1xx_hal_tim.c **** 
 1699              		.loc 1 2849 0 is_stmt 1
 1700 0576 0020     		movs	r0, #0	@,
 1701              	.LVL124:
 1702 0578 7047     		bx	lr	@
 1703              		.cfi_endproc
 1704              	.LFE118:
 1705              		.size	HAL_TIM_Encoder_Stop, .-HAL_TIM_Encoder_Stop
 1706              		.align	1
 1707              		.global	HAL_TIM_Encoder_Start_IT
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu softvfp
 1712              		.type	HAL_TIM_Encoder_Start_IT, %function
 1713              	HAL_TIM_Encoder_Start_IT:
 1714              	.LFB119:
2862:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1715              		.loc 1 2862 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720              	.LVL125:
 1721 057a 0368     		ldr	r3, [r0]	@ _20, htim_4(D)->Instance
2868:src/stm32f1xx_hal_tim.c ****   {
 1722              		.loc 1 2868 0
 1723 057c B1B1     		cbz	r1, .L104	@ Channel,
 1724 057e 0429     		cmp	r1, #4	@ Channel,
 1725 0580 26D0     		beq	.L105	@,
 1726              	.LVL126:
 1727              	.LBB98:
 1728              	.LBB99:
6607:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 151


 1729              		.loc 1 6607 0
 1730 0582 1A6A     		ldr	r2, [r3, #32]	@ _36, _13->CCER
 1731 0584 22F00102 		bic	r2, r2, #1	@ _37, _36,
 1732 0588 1A62     		str	r2, [r3, #32]	@ _37, _13->CCER
 1733              		.loc 1 6610 0
 1734 058a 1A6A     		ldr	r2, [r3, #32]	@ _38, _13->CCER
 1735 058c 42F00102 		orr	r2, r2, #1	@ _39, _38,
 1736 0590 1A62     		str	r2, [r3, #32]	@ _39, _13->CCER
 1737              	.LVL127:
 1738              	.LBE99:
 1739              	.LBE98:
 1740              	.LBB100:
 1741              	.LBB101:
6607:src/stm32f1xx_hal_tim.c **** 
 1742              		.loc 1 6607 0
 1743 0592 1A6A     		ldr	r2, [r3, #32]	@ _32, _13->CCER
 1744 0594 22F01002 		bic	r2, r2, #16	@ _33, _32,
 1745 0598 1A62     		str	r2, [r3, #32]	@ _33, _13->CCER
 1746              		.loc 1 6610 0
 1747 059a 1A6A     		ldr	r2, [r3, #32]	@ _34, _13->CCER
 1748 059c 42F01002 		orr	r2, r2, #16	@ _35, _34,
 1749 05a0 1A62     		str	r2, [r3, #32]	@ _35, _13->CCER
 1750              	.LVL128:
 1751              	.LBE101:
 1752              	.LBE100:
2888:src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 1753              		.loc 1 2888 0
 1754 05a2 DA68     		ldr	r2, [r3, #12]	@ _14, _13->DIER
 1755 05a4 42F00202 		orr	r2, r2, #2	@ _15, _14,
 1756 05a8 DA60     		str	r2, [r3, #12]	@ _15, _13->DIER
 1757 05aa 19E0     		b	.L109	@
 1758              	.L104:
 1759              	.LVL129:
 1760              	.LBB102:
 1761              	.LBB103:
6607:src/stm32f1xx_hal_tim.c **** 
 1762              		.loc 1 6607 0
 1763 05ac 1A6A     		ldr	r2, [r3, #32]	@ _24, _5->CCER
 1764 05ae 22F00102 		bic	r2, r2, #1	@ _25, _24,
 1765 05b2 1A62     		str	r2, [r3, #32]	@ _25, _5->CCER
 1766              		.loc 1 6610 0
 1767 05b4 1A6A     		ldr	r2, [r3, #32]	@ _26, _5->CCER
 1768 05b6 42F00102 		orr	r2, r2, #1	@ _27, _26,
 1769 05ba 1A62     		str	r2, [r3, #32]	@ _27, _5->CCER
 1770              	.LVL130:
 1771              	.LBE103:
 1772              	.LBE102:
2873:src/stm32f1xx_hal_tim.c ****       break;
 1773              		.loc 1 2873 0
 1774 05bc DA68     		ldr	r2, [r3, #12]	@ _6, _5->DIER
 1775 05be 42F00202 		orr	r2, r2, #2	@ _7, _6,
 1776              	.L108:
2889:src/stm32f1xx_hal_tim.c ****       break;
 1777              		.loc 1 2889 0
 1778 05c2 DA60     		str	r2, [r3, #12]	@ _18,
2895:src/stm32f1xx_hal_tim.c **** 
 1779              		.loc 1 2895 0
ARM GAS  /tmp/ccTsJCXT.s 			page 152


 1780 05c4 1A68     		ldr	r2, [r3]	@ _21, _20->CR1
2899:src/stm32f1xx_hal_tim.c **** 
 1781              		.loc 1 2899 0
 1782 05c6 0020     		movs	r0, #0	@,
 1783              	.LVL131:
2895:src/stm32f1xx_hal_tim.c **** 
 1784              		.loc 1 2895 0
 1785 05c8 42F00102 		orr	r2, r2, #1	@ _22, _21,
 1786 05cc 1A60     		str	r2, [r3]	@ _22, _20->CR1
2899:src/stm32f1xx_hal_tim.c **** 
 1787              		.loc 1 2899 0
 1788 05ce 7047     		bx	lr	@
 1789              	.LVL132:
 1790              	.L105:
 1791              	.LBB104:
 1792              	.LBB105:
6607:src/stm32f1xx_hal_tim.c **** 
 1793              		.loc 1 6607 0
 1794 05d0 1A6A     		ldr	r2, [r3, #32]	@ _28, _9->CCER
 1795 05d2 22F01002 		bic	r2, r2, #16	@ _29, _28,
 1796 05d6 1A62     		str	r2, [r3, #32]	@ _29, _9->CCER
 1797              		.loc 1 6610 0
 1798 05d8 1A6A     		ldr	r2, [r3, #32]	@ _30, _9->CCER
 1799 05da 42F01002 		orr	r2, r2, #16	@ _31, _30,
 1800 05de 1A62     		str	r2, [r3, #32]	@ _31, _9->CCER
 1801              	.LVL133:
 1802              	.L109:
 1803              	.LBE105:
 1804              	.LBE104:
2889:src/stm32f1xx_hal_tim.c ****       break;
 1805              		.loc 1 2889 0
 1806 05e0 DA68     		ldr	r2, [r3, #12]	@ _17,
 1807 05e2 42F00402 		orr	r2, r2, #4	@ _18, _17,
 1808 05e6 ECE7     		b	.L108	@
 1809              		.cfi_endproc
 1810              	.LFE119:
 1811              		.size	HAL_TIM_Encoder_Start_IT, .-HAL_TIM_Encoder_Start_IT
 1812              		.align	1
 1813              		.global	HAL_TIM_Encoder_Stop_IT
 1814              		.syntax unified
 1815              		.thumb
 1816              		.thumb_func
 1817              		.fpu softvfp
 1818              		.type	HAL_TIM_Encoder_Stop_IT, %function
 1819              	HAL_TIM_Encoder_Stop_IT:
 1820              	.LFB120:
2912:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1821              		.loc 1 2912 0
 1822              		.cfi_startproc
 1823              		@ args = 0, pretend = 0, frame = 0
 1824              		@ frame_needed = 0, uses_anonymous_args = 0
 1825              		@ link register save eliminated.
 1826              	.LVL134:
 1827 05e8 0368     		ldr	r3, [r0]	@ _21, htim_5(D)->Instance
 1828              	.LBB106:
 1829              	.LBB107:
6607:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 153


 1830              		.loc 1 6607 0
 1831 05ea 1A6A     		ldr	r2, [r3, #32]	@ _30,
 1832              	.LBE107:
 1833              	.LBE106:
2918:src/stm32f1xx_hal_tim.c ****   {
 1834              		.loc 1 2918 0
 1835 05ec D9B9     		cbnz	r1, .L111	@ Channel,
 1836              	.LVL135:
 1837              	.LBB109:
 1838              	.LBB108:
6607:src/stm32f1xx_hal_tim.c **** 
 1839              		.loc 1 6607 0
 1840 05ee 22F00102 		bic	r2, r2, #1	@ _31, _30,
 1841 05f2 1A62     		str	r2, [r3, #32]	@ _31, _6->CCER
 1842              		.loc 1 6610 0
 1843 05f4 1A6A     		ldr	r2, [r3, #32]	@ _32, _6->CCER
 1844 05f6 1A62     		str	r2, [r3, #32]	@ _32, _6->CCER
 1845              	.LVL136:
 1846              	.LBE108:
 1847              	.LBE109:
2923:src/stm32f1xx_hal_tim.c ****   }
 1848              		.loc 1 2923 0
 1849 05f8 DA68     		ldr	r2, [r3, #12]	@ _7, _6->DIER
 1850 05fa 22F00202 		bic	r2, r2, #2	@ _8, _7,
 1851              	.L115:
2939:src/stm32f1xx_hal_tim.c ****   }
 1852              		.loc 1 2939 0
 1853 05fe DA60     		str	r2, [r3, #12]	@ _19,
2943:src/stm32f1xx_hal_tim.c **** 
 1854              		.loc 1 2943 0
 1855 0600 41F21112 		movw	r2, #4369	@ tmp143,
 1856 0604 196A     		ldr	r1, [r3, #32]	@ _22, _21->CCER
 1857              	.LVL137:
 1858 0606 1142     		tst	r1, r2	@ _22, tmp143
 1859 0608 08D1     		bne	.L114	@,
2943:src/stm32f1xx_hal_tim.c **** 
 1860              		.loc 1 2943 0 is_stmt 0 discriminator 1
 1861 060a 40F24442 		movw	r2, #1092	@ tmp145,
 1862 060e 196A     		ldr	r1, [r3, #32]	@ _24, _21->CCER
 1863 0610 1142     		tst	r1, r2	@ _24, tmp145
 1864 0612 02BF     		ittt	eq
 1865 0614 1A68     		ldreq	r2, [r3]	@ _26, _21->CR1
 1866 0616 22F00102 		biceq	r2, r2, #1	@ _27, _26,
 1867 061a 1A60     		streq	r2, [r3]	@ _27, _21->CR1
 1868              	.L114:
2946:src/stm32f1xx_hal_tim.c **** 
 1869              		.loc 1 2946 0 is_stmt 1
 1870 061c 0123     		movs	r3, #1	@ tmp147,
 1871 061e 80F83D30 		strb	r3, [r0, #61]	@ tmp147, htim_5(D)->State
2950:src/stm32f1xx_hal_tim.c **** 
 1872              		.loc 1 2950 0
 1873 0622 0020     		movs	r0, #0	@,
 1874              	.LVL138:
 1875 0624 7047     		bx	lr	@
 1876              	.LVL139:
 1877              	.L111:
2925:src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp/ccTsJCXT.s 			page 154


 1878              		.loc 1 2925 0
 1879 0626 0429     		cmp	r1, #4	@ Channel,
 1880 0628 08D1     		bne	.L113	@,
 1881              	.LVL140:
 1882              	.LBB110:
 1883              	.LBB111:
6607:src/stm32f1xx_hal_tim.c **** 
 1884              		.loc 1 6607 0
 1885 062a 22F01002 		bic	r2, r2, #16	@ _34, _33,
 1886 062e 1A62     		str	r2, [r3, #32]	@ _34, _10->CCER
 1887              		.loc 1 6610 0
 1888 0630 1A6A     		ldr	r2, [r3, #32]	@ _35, _10->CCER
 1889 0632 1A62     		str	r2, [r3, #32]	@ _35, _10->CCER
 1890              	.LVL141:
 1891              	.L116:
 1892              	.LBE111:
 1893              	.LBE110:
2939:src/stm32f1xx_hal_tim.c ****   }
 1894              		.loc 1 2939 0
 1895 0634 DA68     		ldr	r2, [r3, #12]	@ _18,
 1896 0636 22F00402 		bic	r2, r2, #4	@ _19, _18,
 1897 063a E0E7     		b	.L115	@
 1898              	.L113:
 1899              	.LVL142:
 1900              	.LBB112:
 1901              	.LBB113:
6607:src/stm32f1xx_hal_tim.c **** 
 1902              		.loc 1 6607 0
 1903 063c 22F00102 		bic	r2, r2, #1	@ _40, _39,
 1904 0640 1A62     		str	r2, [r3, #32]	@ _40, _14->CCER
 1905              		.loc 1 6610 0
 1906 0642 1A6A     		ldr	r2, [r3, #32]	@ _41, _14->CCER
 1907 0644 1A62     		str	r2, [r3, #32]	@ _41, _14->CCER
 1908              	.LVL143:
 1909              	.LBE113:
 1910              	.LBE112:
 1911              	.LBB114:
 1912              	.LBB115:
6607:src/stm32f1xx_hal_tim.c **** 
 1913              		.loc 1 6607 0
 1914 0646 1A6A     		ldr	r2, [r3, #32]	@ _36, _14->CCER
 1915 0648 22F01002 		bic	r2, r2, #16	@ _37, _36,
 1916 064c 1A62     		str	r2, [r3, #32]	@ _37, _14->CCER
 1917              		.loc 1 6610 0
 1918 064e 1A6A     		ldr	r2, [r3, #32]	@ _38, _14->CCER
 1919 0650 1A62     		str	r2, [r3, #32]	@ _38, _14->CCER
 1920              	.LVL144:
 1921              	.LBE115:
 1922              	.LBE114:
2938:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 1923              		.loc 1 2938 0
 1924 0652 DA68     		ldr	r2, [r3, #12]	@ _15, _14->DIER
 1925 0654 22F00202 		bic	r2, r2, #2	@ _16, _15,
 1926 0658 DA60     		str	r2, [r3, #12]	@ _16, _14->DIER
 1927 065a EBE7     		b	.L116	@
 1928              		.cfi_endproc
 1929              	.LFE120:
ARM GAS  /tmp/ccTsJCXT.s 			page 155


 1930              		.size	HAL_TIM_Encoder_Stop_IT, .-HAL_TIM_Encoder_Stop_IT
 1931              		.align	1
 1932              		.global	HAL_TIM_Encoder_Start_DMA
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu softvfp
 1937              		.type	HAL_TIM_Encoder_Start_DMA, %function
 1938              	HAL_TIM_Encoder_Start_DMA:
 1939              	.LFB121:
2967:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1940              		.loc 1 2967 0
 1941              		.cfi_startproc
 1942              		@ args = 4, pretend = 0, frame = 0
 1943              		@ frame_needed = 0, uses_anonymous_args = 0
 1944              	.LVL145:
 1945 065c 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 1946              	.LCFI11:
 1947              		.cfi_def_cfa_offset 32
 1948              		.cfi_offset 3, -32
 1949              		.cfi_offset 4, -28
 1950              		.cfi_offset 5, -24
 1951              		.cfi_offset 6, -20
 1952              		.cfi_offset 7, -16
 1953              		.cfi_offset 8, -12
 1954              		.cfi_offset 9, -8
 1955              		.cfi_offset 14, -4
2967:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1956              		.loc 1 2967 0
 1957 0660 0546     		mov	r5, r0	@ htim, htim
2971:src/stm32f1xx_hal_tim.c ****   {
 1958              		.loc 1 2971 0
 1959 0662 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_5(D)->State, htim_5(D)->State
 1960              	.LVL146:
2967:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1961              		.loc 1 2967 0
 1962 0666 1E46     		mov	r6, r3	@ pData2, pData2
2971:src/stm32f1xx_hal_tim.c ****   {
 1963              		.loc 1 2971 0
 1964 0668 C0B2     		uxtb	r0, r0	@ _6, htim_5(D)->State
 1965 066a 0228     		cmp	r0, #2	@ _6,
2967:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 1966              		.loc 1 2967 0
 1967 066c BDF82040 		ldrh	r4, [sp, #32]	@ Length, Length
2971:src/stm32f1xx_hal_tim.c ****   {
 1968              		.loc 1 2971 0
 1969 0670 00F09480 		beq	.L118	@,
2975:src/stm32f1xx_hal_tim.c ****   {
 1970              		.loc 1 2975 0
 1971 0674 95F83D30 		ldrb	r3, [r5, #61]	@ zero_extendqisi2	@ htim_5(D)->State, htim_5(D)->State
 1972              	.LVL147:
 1973 0678 012B     		cmp	r3, #1	@ htim_5(D)->State,
 1974 067a 08D1     		bne	.L119	@,
2977:src/stm32f1xx_hal_tim.c ****     {
 1975              		.loc 1 2977 0
 1976 067c 02B1     		cbz	r2, .L120	@ pData1,
2977:src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp/ccTsJCXT.s 			page 156


 1977              		.loc 1 2977 0 is_stmt 0 discriminator 2
 1978 067e 1EB9     		cbnz	r6, .L121	@ pData2,
 1979              	.L120:
2977:src/stm32f1xx_hal_tim.c ****     {
 1980              		.loc 1 2977 0 discriminator 3
 1981 0680 14B1     		cbz	r4, .L121	@ Length,
 1982              	.LVL148:
 1983              	.L125:
2979:src/stm32f1xx_hal_tim.c ****     }
 1984              		.loc 1 2979 0 is_stmt 1
 1985 0682 0120     		movs	r0, #1	@ <retval>,
 1986 0684 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 1987              	.LVL149:
 1988              	.L121:
2983:src/stm32f1xx_hal_tim.c ****     }
 1989              		.loc 1 2983 0
 1990 0688 0223     		movs	r3, #2	@ tmp181,
 1991 068a 85F83D30 		strb	r3, [r5, #61]	@ tmp181, htim_5(D)->State
 1992              	.L119:
2991:src/stm32f1xx_hal_tim.c ****   {
 1993              		.loc 1 2991 0
 1994 068e 0429     		cmp	r1, #4	@ Channel,
 1995 0690 24D0     		beq	.L122	@,
 1996 0692 3C29     		cmp	r1, #60	@ Channel,
 1997 0694 42D0     		beq	.L123	@,
 1998 0696 0029     		cmp	r1, #0	@ Channel
 1999 0698 7FD1     		bne	.L134	@
2996:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2000              		.loc 1 2996 0
 2001 069a 686A     		ldr	r0, [r5, #36]	@ _13, htim_5(D)->hdma
 2002 069c 404B     		ldr	r3, .L136	@ tmp183,
3003:src/stm32f1xx_hal_tim.c ****       {
 2003              		.loc 1 3003 0
 2004 069e 2968     		ldr	r1, [r5]	@ htim_5(D)->Instance, htim_5(D)->Instance
 2005              	.LVL150:
2996:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2006              		.loc 1 2996 0
 2007 06a0 8362     		str	r3, [r0, #40]	@ tmp183, _13->XferCpltCallback
2997:src/stm32f1xx_hal_tim.c **** 
 2008              		.loc 1 2997 0
 2009 06a2 404B     		ldr	r3, .L136+4	@ tmp184,
3003:src/stm32f1xx_hal_tim.c ****       {
 2010              		.loc 1 3003 0
 2011 06a4 3431     		adds	r1, r1, #52	@, htim_5(D)->Instance,
2997:src/stm32f1xx_hal_tim.c **** 
 2012              		.loc 1 2997 0
 2013 06a6 C362     		str	r3, [r0, #44]	@ tmp184, _13->XferHalfCpltCallback
3000:src/stm32f1xx_hal_tim.c **** 
 2014              		.loc 1 3000 0
 2015 06a8 3F4B     		ldr	r3, .L136+8	@ tmp185,
 2016 06aa 0363     		str	r3, [r0, #48]	@ tmp185, _13->XferErrorCallback
3003:src/stm32f1xx_hal_tim.c ****       {
 2017              		.loc 1 3003 0
 2018 06ac 2346     		mov	r3, r4	@, Length
 2019 06ae FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2020              	.LVL151:
 2021 06b2 0028     		cmp	r0, #0	@ <retval>
ARM GAS  /tmp/ccTsJCXT.s 			page 157


 2022 06b4 E5D1     		bne	.L125	@
3008:src/stm32f1xx_hal_tim.c **** 
 2023              		.loc 1 3008 0
 2024 06b6 2B68     		ldr	r3, [r5]	@ _24, htim_5(D)->Instance
 2025 06b8 DA68     		ldr	r2, [r3, #12]	@ _25, _24->DIER
 2026 06ba 42F40072 		orr	r2, r2, #512	@ _26, _25,
 2027 06be DA60     		str	r2, [r3, #12]	@ _26, _24->DIER
3011:src/stm32f1xx_hal_tim.c **** 
 2028              		.loc 1 3011 0
 2029 06c0 1A68     		ldr	r2, [r3]	@ _28, _24->CR1
 2030 06c2 42F00102 		orr	r2, r2, #1	@ _29, _28,
 2031 06c6 1A60     		str	r2, [r3]	@ _29, _24->CR1
 2032              	.LVL152:
 2033              	.LBB116:
 2034              	.LBB117:
6607:src/stm32f1xx_hal_tim.c **** 
 2035              		.loc 1 6607 0
 2036 06c8 1A6A     		ldr	r2, [r3, #32]	@ _80, _24->CCER
 2037 06ca 22F00102 		bic	r2, r2, #1	@ _81, _80,
 2038 06ce 1A62     		str	r2, [r3, #32]	@ _81, _24->CCER
 2039              		.loc 1 6610 0
 2040 06d0 1A6A     		ldr	r2, [r3, #32]	@ _82, _24->CCER
 2041 06d2 42F00102 		orr	r2, r2, #1	@ _83, _82,
 2042              	.LVL153:
 2043              	.L135:
 2044              	.LBE117:
 2045              	.LBE116:
 2046              	.LBB118:
 2047              	.LBB119:
 2048 06d6 1A62     		str	r2, [r3, #32]	@ _87,
 2049 06d8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 2050              	.LVL154:
 2051              	.L122:
 2052              	.LBE119:
 2053              	.LBE118:
3021:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2054              		.loc 1 3021 0
 2055 06dc A86A     		ldr	r0, [r5, #40]	@ _31, htim_5(D)->hdma
 2056 06de 304B     		ldr	r3, .L136	@ tmp189,
3027:src/stm32f1xx_hal_tim.c ****       {
 2057              		.loc 1 3027 0
 2058 06e0 2968     		ldr	r1, [r5]	@ htim_5(D)->Instance, htim_5(D)->Instance
 2059              	.LVL155:
3021:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2060              		.loc 1 3021 0
 2061 06e2 8362     		str	r3, [r0, #40]	@ tmp189, _31->XferCpltCallback
3022:src/stm32f1xx_hal_tim.c **** 
 2062              		.loc 1 3022 0
 2063 06e4 2F4B     		ldr	r3, .L136+4	@ tmp190,
3027:src/stm32f1xx_hal_tim.c ****       {
 2064              		.loc 1 3027 0
 2065 06e6 3246     		mov	r2, r6	@, pData2
 2066              	.LVL156:
3022:src/stm32f1xx_hal_tim.c **** 
 2067              		.loc 1 3022 0
 2068 06e8 C362     		str	r3, [r0, #44]	@ tmp190, _31->XferHalfCpltCallback
3025:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
ARM GAS  /tmp/ccTsJCXT.s 			page 158


 2069              		.loc 1 3025 0
 2070 06ea 2F4B     		ldr	r3, .L136+8	@ tmp191,
3027:src/stm32f1xx_hal_tim.c ****       {
 2071              		.loc 1 3027 0
 2072 06ec 3831     		adds	r1, r1, #56	@, htim_5(D)->Instance,
3025:src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
 2073              		.loc 1 3025 0
 2074 06ee 0363     		str	r3, [r0, #48]	@ tmp191, _31->XferErrorCallback
3027:src/stm32f1xx_hal_tim.c ****       {
 2075              		.loc 1 3027 0
 2076 06f0 2346     		mov	r3, r4	@, Length
 2077 06f2 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2078              	.LVL157:
 2079 06f6 0028     		cmp	r0, #0	@ <retval>
 2080 06f8 C3D1     		bne	.L125	@
3032:src/stm32f1xx_hal_tim.c **** 
 2081              		.loc 1 3032 0
 2082 06fa 2B68     		ldr	r3, [r5]	@ _42, htim_5(D)->Instance
 2083 06fc DA68     		ldr	r2, [r3, #12]	@ _43, _42->DIER
 2084 06fe 42F48062 		orr	r2, r2, #1024	@ _44, _43,
 2085 0702 DA60     		str	r2, [r3, #12]	@ _44, _42->DIER
3035:src/stm32f1xx_hal_tim.c **** 
 2086              		.loc 1 3035 0
 2087 0704 1A68     		ldr	r2, [r3]	@ _46, _42->CR1
 2088 0706 42F00102 		orr	r2, r2, #1	@ _47, _46,
 2089 070a 1A60     		str	r2, [r3]	@ _47, _42->CR1
 2090              	.LVL158:
 2091              	.LBB121:
 2092              	.LBB120:
6607:src/stm32f1xx_hal_tim.c **** 
 2093              		.loc 1 6607 0
 2094 070c 1A6A     		ldr	r2, [r3, #32]	@ _84, _42->CCER
 2095 070e 22F01002 		bic	r2, r2, #16	@ _85, _84,
 2096 0712 1A62     		str	r2, [r3, #32]	@ _85, _42->CCER
 2097              		.loc 1 6610 0
 2098 0714 1A6A     		ldr	r2, [r3, #32]	@ _86, _42->CCER
 2099 0716 42F01002 		orr	r2, r2, #16	@ _87, _86,
 2100 071a DCE7     		b	.L135	@
 2101              	.LVL159:
 2102              	.L123:
 2103              	.LBE120:
 2104              	.LBE121:
3045:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2105              		.loc 1 3045 0
 2106 071c 686A     		ldr	r0, [r5, #36]	@ _49, htim_5(D)->hdma
 2107 071e DFF88090 		ldr	r9, .L136	@ tmp195,
3046:src/stm32f1xx_hal_tim.c **** 
 2108              		.loc 1 3046 0
 2109 0722 DFF88080 		ldr	r8, .L136+4	@ tmp196,
3049:src/stm32f1xx_hal_tim.c **** 
 2110              		.loc 1 3049 0
 2111 0726 204F     		ldr	r7, .L136+8	@ tmp197,
3052:src/stm32f1xx_hal_tim.c ****       {
 2112              		.loc 1 3052 0
 2113 0728 2968     		ldr	r1, [r5]	@ htim_5(D)->Instance, htim_5(D)->Instance
 2114              	.LVL160:
3045:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
ARM GAS  /tmp/ccTsJCXT.s 			page 159


 2115              		.loc 1 3045 0
 2116 072a C0F82890 		str	r9, [r0, #40]	@ tmp195, _49->XferCpltCallback
3046:src/stm32f1xx_hal_tim.c **** 
 2117              		.loc 1 3046 0
 2118 072e C0F82C80 		str	r8, [r0, #44]	@ tmp196, _49->XferHalfCpltCallback
3049:src/stm32f1xx_hal_tim.c **** 
 2119              		.loc 1 3049 0
 2120 0732 0763     		str	r7, [r0, #48]	@ tmp197, _49->XferErrorCallback
3052:src/stm32f1xx_hal_tim.c ****       {
 2121              		.loc 1 3052 0
 2122 0734 2346     		mov	r3, r4	@, Length
 2123 0736 3431     		adds	r1, r1, #52	@, htim_5(D)->Instance,
 2124 0738 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2125              	.LVL161:
 2126 073c 0028     		cmp	r0, #0	@
 2127 073e A0D1     		bne	.L125	@
3058:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2128              		.loc 1 3058 0
 2129 0740 A86A     		ldr	r0, [r5, #40]	@ _60, htim_5(D)->hdma
3065:src/stm32f1xx_hal_tim.c ****       {
 2130              		.loc 1 3065 0
 2131 0742 2968     		ldr	r1, [r5]	@ htim_5(D)->Instance, htim_5(D)->Instance
3058:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2132              		.loc 1 3058 0
 2133 0744 C0F82890 		str	r9, [r0, #40]	@ tmp195, _60->XferCpltCallback
3059:src/stm32f1xx_hal_tim.c **** 
 2134              		.loc 1 3059 0
 2135 0748 C0F82C80 		str	r8, [r0, #44]	@ tmp196, _60->XferHalfCpltCallback
3062:src/stm32f1xx_hal_tim.c **** 
 2136              		.loc 1 3062 0
 2137 074c 0763     		str	r7, [r0, #48]	@ tmp197, _60->XferErrorCallback
3065:src/stm32f1xx_hal_tim.c ****       {
 2138              		.loc 1 3065 0
 2139 074e 2346     		mov	r3, r4	@, Length
 2140 0750 3246     		mov	r2, r6	@, pData2
 2141 0752 3831     		adds	r1, r1, #56	@, htim_5(D)->Instance,
 2142 0754 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2143              	.LVL162:
 2144 0758 0028     		cmp	r0, #0	@ <retval>
 2145 075a 92D1     		bne	.L125	@
3070:src/stm32f1xx_hal_tim.c **** 
 2146              		.loc 1 3070 0
 2147 075c 2B68     		ldr	r3, [r5]	@ _70, htim_5(D)->Instance
 2148 075e 1A68     		ldr	r2, [r3]	@ _71, _70->CR1
 2149 0760 42F00102 		orr	r2, r2, #1	@ _72, _71,
 2150 0764 1A60     		str	r2, [r3]	@ _72, _70->CR1
 2151              	.LVL163:
 2152              	.LBB122:
 2153              	.LBB123:
6607:src/stm32f1xx_hal_tim.c **** 
 2154              		.loc 1 6607 0
 2155 0766 1A6A     		ldr	r2, [r3, #32]	@ _92, _70->CCER
 2156 0768 22F00102 		bic	r2, r2, #1	@ _93, _92,
 2157 076c 1A62     		str	r2, [r3, #32]	@ _93, _70->CCER
 2158              		.loc 1 6610 0
 2159 076e 1A6A     		ldr	r2, [r3, #32]	@ _94, _70->CCER
 2160 0770 42F00102 		orr	r2, r2, #1	@ _95, _94,
ARM GAS  /tmp/ccTsJCXT.s 			page 160


 2161 0774 1A62     		str	r2, [r3, #32]	@ _95, _70->CCER
 2162              	.LVL164:
 2163              	.LBE123:
 2164              	.LBE122:
 2165              	.LBB124:
 2166              	.LBB125:
6607:src/stm32f1xx_hal_tim.c **** 
 2167              		.loc 1 6607 0
 2168 0776 1A6A     		ldr	r2, [r3, #32]	@ _88, _70->CCER
 2169 0778 22F01002 		bic	r2, r2, #16	@ _89, _88,
 2170 077c 1A62     		str	r2, [r3, #32]	@ _89, _70->CCER
 2171              		.loc 1 6610 0
 2172 077e 1A6A     		ldr	r2, [r3, #32]	@ _90, _70->CCER
 2173 0780 42F01002 		orr	r2, r2, #16	@ _91, _90,
 2174 0784 1A62     		str	r2, [r3, #32]	@ _91, _70->CCER
 2175              	.LVL165:
 2176              	.LBE125:
 2177              	.LBE124:
3077:src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
 2178              		.loc 1 3077 0
 2179 0786 DA68     		ldr	r2, [r3, #12]	@ _74, _70->DIER
 2180 0788 42F40072 		orr	r2, r2, #512	@ _75, _74,
 2181 078c DA60     		str	r2, [r3, #12]	@ _75, _70->DIER
3079:src/stm32f1xx_hal_tim.c ****       break;
 2182              		.loc 1 3079 0
 2183 078e DA68     		ldr	r2, [r3, #12]	@ _77, _70->DIER
 2184 0790 42F48062 		orr	r2, r2, #1024	@ _78, _77,
 2185 0794 DA60     		str	r2, [r3, #12]	@ _78, _70->DIER
3080:src/stm32f1xx_hal_tim.c ****     }
 2186              		.loc 1 3080 0
 2187 0796 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 2188              	.LVL166:
 2189              	.L134:
3087:src/stm32f1xx_hal_tim.c **** }
 2190              		.loc 1 3087 0
 2191 079a 0020     		movs	r0, #0	@ <retval>,
 2192              	.L118:
3088:src/stm32f1xx_hal_tim.c **** 
 2193              		.loc 1 3088 0
 2194 079c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 2195              	.LVL167:
 2196              	.L137:
 2197              		.align	2
 2198              	.L136:
 2199 07a0 00000000 		.word	TIM_DMACaptureCplt
 2200 07a4 00000000 		.word	TIM_DMACaptureHalfCplt
 2201 07a8 00000000 		.word	TIM_DMAError
 2202              		.cfi_endproc
 2203              	.LFE121:
 2204              		.size	HAL_TIM_Encoder_Start_DMA, .-HAL_TIM_Encoder_Start_DMA
 2205              		.align	1
 2206              		.global	HAL_TIM_Encoder_Stop_DMA
 2207              		.syntax unified
 2208              		.thumb
 2209              		.thumb_func
 2210              		.fpu softvfp
 2211              		.type	HAL_TIM_Encoder_Stop_DMA, %function
ARM GAS  /tmp/ccTsJCXT.s 			page 161


 2212              	HAL_TIM_Encoder_Stop_DMA:
 2213              	.LFB122:
3101:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2214              		.loc 1 3101 0
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 0, uses_anonymous_args = 0
 2218              	.LVL168:
 2219 07ac 0368     		ldr	r3, [r0]	@ _6, htim_5(D)->Instance
 2220 07ae 10B5     		push	{r4, lr}	@
 2221              	.LCFI12:
 2222              		.cfi_def_cfa_offset 8
 2223              		.cfi_offset 4, -8
 2224              		.cfi_offset 14, -4
 2225              	.LBB126:
 2226              	.LBB127:
6607:src/stm32f1xx_hal_tim.c **** 
 2227              		.loc 1 6607 0
 2228 07b0 1A6A     		ldr	r2, [r3, #32]	@ _38,
 2229              	.LBE127:
 2230              	.LBE126:
3101:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2231              		.loc 1 3101 0
 2232 07b2 0446     		mov	r4, r0	@ htim, htim
3107:src/stm32f1xx_hal_tim.c ****   {
 2233              		.loc 1 3107 0
 2234 07b4 F9B9     		cbnz	r1, .L139	@ Channel,
 2235              	.LVL169:
 2236              	.LBB130:
 2237              	.LBB128:
6607:src/stm32f1xx_hal_tim.c **** 
 2238              		.loc 1 6607 0
 2239 07b6 22F00102 		bic	r2, r2, #1	@ _39, _38,
 2240 07ba 1A62     		str	r2, [r3, #32]	@ _39, _6->CCER
 2241              		.loc 1 6610 0
 2242 07bc 1A6A     		ldr	r2, [r3, #32]	@ _40, _6->CCER
 2243              	.LBE128:
 2244              	.LBE130:
3113:src/stm32f1xx_hal_tim.c ****   }
 2245              		.loc 1 3113 0
 2246 07be 406A     		ldr	r0, [r0, #36]	@, htim_5(D)->hdma
 2247              	.LVL170:
 2248              	.LBB131:
 2249              	.LBB129:
 2250              		.loc 1 6610 0
 2251 07c0 1A62     		str	r2, [r3, #32]	@ _40, _6->CCER
 2252              	.LVL171:
 2253              	.LBE129:
 2254              	.LBE131:
3112:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 2255              		.loc 1 3112 0
 2256 07c2 DA68     		ldr	r2, [r3, #12]	@ _7, _6->DIER
 2257 07c4 22F40072 		bic	r2, r2, #512	@ _8, _7,
 2258 07c8 DA60     		str	r2, [r3, #12]	@ _8, _6->DIER
 2259              	.LVL172:
 2260              	.L143:
3132:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 162


 2261              		.loc 1 3132 0
 2262 07ca FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 2263              	.LVL173:
3136:src/stm32f1xx_hal_tim.c **** 
 2264              		.loc 1 3136 0
 2265 07ce 41F21112 		movw	r2, #4369	@ tmp147,
 2266 07d2 2368     		ldr	r3, [r4]	@ _29, htim_5(D)->Instance
 2267 07d4 196A     		ldr	r1, [r3, #32]	@ _30, _29->CCER
 2268 07d6 1142     		tst	r1, r2	@ _30, tmp147
 2269 07d8 08D1     		bne	.L142	@,
3136:src/stm32f1xx_hal_tim.c **** 
 2270              		.loc 1 3136 0 is_stmt 0 discriminator 1
 2271 07da 40F24442 		movw	r2, #1092	@ tmp149,
 2272 07de 196A     		ldr	r1, [r3, #32]	@ _32, _29->CCER
 2273 07e0 1142     		tst	r1, r2	@ _32, tmp149
 2274 07e2 02BF     		ittt	eq
 2275 07e4 1A68     		ldreq	r2, [r3]	@ _34, _29->CR1
 2276 07e6 22F00102 		biceq	r2, r2, #1	@ _35, _34,
 2277 07ea 1A60     		streq	r2, [r3]	@ _35, _29->CR1
 2278              	.L142:
3139:src/stm32f1xx_hal_tim.c **** 
 2279              		.loc 1 3139 0 is_stmt 1
 2280 07ec 0123     		movs	r3, #1	@ tmp151,
3143:src/stm32f1xx_hal_tim.c **** 
 2281              		.loc 1 3143 0
 2282 07ee 0020     		movs	r0, #0	@,
3139:src/stm32f1xx_hal_tim.c **** 
 2283              		.loc 1 3139 0
 2284 07f0 84F83D30 		strb	r3, [r4, #61]	@ tmp151, htim_5(D)->State
3143:src/stm32f1xx_hal_tim.c **** 
 2285              		.loc 1 3143 0
 2286 07f4 10BD     		pop	{r4, pc}	@
 2287              	.LVL174:
 2288              	.L139:
3115:src/stm32f1xx_hal_tim.c ****   {
 2289              		.loc 1 3115 0
 2290 07f6 0429     		cmp	r1, #4	@ Channel,
 2291 07f8 0AD1     		bne	.L141	@,
 2292              	.LVL175:
 2293              	.LBB132:
 2294              	.LBB133:
6607:src/stm32f1xx_hal_tim.c **** 
 2295              		.loc 1 6607 0
 2296 07fa 22F01002 		bic	r2, r2, #16	@ _42, _41,
 2297 07fe 1A62     		str	r2, [r3, #32]	@ _42, _12->CCER
 2298              		.loc 1 6610 0
 2299 0800 1A6A     		ldr	r2, [r3, #32]	@ _43, _12->CCER
 2300 0802 1A62     		str	r2, [r3, #32]	@ _43, _12->CCER
 2301              	.LVL176:
 2302              	.LBE133:
 2303              	.LBE132:
3120:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 2304              		.loc 1 3120 0
 2305 0804 DA68     		ldr	r2, [r3, #12]	@ _13, _12->DIER
 2306 0806 22F48062 		bic	r2, r2, #1024	@ _14, _13,
 2307 080a DA60     		str	r2, [r3, #12]	@ _14, _12->DIER
 2308              	.LVL177:
ARM GAS  /tmp/ccTsJCXT.s 			page 163


 2309              	.L144:
3132:src/stm32f1xx_hal_tim.c ****   }
 2310              		.loc 1 3132 0
 2311 080c A06A     		ldr	r0, [r4, #40]	@, htim_5(D)->hdma
 2312 080e DCE7     		b	.L143	@
 2313              	.LVL178:
 2314              	.L141:
 2315              	.LBB134:
 2316              	.LBB135:
6607:src/stm32f1xx_hal_tim.c **** 
 2317              		.loc 1 6607 0
 2318 0810 22F00102 		bic	r2, r2, #1	@ _48, _47,
 2319 0814 1A62     		str	r2, [r3, #32]	@ _48, _18->CCER
 2320              		.loc 1 6610 0
 2321 0816 1A6A     		ldr	r2, [r3, #32]	@ _49, _18->CCER
 2322              	.LBE135:
 2323              	.LBE134:
3131:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 2324              		.loc 1 3131 0
 2325 0818 406A     		ldr	r0, [r0, #36]	@, htim_5(D)->hdma
 2326              	.LVL179:
 2327              	.LBB137:
 2328              	.LBB136:
 2329              		.loc 1 6610 0
 2330 081a 1A62     		str	r2, [r3, #32]	@ _49, _18->CCER
 2331              	.LVL180:
 2332              	.LBE136:
 2333              	.LBE137:
 2334              	.LBB138:
 2335              	.LBB139:
6607:src/stm32f1xx_hal_tim.c **** 
 2336              		.loc 1 6607 0
 2337 081c 1A6A     		ldr	r2, [r3, #32]	@ _44, _18->CCER
 2338 081e 22F01002 		bic	r2, r2, #16	@ _45, _44,
 2339 0822 1A62     		str	r2, [r3, #32]	@ _45, _18->CCER
 2340              		.loc 1 6610 0
 2341 0824 1A6A     		ldr	r2, [r3, #32]	@ _46, _18->CCER
 2342 0826 1A62     		str	r2, [r3, #32]	@ _46, _18->CCER
 2343              	.LVL181:
 2344              	.LBE139:
 2345              	.LBE138:
3129:src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 2346              		.loc 1 3129 0
 2347 0828 DA68     		ldr	r2, [r3, #12]	@ _19, _18->DIER
 2348 082a 22F40072 		bic	r2, r2, #512	@ _20, _19,
 2349 082e DA60     		str	r2, [r3, #12]	@ _20, _18->DIER
3130:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 2350              		.loc 1 3130 0
 2351 0830 DA68     		ldr	r2, [r3, #12]	@ _22, _18->DIER
 2352 0832 22F48062 		bic	r2, r2, #1024	@ _23, _22,
 2353 0836 DA60     		str	r2, [r3, #12]	@ _23, _18->DIER
3131:src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 2354              		.loc 1 3131 0
 2355 0838 FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 2356              	.LVL182:
 2357 083c E6E7     		b	.L144	@
 2358              		.cfi_endproc
ARM GAS  /tmp/ccTsJCXT.s 			page 164


 2359              	.LFE122:
 2360              		.size	HAL_TIM_Encoder_Stop_DMA, .-HAL_TIM_Encoder_Stop_DMA
 2361              		.align	1
 2362              		.global	HAL_TIM_DMABurst_WriteStart
 2363              		.syntax unified
 2364              		.thumb
 2365              		.thumb_func
 2366              		.fpu softvfp
 2367              		.type	HAL_TIM_DMABurst_WriteStart, %function
 2368              	HAL_TIM_DMABurst_WriteStart:
 2369              	.LFB128:
3814:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2370              		.loc 1 3814 0
 2371              		.cfi_startproc
 2372              		@ args = 4, pretend = 0, frame = 0
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
 2374              	.LVL183:
 2375 083e F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 2376              	.LCFI13:
 2377              		.cfi_def_cfa_offset 24
 2378              		.cfi_offset 3, -24
 2379              		.cfi_offset 4, -20
 2380              		.cfi_offset 5, -16
 2381              		.cfi_offset 6, -12
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
3814:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2384              		.loc 1 3814 0
 2385 0840 0446     		mov	r4, r0	@ htim, htim
3821:src/stm32f1xx_hal_tim.c ****   {
 2386              		.loc 1 3821 0
 2387 0842 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 2388              	.LVL184:
3814:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2389              		.loc 1 3814 0
 2390 0846 0F46     		mov	r7, r1	@ BurstBaseAddress, BurstBaseAddress
3821:src/stm32f1xx_hal_tim.c ****   {
 2391              		.loc 1 3821 0
 2392 0848 C0B2     		uxtb	r0, r0	@ _7, htim_6(D)->State
 2393 084a 0228     		cmp	r0, #2	@ _7,
3814:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2394              		.loc 1 3814 0
 2395 084c 1646     		mov	r6, r2	@ BurstRequestSrc, BurstRequestSrc
 2396 084e 1946     		mov	r1, r3	@ BurstBuffer, BurstBuffer
 2397              	.LVL185:
 2398 0850 069D     		ldr	r5, [sp, #24]	@ BurstLength, BurstLength
3821:src/stm32f1xx_hal_tim.c ****   {
 2399              		.loc 1 3821 0
 2400 0852 30D0     		beq	.L146	@,
3825:src/stm32f1xx_hal_tim.c ****   {
 2401              		.loc 1 3825 0
 2402 0854 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 2403              	.LVL186:
 2404 0858 012B     		cmp	r3, #1	@ htim_6(D)->State,
 2405 085a 06D1     		bne	.L147	@,
3827:src/stm32f1xx_hal_tim.c ****     {
 2406              		.loc 1 3827 0
ARM GAS  /tmp/ccTsJCXT.s 			page 165


 2407 085c 11B9     		cbnz	r1, .L148	@ BurstBuffer,
3827:src/stm32f1xx_hal_tim.c ****     {
 2408              		.loc 1 3827 0 is_stmt 0 discriminator 1
 2409 085e 0DB1     		cbz	r5, .L148	@ BurstLength,
 2410              	.LVL187:
 2411              	.L158:
3829:src/stm32f1xx_hal_tim.c ****     }
 2412              		.loc 1 3829 0 is_stmt 1
 2413 0860 0120     		movs	r0, #1	@ <retval>,
 2414 0862 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2415              	.LVL188:
 2416              	.L148:
3833:src/stm32f1xx_hal_tim.c ****     }
 2417              		.loc 1 3833 0
 2418 0864 0223     		movs	r3, #2	@ tmp184,
 2419 0866 84F83D30 		strb	r3, [r4, #61]	@ tmp184, htim_6(D)->State
 2420              	.L147:
3840:src/stm32f1xx_hal_tim.c ****   {
 2421              		.loc 1 3840 0
 2422 086a B6F5006F 		cmp	r6, #2048	@ BurstRequestSrc,
 2423 086e 2268     		ldr	r2, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 2424              	.LVL189:
 2425 0870 34D0     		beq	.L150	@,
 2426 0872 21D8     		bhi	.L151	@,
 2427 0874 B6F5007F 		cmp	r6, #512	@ BurstRequestSrc,
 2428 0878 29D0     		beq	.L152	@,
 2429 087a B6F5806F 		cmp	r6, #1024	@ BurstRequestSrc,
 2430 087e 2BD0     		beq	.L153	@,
 2431 0880 B6F5807F 		cmp	r6, #256	@ BurstRequestSrc,
 2432 0884 0DD1     		bne	.L149	@,
3845:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 2433              		.loc 1 3845 0
 2434 0886 1B4B     		ldr	r3, .L172	@ tmp186,
 2435 0888 206A     		ldr	r0, [r4, #32]	@ _13, htim_6(D)->hdma
 2436 088a 8362     		str	r3, [r0, #40]	@ tmp186, _13->XferCpltCallback
3846:src/stm32f1xx_hal_tim.c **** 
 2437              		.loc 1 3846 0
 2438 088c 1A4B     		ldr	r3, .L172+4	@ tmp187,
 2439              	.L165:
3947:src/stm32f1xx_hal_tim.c **** 
 2440              		.loc 1 3947 0
 2441 088e C362     		str	r3, [r0, #44]	@ tmp235,
3950:src/stm32f1xx_hal_tim.c **** 
 2442              		.loc 1 3950 0
 2443 0890 1A4B     		ldr	r3, .L172+8	@ tmp236,
3953:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
 2444              		.loc 1 3953 0
 2445 0892 4C32     		adds	r2, r2, #76	@, htim_6(D)->Instance,
3950:src/stm32f1xx_hal_tim.c **** 
 2446              		.loc 1 3950 0
 2447 0894 0363     		str	r3, [r0, #48]	@ tmp236,
3954:src/stm32f1xx_hal_tim.c ****       {
 2448              		.loc 1 3954 0
 2449 0896 2B0A     		lsrs	r3, r5, #8	@ tmp237, BurstLength,
3953:src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, ((BurstLength) >> 8U) + 1U) != HAL_OK)
 2450              		.loc 1 3953 0
 2451 0898 0133     		adds	r3, r3, #1	@, tmp237,
ARM GAS  /tmp/ccTsJCXT.s 			page 166


 2452 089a FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2453              	.LVL190:
 2454 089e 0028     		cmp	r0, #0	@
 2455 08a0 DED1     		bne	.L158	@
 2456              	.L149:
3964:src/stm32f1xx_hal_tim.c **** 
 2457              		.loc 1 3964 0
 2458 08a2 2368     		ldr	r3, [r4]	@ _97, htim_6(D)->Instance
 2459 08a4 3D43     		orrs	r5, r5, r7	@, _99, BurstLength, BurstBaseAddress
 2460 08a6 9D64     		str	r5, [r3, #72]	@ _99, _97->DCR
3967:src/stm32f1xx_hal_tim.c **** 
 2461              		.loc 1 3967 0
 2462 08a8 DA68     		ldr	r2, [r3, #12]	@ _101, _97->DIER
3972:src/stm32f1xx_hal_tim.c **** }
 2463              		.loc 1 3972 0
 2464 08aa 0020     		movs	r0, #0	@ <retval>,
3967:src/stm32f1xx_hal_tim.c **** 
 2465              		.loc 1 3967 0
 2466 08ac 1643     		orrs	r6, r6, r2	@, _102, BurstRequestSrc, _101
 2467              	.LVL191:
 2468 08ae DE60     		str	r6, [r3, #12]	@ _102, _97->DIER
3969:src/stm32f1xx_hal_tim.c **** 
 2469              		.loc 1 3969 0
 2470 08b0 0123     		movs	r3, #1	@ tmp242,
 2471 08b2 84F83D30 		strb	r3, [r4, #61]	@ tmp242, htim_6(D)->State
 2472              	.L146:
3973:src/stm32f1xx_hal_tim.c **** 
 2473              		.loc 1 3973 0
 2474 08b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2475              	.LVL192:
 2476              	.L151:
3840:src/stm32f1xx_hal_tim.c ****   {
 2477              		.loc 1 3840 0
 2478 08b8 B6F5005F 		cmp	r6, #8192	@ BurstRequestSrc,
 2479 08bc 10D0     		beq	.L155	@,
 2480 08be B6F5804F 		cmp	r6, #16384	@ BurstRequestSrc,
 2481 08c2 12D0     		beq	.L156	@,
 2482 08c4 B6F5805F 		cmp	r6, #4096	@ BurstRequestSrc,
 2483 08c8 EBD1     		bne	.L149	@,
3912:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2484              		.loc 1 3912 0
 2485 08ca 206B     		ldr	r0, [r4, #48]	@ _61, htim_6(D)->hdma
 2486 08cc 00E0     		b	.L171	@
 2487              	.L152:
3861:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2488              		.loc 1 3861 0
 2489 08ce 606A     		ldr	r0, [r4, #36]	@ _25, htim_6(D)->hdma
 2490              	.L171:
3878:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2491              		.loc 1 3878 0
 2492 08d0 0B4B     		ldr	r3, .L172+12	@ tmp202,
 2493 08d2 8362     		str	r3, [r0, #40]	@ tmp202,
3879:src/stm32f1xx_hal_tim.c **** 
 2494              		.loc 1 3879 0
 2495 08d4 0B4B     		ldr	r3, .L172+16	@ tmp203,
 2496 08d6 DAE7     		b	.L165	@
 2497              	.L153:
ARM GAS  /tmp/ccTsJCXT.s 			page 167


3878:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2498              		.loc 1 3878 0
 2499 08d8 A06A     		ldr	r0, [r4, #40]	@ _37, htim_6(D)->hdma
 2500 08da F9E7     		b	.L171	@
 2501              	.L150:
3895:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2502              		.loc 1 3895 0
 2503 08dc E06A     		ldr	r0, [r4, #44]	@ _49, htim_6(D)->hdma
 2504 08de F7E7     		b	.L171	@
 2505              	.L155:
3929:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
 2506              		.loc 1 3929 0
 2507 08e0 094B     		ldr	r3, .L172+20	@ tmp226,
 2508 08e2 606B     		ldr	r0, [r4, #52]	@ _73, htim_6(D)->hdma
 2509 08e4 8362     		str	r3, [r0, #40]	@ tmp226, _73->XferCpltCallback
3930:src/stm32f1xx_hal_tim.c **** 
 2510              		.loc 1 3930 0
 2511 08e6 094B     		ldr	r3, .L172+24	@ tmp227,
 2512 08e8 D1E7     		b	.L165	@
 2513              	.L156:
3946:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
 2514              		.loc 1 3946 0
 2515 08ea 094B     		ldr	r3, .L172+28	@ tmp234,
 2516 08ec A06B     		ldr	r0, [r4, #56]	@ _85, htim_6(D)->hdma
 2517 08ee 8362     		str	r3, [r0, #40]	@ tmp234, _85->XferCpltCallback
3947:src/stm32f1xx_hal_tim.c **** 
 2518              		.loc 1 3947 0
 2519 08f0 084B     		ldr	r3, .L172+32	@ tmp235,
 2520 08f2 CCE7     		b	.L165	@
 2521              	.L173:
 2522              		.align	2
 2523              	.L172:
 2524 08f4 00000000 		.word	TIM_DMAPeriodElapsedCplt
 2525 08f8 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 2526 08fc 00000000 		.word	TIM_DMAError
 2527 0900 00000000 		.word	TIM_DMADelayPulseCplt
 2528 0904 00000000 		.word	TIM_DMADelayPulseHalfCplt
 2529 0908 00000000 		.word	TIMEx_DMACommutationCplt
 2530 090c 00000000 		.word	TIMEx_DMACommutationHalfCplt
 2531 0910 00000000 		.word	TIM_DMATriggerCplt
 2532 0914 00000000 		.word	TIM_DMATriggerHalfCplt
 2533              		.cfi_endproc
 2534              	.LFE128:
 2535              		.size	HAL_TIM_DMABurst_WriteStart, .-HAL_TIM_DMABurst_WriteStart
 2536              		.align	1
 2537              		.global	HAL_TIM_DMABurst_ReadStart
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu softvfp
 2542              		.type	HAL_TIM_DMABurst_ReadStart, %function
 2543              	HAL_TIM_DMABurst_ReadStart:
 2544              	.LFB130:
4079:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2545              		.loc 1 4079 0
 2546              		.cfi_startproc
 2547              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/ccTsJCXT.s 			page 168


 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549              	.LVL193:
 2550 0918 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 2551              	.LCFI14:
 2552              		.cfi_def_cfa_offset 24
 2553              		.cfi_offset 3, -24
 2554              		.cfi_offset 4, -20
 2555              		.cfi_offset 5, -16
 2556              		.cfi_offset 6, -12
 2557              		.cfi_offset 7, -8
 2558              		.cfi_offset 14, -4
4079:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2559              		.loc 1 4079 0
 2560 091a 0446     		mov	r4, r0	@ htim, htim
4086:src/stm32f1xx_hal_tim.c ****   {
 2561              		.loc 1 4086 0
 2562 091c 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 2563              	.LVL194:
4079:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2564              		.loc 1 4079 0
 2565 0920 1646     		mov	r6, r2	@ BurstRequestSrc, BurstRequestSrc
4086:src/stm32f1xx_hal_tim.c ****   {
 2566              		.loc 1 4086 0
 2567 0922 C0B2     		uxtb	r0, r0	@ _7, htim_6(D)->State
 2568 0924 0228     		cmp	r0, #2	@ _7,
4079:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2569              		.loc 1 4079 0
 2570 0926 0F46     		mov	r7, r1	@ BurstBaseAddress, BurstBaseAddress
 2571 0928 1A46     		mov	r2, r3	@ BurstBuffer, BurstBuffer
 2572              	.LVL195:
 2573 092a 069D     		ldr	r5, [sp, #24]	@ BurstLength, BurstLength
4086:src/stm32f1xx_hal_tim.c ****   {
 2574              		.loc 1 4086 0
 2575 092c 30D0     		beq	.L175	@,
4090:src/stm32f1xx_hal_tim.c ****   {
 2576              		.loc 1 4090 0
 2577 092e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 2578              	.LVL196:
 2579 0932 012B     		cmp	r3, #1	@ htim_6(D)->State,
 2580 0934 06D1     		bne	.L176	@,
4092:src/stm32f1xx_hal_tim.c ****     {
 2581              		.loc 1 4092 0
 2582 0936 12B9     		cbnz	r2, .L177	@ BurstBuffer,
4092:src/stm32f1xx_hal_tim.c ****     {
 2583              		.loc 1 4092 0 is_stmt 0 discriminator 1
 2584 0938 0DB1     		cbz	r5, .L177	@ BurstLength,
 2585              	.LVL197:
 2586              	.L187:
4094:src/stm32f1xx_hal_tim.c ****     }
 2587              		.loc 1 4094 0 is_stmt 1
 2588 093a 0120     		movs	r0, #1	@ <retval>,
 2589 093c F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2590              	.LVL198:
 2591              	.L177:
4098:src/stm32f1xx_hal_tim.c ****     }
 2592              		.loc 1 4098 0
 2593 093e 0223     		movs	r3, #2	@ tmp184,
ARM GAS  /tmp/ccTsJCXT.s 			page 169


 2594 0940 84F83D30 		strb	r3, [r4, #61]	@ tmp184, htim_6(D)->State
 2595              	.L176:
4105:src/stm32f1xx_hal_tim.c ****   {
 2596              		.loc 1 4105 0
 2597 0944 B6F5006F 		cmp	r6, #2048	@ BurstRequestSrc,
 2598 0948 2168     		ldr	r1, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 2599              	.LVL199:
 2600 094a 34D0     		beq	.L179	@,
 2601 094c 21D8     		bhi	.L180	@,
 2602 094e B6F5007F 		cmp	r6, #512	@ BurstRequestSrc,
 2603 0952 29D0     		beq	.L181	@,
 2604 0954 B6F5806F 		cmp	r6, #1024	@ BurstRequestSrc,
 2605 0958 2BD0     		beq	.L182	@,
 2606 095a B6F5807F 		cmp	r6, #256	@ BurstRequestSrc,
 2607 095e 0DD1     		bne	.L178	@,
4110:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 2608              		.loc 1 4110 0
 2609 0960 1B4B     		ldr	r3, .L201	@ tmp186,
 2610 0962 206A     		ldr	r0, [r4, #32]	@ _13, htim_6(D)->hdma
 2611 0964 8362     		str	r3, [r0, #40]	@ tmp186, _13->XferCpltCallback
4111:src/stm32f1xx_hal_tim.c **** 
 2612              		.loc 1 4111 0
 2613 0966 1B4B     		ldr	r3, .L201+4	@ tmp187,
 2614              	.L194:
4207:src/stm32f1xx_hal_tim.c **** 
 2615              		.loc 1 4207 0
 2616 0968 C362     		str	r3, [r0, #44]	@ tmp235,
4210:src/stm32f1xx_hal_tim.c **** 
 2617              		.loc 1 4210 0
 2618 096a 1B4B     		ldr	r3, .L201+8	@ tmp236,
4213:src/stm32f1xx_hal_tim.c ****       {
 2619              		.loc 1 4213 0
 2620 096c 4C31     		adds	r1, r1, #76	@, htim_6(D)->Instance,
4210:src/stm32f1xx_hal_tim.c **** 
 2621              		.loc 1 4210 0
 2622 096e 0363     		str	r3, [r0, #48]	@ tmp236,
4213:src/stm32f1xx_hal_tim.c ****       {
 2623              		.loc 1 4213 0
 2624 0970 2B0A     		lsrs	r3, r5, #8	@ tmp237, BurstLength,
 2625 0972 0133     		adds	r3, r3, #1	@, tmp237,
 2626 0974 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 2627              	.LVL200:
 2628 0978 0028     		cmp	r0, #0	@
 2629 097a DED1     		bne	.L187	@
 2630              	.L178:
4224:src/stm32f1xx_hal_tim.c **** 
 2631              		.loc 1 4224 0
 2632 097c 2368     		ldr	r3, [r4]	@ _97, htim_6(D)->Instance
 2633 097e 3D43     		orrs	r5, r5, r7	@, _99, BurstLength, BurstBaseAddress
 2634 0980 9D64     		str	r5, [r3, #72]	@ _99, _97->DCR
4227:src/stm32f1xx_hal_tim.c **** 
 2635              		.loc 1 4227 0
 2636 0982 DA68     		ldr	r2, [r3, #12]	@ _101, _97->DIER
4232:src/stm32f1xx_hal_tim.c **** }
 2637              		.loc 1 4232 0
 2638 0984 0020     		movs	r0, #0	@ <retval>,
4227:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 170


 2639              		.loc 1 4227 0
 2640 0986 1643     		orrs	r6, r6, r2	@, _102, BurstRequestSrc, _101
 2641              	.LVL201:
 2642 0988 DE60     		str	r6, [r3, #12]	@ _102, _97->DIER
4229:src/stm32f1xx_hal_tim.c **** 
 2643              		.loc 1 4229 0
 2644 098a 0123     		movs	r3, #1	@ tmp242,
 2645 098c 84F83D30 		strb	r3, [r4, #61]	@ tmp242, htim_6(D)->State
 2646              	.L175:
4233:src/stm32f1xx_hal_tim.c **** 
 2647              		.loc 1 4233 0
 2648 0990 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2649              	.LVL202:
 2650              	.L180:
4105:src/stm32f1xx_hal_tim.c ****   {
 2651              		.loc 1 4105 0
 2652 0992 B6F5005F 		cmp	r6, #8192	@ BurstRequestSrc,
 2653 0996 10D0     		beq	.L184	@,
 2654 0998 B6F5804F 		cmp	r6, #16384	@ BurstRequestSrc,
 2655 099c 12D0     		beq	.L185	@,
 2656 099e B6F5805F 		cmp	r6, #4096	@ BurstRequestSrc,
 2657 09a2 EBD1     		bne	.L178	@,
4174:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2658              		.loc 1 4174 0
 2659 09a4 206B     		ldr	r0, [r4, #48]	@ _61, htim_6(D)->hdma
 2660 09a6 00E0     		b	.L200	@
 2661              	.L181:
4126:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2662              		.loc 1 4126 0
 2663 09a8 606A     		ldr	r0, [r4, #36]	@ _25, htim_6(D)->hdma
 2664              	.L200:
4142:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2665              		.loc 1 4142 0
 2666 09aa 0C4B     		ldr	r3, .L201+12	@ tmp202,
 2667 09ac 8362     		str	r3, [r0, #40]	@ tmp202,
4143:src/stm32f1xx_hal_tim.c **** 
 2668              		.loc 1 4143 0
 2669 09ae 0C4B     		ldr	r3, .L201+16	@ tmp203,
 2670 09b0 DAE7     		b	.L194	@
 2671              	.L182:
4142:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2672              		.loc 1 4142 0
 2673 09b2 A06A     		ldr	r0, [r4, #40]	@ _37, htim_6(D)->hdma
 2674 09b4 F9E7     		b	.L200	@
 2675              	.L179:
4158:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 2676              		.loc 1 4158 0
 2677 09b6 E06A     		ldr	r0, [r4, #44]	@ _49, htim_6(D)->hdma
 2678 09b8 F7E7     		b	.L200	@
 2679              	.L184:
4190:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
 2680              		.loc 1 4190 0
 2681 09ba 0A4B     		ldr	r3, .L201+20	@ tmp226,
 2682 09bc 606B     		ldr	r0, [r4, #52]	@ _73, htim_6(D)->hdma
 2683 09be 8362     		str	r3, [r0, #40]	@ tmp226, _73->XferCpltCallback
4191:src/stm32f1xx_hal_tim.c **** 
 2684              		.loc 1 4191 0
ARM GAS  /tmp/ccTsJCXT.s 			page 171


 2685 09c0 094B     		ldr	r3, .L201+24	@ tmp227,
 2686 09c2 D1E7     		b	.L194	@
 2687              	.L185:
4206:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
 2688              		.loc 1 4206 0
 2689 09c4 094B     		ldr	r3, .L201+28	@ tmp234,
 2690 09c6 A06B     		ldr	r0, [r4, #56]	@ _85, htim_6(D)->hdma
 2691 09c8 8362     		str	r3, [r0, #40]	@ tmp234, _85->XferCpltCallback
4207:src/stm32f1xx_hal_tim.c **** 
 2692              		.loc 1 4207 0
 2693 09ca 094B     		ldr	r3, .L201+32	@ tmp235,
 2694 09cc CCE7     		b	.L194	@
 2695              	.L202:
 2696 09ce 00BF     		.align	2
 2697              	.L201:
 2698 09d0 00000000 		.word	TIM_DMAPeriodElapsedCplt
 2699 09d4 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 2700 09d8 00000000 		.word	TIM_DMAError
 2701 09dc 00000000 		.word	TIM_DMACaptureCplt
 2702 09e0 00000000 		.word	TIM_DMACaptureHalfCplt
 2703 09e4 00000000 		.word	TIMEx_DMACommutationCplt
 2704 09e8 00000000 		.word	TIMEx_DMACommutationHalfCplt
 2705 09ec 00000000 		.word	TIM_DMATriggerCplt
 2706 09f0 00000000 		.word	TIM_DMATriggerHalfCplt
 2707              		.cfi_endproc
 2708              	.LFE130:
 2709              		.size	HAL_TIM_DMABurst_ReadStart, .-HAL_TIM_DMABurst_ReadStart
 2710              		.align	1
 2711              		.global	HAL_TIM_DMABurst_ReadStop
 2712              		.syntax unified
 2713              		.thumb
 2714              		.thumb_func
 2715              		.fpu softvfp
 2716              		.type	HAL_TIM_DMABurst_ReadStop, %function
 2717              	HAL_TIM_DMABurst_ReadStop:
 2718              	.LFB131:
4242:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2719              		.loc 1 4242 0
 2720              		.cfi_startproc
 2721              		@ args = 0, pretend = 0, frame = 0
 2722              		@ frame_needed = 0, uses_anonymous_args = 0
 2723              	.LVL203:
4248:src/stm32f1xx_hal_tim.c ****   {
 2724              		.loc 1 4248 0
 2725 09f4 B1F5006F 		cmp	r1, #2048	@ BurstRequestSrc,
4242:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2726              		.loc 1 4242 0
 2727 09f8 38B5     		push	{r3, r4, r5, lr}	@
 2728              	.LCFI15:
 2729              		.cfi_def_cfa_offset 16
 2730              		.cfi_offset 3, -16
 2731              		.cfi_offset 4, -12
 2732              		.cfi_offset 5, -8
 2733              		.cfi_offset 14, -4
4242:src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2734              		.loc 1 4242 0
 2735 09fa 0546     		mov	r5, r0	@ htim, htim
ARM GAS  /tmp/ccTsJCXT.s 			page 172


 2736 09fc 0C46     		mov	r4, r1	@ BurstRequestSrc, BurstRequestSrc
4248:src/stm32f1xx_hal_tim.c ****   {
 2737              		.loc 1 4248 0
 2738 09fe 23D0     		beq	.L205	@,
 2739 0a00 13D8     		bhi	.L206	@,
 2740 0a02 B1F5007F 		cmp	r1, #512	@ BurstRequestSrc,
 2741 0a06 1BD0     		beq	.L207	@,
 2742 0a08 B1F5806F 		cmp	r1, #1024	@ BurstRequestSrc,
 2743 0a0c 1AD0     		beq	.L208	@,
 2744 0a0e B1F5807F 		cmp	r1, #256	@ BurstRequestSrc,
 2745 0a12 03D1     		bne	.L204	@,
4252:src/stm32f1xx_hal_tim.c ****       break;
 2746              		.loc 1 4252 0
 2747 0a14 006A     		ldr	r0, [r0, #32]	@, htim_6(D)->hdma
 2748              	.LVL204:
 2749              	.L215:
4282:src/stm32f1xx_hal_tim.c ****       break;
 2750              		.loc 1 4282 0
 2751 0a16 FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 2752              	.LVL205:
4289:src/stm32f1xx_hal_tim.c ****   {
 2753              		.loc 1 4289 0
 2754 0a1a 28B9     		cbnz	r0, .L214	@ <retval>,
 2755              	.LVL206:
 2756              	.L204:
4292:src/stm32f1xx_hal_tim.c ****   }
 2757              		.loc 1 4292 0
 2758 0a1c 0020     		movs	r0, #0	@ <retval>,
 2759 0a1e 2A68     		ldr	r2, [r5]	@ _28, htim_6(D)->Instance
 2760 0a20 D368     		ldr	r3, [r2, #12]	@ _29, _28->DIER
 2761 0a22 23EA0404 		bic	r4, r3, r4	@ _31, _29, BurstRequestSrc
 2762              	.LVL207:
 2763 0a26 D460     		str	r4, [r2, #12]	@ _31, _28->DIER
 2764              	.LVL208:
 2765              	.L214:
4297:src/stm32f1xx_hal_tim.c **** 
 2766              		.loc 1 4297 0
 2767 0a28 38BD     		pop	{r3, r4, r5, pc}	@
 2768              	.LVL209:
 2769              	.L206:
4248:src/stm32f1xx_hal_tim.c ****   {
 2770              		.loc 1 4248 0
 2771 0a2a B1F5005F 		cmp	r1, #8192	@ BurstRequestSrc,
 2772 0a2e 0DD0     		beq	.L210	@,
 2773 0a30 B1F5804F 		cmp	r1, #16384	@ BurstRequestSrc,
 2774 0a34 0CD0     		beq	.L211	@,
 2775 0a36 B1F5805F 		cmp	r1, #4096	@ BurstRequestSrc,
 2776 0a3a EFD1     		bne	.L204	@,
4272:src/stm32f1xx_hal_tim.c ****       break;
 2777              		.loc 1 4272 0
 2778 0a3c 006B     		ldr	r0, [r0, #48]	@, htim_6(D)->hdma
 2779              	.LVL210:
 2780 0a3e EAE7     		b	.L215	@
 2781              	.LVL211:
 2782              	.L207:
4257:src/stm32f1xx_hal_tim.c ****       break;
 2783              		.loc 1 4257 0
ARM GAS  /tmp/ccTsJCXT.s 			page 173


 2784 0a40 406A     		ldr	r0, [r0, #36]	@, htim_6(D)->hdma
 2785              	.LVL212:
 2786 0a42 E8E7     		b	.L215	@
 2787              	.LVL213:
 2788              	.L208:
4262:src/stm32f1xx_hal_tim.c ****       break;
 2789              		.loc 1 4262 0
 2790 0a44 806A     		ldr	r0, [r0, #40]	@, htim_6(D)->hdma
 2791              	.LVL214:
 2792 0a46 E6E7     		b	.L215	@
 2793              	.LVL215:
 2794              	.L205:
4267:src/stm32f1xx_hal_tim.c ****       break;
 2795              		.loc 1 4267 0
 2796 0a48 C06A     		ldr	r0, [r0, #44]	@, htim_6(D)->hdma
 2797              	.LVL216:
 2798 0a4a E4E7     		b	.L215	@
 2799              	.LVL217:
 2800              	.L210:
4277:src/stm32f1xx_hal_tim.c ****       break;
 2801              		.loc 1 4277 0
 2802 0a4c 406B     		ldr	r0, [r0, #52]	@, htim_6(D)->hdma
 2803              	.LVL218:
 2804 0a4e E2E7     		b	.L215	@
 2805              	.LVL219:
 2806              	.L211:
4282:src/stm32f1xx_hal_tim.c ****       break;
 2807              		.loc 1 4282 0
 2808 0a50 806B     		ldr	r0, [r0, #56]	@, htim_6(D)->hdma
 2809              	.LVL220:
 2810 0a52 E0E7     		b	.L215	@
 2811              		.cfi_endproc
 2812              	.LFE131:
 2813              		.size	HAL_TIM_DMABurst_ReadStop, .-HAL_TIM_DMABurst_ReadStop
 2814              		.align	1
 2815              		.global	HAL_TIM_DMABurst_WriteStop
 2816              		.syntax unified
 2817              		.thumb
 2818              		.thumb_func
 2819              		.fpu softvfp
 2820              		.type	HAL_TIM_DMABurst_WriteStop, %function
 2821              	HAL_TIM_DMABurst_WriteStop:
 2822              	.LFB238:
 2823              		.cfi_startproc
 2824              		@ args = 0, pretend = 0, frame = 0
 2825              		@ frame_needed = 0, uses_anonymous_args = 0
 2826              		@ link register save eliminated.
 2827 0a54 FFF7FEBF 		b	HAL_TIM_DMABurst_ReadStop	@
 2828              		.cfi_endproc
 2829              	.LFE238:
 2830              		.size	HAL_TIM_DMABurst_WriteStop, .-HAL_TIM_DMABurst_WriteStop
 2831              		.align	1
 2832              		.global	HAL_TIM_GenerateEvent
 2833              		.syntax unified
 2834              		.thumb
 2835              		.thumb_func
 2836              		.fpu softvfp
ARM GAS  /tmp/ccTsJCXT.s 			page 174


 2837              		.type	HAL_TIM_GenerateEvent, %function
 2838              	HAL_TIM_GenerateEvent:
 2839              	.LFB132:
4320:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 2840              		.loc 1 4320 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 0
 2843              		@ frame_needed = 0, uses_anonymous_args = 0
 2844              		@ link register save eliminated.
 2845              	.LVL221:
4326:src/stm32f1xx_hal_tim.c **** 
 2846              		.loc 1 4326 0
 2847 0a58 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_4(D)->Lock, htim_4(D)->Lock
 2848 0a5c 012B     		cmp	r3, #1	@ htim_4(D)->Lock,
 2849 0a5e 4FF00203 		mov	r3, #2	@ <retval>,
 2850 0a62 09D0     		beq	.L219	@,
4329:src/stm32f1xx_hal_tim.c **** 
 2851              		.loc 1 4329 0 discriminator 2
 2852 0a64 80F83D30 		strb	r3, [r0, #61]	@ <retval>, htim_4(D)->State
4332:src/stm32f1xx_hal_tim.c **** 
 2853              		.loc 1 4332 0 discriminator 2
 2854 0a68 0368     		ldr	r3, [r0]	@ _7, htim_4(D)->Instance
 2855 0a6a 5961     		str	r1, [r3, #20]	@ EventSource, _7->EGR
4335:src/stm32f1xx_hal_tim.c **** 
 2856              		.loc 1 4335 0 discriminator 2
 2857 0a6c 0123     		movs	r3, #1	@ tmp118,
 2858 0a6e 80F83D30 		strb	r3, [r0, #61]	@ tmp118, htim_4(D)->State
4337:src/stm32f1xx_hal_tim.c **** 
 2859              		.loc 1 4337 0 discriminator 2
 2860 0a72 0023     		movs	r3, #0	@ tmp120,
 2861 0a74 80F83C30 		strb	r3, [r0, #60]	@ tmp120, htim_4(D)->Lock
 2862              	.L219:
4326:src/stm32f1xx_hal_tim.c **** 
 2863              		.loc 1 4326 0
 2864 0a78 1846     		mov	r0, r3	@ <retval>, <retval>
 2865              	.LVL222:
4341:src/stm32f1xx_hal_tim.c **** 
 2866              		.loc 1 4341 0
 2867 0a7a 7047     		bx	lr	@
 2868              		.cfi_endproc
 2869              	.LFE132:
 2870              		.size	HAL_TIM_GenerateEvent, .-HAL_TIM_GenerateEvent
 2871              		.align	1
 2872              		.global	HAL_TIM_ConfigTI1Input
 2873              		.syntax unified
 2874              		.thumb
 2875              		.thumb_func
 2876              		.fpu softvfp
 2877              		.type	HAL_TIM_ConfigTI1Input, %function
 2878              	HAL_TIM_ConfigTI1Input:
 2879              	.LFB135:
4633:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
 2880              		.loc 1 4633 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
 2884              		@ link register save eliminated.
ARM GAS  /tmp/ccTsJCXT.s 			page 175


 2885              	.LVL223:
4641:src/stm32f1xx_hal_tim.c **** 
 2886              		.loc 1 4641 0
 2887 0a7c 0268     		ldr	r2, [r0]	@ _3, htim_2(D)->Instance
4653:src/stm32f1xx_hal_tim.c **** 
 2888              		.loc 1 4653 0
 2889 0a7e 0020     		movs	r0, #0	@,
 2890              	.LVL224:
4641:src/stm32f1xx_hal_tim.c **** 
 2891              		.loc 1 4641 0
 2892 0a80 5368     		ldr	r3, [r2, #4]	@ tmpcr2, _3->CR2
 2893              	.LVL225:
4644:src/stm32f1xx_hal_tim.c **** 
 2894              		.loc 1 4644 0
 2895 0a82 23F08003 		bic	r3, r3, #128	@ tmpcr2, tmpcr2,
 2896              	.LVL226:
4647:src/stm32f1xx_hal_tim.c **** 
 2897              		.loc 1 4647 0
 2898 0a86 1943     		orrs	r1, r1, r3	@, tmpcr2, TI1_Selection, tmpcr2
 2899              	.LVL227:
4650:src/stm32f1xx_hal_tim.c **** 
 2900              		.loc 1 4650 0
 2901 0a88 5160     		str	r1, [r2, #4]	@ tmpcr2, _3->CR2
4653:src/stm32f1xx_hal_tim.c **** 
 2902              		.loc 1 4653 0
 2903 0a8a 7047     		bx	lr	@
 2904              		.cfi_endproc
 2905              	.LFE135:
 2906              		.size	HAL_TIM_ConfigTI1Input, .-HAL_TIM_ConfigTI1Input
 2907              		.align	1
 2908              		.global	HAL_TIM_ReadCapturedValue
 2909              		.syntax unified
 2910              		.thumb
 2911              		.thumb_func
 2912              		.fpu softvfp
 2913              		.type	HAL_TIM_ReadCapturedValue, %function
 2914              	HAL_TIM_ReadCapturedValue:
 2915              	.LFB138:
4748:src/stm32f1xx_hal_tim.c ****   uint32_t tmpreg = 0U;
 2916              		.loc 1 4748 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920              		@ link register save eliminated.
 2921              	.LVL228:
4751:src/stm32f1xx_hal_tim.c ****   {
 2922              		.loc 1 4751 0
 2923 0a8c 0C29     		cmp	r1, #12	@ Channel,
 2924 0a8e 14D8     		bhi	.L228	@
 2925 0a90 DFE801F0 		tbb	[pc, r1]	@ Channel
 2926              	.L224:
 2927 0a94 07       		.byte	(.L223-.L224)/2
 2928 0a95 13       		.byte	(.L228-.L224)/2
 2929 0a96 13       		.byte	(.L228-.L224)/2
 2930 0a97 13       		.byte	(.L228-.L224)/2
 2931 0a98 0A       		.byte	(.L225-.L224)/2
 2932 0a99 13       		.byte	(.L228-.L224)/2
ARM GAS  /tmp/ccTsJCXT.s 			page 176


 2933 0a9a 13       		.byte	(.L228-.L224)/2
 2934 0a9b 13       		.byte	(.L228-.L224)/2
 2935 0a9c 0D       		.byte	(.L226-.L224)/2
 2936 0a9d 13       		.byte	(.L228-.L224)/2
 2937 0a9e 13       		.byte	(.L228-.L224)/2
 2938 0a9f 13       		.byte	(.L228-.L224)/2
 2939 0aa0 10       		.byte	(.L227-.L224)/2
 2940 0aa1 00       		.p2align 1
 2941              	.L223:
4759:src/stm32f1xx_hal_tim.c **** 
 2942              		.loc 1 4759 0
 2943 0aa2 0368     		ldr	r3, [r0]	@ _5, htim_4(D)->Instance
 2944 0aa4 586B     		ldr	r0, [r3, #52]	@ <retval>, _5->CCR1
 2945              	.LVL229:
4761:src/stm32f1xx_hal_tim.c ****     }
 2946              		.loc 1 4761 0
 2947 0aa6 7047     		bx	lr	@
 2948              	.LVL230:
 2949              	.L225:
4769:src/stm32f1xx_hal_tim.c **** 
 2950              		.loc 1 4769 0
 2951 0aa8 0368     		ldr	r3, [r0]	@ _7, htim_4(D)->Instance
 2952 0aaa 986B     		ldr	r0, [r3, #56]	@ <retval>, _7->CCR2
 2953              	.LVL231:
4771:src/stm32f1xx_hal_tim.c ****     }
 2954              		.loc 1 4771 0
 2955 0aac 7047     		bx	lr	@
 2956              	.LVL232:
 2957              	.L226:
4780:src/stm32f1xx_hal_tim.c **** 
 2958              		.loc 1 4780 0
 2959 0aae 0368     		ldr	r3, [r0]	@ _9, htim_4(D)->Instance
 2960 0ab0 D86B     		ldr	r0, [r3, #60]	@ <retval>, _9->CCR3
 2961              	.LVL233:
4782:src/stm32f1xx_hal_tim.c ****     }
 2962              		.loc 1 4782 0
 2963 0ab2 7047     		bx	lr	@
 2964              	.LVL234:
 2965              	.L227:
4791:src/stm32f1xx_hal_tim.c **** 
 2966              		.loc 1 4791 0
 2967 0ab4 0368     		ldr	r3, [r0]	@ _11, htim_4(D)->Instance
 2968 0ab6 186C     		ldr	r0, [r3, #64]	@ <retval>, _11->CCR4
 2969              	.LVL235:
4793:src/stm32f1xx_hal_tim.c ****     }
 2970              		.loc 1 4793 0
 2971 0ab8 7047     		bx	lr	@
 2972              	.LVL236:
 2973              	.L228:
4749:src/stm32f1xx_hal_tim.c **** 
 2974              		.loc 1 4749 0
 2975 0aba 0020     		movs	r0, #0	@ <retval>,
 2976              	.LVL237:
4801:src/stm32f1xx_hal_tim.c **** 
 2977              		.loc 1 4801 0
 2978 0abc 7047     		bx	lr	@
 2979              		.cfi_endproc
ARM GAS  /tmp/ccTsJCXT.s 			page 177


 2980              	.LFE138:
 2981              		.size	HAL_TIM_ReadCapturedValue, .-HAL_TIM_ReadCapturedValue
 2982              		.align	1
 2983              		.weak	HAL_TIM_PeriodElapsedCallback
 2984              		.syntax unified
 2985              		.thumb
 2986              		.thumb_func
 2987              		.fpu softvfp
 2988              		.type	HAL_TIM_PeriodElapsedCallback, %function
 2989              	HAL_TIM_PeriodElapsedCallback:
 2990              	.LFB196:
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 0
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 2994              		@ link register save eliminated.
 2995 0abe 7047     		bx	lr	@
 2996              		.cfi_endproc
 2997              	.LFE196:
 2998              		.size	HAL_TIM_PeriodElapsedCallback, .-HAL_TIM_PeriodElapsedCallback
 2999              		.align	1
 3000              		.syntax unified
 3001              		.thumb
 3002              		.thumb_func
 3003              		.fpu softvfp
 3004              		.type	TIM_DMAPeriodElapsedCplt, %function
 3005              	TIM_DMAPeriodElapsedCplt:
 3006              	.LFB160:
5738:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3007              		.loc 1 5738 0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
 3011              	.LVL238:
5738:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3012              		.loc 1 5738 0
 3013 0ac0 08B5     		push	{r3, lr}	@
 3014              	.LCFI16:
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 3, -8
 3017              		.cfi_offset 14, -4
5741:src/stm32f1xx_hal_tim.c **** 
 3018              		.loc 1 5741 0
 3019 0ac2 0123     		movs	r3, #1	@ tmp112,
5739:src/stm32f1xx_hal_tim.c **** 
 3020              		.loc 1 5739 0
 3021 0ac4 406A     		ldr	r0, [r0, #36]	@ htim, hdma_2(D)->Parent
 3022              	.LVL239:
5741:src/stm32f1xx_hal_tim.c **** 
 3023              		.loc 1 5741 0
 3024 0ac6 80F83D30 		strb	r3, [r0, #61]	@ tmp112, htim_3->State
5746:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3025              		.loc 1 5746 0
 3026 0aca FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback	@
 3027              	.LVL240:
 3028 0ace 08BD     		pop	{r3, pc}	@
 3029              		.cfi_endproc
 3030              	.LFE160:
ARM GAS  /tmp/ccTsJCXT.s 			page 178


 3031              		.size	TIM_DMAPeriodElapsedCplt, .-TIM_DMAPeriodElapsedCplt
 3032              		.align	1
 3033              		.weak	HAL_TIM_PeriodElapsedHalfCpltCallback
 3034              		.syntax unified
 3035              		.thumb
 3036              		.thumb_func
 3037              		.fpu softvfp
 3038              		.type	HAL_TIM_PeriodElapsedHalfCpltCallback, %function
 3039              	HAL_TIM_PeriodElapsedHalfCpltCallback:
 3040              	.LFB194:
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              		@ link register save eliminated.
 3045 0ad0 7047     		bx	lr	@
 3046              		.cfi_endproc
 3047              	.LFE194:
 3048              		.size	HAL_TIM_PeriodElapsedHalfCpltCallback, .-HAL_TIM_PeriodElapsedHalfCpltCallback
 3049              		.align	1
 3050              		.syntax unified
 3051              		.thumb
 3052              		.thumb_func
 3053              		.fpu softvfp
 3054              		.type	TIM_DMAPeriodElapsedHalfCplt, %function
 3055              	TIM_DMAPeriodElapsedHalfCplt:
 3056              	.LFB161:
5756:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3057              		.loc 1 5756 0
 3058              		.cfi_startproc
 3059              		@ args = 0, pretend = 0, frame = 0
 3060              		@ frame_needed = 0, uses_anonymous_args = 0
 3061              	.LVL241:
5756:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3062              		.loc 1 5756 0
 3063 0ad2 08B5     		push	{r3, lr}	@
 3064              	.LCFI17:
 3065              		.cfi_def_cfa_offset 8
 3066              		.cfi_offset 3, -8
 3067              		.cfi_offset 14, -4
5759:src/stm32f1xx_hal_tim.c **** 
 3068              		.loc 1 5759 0
 3069 0ad4 0123     		movs	r3, #1	@ tmp112,
5757:src/stm32f1xx_hal_tim.c **** 
 3070              		.loc 1 5757 0
 3071 0ad6 406A     		ldr	r0, [r0, #36]	@ htim, hdma_2(D)->Parent
 3072              	.LVL242:
5759:src/stm32f1xx_hal_tim.c **** 
 3073              		.loc 1 5759 0
 3074 0ad8 80F83D30 		strb	r3, [r0, #61]	@ tmp112, htim_3->State
5764:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3075              		.loc 1 5764 0
 3076 0adc FFF7FEFF 		bl	HAL_TIM_PeriodElapsedHalfCpltCallback	@
 3077              	.LVL243:
 3078 0ae0 08BD     		pop	{r3, pc}	@
 3079              		.cfi_endproc
 3080              	.LFE161:
 3081              		.size	TIM_DMAPeriodElapsedHalfCplt, .-TIM_DMAPeriodElapsedHalfCplt
ARM GAS  /tmp/ccTsJCXT.s 			page 179


 3082              		.align	1
 3083              		.weak	HAL_TIM_OC_DelayElapsedCallback
 3084              		.syntax unified
 3085              		.thumb
 3086              		.thumb_func
 3087              		.fpu softvfp
 3088              		.type	HAL_TIM_OC_DelayElapsedCallback, %function
 3089              	HAL_TIM_OC_DelayElapsedCallback:
 3090              	.LFB192:
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 0
 3093              		@ frame_needed = 0, uses_anonymous_args = 0
 3094              		@ link register save eliminated.
 3095 0ae2 7047     		bx	lr	@
 3096              		.cfi_endproc
 3097              	.LFE192:
 3098              		.size	HAL_TIM_OC_DelayElapsedCallback, .-HAL_TIM_OC_DelayElapsedCallback
 3099              		.align	1
 3100              		.weak	HAL_TIM_IC_CaptureCallback
 3101              		.syntax unified
 3102              		.thumb
 3103              		.thumb_func
 3104              		.fpu softvfp
 3105              		.type	HAL_TIM_IC_CaptureCallback, %function
 3106              	HAL_TIM_IC_CaptureCallback:
 3107              	.LFB190:
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 0
 3110              		@ frame_needed = 0, uses_anonymous_args = 0
 3111              		@ link register save eliminated.
 3112 0ae4 7047     		bx	lr	@
 3113              		.cfi_endproc
 3114              	.LFE190:
 3115              		.size	HAL_TIM_IC_CaptureCallback, .-HAL_TIM_IC_CaptureCallback
 3116              		.align	1
 3117              		.global	TIM_DMACaptureCplt
 3118              		.syntax unified
 3119              		.thumb
 3120              		.thumb_func
 3121              		.fpu softvfp
 3122              		.type	TIM_DMACaptureCplt, %function
 3123              	TIM_DMACaptureCplt:
 3124              	.LFB158:
5656:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3125              		.loc 1 5656 0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              	.LVL244:
5659:src/stm32f1xx_hal_tim.c **** 
 3130              		.loc 1 5659 0
 3131 0ae6 0123     		movs	r3, #1	@ tmp116,
5656:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3132              		.loc 1 5656 0
 3133 0ae8 10B5     		push	{r4, lr}	@
 3134              	.LCFI18:
 3135              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccTsJCXT.s 			page 180


 3136              		.cfi_offset 4, -8
 3137              		.cfi_offset 14, -4
5657:src/stm32f1xx_hal_tim.c **** 
 3138              		.loc 1 5657 0
 3139 0aea 446A     		ldr	r4, [r0, #36]	@ htim, hdma_3(D)->Parent
 3140              	.LVL245:
5661:src/stm32f1xx_hal_tim.c ****   {
 3141              		.loc 1 5661 0
 3142 0aec 626A     		ldr	r2, [r4, #36]	@ htim_4->hdma, htim_4->hdma
5659:src/stm32f1xx_hal_tim.c **** 
 3143              		.loc 1 5659 0
 3144 0aee 84F83D30 		strb	r3, [r4, #61]	@ tmp116, htim_4->State
5661:src/stm32f1xx_hal_tim.c ****   {
 3145              		.loc 1 5661 0
 3146 0af2 9042     		cmp	r0, r2	@ hdma, htim_4->hdma
 3147 0af4 06D1     		bne	.L236	@,
 3148              	.L240:
5675:src/stm32f1xx_hal_tim.c ****   }
 3149              		.loc 1 5675 0
 3150 0af6 2377     		strb	r3, [r4, #28]	@ tmp128, htim_4->Channel
 3151              	.L237:
5685:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3152              		.loc 1 5685 0
 3153 0af8 2046     		mov	r0, r4	@, htim
 3154              	.LVL246:
 3155 0afa FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback	@
 3156              	.LVL247:
5688:src/stm32f1xx_hal_tim.c **** }
 3157              		.loc 1 5688 0
 3158 0afe 0023     		movs	r3, #0	@ tmp130,
 3159 0b00 2377     		strb	r3, [r4, #28]	@ tmp130, htim_4->Channel
 3160 0b02 10BD     		pop	{r4, pc}	@
 3161              	.LVL248:
 3162              	.L236:
5665:src/stm32f1xx_hal_tim.c ****   {
 3163              		.loc 1 5665 0
 3164 0b04 A36A     		ldr	r3, [r4, #40]	@ htim_4->hdma, htim_4->hdma
 3165 0b06 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3166 0b08 01D1     		bne	.L238	@,
5667:src/stm32f1xx_hal_tim.c ****   }
 3167              		.loc 1 5667 0
 3168 0b0a 0223     		movs	r3, #2	@ tmp122,
 3169 0b0c F3E7     		b	.L240	@
 3170              	.L238:
5669:src/stm32f1xx_hal_tim.c ****   {
 3171              		.loc 1 5669 0
 3172 0b0e E36A     		ldr	r3, [r4, #44]	@ htim_4->hdma, htim_4->hdma
 3173 0b10 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3174 0b12 01D1     		bne	.L239	@,
5671:src/stm32f1xx_hal_tim.c ****   }
 3175              		.loc 1 5671 0
 3176 0b14 0423     		movs	r3, #4	@ tmp125,
 3177 0b16 EEE7     		b	.L240	@
 3178              	.L239:
5673:src/stm32f1xx_hal_tim.c ****   {
 3179              		.loc 1 5673 0
 3180 0b18 236B     		ldr	r3, [r4, #48]	@ htim_4->hdma, htim_4->hdma
ARM GAS  /tmp/ccTsJCXT.s 			page 181


 3181 0b1a 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3182 0b1c ECD1     		bne	.L237	@,
5675:src/stm32f1xx_hal_tim.c ****   }
 3183              		.loc 1 5675 0
 3184 0b1e 0823     		movs	r3, #8	@ tmp128,
 3185 0b20 E9E7     		b	.L240	@
 3186              		.cfi_endproc
 3187              	.LFE158:
 3188              		.size	TIM_DMACaptureCplt, .-TIM_DMACaptureCplt
 3189              		.align	1
 3190              		.weak	HAL_TIM_IC_CaptureHalfCpltCallback
 3191              		.syntax unified
 3192              		.thumb
 3193              		.thumb_func
 3194              		.fpu softvfp
 3195              		.type	HAL_TIM_IC_CaptureHalfCpltCallback, %function
 3196              	HAL_TIM_IC_CaptureHalfCpltCallback:
 3197              	.LFB188:
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 0
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
 3201              		@ link register save eliminated.
 3202 0b22 7047     		bx	lr	@
 3203              		.cfi_endproc
 3204              	.LFE188:
 3205              		.size	HAL_TIM_IC_CaptureHalfCpltCallback, .-HAL_TIM_IC_CaptureHalfCpltCallback
 3206              		.align	1
 3207              		.global	TIM_DMACaptureHalfCplt
 3208              		.syntax unified
 3209              		.thumb
 3210              		.thumb_func
 3211              		.fpu softvfp
 3212              		.type	TIM_DMACaptureHalfCplt, %function
 3213              	TIM_DMACaptureHalfCplt:
 3214              	.LFB159:
5697:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3215              		.loc 1 5697 0
 3216              		.cfi_startproc
 3217              		@ args = 0, pretend = 0, frame = 0
 3218              		@ frame_needed = 0, uses_anonymous_args = 0
 3219              	.LVL249:
5700:src/stm32f1xx_hal_tim.c **** 
 3220              		.loc 1 5700 0
 3221 0b24 0123     		movs	r3, #1	@ tmp116,
5697:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3222              		.loc 1 5697 0
 3223 0b26 10B5     		push	{r4, lr}	@
 3224              	.LCFI19:
 3225              		.cfi_def_cfa_offset 8
 3226              		.cfi_offset 4, -8
 3227              		.cfi_offset 14, -4
5698:src/stm32f1xx_hal_tim.c **** 
 3228              		.loc 1 5698 0
 3229 0b28 446A     		ldr	r4, [r0, #36]	@ htim, hdma_3(D)->Parent
 3230              	.LVL250:
5702:src/stm32f1xx_hal_tim.c ****   {
 3231              		.loc 1 5702 0
ARM GAS  /tmp/ccTsJCXT.s 			page 182


 3232 0b2a 626A     		ldr	r2, [r4, #36]	@ htim_4->hdma, htim_4->hdma
5700:src/stm32f1xx_hal_tim.c **** 
 3233              		.loc 1 5700 0
 3234 0b2c 84F83D30 		strb	r3, [r4, #61]	@ tmp116, htim_4->State
5702:src/stm32f1xx_hal_tim.c ****   {
 3235              		.loc 1 5702 0
 3236 0b30 9042     		cmp	r0, r2	@ hdma, htim_4->hdma
 3237 0b32 06D1     		bne	.L243	@,
 3238              	.L247:
5716:src/stm32f1xx_hal_tim.c ****   }
 3239              		.loc 1 5716 0
 3240 0b34 2377     		strb	r3, [r4, #28]	@ tmp128, htim_4->Channel
 3241              	.L244:
5726:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3242              		.loc 1 5726 0
 3243 0b36 2046     		mov	r0, r4	@, htim
 3244              	.LVL251:
 3245 0b38 FFF7FEFF 		bl	HAL_TIM_IC_CaptureHalfCpltCallback	@
 3246              	.LVL252:
5729:src/stm32f1xx_hal_tim.c **** }
 3247              		.loc 1 5729 0
 3248 0b3c 0023     		movs	r3, #0	@ tmp130,
 3249 0b3e 2377     		strb	r3, [r4, #28]	@ tmp130, htim_4->Channel
 3250 0b40 10BD     		pop	{r4, pc}	@
 3251              	.LVL253:
 3252              	.L243:
5706:src/stm32f1xx_hal_tim.c ****   {
 3253              		.loc 1 5706 0
 3254 0b42 A36A     		ldr	r3, [r4, #40]	@ htim_4->hdma, htim_4->hdma
 3255 0b44 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3256 0b46 01D1     		bne	.L245	@,
5708:src/stm32f1xx_hal_tim.c ****   }
 3257              		.loc 1 5708 0
 3258 0b48 0223     		movs	r3, #2	@ tmp122,
 3259 0b4a F3E7     		b	.L247	@
 3260              	.L245:
5710:src/stm32f1xx_hal_tim.c ****   {
 3261              		.loc 1 5710 0
 3262 0b4c E36A     		ldr	r3, [r4, #44]	@ htim_4->hdma, htim_4->hdma
 3263 0b4e 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3264 0b50 01D1     		bne	.L246	@,
5712:src/stm32f1xx_hal_tim.c ****   }
 3265              		.loc 1 5712 0
 3266 0b52 0423     		movs	r3, #4	@ tmp125,
 3267 0b54 EEE7     		b	.L247	@
 3268              	.L246:
5714:src/stm32f1xx_hal_tim.c ****   {
 3269              		.loc 1 5714 0
 3270 0b56 236B     		ldr	r3, [r4, #48]	@ htim_4->hdma, htim_4->hdma
 3271 0b58 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3272 0b5a ECD1     		bne	.L244	@,
5716:src/stm32f1xx_hal_tim.c ****   }
 3273              		.loc 1 5716 0
 3274 0b5c 0823     		movs	r3, #8	@ tmp128,
 3275 0b5e E9E7     		b	.L247	@
 3276              		.cfi_endproc
 3277              	.LFE159:
ARM GAS  /tmp/ccTsJCXT.s 			page 183


 3278              		.size	TIM_DMACaptureHalfCplt, .-TIM_DMACaptureHalfCplt
 3279              		.align	1
 3280              		.weak	HAL_TIM_PWM_PulseFinishedCallback
 3281              		.syntax unified
 3282              		.thumb
 3283              		.thumb_func
 3284              		.fpu softvfp
 3285              		.type	HAL_TIM_PWM_PulseFinishedCallback, %function
 3286              	HAL_TIM_PWM_PulseFinishedCallback:
 3287              	.LFB186:
 3288              		.cfi_startproc
 3289              		@ args = 0, pretend = 0, frame = 0
 3290              		@ frame_needed = 0, uses_anonymous_args = 0
 3291              		@ link register save eliminated.
 3292 0b60 7047     		bx	lr	@
 3293              		.cfi_endproc
 3294              	.LFE186:
 3295              		.size	HAL_TIM_PWM_PulseFinishedCallback, .-HAL_TIM_PWM_PulseFinishedCallback
 3296              		.align	1
 3297              		.global	TIM_DMADelayPulseCplt
 3298              		.syntax unified
 3299              		.thumb
 3300              		.thumb_func
 3301              		.fpu softvfp
 3302              		.type	TIM_DMADelayPulseCplt, %function
 3303              	TIM_DMADelayPulseCplt:
 3304              	.LFB156:
5574:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3305              		.loc 1 5574 0
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 0
 3308              		@ frame_needed = 0, uses_anonymous_args = 0
 3309              	.LVL254:
5577:src/stm32f1xx_hal_tim.c **** 
 3310              		.loc 1 5577 0
 3311 0b62 0123     		movs	r3, #1	@ tmp116,
5574:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3312              		.loc 1 5574 0
 3313 0b64 10B5     		push	{r4, lr}	@
 3314              	.LCFI20:
 3315              		.cfi_def_cfa_offset 8
 3316              		.cfi_offset 4, -8
 3317              		.cfi_offset 14, -4
5575:src/stm32f1xx_hal_tim.c **** 
 3318              		.loc 1 5575 0
 3319 0b66 446A     		ldr	r4, [r0, #36]	@ htim, hdma_3(D)->Parent
 3320              	.LVL255:
5579:src/stm32f1xx_hal_tim.c ****   {
 3321              		.loc 1 5579 0
 3322 0b68 626A     		ldr	r2, [r4, #36]	@ htim_4->hdma, htim_4->hdma
5577:src/stm32f1xx_hal_tim.c **** 
 3323              		.loc 1 5577 0
 3324 0b6a 84F83D30 		strb	r3, [r4, #61]	@ tmp116, htim_4->State
5579:src/stm32f1xx_hal_tim.c ****   {
 3325              		.loc 1 5579 0
 3326 0b6e 9042     		cmp	r0, r2	@ hdma, htim_4->hdma
 3327 0b70 06D1     		bne	.L250	@,
ARM GAS  /tmp/ccTsJCXT.s 			page 184


 3328              	.L254:
5593:src/stm32f1xx_hal_tim.c ****   }
 3329              		.loc 1 5593 0
 3330 0b72 2377     		strb	r3, [r4, #28]	@ tmp128, htim_4->Channel
 3331              	.L251:
5603:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3332              		.loc 1 5603 0
 3333 0b74 2046     		mov	r0, r4	@, htim
 3334              	.LVL256:
 3335 0b76 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback	@
 3336              	.LVL257:
5606:src/stm32f1xx_hal_tim.c **** }
 3337              		.loc 1 5606 0
 3338 0b7a 0023     		movs	r3, #0	@ tmp130,
 3339 0b7c 2377     		strb	r3, [r4, #28]	@ tmp130, htim_4->Channel
 3340 0b7e 10BD     		pop	{r4, pc}	@
 3341              	.LVL258:
 3342              	.L250:
5583:src/stm32f1xx_hal_tim.c ****   {
 3343              		.loc 1 5583 0
 3344 0b80 A36A     		ldr	r3, [r4, #40]	@ htim_4->hdma, htim_4->hdma
 3345 0b82 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3346 0b84 01D1     		bne	.L252	@,
5585:src/stm32f1xx_hal_tim.c ****   }
 3347              		.loc 1 5585 0
 3348 0b86 0223     		movs	r3, #2	@ tmp122,
 3349 0b88 F3E7     		b	.L254	@
 3350              	.L252:
5587:src/stm32f1xx_hal_tim.c ****   {
 3351              		.loc 1 5587 0
 3352 0b8a E36A     		ldr	r3, [r4, #44]	@ htim_4->hdma, htim_4->hdma
 3353 0b8c 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3354 0b8e 01D1     		bne	.L253	@,
5589:src/stm32f1xx_hal_tim.c ****   }
 3355              		.loc 1 5589 0
 3356 0b90 0423     		movs	r3, #4	@ tmp125,
 3357 0b92 EEE7     		b	.L254	@
 3358              	.L253:
5591:src/stm32f1xx_hal_tim.c ****   {
 3359              		.loc 1 5591 0
 3360 0b94 236B     		ldr	r3, [r4, #48]	@ htim_4->hdma, htim_4->hdma
 3361 0b96 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3362 0b98 ECD1     		bne	.L251	@,
5593:src/stm32f1xx_hal_tim.c ****   }
 3363              		.loc 1 5593 0
 3364 0b9a 0823     		movs	r3, #8	@ tmp128,
 3365 0b9c E9E7     		b	.L254	@
 3366              		.cfi_endproc
 3367              	.LFE156:
 3368              		.size	TIM_DMADelayPulseCplt, .-TIM_DMADelayPulseCplt
 3369              		.align	1
 3370              		.weak	HAL_TIM_PWM_PulseFinishedHalfCpltCallback
 3371              		.syntax unified
 3372              		.thumb
 3373              		.thumb_func
 3374              		.fpu softvfp
 3375              		.type	HAL_TIM_PWM_PulseFinishedHalfCpltCallback, %function
ARM GAS  /tmp/ccTsJCXT.s 			page 185


 3376              	HAL_TIM_PWM_PulseFinishedHalfCpltCallback:
 3377              	.LFB184:
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 3382 0b9e 7047     		bx	lr	@
 3383              		.cfi_endproc
 3384              	.LFE184:
 3385              		.size	HAL_TIM_PWM_PulseFinishedHalfCpltCallback, .-HAL_TIM_PWM_PulseFinishedHalfCpltCallback
 3386              		.align	1
 3387              		.global	TIM_DMADelayPulseHalfCplt
 3388              		.syntax unified
 3389              		.thumb
 3390              		.thumb_func
 3391              		.fpu softvfp
 3392              		.type	TIM_DMADelayPulseHalfCplt, %function
 3393              	TIM_DMADelayPulseHalfCplt:
 3394              	.LFB157:
5615:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3395              		.loc 1 5615 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 0
 3398              		@ frame_needed = 0, uses_anonymous_args = 0
 3399              	.LVL259:
5618:src/stm32f1xx_hal_tim.c **** 
 3400              		.loc 1 5618 0
 3401 0ba0 0123     		movs	r3, #1	@ tmp116,
5615:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3402              		.loc 1 5615 0
 3403 0ba2 10B5     		push	{r4, lr}	@
 3404              	.LCFI21:
 3405              		.cfi_def_cfa_offset 8
 3406              		.cfi_offset 4, -8
 3407              		.cfi_offset 14, -4
5616:src/stm32f1xx_hal_tim.c **** 
 3408              		.loc 1 5616 0
 3409 0ba4 446A     		ldr	r4, [r0, #36]	@ htim, hdma_3(D)->Parent
 3410              	.LVL260:
5620:src/stm32f1xx_hal_tim.c ****   {
 3411              		.loc 1 5620 0
 3412 0ba6 626A     		ldr	r2, [r4, #36]	@ htim_4->hdma, htim_4->hdma
5618:src/stm32f1xx_hal_tim.c **** 
 3413              		.loc 1 5618 0
 3414 0ba8 84F83D30 		strb	r3, [r4, #61]	@ tmp116, htim_4->State
5620:src/stm32f1xx_hal_tim.c ****   {
 3415              		.loc 1 5620 0
 3416 0bac 9042     		cmp	r0, r2	@ hdma, htim_4->hdma
 3417 0bae 06D1     		bne	.L257	@,
 3418              	.L261:
5634:src/stm32f1xx_hal_tim.c ****   }
 3419              		.loc 1 5634 0
 3420 0bb0 2377     		strb	r3, [r4, #28]	@ tmp128, htim_4->Channel
 3421              	.L258:
5644:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3422              		.loc 1 5644 0
 3423 0bb2 2046     		mov	r0, r4	@, htim
ARM GAS  /tmp/ccTsJCXT.s 			page 186


 3424              	.LVL261:
 3425 0bb4 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedHalfCpltCallback	@
 3426              	.LVL262:
5647:src/stm32f1xx_hal_tim.c **** }
 3427              		.loc 1 5647 0
 3428 0bb8 0023     		movs	r3, #0	@ tmp130,
 3429 0bba 2377     		strb	r3, [r4, #28]	@ tmp130, htim_4->Channel
 3430 0bbc 10BD     		pop	{r4, pc}	@
 3431              	.LVL263:
 3432              	.L257:
5624:src/stm32f1xx_hal_tim.c ****   {
 3433              		.loc 1 5624 0
 3434 0bbe A36A     		ldr	r3, [r4, #40]	@ htim_4->hdma, htim_4->hdma
 3435 0bc0 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3436 0bc2 01D1     		bne	.L259	@,
5626:src/stm32f1xx_hal_tim.c ****   }
 3437              		.loc 1 5626 0
 3438 0bc4 0223     		movs	r3, #2	@ tmp122,
 3439 0bc6 F3E7     		b	.L261	@
 3440              	.L259:
5628:src/stm32f1xx_hal_tim.c ****   {
 3441              		.loc 1 5628 0
 3442 0bc8 E36A     		ldr	r3, [r4, #44]	@ htim_4->hdma, htim_4->hdma
 3443 0bca 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3444 0bcc 01D1     		bne	.L260	@,
5630:src/stm32f1xx_hal_tim.c ****   }
 3445              		.loc 1 5630 0
 3446 0bce 0423     		movs	r3, #4	@ tmp125,
 3447 0bd0 EEE7     		b	.L261	@
 3448              	.L260:
5632:src/stm32f1xx_hal_tim.c ****   {
 3449              		.loc 1 5632 0
 3450 0bd2 236B     		ldr	r3, [r4, #48]	@ htim_4->hdma, htim_4->hdma
 3451 0bd4 9842     		cmp	r0, r3	@ hdma, htim_4->hdma
 3452 0bd6 ECD1     		bne	.L258	@,
5634:src/stm32f1xx_hal_tim.c ****   }
 3453              		.loc 1 5634 0
 3454 0bd8 0823     		movs	r3, #8	@ tmp128,
 3455 0bda E9E7     		b	.L261	@
 3456              		.cfi_endproc
 3457              	.LFE157:
 3458              		.size	TIM_DMADelayPulseHalfCplt, .-TIM_DMADelayPulseHalfCplt
 3459              		.align	1
 3460              		.weak	HAL_TIM_TriggerCallback
 3461              		.syntax unified
 3462              		.thumb
 3463              		.thumb_func
 3464              		.fpu softvfp
 3465              		.type	HAL_TIM_TriggerCallback, %function
 3466              	HAL_TIM_TriggerCallback:
 3467              	.LFB182:
 3468              		.cfi_startproc
 3469              		@ args = 0, pretend = 0, frame = 0
 3470              		@ frame_needed = 0, uses_anonymous_args = 0
 3471              		@ link register save eliminated.
 3472 0bdc 7047     		bx	lr	@
 3473              		.cfi_endproc
ARM GAS  /tmp/ccTsJCXT.s 			page 187


 3474              	.LFE182:
 3475              		.size	HAL_TIM_TriggerCallback, .-HAL_TIM_TriggerCallback
 3476              		.align	1
 3477              		.global	HAL_TIM_IRQHandler
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu softvfp
 3482              		.type	HAL_TIM_IRQHandler, %function
 3483              	HAL_TIM_IRQHandler:
 3484              	.LFB123:
3167:src/stm32f1xx_hal_tim.c ****   /* Capture compare 1 event */
 3485              		.loc 1 3167 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
 3488              		@ frame_needed = 0, uses_anonymous_args = 0
 3489              	.LVL264:
3169:src/stm32f1xx_hal_tim.c ****   {
 3490              		.loc 1 3169 0
 3491 0bde 0368     		ldr	r3, [r0]	@ _15, htim_14(D)->Instance
3167:src/stm32f1xx_hal_tim.c ****   /* Capture compare 1 event */
 3492              		.loc 1 3167 0
 3493 0be0 10B5     		push	{r4, lr}	@
 3494              	.LCFI22:
 3495              		.cfi_def_cfa_offset 8
 3496              		.cfi_offset 4, -8
 3497              		.cfi_offset 14, -4
3169:src/stm32f1xx_hal_tim.c ****   {
 3498              		.loc 1 3169 0
 3499 0be2 1A69     		ldr	r2, [r3, #16]	@ _16, _15->SR
3167:src/stm32f1xx_hal_tim.c ****   /* Capture compare 1 event */
 3500              		.loc 1 3167 0
 3501 0be4 0446     		mov	r4, r0	@ htim, htim
3169:src/stm32f1xx_hal_tim.c ****   {
 3502              		.loc 1 3169 0
 3503 0be6 9107     		lsls	r1, r2, #30	@, _16,
 3504 0be8 0ED5     		bpl	.L264	@,
3171:src/stm32f1xx_hal_tim.c ****     {
 3505              		.loc 1 3171 0
 3506 0bea DA68     		ldr	r2, [r3, #12]	@ _18, _15->DIER
 3507 0bec 9207     		lsls	r2, r2, #30	@, _18,
 3508 0bee 0BD5     		bpl	.L264	@,
3174:src/stm32f1xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 3509              		.loc 1 3174 0
 3510 0bf0 6FF00202 		mvn	r2, #2	@ tmp161,
 3511 0bf4 1A61     		str	r2, [r3, #16]	@ tmp161, _15->SR
3175:src/stm32f1xx_hal_tim.c **** 
 3512              		.loc 1 3175 0
 3513 0bf6 0122     		movs	r2, #1	@ tmp162,
3178:src/stm32f1xx_hal_tim.c ****         {
 3514              		.loc 1 3178 0
 3515 0bf8 9B69     		ldr	r3, [r3, #24]	@ _22, _15->CCMR1
3175:src/stm32f1xx_hal_tim.c **** 
 3516              		.loc 1 3175 0
 3517 0bfa 0277     		strb	r2, [r0, #28]	@ tmp162, htim_14(D)->Channel
3178:src/stm32f1xx_hal_tim.c ****         {
 3518              		.loc 1 3178 0
ARM GAS  /tmp/ccTsJCXT.s 			page 188


 3519 0bfc 9B07     		lsls	r3, r3, #30	@, _22,
 3520 0bfe 77D0     		beq	.L265	@,
3183:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3521              		.loc 1 3183 0
 3522 0c00 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback	@
 3523              	.LVL265:
 3524              	.L266:
3197:src/stm32f1xx_hal_tim.c ****       }
 3525              		.loc 1 3197 0
 3526 0c04 0023     		movs	r3, #0	@ tmp165,
 3527 0c06 2377     		strb	r3, [r4, #28]	@ tmp165, htim_14(D)->Channel
 3528              	.L264:
3202:src/stm32f1xx_hal_tim.c ****   {
 3529              		.loc 1 3202 0
 3530 0c08 2368     		ldr	r3, [r4]	@ _28, htim_14(D)->Instance
 3531 0c0a 1A69     		ldr	r2, [r3, #16]	@ _29, _28->SR
 3532 0c0c 5007     		lsls	r0, r2, #29	@, _29,
 3533 0c0e 10D5     		bpl	.L267	@,
3204:src/stm32f1xx_hal_tim.c ****     {
 3534              		.loc 1 3204 0
 3535 0c10 DA68     		ldr	r2, [r3, #12]	@ _31, _28->DIER
 3536 0c12 5107     		lsls	r1, r2, #29	@, _31,
 3537 0c14 0DD5     		bpl	.L267	@,
3206:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 3538              		.loc 1 3206 0
 3539 0c16 6FF00402 		mvn	r2, #4	@ tmp169,
 3540 0c1a 1A61     		str	r2, [r3, #16]	@ tmp169, _28->SR
3207:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3541              		.loc 1 3207 0
 3542 0c1c 0222     		movs	r2, #2	@ tmp170,
3209:src/stm32f1xx_hal_tim.c ****       {
 3543              		.loc 1 3209 0
 3544 0c1e 9B69     		ldr	r3, [r3, #24]	@ _35, _28->CCMR1
3207:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3545              		.loc 1 3207 0
 3546 0c20 2277     		strb	r2, [r4, #28]	@ tmp170, htim_14(D)->Channel
3209:src/stm32f1xx_hal_tim.c ****       {
 3547              		.loc 1 3209 0
 3548 0c22 13F4407F 		tst	r3, #768	@ _35,
3214:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3549              		.loc 1 3214 0
 3550 0c26 2046     		mov	r0, r4	@, htim
3209:src/stm32f1xx_hal_tim.c ****       {
 3551              		.loc 1 3209 0
 3552 0c28 68D0     		beq	.L268	@,
 3553              	.LVL266:
3214:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3554              		.loc 1 3214 0
 3555 0c2a FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback	@
 3556              	.LVL267:
 3557              	.L269:
3228:src/stm32f1xx_hal_tim.c ****     }
 3558              		.loc 1 3228 0
 3559 0c2e 0023     		movs	r3, #0	@ tmp173,
 3560 0c30 2377     		strb	r3, [r4, #28]	@ tmp173, htim_14(D)->Channel
 3561              	.L267:
3232:src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp/ccTsJCXT.s 			page 189


 3562              		.loc 1 3232 0
 3563 0c32 2368     		ldr	r3, [r4]	@ _41, htim_14(D)->Instance
 3564 0c34 1A69     		ldr	r2, [r3, #16]	@ _42, _41->SR
 3565 0c36 1207     		lsls	r2, r2, #28	@, _42,
 3566 0c38 0FD5     		bpl	.L270	@,
3234:src/stm32f1xx_hal_tim.c ****     {
 3567              		.loc 1 3234 0
 3568 0c3a DA68     		ldr	r2, [r3, #12]	@ _44, _41->DIER
 3569 0c3c 1007     		lsls	r0, r2, #28	@, _44,
 3570 0c3e 0CD5     		bpl	.L270	@,
3236:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 3571              		.loc 1 3236 0
 3572 0c40 6FF00802 		mvn	r2, #8	@ tmp177,
 3573 0c44 1A61     		str	r2, [r3, #16]	@ tmp177, _41->SR
3237:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3574              		.loc 1 3237 0
 3575 0c46 0422     		movs	r2, #4	@ tmp178,
3239:src/stm32f1xx_hal_tim.c ****       {
 3576              		.loc 1 3239 0
 3577 0c48 DB69     		ldr	r3, [r3, #28]	@ _48, _41->CCMR2
3237:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3578              		.loc 1 3237 0
 3579 0c4a 2277     		strb	r2, [r4, #28]	@ tmp178, htim_14(D)->Channel
3239:src/stm32f1xx_hal_tim.c ****       {
 3580              		.loc 1 3239 0
 3581 0c4c 9907     		lsls	r1, r3, #30	@, _48,
3244:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3582              		.loc 1 3244 0
 3583 0c4e 2046     		mov	r0, r4	@, htim
3239:src/stm32f1xx_hal_tim.c ****       {
 3584              		.loc 1 3239 0
 3585 0c50 5AD0     		beq	.L271	@,
 3586              	.LVL268:
3244:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3587              		.loc 1 3244 0
 3588 0c52 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback	@
 3589              	.LVL269:
 3590              	.L272:
3258:src/stm32f1xx_hal_tim.c ****     }
 3591              		.loc 1 3258 0
 3592 0c56 0023     		movs	r3, #0	@ tmp181,
 3593 0c58 2377     		strb	r3, [r4, #28]	@ tmp181, htim_14(D)->Channel
 3594              	.L270:
3262:src/stm32f1xx_hal_tim.c ****   {
 3595              		.loc 1 3262 0
 3596 0c5a 2368     		ldr	r3, [r4]	@ _54, htim_14(D)->Instance
 3597 0c5c 1A69     		ldr	r2, [r3, #16]	@ _55, _54->SR
 3598 0c5e D206     		lsls	r2, r2, #27	@, _55,
 3599 0c60 10D5     		bpl	.L273	@,
3264:src/stm32f1xx_hal_tim.c ****     {
 3600              		.loc 1 3264 0
 3601 0c62 DA68     		ldr	r2, [r3, #12]	@ _57, _54->DIER
 3602 0c64 D006     		lsls	r0, r2, #27	@, _57,
 3603 0c66 0DD5     		bpl	.L273	@,
3266:src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 3604              		.loc 1 3266 0
 3605 0c68 6FF01002 		mvn	r2, #16	@ tmp185,
ARM GAS  /tmp/ccTsJCXT.s 			page 190


 3606 0c6c 1A61     		str	r2, [r3, #16]	@ tmp185, _54->SR
3267:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3607              		.loc 1 3267 0
 3608 0c6e 0822     		movs	r2, #8	@ tmp186,
3269:src/stm32f1xx_hal_tim.c ****       {
 3609              		.loc 1 3269 0
 3610 0c70 DB69     		ldr	r3, [r3, #28]	@ _61, _54->CCMR2
3267:src/stm32f1xx_hal_tim.c ****       /* Input capture event */
 3611              		.loc 1 3267 0
 3612 0c72 2277     		strb	r2, [r4, #28]	@ tmp186, htim_14(D)->Channel
3269:src/stm32f1xx_hal_tim.c ****       {
 3613              		.loc 1 3269 0
 3614 0c74 13F4407F 		tst	r3, #768	@ _61,
3274:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3615              		.loc 1 3274 0
 3616 0c78 2046     		mov	r0, r4	@, htim
3269:src/stm32f1xx_hal_tim.c ****       {
 3617              		.loc 1 3269 0
 3618 0c7a 4BD0     		beq	.L274	@,
 3619              	.LVL270:
3274:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3620              		.loc 1 3274 0
 3621 0c7c FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback	@
 3622              	.LVL271:
 3623              	.L275:
3288:src/stm32f1xx_hal_tim.c ****     }
 3624              		.loc 1 3288 0
 3625 0c80 0023     		movs	r3, #0	@ tmp189,
 3626 0c82 2377     		strb	r3, [r4, #28]	@ tmp189, htim_14(D)->Channel
 3627              	.L273:
3292:src/stm32f1xx_hal_tim.c ****   {
 3628              		.loc 1 3292 0
 3629 0c84 2368     		ldr	r3, [r4]	@ _67, htim_14(D)->Instance
 3630 0c86 1A69     		ldr	r2, [r3, #16]	@ _68, _67->SR
 3631 0c88 D107     		lsls	r1, r2, #31	@, _68,
 3632 0c8a 08D5     		bpl	.L276	@,
3294:src/stm32f1xx_hal_tim.c ****     {
 3633              		.loc 1 3294 0
 3634 0c8c DA68     		ldr	r2, [r3, #12]	@ _70, _67->DIER
 3635 0c8e D207     		lsls	r2, r2, #31	@, _70,
 3636 0c90 05D5     		bpl	.L276	@,
3296:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3637              		.loc 1 3296 0
 3638 0c92 6FF00102 		mvn	r2, #1	@ tmp193,
3300:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3639              		.loc 1 3300 0
 3640 0c96 2046     		mov	r0, r4	@, htim
3296:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3641              		.loc 1 3296 0
 3642 0c98 1A61     		str	r2, [r3, #16]	@ tmp193, _67->SR
3300:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3643              		.loc 1 3300 0
 3644 0c9a FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback	@
 3645              	.LVL272:
 3646              	.L276:
3305:src/stm32f1xx_hal_tim.c ****   {
 3647              		.loc 1 3305 0
ARM GAS  /tmp/ccTsJCXT.s 			page 191


 3648 0c9e 2368     		ldr	r3, [r4]	@ _74, htim_14(D)->Instance
 3649 0ca0 1A69     		ldr	r2, [r3, #16]	@ _75, _74->SR
 3650 0ca2 1006     		lsls	r0, r2, #24	@, _75,
 3651 0ca4 08D5     		bpl	.L277	@,
3307:src/stm32f1xx_hal_tim.c ****     {
 3652              		.loc 1 3307 0
 3653 0ca6 DA68     		ldr	r2, [r3, #12]	@ _77, _74->DIER
 3654 0ca8 1106     		lsls	r1, r2, #24	@, _77,
 3655 0caa 05D5     		bpl	.L277	@,
3309:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3656              		.loc 1 3309 0
 3657 0cac 6FF08002 		mvn	r2, #128	@ tmp196,
3313:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3658              		.loc 1 3313 0
 3659 0cb0 2046     		mov	r0, r4	@, htim
3309:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3660              		.loc 1 3309 0
 3661 0cb2 1A61     		str	r2, [r3, #16]	@ tmp196, _74->SR
3313:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3662              		.loc 1 3313 0
 3663 0cb4 FFF7FEFF 		bl	HAL_TIMEx_BreakCallback	@
 3664              	.LVL273:
 3665              	.L277:
3318:src/stm32f1xx_hal_tim.c ****   {
 3666              		.loc 1 3318 0
 3667 0cb8 2368     		ldr	r3, [r4]	@ _81, htim_14(D)->Instance
 3668 0cba 1A69     		ldr	r2, [r3, #16]	@ _82, _81->SR
 3669 0cbc 5206     		lsls	r2, r2, #25	@, _82,
 3670 0cbe 08D5     		bpl	.L278	@,
3320:src/stm32f1xx_hal_tim.c ****     {
 3671              		.loc 1 3320 0
 3672 0cc0 DA68     		ldr	r2, [r3, #12]	@ _84, _81->DIER
 3673 0cc2 5006     		lsls	r0, r2, #25	@, _84,
 3674 0cc4 05D5     		bpl	.L278	@,
3322:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3675              		.loc 1 3322 0
 3676 0cc6 6FF04002 		mvn	r2, #64	@ tmp199,
3326:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3677              		.loc 1 3326 0
 3678 0cca 2046     		mov	r0, r4	@, htim
3322:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3679              		.loc 1 3322 0
 3680 0ccc 1A61     		str	r2, [r3, #16]	@ tmp199, _81->SR
3326:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3681              		.loc 1 3326 0
 3682 0cce FFF7FEFF 		bl	HAL_TIM_TriggerCallback	@
 3683              	.LVL274:
 3684              	.L278:
3331:src/stm32f1xx_hal_tim.c ****   {
 3685              		.loc 1 3331 0
 3686 0cd2 2368     		ldr	r3, [r4]	@ _88, htim_14(D)->Instance
 3687 0cd4 1A69     		ldr	r2, [r3, #16]	@ _89, _88->SR
 3688 0cd6 9106     		lsls	r1, r2, #26	@, _89,
 3689 0cd8 22D5     		bpl	.L263	@,
3333:src/stm32f1xx_hal_tim.c ****     {
 3690              		.loc 1 3333 0
 3691 0cda DA68     		ldr	r2, [r3, #12]	@ _91, _88->DIER
ARM GAS  /tmp/ccTsJCXT.s 			page 192


 3692 0cdc 9206     		lsls	r2, r2, #26	@, _91,
 3693 0cde 1FD5     		bpl	.L263	@,
3335:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3694              		.loc 1 3335 0
 3695 0ce0 6FF02002 		mvn	r2, #32	@ tmp202,
3339:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3696              		.loc 1 3339 0
 3697 0ce4 2046     		mov	r0, r4	@, htim
3343:src/stm32f1xx_hal_tim.c **** 
 3698              		.loc 1 3343 0
 3699 0ce6 BDE81040 		pop	{r4, lr}	@
 3700              	.LCFI23:
 3701              		.cfi_remember_state
 3702              		.cfi_restore 14
 3703              		.cfi_restore 4
 3704              		.cfi_def_cfa_offset 0
 3705              	.LVL275:
3335:src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 3706              		.loc 1 3335 0
 3707 0cea 1A61     		str	r2, [r3, #16]	@ tmp202, _88->SR
3339:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3708              		.loc 1 3339 0
 3709 0cec FFF7FEBF 		b	HAL_TIMEx_CommutCallback	@
 3710              	.LVL276:
 3711              	.L265:
 3712              	.LCFI24:
 3713              		.cfi_restore_state
3193:src/stm32f1xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
 3714              		.loc 1 3193 0
 3715 0cf0 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback	@
 3716              	.LVL277:
3194:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3717              		.loc 1 3194 0
 3718 0cf4 2046     		mov	r0, r4	@, htim
 3719 0cf6 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback	@
 3720              	.LVL278:
 3721 0cfa 83E7     		b	.L266	@
 3722              	.LVL279:
 3723              	.L268:
3224:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3724              		.loc 1 3224 0
 3725 0cfc FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback	@
 3726              	.LVL280:
3225:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3727              		.loc 1 3225 0
 3728 0d00 2046     		mov	r0, r4	@, htim
 3729 0d02 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback	@
 3730              	.LVL281:
 3731 0d06 92E7     		b	.L269	@
 3732              	.LVL282:
 3733              	.L271:
3254:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3734              		.loc 1 3254 0
 3735 0d08 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback	@
 3736              	.LVL283:
3255:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3737              		.loc 1 3255 0
ARM GAS  /tmp/ccTsJCXT.s 			page 193


 3738 0d0c 2046     		mov	r0, r4	@, htim
 3739 0d0e FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback	@
 3740              	.LVL284:
 3741 0d12 A0E7     		b	.L272	@
 3742              	.LVL285:
 3743              	.L274:
3284:src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3744              		.loc 1 3284 0
 3745 0d14 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback	@
 3746              	.LVL286:
3285:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3747              		.loc 1 3285 0
 3748 0d18 2046     		mov	r0, r4	@, htim
 3749 0d1a FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback	@
 3750              	.LVL287:
 3751 0d1e AFE7     		b	.L275	@
 3752              	.L263:
 3753 0d20 10BD     		pop	{r4, pc}	@
 3754              		.cfi_endproc
 3755              	.LFE123:
 3756              		.size	HAL_TIM_IRQHandler, .-HAL_TIM_IRQHandler
 3757              		.align	1
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3761              		.fpu softvfp
 3762              		.type	TIM_DMATriggerCplt, %function
 3763              	TIM_DMATriggerCplt:
 3764              	.LFB162:
5774:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3765              		.loc 1 5774 0
 3766              		.cfi_startproc
 3767              		@ args = 0, pretend = 0, frame = 0
 3768              		@ frame_needed = 0, uses_anonymous_args = 0
 3769              	.LVL288:
 3770 0d22 08B5     		push	{r3, lr}	@
 3771              	.LCFI25:
 3772              		.cfi_def_cfa_offset 8
 3773              		.cfi_offset 3, -8
 3774              		.cfi_offset 14, -4
5777:src/stm32f1xx_hal_tim.c **** 
 3775              		.loc 1 5777 0
 3776 0d24 0123     		movs	r3, #1	@ tmp112,
5775:src/stm32f1xx_hal_tim.c **** 
 3777              		.loc 1 5775 0
 3778 0d26 406A     		ldr	r0, [r0, #36]	@ htim, hdma_2(D)->Parent
 3779              	.LVL289:
5777:src/stm32f1xx_hal_tim.c **** 
 3780              		.loc 1 5777 0
 3781 0d28 80F83D30 		strb	r3, [r0, #61]	@ tmp112, htim_3->State
5782:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3782              		.loc 1 5782 0
 3783 0d2c FFF7FEFF 		bl	HAL_TIM_TriggerCallback	@
 3784              	.LVL290:
 3785 0d30 08BD     		pop	{r3, pc}	@
 3786              		.cfi_endproc
 3787              	.LFE162:
ARM GAS  /tmp/ccTsJCXT.s 			page 194


 3788              		.size	TIM_DMATriggerCplt, .-TIM_DMATriggerCplt
 3789              		.align	1
 3790              		.weak	HAL_TIM_TriggerHalfCpltCallback
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu softvfp
 3795              		.type	HAL_TIM_TriggerHalfCpltCallback, %function
 3796              	HAL_TIM_TriggerHalfCpltCallback:
 3797              	.LFB180:
 3798              		.cfi_startproc
 3799              		@ args = 0, pretend = 0, frame = 0
 3800              		@ frame_needed = 0, uses_anonymous_args = 0
 3801              		@ link register save eliminated.
 3802 0d32 7047     		bx	lr	@
 3803              		.cfi_endproc
 3804              	.LFE180:
 3805              		.size	HAL_TIM_TriggerHalfCpltCallback, .-HAL_TIM_TriggerHalfCpltCallback
 3806              		.align	1
 3807              		.syntax unified
 3808              		.thumb
 3809              		.thumb_func
 3810              		.fpu softvfp
 3811              		.type	TIM_DMATriggerHalfCplt, %function
 3812              	TIM_DMATriggerHalfCplt:
 3813              	.LFB163:
5792:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3814              		.loc 1 5792 0
 3815              		.cfi_startproc
 3816              		@ args = 0, pretend = 0, frame = 0
 3817              		@ frame_needed = 0, uses_anonymous_args = 0
 3818              	.LVL291:
5792:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3819              		.loc 1 5792 0
 3820 0d34 08B5     		push	{r3, lr}	@
 3821              	.LCFI26:
 3822              		.cfi_def_cfa_offset 8
 3823              		.cfi_offset 3, -8
 3824              		.cfi_offset 14, -4
5795:src/stm32f1xx_hal_tim.c **** 
 3825              		.loc 1 5795 0
 3826 0d36 0123     		movs	r3, #1	@ tmp112,
5793:src/stm32f1xx_hal_tim.c **** 
 3827              		.loc 1 5793 0
 3828 0d38 406A     		ldr	r0, [r0, #36]	@ htim, hdma_2(D)->Parent
 3829              	.LVL292:
5795:src/stm32f1xx_hal_tim.c **** 
 3830              		.loc 1 5795 0
 3831 0d3a 80F83D30 		strb	r3, [r0, #61]	@ tmp112, htim_3->State
5800:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3832              		.loc 1 5800 0
 3833 0d3e FFF7FEFF 		bl	HAL_TIM_TriggerHalfCpltCallback	@
 3834              	.LVL293:
 3835 0d42 08BD     		pop	{r3, pc}	@
 3836              		.cfi_endproc
 3837              	.LFE163:
 3838              		.size	TIM_DMATriggerHalfCplt, .-TIM_DMATriggerHalfCplt
ARM GAS  /tmp/ccTsJCXT.s 			page 195


 3839              		.align	1
 3840              		.weak	HAL_TIM_ErrorCallback
 3841              		.syntax unified
 3842              		.thumb
 3843              		.thumb_func
 3844              		.fpu softvfp
 3845              		.type	HAL_TIM_ErrorCallback, %function
 3846              	HAL_TIM_ErrorCallback:
 3847              	.LFB148:
4967:src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 3848              		.loc 1 4967 0
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 0, uses_anonymous_args = 0
 3852              		@ link register save eliminated.
 3853              	.LVL294:
 3854 0d44 7047     		bx	lr	@
 3855              		.cfi_endproc
 3856              	.LFE148:
 3857              		.size	HAL_TIM_ErrorCallback, .-HAL_TIM_ErrorCallback
 3858              		.align	1
 3859              		.global	TIM_DMAError
 3860              		.syntax unified
 3861              		.thumb
 3862              		.thumb_func
 3863              		.fpu softvfp
 3864              		.type	TIM_DMAError, %function
 3865              	TIM_DMAError:
 3866              	.LFB155:
5556:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3867              		.loc 1 5556 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 0
 3870              		@ frame_needed = 0, uses_anonymous_args = 0
 3871              	.LVL295:
5556:src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3872              		.loc 1 5556 0
 3873 0d46 08B5     		push	{r3, lr}	@
 3874              	.LCFI27:
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 3, -8
 3877              		.cfi_offset 14, -4
5559:src/stm32f1xx_hal_tim.c **** 
 3878              		.loc 1 5559 0
 3879 0d48 0123     		movs	r3, #1	@ tmp112,
5557:src/stm32f1xx_hal_tim.c **** 
 3880              		.loc 1 5557 0
 3881 0d4a 406A     		ldr	r0, [r0, #36]	@ htim, hdma_2(D)->Parent
 3882              	.LVL296:
5559:src/stm32f1xx_hal_tim.c **** 
 3883              		.loc 1 5559 0
 3884 0d4c 80F83D30 		strb	r3, [r0, #61]	@ tmp112, htim_3->State
5564:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3885              		.loc 1 5564 0
 3886 0d50 FFF7FEFF 		bl	HAL_TIM_ErrorCallback	@
 3887              	.LVL297:
 3888 0d54 08BD     		pop	{r3, pc}	@
ARM GAS  /tmp/ccTsJCXT.s 			page 196


 3889              		.cfi_endproc
 3890              	.LFE155:
 3891              		.size	TIM_DMAError, .-TIM_DMAError
 3892              		.align	1
 3893              		.global	HAL_TIM_Base_GetState
 3894              		.syntax unified
 3895              		.thumb
 3896              		.thumb_func
 3897              		.fpu softvfp
 3898              		.type	HAL_TIM_Base_GetState, %function
 3899              	HAL_TIM_Base_GetState:
 3900              	.LFB230:
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 0
 3903              		@ frame_needed = 0, uses_anonymous_args = 0
 3904              		@ link register save eliminated.
 3905 0d56 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3906 0d5a 7047     		bx	lr	@
 3907              		.cfi_endproc
 3908              	.LFE230:
 3909              		.size	HAL_TIM_Base_GetState, .-HAL_TIM_Base_GetState
 3910              		.align	1
 3911              		.global	HAL_TIM_OC_GetState
 3912              		.syntax unified
 3913              		.thumb
 3914              		.thumb_func
 3915              		.fpu softvfp
 3916              		.type	HAL_TIM_OC_GetState, %function
 3917              	HAL_TIM_OC_GetState:
 3918              	.LFB228:
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 0
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
 3922              		@ link register save eliminated.
 3923 0d5c 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3924 0d60 7047     		bx	lr	@
 3925              		.cfi_endproc
 3926              	.LFE228:
 3927              		.size	HAL_TIM_OC_GetState, .-HAL_TIM_OC_GetState
 3928              		.align	1
 3929              		.global	HAL_TIM_PWM_GetState
 3930              		.syntax unified
 3931              		.thumb
 3932              		.thumb_func
 3933              		.fpu softvfp
 3934              		.type	HAL_TIM_PWM_GetState, %function
 3935              	HAL_TIM_PWM_GetState:
 3936              	.LFB226:
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              		@ link register save eliminated.
 3941 0d62 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3942 0d66 7047     		bx	lr	@
 3943              		.cfi_endproc
 3944              	.LFE226:
 3945              		.size	HAL_TIM_PWM_GetState, .-HAL_TIM_PWM_GetState
ARM GAS  /tmp/ccTsJCXT.s 			page 197


 3946              		.align	1
 3947              		.global	HAL_TIM_IC_GetState
 3948              		.syntax unified
 3949              		.thumb
 3950              		.thumb_func
 3951              		.fpu softvfp
 3952              		.type	HAL_TIM_IC_GetState, %function
 3953              	HAL_TIM_IC_GetState:
 3954              	.LFB224:
 3955              		.cfi_startproc
 3956              		@ args = 0, pretend = 0, frame = 0
 3957              		@ frame_needed = 0, uses_anonymous_args = 0
 3958              		@ link register save eliminated.
 3959 0d68 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3960 0d6c 7047     		bx	lr	@
 3961              		.cfi_endproc
 3962              	.LFE224:
 3963              		.size	HAL_TIM_IC_GetState, .-HAL_TIM_IC_GetState
 3964              		.align	1
 3965              		.global	HAL_TIM_OnePulse_GetState
 3966              		.syntax unified
 3967              		.thumb
 3968              		.thumb_func
 3969              		.fpu softvfp
 3970              		.type	HAL_TIM_OnePulse_GetState, %function
 3971              	HAL_TIM_OnePulse_GetState:
 3972              	.LFB222:
 3973              		.cfi_startproc
 3974              		@ args = 0, pretend = 0, frame = 0
 3975              		@ frame_needed = 0, uses_anonymous_args = 0
 3976              		@ link register save eliminated.
 3977 0d6e 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3978 0d72 7047     		bx	lr	@
 3979              		.cfi_endproc
 3980              	.LFE222:
 3981              		.size	HAL_TIM_OnePulse_GetState, .-HAL_TIM_OnePulse_GetState
 3982              		.align	1
 3983              		.global	HAL_TIM_Encoder_GetState
 3984              		.syntax unified
 3985              		.thumb
 3986              		.thumb_func
 3987              		.fpu softvfp
 3988              		.type	HAL_TIM_Encoder_GetState, %function
 3989              	HAL_TIM_Encoder_GetState:
 3990              	.LFB154:
5534:src/stm32f1xx_hal_tim.c ****   return htim->State;
 3991              		.loc 1 5534 0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 0
 3994              		@ frame_needed = 0, uses_anonymous_args = 0
 3995              		@ link register save eliminated.
 3996              	.LVL298:
5535:src/stm32f1xx_hal_tim.c **** }
 3997              		.loc 1 5535 0
 3998 0d74 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_2(D)->State, htim_2(D)->State
 3999              	.LVL299:
5536:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 198


 4000              		.loc 1 5536 0
 4001 0d78 7047     		bx	lr	@
 4002              		.cfi_endproc
 4003              	.LFE154:
 4004              		.size	HAL_TIM_Encoder_GetState, .-HAL_TIM_Encoder_GetState
 4005              		.align	1
 4006              		.global	TIM_Base_SetConfig
 4007              		.syntax unified
 4008              		.thumb
 4009              		.thumb_func
 4010              		.fpu softvfp
 4011              		.type	TIM_Base_SetConfig, %function
 4012              	TIM_Base_SetConfig:
 4013              	.LFB164:
5811:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr1;
 4014              		.loc 1 5811 0
 4015              		.cfi_startproc
 4016              		@ args = 0, pretend = 0, frame = 0
 4017              		@ frame_needed = 0, uses_anonymous_args = 0
 4018              	.LVL300:
5816:src/stm32f1xx_hal_tim.c ****   {
 4019              		.loc 1 5816 0
 4020 0d7a 164A     		ldr	r2, .L350	@ tmp123,
5811:src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr1;
 4021              		.loc 1 5811 0
 4022 0d7c 10B5     		push	{r4, lr}	@
 4023              	.LCFI28:
 4024              		.cfi_def_cfa_offset 8
 4025              		.cfi_offset 4, -8
 4026              		.cfi_offset 14, -4
5816:src/stm32f1xx_hal_tim.c ****   {
 4027              		.loc 1 5816 0
 4028 0d7e 9042     		cmp	r0, r2	@ TIMx, tmp123
5813:src/stm32f1xx_hal_tim.c **** 
 4029              		.loc 1 5813 0
 4030 0d80 0368     		ldr	r3, [r0]	@ tmpcr1, TIMx_5(D)->CR1
 4031              	.LVL301:
5816:src/stm32f1xx_hal_tim.c ****   {
 4032              		.loc 1 5816 0
 4033 0d82 05D0     		beq	.L340	@,
5816:src/stm32f1xx_hal_tim.c ****   {
 4034              		.loc 1 5816 0 is_stmt 0 discriminator 1
 4035 0d84 B0F1804F 		cmp	r0, #1073741824	@ TIMx,
 4036 0d88 02D0     		beq	.L340	@,
5816:src/stm32f1xx_hal_tim.c ****   {
 4037              		.loc 1 5816 0 discriminator 2
 4038 0d8a 134C     		ldr	r4, .L350+4	@ tmp124,
 4039 0d8c A042     		cmp	r0, r4	@ TIMx, tmp124
 4040 0d8e 10D1     		bne	.L341	@,
 4041              	.L340:
5820:src/stm32f1xx_hal_tim.c ****   }
 4042              		.loc 1 5820 0 is_stmt 1
 4043 0d90 4C68     		ldr	r4, [r1, #4]	@ Structure_8(D)->CounterMode, Structure_8(D)->CounterMode
5819:src/stm32f1xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
 4044              		.loc 1 5819 0
 4045 0d92 23F07003 		bic	r3, r3, #112	@ tmpcr1, tmpcr1,
 4046              	.LVL302:
ARM GAS  /tmp/ccTsJCXT.s 			page 199


5823:src/stm32f1xx_hal_tim.c ****   {
 4047              		.loc 1 5823 0
 4048 0d96 9042     		cmp	r0, r2	@ TIMx, tmp133
5820:src/stm32f1xx_hal_tim.c ****   }
 4049              		.loc 1 5820 0
 4050 0d98 43EA0403 		orr	r3, r3, r4	@ tmpcr1, tmpcr1, Structure_8(D)->CounterMode
 4051              	.LVL303:
5823:src/stm32f1xx_hal_tim.c ****   {
 4052              		.loc 1 5823 0
 4053 0d9c 05D0     		beq	.L342	@,
5823:src/stm32f1xx_hal_tim.c ****   {
 4054              		.loc 1 5823 0 is_stmt 0 discriminator 1
 4055 0d9e B0F1804F 		cmp	r0, #1073741824	@ TIMx,
 4056 0da2 02D0     		beq	.L342	@,
5823:src/stm32f1xx_hal_tim.c ****   {
 4057              		.loc 1 5823 0 discriminator 2
 4058 0da4 0C4A     		ldr	r2, .L350+4	@ tmp127,
 4059 0da6 9042     		cmp	r0, r2	@ TIMx, tmp127
 4060 0da8 03D1     		bne	.L341	@,
 4061              	.L342:
5827:src/stm32f1xx_hal_tim.c ****   }
 4062              		.loc 1 5827 0 is_stmt 1
 4063 0daa CA68     		ldr	r2, [r1, #12]	@ Structure_8(D)->ClockDivision, Structure_8(D)->ClockDivision
5826:src/stm32f1xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
 4064              		.loc 1 5826 0
 4065 0dac 23F44073 		bic	r3, r3, #768	@ tmpcr1, tmpcr1,
 4066              	.LVL304:
5827:src/stm32f1xx_hal_tim.c ****   }
 4067              		.loc 1 5827 0
 4068 0db0 1343     		orrs	r3, r3, r2	@, tmpcr1, tmpcr1, Structure_8(D)->ClockDivision
 4069              	.LVL305:
 4070              	.L341:
5831:src/stm32f1xx_hal_tim.c **** 
 4071              		.loc 1 5831 0
 4072 0db2 4A69     		ldr	r2, [r1, #20]	@ Structure_8(D)->AutoReloadPreload, Structure_8(D)->AutoReloadPreload
 4073 0db4 23F08003 		bic	r3, r3, #128	@ _14, tmpcr1,
 4074              	.LVL306:
 4075 0db8 1343     		orrs	r3, r3, r2	@, tmpcr1, _14, Structure_8(D)->AutoReloadPreload
 4076              	.LVL307:
5833:src/stm32f1xx_hal_tim.c **** 
 4077              		.loc 1 5833 0
 4078 0dba 0360     		str	r3, [r0]	@ tmpcr1, TIMx_5(D)->CR1
5836:src/stm32f1xx_hal_tim.c **** 
 4079              		.loc 1 5836 0
 4080 0dbc 8B68     		ldr	r3, [r1, #8]	@ _18, Structure_8(D)->Period
 4081              	.LVL308:
 4082 0dbe C362     		str	r3, [r0, #44]	@ _18, TIMx_5(D)->ARR
 4083              	.LVL309:
5839:src/stm32f1xx_hal_tim.c **** 
 4084              		.loc 1 5839 0
 4085 0dc0 0B68     		ldr	r3, [r1]	@ _20, Structure_8(D)->Prescaler
 4086 0dc2 8362     		str	r3, [r0, #40]	@ _20, TIMx_5(D)->PSC
5841:src/stm32f1xx_hal_tim.c ****   {
 4087              		.loc 1 5841 0
 4088 0dc4 034B     		ldr	r3, .L350	@ tmp130,
 4089 0dc6 9842     		cmp	r0, r3	@ TIMx, tmp130
5844:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 200


 4090              		.loc 1 5844 0
 4091 0dc8 04BF     		itt	eq
 4092 0dca 0B69     		ldreq	r3, [r1, #16]	@ _22, Structure_8(D)->RepetitionCounter
 4093 0dcc 0363     		streq	r3, [r0, #48]	@ _22, MEM[(struct TIM_TypeDef *)1073818624B].RCR
5849:src/stm32f1xx_hal_tim.c **** }
 4094              		.loc 1 5849 0
 4095 0dce 0123     		movs	r3, #1	@ tmp132,
 4096 0dd0 4361     		str	r3, [r0, #20]	@ tmp132, TIMx_5(D)->EGR
 4097 0dd2 10BD     		pop	{r4, pc}	@
 4098              	.L351:
 4099              		.align	2
 4100              	.L350:
 4101 0dd4 002C0140 		.word	1073818624
 4102 0dd8 00040040 		.word	1073742848
 4103              		.cfi_endproc
 4104              	.LFE164:
 4105              		.size	TIM_Base_SetConfig, .-TIM_Base_SetConfig
 4106              		.align	1
 4107              		.global	HAL_TIM_Base_Init
 4108              		.syntax unified
 4109              		.thumb
 4110              		.thumb_func
 4111              		.fpu softvfp
 4112              		.type	HAL_TIM_Base_Init, %function
 4113              	HAL_TIM_Base_Init:
 4114              	.LFB65:
 266:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4115              		.loc 1 266 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 0
 4118              		@ frame_needed = 0, uses_anonymous_args = 0
 4119              	.LVL310:
 4120 0ddc 10B5     		push	{r4, lr}	@
 4121              	.LCFI29:
 4122              		.cfi_def_cfa_offset 8
 4123              		.cfi_offset 4, -8
 4124              		.cfi_offset 14, -4
 268:src/stm32f1xx_hal_tim.c ****   {
 4125              		.loc 1 268 0
 4126 0dde 0446     		mov	r4, r0	@ htim, htim
 4127 0de0 A0B1     		cbz	r0, .L355	@ htim,
 279:src/stm32f1xx_hal_tim.c ****   {
 4128              		.loc 1 279 0
 4129 0de2 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4130 0de6 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4131 0dea 1BB9     		cbnz	r3, .L354	@ htim_4(D)->State,
 282:src/stm32f1xx_hal_tim.c **** 
 4132              		.loc 1 282 0
 4133 0dec 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
 296:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4134              		.loc 1 296 0
 4135 0df0 FFF7FEFF 		bl	HAL_TIM_Base_MspInit	@
 4136              	.LVL311:
 4137              	.L354:
 301:src/stm32f1xx_hal_tim.c **** 
 4138              		.loc 1 301 0
 4139 0df4 0223     		movs	r3, #2	@ tmp120,
ARM GAS  /tmp/ccTsJCXT.s 			page 201


 304:src/stm32f1xx_hal_tim.c **** 
 4140              		.loc 1 304 0
 4141 0df6 2068     		ldr	r0, [r4]	@, htim_4(D)->Instance
 301:src/stm32f1xx_hal_tim.c **** 
 4142              		.loc 1 301 0
 4143 0df8 84F83D30 		strb	r3, [r4, #61]	@ tmp120, htim_4(D)->State
 304:src/stm32f1xx_hal_tim.c **** 
 4144              		.loc 1 304 0
 4145 0dfc 211D     		adds	r1, r4, #4	@, htim,
 4146 0dfe FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4147              	.LVL312:
 307:src/stm32f1xx_hal_tim.c **** 
 4148              		.loc 1 307 0
 4149 0e02 0123     		movs	r3, #1	@ tmp123,
 309:src/stm32f1xx_hal_tim.c **** }
 4150              		.loc 1 309 0
 4151 0e04 0020     		movs	r0, #0	@ <retval>,
 307:src/stm32f1xx_hal_tim.c **** 
 4152              		.loc 1 307 0
 4153 0e06 84F83D30 		strb	r3, [r4, #61]	@ tmp123, htim_4(D)->State
 309:src/stm32f1xx_hal_tim.c **** }
 4154              		.loc 1 309 0
 4155 0e0a 10BD     		pop	{r4, pc}	@
 4156              	.LVL313:
 4157              	.L355:
 270:src/stm32f1xx_hal_tim.c ****   }
 4158              		.loc 1 270 0
 4159 0e0c 0120     		movs	r0, #1	@ <retval>,
 4160              	.LVL314:
 310:src/stm32f1xx_hal_tim.c **** 
 4161              		.loc 1 310 0
 4162 0e0e 10BD     		pop	{r4, pc}	@
 4163              		.cfi_endproc
 4164              	.LFE65:
 4165              		.size	HAL_TIM_Base_Init, .-HAL_TIM_Base_Init
 4166              		.align	1
 4167              		.global	HAL_TIM_OC_Init
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu softvfp
 4172              		.type	HAL_TIM_OC_Init, %function
 4173              	HAL_TIM_OC_Init:
 4174              	.LFB75:
 598:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4175              		.loc 1 598 0
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 0
 4178              		@ frame_needed = 0, uses_anonymous_args = 0
 4179              	.LVL315:
 4180 0e10 10B5     		push	{r4, lr}	@
 4181              	.LCFI30:
 4182              		.cfi_def_cfa_offset 8
 4183              		.cfi_offset 4, -8
 4184              		.cfi_offset 14, -4
 600:src/stm32f1xx_hal_tim.c ****   {
 4185              		.loc 1 600 0
ARM GAS  /tmp/ccTsJCXT.s 			page 202


 4186 0e12 0446     		mov	r4, r0	@ htim, htim
 4187 0e14 A0B1     		cbz	r0, .L359	@ htim,
 611:src/stm32f1xx_hal_tim.c ****   {
 4188              		.loc 1 611 0
 4189 0e16 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4190 0e1a 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4191 0e1e 1BB9     		cbnz	r3, .L358	@ htim_4(D)->State,
 614:src/stm32f1xx_hal_tim.c **** 
 4192              		.loc 1 614 0
 4193 0e20 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
 628:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4194              		.loc 1 628 0
 4195 0e24 FFF7FEFF 		bl	HAL_TIM_OC_MspInit	@
 4196              	.LVL316:
 4197              	.L358:
 633:src/stm32f1xx_hal_tim.c **** 
 4198              		.loc 1 633 0
 4199 0e28 0223     		movs	r3, #2	@ tmp120,
 636:src/stm32f1xx_hal_tim.c **** 
 4200              		.loc 1 636 0
 4201 0e2a 2068     		ldr	r0, [r4]	@, htim_4(D)->Instance
 633:src/stm32f1xx_hal_tim.c **** 
 4202              		.loc 1 633 0
 4203 0e2c 84F83D30 		strb	r3, [r4, #61]	@ tmp120, htim_4(D)->State
 636:src/stm32f1xx_hal_tim.c **** 
 4204              		.loc 1 636 0
 4205 0e30 211D     		adds	r1, r4, #4	@, htim,
 4206 0e32 FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4207              	.LVL317:
 639:src/stm32f1xx_hal_tim.c **** 
 4208              		.loc 1 639 0
 4209 0e36 0123     		movs	r3, #1	@ tmp123,
 641:src/stm32f1xx_hal_tim.c **** }
 4210              		.loc 1 641 0
 4211 0e38 0020     		movs	r0, #0	@ <retval>,
 639:src/stm32f1xx_hal_tim.c **** 
 4212              		.loc 1 639 0
 4213 0e3a 84F83D30 		strb	r3, [r4, #61]	@ tmp123, htim_4(D)->State
 641:src/stm32f1xx_hal_tim.c **** }
 4214              		.loc 1 641 0
 4215 0e3e 10BD     		pop	{r4, pc}	@
 4216              	.LVL318:
 4217              	.L359:
 602:src/stm32f1xx_hal_tim.c ****   }
 4218              		.loc 1 602 0
 4219 0e40 0120     		movs	r0, #1	@ <retval>,
 4220              	.LVL319:
 642:src/stm32f1xx_hal_tim.c **** 
 4221              		.loc 1 642 0
 4222 0e42 10BD     		pop	{r4, pc}	@
 4223              		.cfi_endproc
 4224              	.LFE75:
 4225              		.size	HAL_TIM_OC_Init, .-HAL_TIM_OC_Init
 4226              		.align	1
 4227              		.global	HAL_TIM_PWM_Init
 4228              		.syntax unified
 4229              		.thumb
ARM GAS  /tmp/ccTsJCXT.s 			page 203


 4230              		.thumb_func
 4231              		.fpu softvfp
 4232              		.type	HAL_TIM_PWM_Init, %function
 4233              	HAL_TIM_PWM_Init:
 4234              	.LFB85:
1171:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4235              		.loc 1 1171 0
 4236              		.cfi_startproc
 4237              		@ args = 0, pretend = 0, frame = 0
 4238              		@ frame_needed = 0, uses_anonymous_args = 0
 4239              	.LVL320:
 4240 0e44 10B5     		push	{r4, lr}	@
 4241              	.LCFI31:
 4242              		.cfi_def_cfa_offset 8
 4243              		.cfi_offset 4, -8
 4244              		.cfi_offset 14, -4
1173:src/stm32f1xx_hal_tim.c ****   {
 4245              		.loc 1 1173 0
 4246 0e46 0446     		mov	r4, r0	@ htim, htim
 4247 0e48 A0B1     		cbz	r0, .L363	@ htim,
1184:src/stm32f1xx_hal_tim.c ****   {
 4248              		.loc 1 1184 0
 4249 0e4a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4250 0e4e 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4251 0e52 1BB9     		cbnz	r3, .L362	@ htim_4(D)->State,
1187:src/stm32f1xx_hal_tim.c **** 
 4252              		.loc 1 1187 0
 4253 0e54 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
1201:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4254              		.loc 1 1201 0
 4255 0e58 FFF7FEFF 		bl	HAL_TIM_PWM_MspInit	@
 4256              	.LVL321:
 4257              	.L362:
1206:src/stm32f1xx_hal_tim.c **** 
 4258              		.loc 1 1206 0
 4259 0e5c 0223     		movs	r3, #2	@ tmp120,
1209:src/stm32f1xx_hal_tim.c **** 
 4260              		.loc 1 1209 0
 4261 0e5e 2068     		ldr	r0, [r4]	@, htim_4(D)->Instance
1206:src/stm32f1xx_hal_tim.c **** 
 4262              		.loc 1 1206 0
 4263 0e60 84F83D30 		strb	r3, [r4, #61]	@ tmp120, htim_4(D)->State
1209:src/stm32f1xx_hal_tim.c **** 
 4264              		.loc 1 1209 0
 4265 0e64 211D     		adds	r1, r4, #4	@, htim,
 4266 0e66 FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4267              	.LVL322:
1212:src/stm32f1xx_hal_tim.c **** 
 4268              		.loc 1 1212 0
 4269 0e6a 0123     		movs	r3, #1	@ tmp123,
1214:src/stm32f1xx_hal_tim.c **** }
 4270              		.loc 1 1214 0
 4271 0e6c 0020     		movs	r0, #0	@ <retval>,
1212:src/stm32f1xx_hal_tim.c **** 
 4272              		.loc 1 1212 0
 4273 0e6e 84F83D30 		strb	r3, [r4, #61]	@ tmp123, htim_4(D)->State
1214:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 204


 4274              		.loc 1 1214 0
 4275 0e72 10BD     		pop	{r4, pc}	@
 4276              	.LVL323:
 4277              	.L363:
1175:src/stm32f1xx_hal_tim.c ****   }
 4278              		.loc 1 1175 0
 4279 0e74 0120     		movs	r0, #1	@ <retval>,
 4280              	.LVL324:
1215:src/stm32f1xx_hal_tim.c **** 
 4281              		.loc 1 1215 0
 4282 0e76 10BD     		pop	{r4, pc}	@
 4283              		.cfi_endproc
 4284              	.LFE85:
 4285              		.size	HAL_TIM_PWM_Init, .-HAL_TIM_PWM_Init
 4286              		.align	1
 4287              		.global	HAL_TIM_IC_Init
 4288              		.syntax unified
 4289              		.thumb
 4290              		.thumb_func
 4291              		.fpu softvfp
 4292              		.type	HAL_TIM_IC_Init, %function
 4293              	HAL_TIM_IC_Init:
 4294              	.LFB95:
1745:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4295              		.loc 1 1745 0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 0
 4298              		@ frame_needed = 0, uses_anonymous_args = 0
 4299              	.LVL325:
 4300 0e78 10B5     		push	{r4, lr}	@
 4301              	.LCFI32:
 4302              		.cfi_def_cfa_offset 8
 4303              		.cfi_offset 4, -8
 4304              		.cfi_offset 14, -4
1747:src/stm32f1xx_hal_tim.c ****   {
 4305              		.loc 1 1747 0
 4306 0e7a 0446     		mov	r4, r0	@ htim, htim
 4307 0e7c A0B1     		cbz	r0, .L367	@ htim,
1758:src/stm32f1xx_hal_tim.c ****   {
 4308              		.loc 1 1758 0
 4309 0e7e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4310 0e82 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4311 0e86 1BB9     		cbnz	r3, .L366	@ htim_4(D)->State,
1761:src/stm32f1xx_hal_tim.c **** 
 4312              		.loc 1 1761 0
 4313 0e88 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
1775:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4314              		.loc 1 1775 0
 4315 0e8c FFF7FEFF 		bl	HAL_TIM_IC_MspInit	@
 4316              	.LVL326:
 4317              	.L366:
1780:src/stm32f1xx_hal_tim.c **** 
 4318              		.loc 1 1780 0
 4319 0e90 0223     		movs	r3, #2	@ tmp120,
1783:src/stm32f1xx_hal_tim.c **** 
 4320              		.loc 1 1783 0
 4321 0e92 2068     		ldr	r0, [r4]	@, htim_4(D)->Instance
ARM GAS  /tmp/ccTsJCXT.s 			page 205


1780:src/stm32f1xx_hal_tim.c **** 
 4322              		.loc 1 1780 0
 4323 0e94 84F83D30 		strb	r3, [r4, #61]	@ tmp120, htim_4(D)->State
1783:src/stm32f1xx_hal_tim.c **** 
 4324              		.loc 1 1783 0
 4325 0e98 211D     		adds	r1, r4, #4	@, htim,
 4326 0e9a FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4327              	.LVL327:
1786:src/stm32f1xx_hal_tim.c **** 
 4328              		.loc 1 1786 0
 4329 0e9e 0123     		movs	r3, #1	@ tmp123,
1788:src/stm32f1xx_hal_tim.c **** }
 4330              		.loc 1 1788 0
 4331 0ea0 0020     		movs	r0, #0	@ <retval>,
1786:src/stm32f1xx_hal_tim.c **** 
 4332              		.loc 1 1786 0
 4333 0ea2 84F83D30 		strb	r3, [r4, #61]	@ tmp123, htim_4(D)->State
1788:src/stm32f1xx_hal_tim.c **** }
 4334              		.loc 1 1788 0
 4335 0ea6 10BD     		pop	{r4, pc}	@
 4336              	.LVL328:
 4337              	.L367:
1749:src/stm32f1xx_hal_tim.c ****   }
 4338              		.loc 1 1749 0
 4339 0ea8 0120     		movs	r0, #1	@ <retval>,
 4340              	.LVL329:
1789:src/stm32f1xx_hal_tim.c **** 
 4341              		.loc 1 1789 0
 4342 0eaa 10BD     		pop	{r4, pc}	@
 4343              		.cfi_endproc
 4344              	.LFE95:
 4345              		.size	HAL_TIM_IC_Init, .-HAL_TIM_IC_Init
 4346              		.align	1
 4347              		.global	HAL_TIM_OnePulse_Init
 4348              		.syntax unified
 4349              		.thumb
 4350              		.thumb_func
 4351              		.fpu softvfp
 4352              		.type	HAL_TIM_OnePulse_Init, %function
 4353              	HAL_TIM_OnePulse_Init:
 4354              	.LFB105:
2284:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4355              		.loc 1 2284 0
 4356              		.cfi_startproc
 4357              		@ args = 0, pretend = 0, frame = 0
 4358              		@ frame_needed = 0, uses_anonymous_args = 0
 4359              	.LVL330:
 4360 0eac 38B5     		push	{r3, r4, r5, lr}	@
 4361              	.LCFI33:
 4362              		.cfi_def_cfa_offset 16
 4363              		.cfi_offset 3, -16
 4364              		.cfi_offset 4, -12
 4365              		.cfi_offset 5, -8
 4366              		.cfi_offset 14, -4
2284:src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 4367              		.loc 1 2284 0
 4368 0eae 0D46     		mov	r5, r1	@ OnePulseMode, OnePulseMode
ARM GAS  /tmp/ccTsJCXT.s 			page 206


2286:src/stm32f1xx_hal_tim.c ****   {
 4369              		.loc 1 2286 0
 4370 0eb0 0446     		mov	r4, r0	@ htim, htim
 4371 0eb2 E0B1     		cbz	r0, .L371	@ htim,
2298:src/stm32f1xx_hal_tim.c ****   {
 4372              		.loc 1 2298 0
 4373 0eb4 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4374 0eb8 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4375 0ebc 1BB9     		cbnz	r3, .L370	@ htim_4(D)->State,
2301:src/stm32f1xx_hal_tim.c **** 
 4376              		.loc 1 2301 0
 4377 0ebe 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
2315:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4378              		.loc 1 2315 0
 4379 0ec2 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspInit	@
 4380              	.LVL331:
 4381              	.L370:
2320:src/stm32f1xx_hal_tim.c **** 
 4382              		.loc 1 2320 0
 4383 0ec6 0223     		movs	r3, #2	@ tmp126,
2323:src/stm32f1xx_hal_tim.c **** 
 4384              		.loc 1 2323 0
 4385 0ec8 211D     		adds	r1, r4, #4	@, htim,
2320:src/stm32f1xx_hal_tim.c **** 
 4386              		.loc 1 2320 0
 4387 0eca 84F83D30 		strb	r3, [r4, #61]	@ tmp126, htim_4(D)->State
2323:src/stm32f1xx_hal_tim.c **** 
 4388              		.loc 1 2323 0
 4389 0ece 2068     		ldr	r0, [r4]	@, htim_4(D)->Instance
 4390 0ed0 FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4391              	.LVL332:
2326:src/stm32f1xx_hal_tim.c **** 
 4392              		.loc 1 2326 0
 4393 0ed4 2368     		ldr	r3, [r4]	@ _13, htim_4(D)->Instance
2334:src/stm32f1xx_hal_tim.c **** }
 4394              		.loc 1 2334 0
 4395 0ed6 0020     		movs	r0, #0	@ <retval>,
2326:src/stm32f1xx_hal_tim.c **** 
 4396              		.loc 1 2326 0
 4397 0ed8 1A68     		ldr	r2, [r3]	@ _14, _13->CR1
 4398 0eda 22F00802 		bic	r2, r2, #8	@ _15, _14,
 4399 0ede 1A60     		str	r2, [r3]	@ _15, _13->CR1
2329:src/stm32f1xx_hal_tim.c **** 
 4400              		.loc 1 2329 0
 4401 0ee0 1968     		ldr	r1, [r3]	@ _17, _13->CR1
 4402 0ee2 2943     		orrs	r1, r1, r5	@, _19, _17, OnePulseMode
 4403 0ee4 1960     		str	r1, [r3]	@ _19, _13->CR1
2332:src/stm32f1xx_hal_tim.c **** 
 4404              		.loc 1 2332 0
 4405 0ee6 0123     		movs	r3, #1	@ tmp129,
 4406 0ee8 84F83D30 		strb	r3, [r4, #61]	@ tmp129, htim_4(D)->State
2334:src/stm32f1xx_hal_tim.c **** }
 4407              		.loc 1 2334 0
 4408 0eec 38BD     		pop	{r3, r4, r5, pc}	@
 4409              	.LVL333:
 4410              	.L371:
2288:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 207


 4411              		.loc 1 2288 0
 4412 0eee 0120     		movs	r0, #1	@ <retval>,
 4413              	.LVL334:
2335:src/stm32f1xx_hal_tim.c **** 
 4414              		.loc 1 2335 0
 4415 0ef0 38BD     		pop	{r3, r4, r5, pc}	@
 4416              		.cfi_endproc
 4417              	.LFE105:
 4418              		.size	HAL_TIM_OnePulse_Init, .-HAL_TIM_OnePulse_Init
 4419              		.align	1
 4420              		.global	HAL_TIM_Encoder_Init
 4421              		.syntax unified
 4422              		.thumb
 4423              		.thumb_func
 4424              		.fpu softvfp
 4425              		.type	HAL_TIM_Encoder_Init, %function
 4426              	HAL_TIM_Encoder_Init:
 4427              	.LFB113:
2597:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 4428              		.loc 1 2597 0
 4429              		.cfi_startproc
 4430              		@ args = 0, pretend = 0, frame = 0
 4431              		@ frame_needed = 0, uses_anonymous_args = 0
 4432              	.LVL335:
 4433 0ef2 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 4434              	.LCFI34:
 4435              		.cfi_def_cfa_offset 24
 4436              		.cfi_offset 3, -24
 4437              		.cfi_offset 4, -20
 4438              		.cfi_offset 5, -16
 4439              		.cfi_offset 6, -12
 4440              		.cfi_offset 7, -8
 4441              		.cfi_offset 14, -4
2597:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 4442              		.loc 1 2597 0
 4443 0ef4 0C46     		mov	r4, r1	@ sConfig, sConfig
2603:src/stm32f1xx_hal_tim.c ****   {
 4444              		.loc 1 2603 0
 4445 0ef6 0546     		mov	r5, r0	@ htim, htim
 4446 0ef8 0028     		cmp	r0, #0	@ htim
 4447 0efa 43D0     		beq	.L375	@
2623:src/stm32f1xx_hal_tim.c ****   {
 4448              		.loc 1 2623 0
 4449 0efc 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2	@ htim_4(D)->State, htim_4(D)->State
 4450 0f00 03F0FF02 		and	r2, r3, #255	@ _6, htim_4(D)->State,
 4451 0f04 1BB9     		cbnz	r3, .L374	@ htim_4(D)->State,
2626:src/stm32f1xx_hal_tim.c **** 
 4452              		.loc 1 2626 0
 4453 0f06 80F83C20 		strb	r2, [r0, #60]	@ _6, htim_4(D)->Lock
2640:src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 4454              		.loc 1 2640 0
 4455 0f0a FFF7FEFF 		bl	HAL_TIM_Encoder_MspInit	@
 4456              	.LVL336:
 4457              	.L374:
2648:src/stm32f1xx_hal_tim.c **** 
 4458              		.loc 1 2648 0
 4459 0f0e 2946     		mov	r1, r5	@ tmp156, htim
ARM GAS  /tmp/ccTsJCXT.s 			page 208


2645:src/stm32f1xx_hal_tim.c **** 
 4460              		.loc 1 2645 0
 4461 0f10 0223     		movs	r3, #2	@ tmp153,
2648:src/stm32f1xx_hal_tim.c **** 
 4462              		.loc 1 2648 0
 4463 0f12 51F8040B 		ldr	r0, [r1], #4	@ _10, htim_4(D)->Instance
2645:src/stm32f1xx_hal_tim.c **** 
 4464              		.loc 1 2645 0
 4465 0f16 85F83D30 		strb	r3, [r5, #61]	@ tmp153, htim_4(D)->State
2648:src/stm32f1xx_hal_tim.c **** 
 4466              		.loc 1 2648 0
 4467 0f1a 8368     		ldr	r3, [r0, #8]	@ _11, _10->SMCR
 4468 0f1c 23F48043 		bic	r3, r3, #16384	@ _12, _11,
 4469 0f20 23F00703 		bic	r3, r3, #7	@ _12, _12,
 4470 0f24 8360     		str	r3, [r0, #8]	@ _12, _10->SMCR
2651:src/stm32f1xx_hal_tim.c **** 
 4471              		.loc 1 2651 0
 4472 0f26 FFF7FEFF 		bl	TIM_Base_SetConfig	@
 4473              	.LVL337:
2654:src/stm32f1xx_hal_tim.c **** 
 4474              		.loc 1 2654 0
 4475 0f2a 2868     		ldr	r0, [r5]	@ _16, htim_4(D)->Instance
2663:src/stm32f1xx_hal_tim.c **** 
 4476              		.loc 1 2663 0
 4477 0f2c 2368     		ldr	r3, [r4]	@ sConfig_20(D)->EncoderMode, sConfig_20(D)->EncoderMode
2654:src/stm32f1xx_hal_tim.c **** 
 4478              		.loc 1 2654 0
 4479 0f2e 8668     		ldr	r6, [r0, #8]	@ tmpsmcr, _16->SMCR
 4480              	.LVL338:
2657:src/stm32f1xx_hal_tim.c **** 
 4481              		.loc 1 2657 0
 4482 0f30 8269     		ldr	r2, [r0, #24]	@ tmpccmr1, _16->CCMR1
 4483              	.LVL339:
2667:src/stm32f1xx_hal_tim.c **** 
 4484              		.loc 1 2667 0
 4485 0f32 A168     		ldr	r1, [r4, #8]	@ sConfig_20(D)->IC1Selection, sConfig_20(D)->IC1Selection
2663:src/stm32f1xx_hal_tim.c **** 
 4486              		.loc 1 2663 0
 4487 0f34 1E43     		orrs	r6, r6, r3	@, tmpsmcr, tmpsmcr, sConfig_20(D)->EncoderMode
 4488              	.LVL340:
2667:src/stm32f1xx_hal_tim.c **** 
 4489              		.loc 1 2667 0
 4490 0f36 A369     		ldr	r3, [r4, #24]	@ sConfig_20(D)->IC2Selection, sConfig_20(D)->IC2Selection
2666:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 4491              		.loc 1 2666 0
 4492 0f38 22F44072 		bic	r2, r2, #768	@ tmpccmr1, tmpccmr1,
 4493              	.LVL341:
 4494 0f3c 22F00302 		bic	r2, r2, #3	@ tmpccmr1, tmpccmr1,
2667:src/stm32f1xx_hal_tim.c **** 
 4495              		.loc 1 2667 0
 4496 0f40 41EA0323 		orr	r3, r1, r3, lsl #8	@ tmp161, sConfig_20(D)->IC1Selection, sConfig_20(D)->IC2Selection,
 4497 0f44 1343     		orrs	r3, r3, r2	@, tmpccmr1, tmp161, tmpccmr1
2671:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 4498              		.loc 1 2671 0
 4499 0f46 23F47C42 		bic	r2, r3, #64512	@ tmpccmr1, tmpccmr1,
2673:src/stm32f1xx_hal_tim.c **** 
 4500              		.loc 1 2673 0
ARM GAS  /tmp/ccTsJCXT.s 			page 209


 4501 0f4a 2369     		ldr	r3, [r4, #16]	@ sConfig_20(D)->IC1Filter, sConfig_20(D)->IC1Filter
2672:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 4502              		.loc 1 2672 0
 4503 0f4c E169     		ldr	r1, [r4, #28]	@ sConfig_20(D)->IC2Prescaler, sConfig_20(D)->IC2Prescaler
2673:src/stm32f1xx_hal_tim.c **** 
 4504              		.loc 1 2673 0
 4505 0f4e 1B01     		lsls	r3, r3, #4	@ tmp166, sConfig_20(D)->IC1Filter,
 4506 0f50 43EA0123 		orr	r3, r3, r1, lsl #8	@ tmp168, tmp166, sConfig_20(D)->IC2Prescaler,
 4507 0f54 E168     		ldr	r1, [r4, #12]	@ sConfig_20(D)->IC1Prescaler, sConfig_20(D)->IC1Prescaler
2660:src/stm32f1xx_hal_tim.c **** 
 4508              		.loc 1 2660 0
 4509 0f56 076A     		ldr	r7, [r0, #32]	@ tmpccer, _16->CCER
 4510              	.LVL342:
2673:src/stm32f1xx_hal_tim.c **** 
 4511              		.loc 1 2673 0
 4512 0f58 0B43     		orrs	r3, r3, r1	@, tmp169, tmp168, sConfig_20(D)->IC1Prescaler
 4513 0f5a 216A     		ldr	r1, [r4, #32]	@ sConfig_20(D)->IC2Filter, sConfig_20(D)->IC2Filter
2671:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 4514              		.loc 1 2671 0
 4515 0f5c 22F0FC02 		bic	r2, r2, #252	@ tmpccmr1, tmpccmr1,
 4516              	.LVL343:
2673:src/stm32f1xx_hal_tim.c **** 
 4517              		.loc 1 2673 0
 4518 0f60 43EA0133 		orr	r3, r3, r1, lsl #12	@ tmp173, tmp169, sConfig_20(D)->IC2Filter,
 4519 0f64 1343     		orrs	r3, r3, r2	@, tmpccmr1, tmp173, tmpccmr1
 4520              	.LVL344:
2677:src/stm32f1xx_hal_tim.c **** 
 4521              		.loc 1 2677 0
 4522 0f66 6169     		ldr	r1, [r4, #20]	@ sConfig_20(D)->IC2Polarity, sConfig_20(D)->IC2Polarity
2676:src/stm32f1xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 4523              		.loc 1 2676 0
 4524 0f68 27F02202 		bic	r2, r7, #34	@ tmpccer, tmpccer,
 4525              	.LVL345:
2677:src/stm32f1xx_hal_tim.c **** 
 4526              		.loc 1 2677 0
 4527 0f6c 6768     		ldr	r7, [r4, #4]	@ sConfig_20(D)->IC1Polarity, sConfig_20(D)->IC1Polarity
2680:src/stm32f1xx_hal_tim.c **** 
 4528              		.loc 1 2680 0
 4529 0f6e 8660     		str	r6, [r0, #8]	@ tmpsmcr, _16->SMCR
2683:src/stm32f1xx_hal_tim.c **** 
 4530              		.loc 1 2683 0
 4531 0f70 8361     		str	r3, [r0, #24]	@ tmpccmr1, _16->CCMR1
2689:src/stm32f1xx_hal_tim.c **** 
 4532              		.loc 1 2689 0
 4533 0f72 0123     		movs	r3, #1	@ tmp178,
 4534              	.LVL346:
2677:src/stm32f1xx_hal_tim.c **** 
 4535              		.loc 1 2677 0
 4536 0f74 47EA0117 		orr	r7, r7, r1, lsl #4	@ tmp176, sConfig_20(D)->IC1Polarity, sConfig_20(D)->IC2Polarity,
 4537 0f78 1743     		orrs	r7, r7, r2	@, tmpccer, tmp176, tmpccer
 4538              	.LVL347:
2686:src/stm32f1xx_hal_tim.c **** 
 4539              		.loc 1 2686 0
 4540 0f7a 0762     		str	r7, [r0, #32]	@ tmpccer, _16->CCER
 4541              	.LVL348:
2689:src/stm32f1xx_hal_tim.c **** 
 4542              		.loc 1 2689 0
ARM GAS  /tmp/ccTsJCXT.s 			page 210


 4543 0f7c 85F83D30 		strb	r3, [r5, #61]	@ tmp178, htim_4(D)->State
2691:src/stm32f1xx_hal_tim.c **** }
 4544              		.loc 1 2691 0
 4545 0f80 0020     		movs	r0, #0	@ <retval>,
 4546 0f82 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 4547              	.LVL349:
 4548              	.L375:
2605:src/stm32f1xx_hal_tim.c ****   }
 4549              		.loc 1 2605 0
 4550 0f84 0120     		movs	r0, #1	@ <retval>,
 4551              	.LVL350:
2692:src/stm32f1xx_hal_tim.c **** 
 4552              		.loc 1 2692 0
 4553 0f86 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 4554              		.cfi_endproc
 4555              	.LFE113:
 4556              		.size	HAL_TIM_Encoder_Init, .-HAL_TIM_Encoder_Init
 4557              		.align	1
 4558              		.global	TIM_OC2_SetConfig
 4559              		.syntax unified
 4560              		.thumb
 4561              		.thumb_func
 4562              		.fpu softvfp
 4563              		.type	TIM_OC2_SetConfig, %function
 4564              	TIM_OC2_SetConfig:
 4565              	.LFB166:
5934:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
 4566              		.loc 1 5934 0
 4567              		.cfi_startproc
 4568              		@ args = 0, pretend = 0, frame = 0
 4569              		@ frame_needed = 0, uses_anonymous_args = 0
 4570              	.LVL351:
5940:src/stm32f1xx_hal_tim.c **** 
 4571              		.loc 1 5940 0
 4572 0f88 036A     		ldr	r3, [r0, #32]	@ _5, TIMx_4(D)->CCER
5934:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
 4573              		.loc 1 5934 0
 4574 0f8a 70B5     		push	{r4, r5, r6, lr}	@
 4575              	.LCFI35:
 4576              		.cfi_def_cfa_offset 16
 4577              		.cfi_offset 4, -16
 4578              		.cfi_offset 5, -12
 4579              		.cfi_offset 6, -8
 4580              		.cfi_offset 14, -4
5940:src/stm32f1xx_hal_tim.c **** 
 4581              		.loc 1 5940 0
 4582 0f8c 23F01003 		bic	r3, r3, #16	@ _6, _5,
 4583 0f90 0362     		str	r3, [r0, #32]	@ _6, TIMx_4(D)->CCER
5943:src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
 4584              		.loc 1 5943 0
 4585 0f92 036A     		ldr	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 4586              	.LVL352:
5945:src/stm32f1xx_hal_tim.c **** 
 4587              		.loc 1 5945 0
 4588 0f94 4468     		ldr	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
 4589              	.LVL353:
5948:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 211


 4590              		.loc 1 5948 0
 4591 0f96 8269     		ldr	r2, [r0, #24]	@ tmpccmrx, TIMx_4(D)->CCMR1
 4592              	.LVL354:
5955:src/stm32f1xx_hal_tim.c **** 
 4593              		.loc 1 5955 0
 4594 0f98 0D68     		ldr	r5, [r1]	@ OC_Config_12(D)->OCMode, OC_Config_12(D)->OCMode
5952:src/stm32f1xx_hal_tim.c **** 
 4595              		.loc 1 5952 0
 4596 0f9a 22F4E642 		bic	r2, r2, #29440	@ tmpccmrx, tmpccmrx,
 4597              	.LVL355:
5955:src/stm32f1xx_hal_tim.c **** 
 4598              		.loc 1 5955 0
 4599 0f9e 42EA0522 		orr	r2, r2, r5, lsl #8	@ tmpccmrx, tmpccmrx, OC_Config_12(D)->OCMode,
 4600              	.LVL356:
5960:src/stm32f1xx_hal_tim.c **** 
 4601              		.loc 1 5960 0
 4602 0fa2 8D68     		ldr	r5, [r1, #8]	@ OC_Config_12(D)->OCPolarity, OC_Config_12(D)->OCPolarity
5958:src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
 4603              		.loc 1 5958 0
 4604 0fa4 23F02003 		bic	r3, r3, #32	@ tmpccer, tmpccer,
 4605              	.LVL357:
5960:src/stm32f1xx_hal_tim.c **** 
 4606              		.loc 1 5960 0
 4607 0fa8 43EA0513 		orr	r3, r3, r5, lsl #4	@ tmpccer, tmpccer, OC_Config_12(D)->OCPolarity,
 4608              	.LVL358:
5962:src/stm32f1xx_hal_tim.c ****   {
 4609              		.loc 1 5962 0
 4610 0fac 0B4D     		ldr	r5, .L378	@ tmp140,
 4611 0fae A842     		cmp	r0, r5	@ TIMx, tmp140
 4612 0fb0 0DD1     		bne	.L377	@,
5969:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
 4613              		.loc 1 5969 0
 4614 0fb2 CD68     		ldr	r5, [r1, #12]	@ OC_Config_12(D)->OCNPolarity, OC_Config_12(D)->OCNPolarity
5967:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
 4615              		.loc 1 5967 0
 4616 0fb4 23F08003 		bic	r3, r3, #128	@ tmpccer, tmpccer,
 4617              	.LVL359:
5969:src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
 4618              		.loc 1 5969 0
 4619 0fb8 43EA0513 		orr	r3, r3, r5, lsl #4	@ tmpccer, tmpccer, OC_Config_12(D)->OCNPolarity,
 4620              	.LVL360:
5987:src/stm32f1xx_hal_tim.c ****   }
 4621              		.loc 1 5987 0
 4622 0fbc 8E69     		ldr	r6, [r1, #24]	@ OC_Config_12(D)->OCNIdleState, OC_Config_12(D)->OCNIdleState
5985:src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
 4623              		.loc 1 5985 0
 4624 0fbe 4D69     		ldr	r5, [r1, #20]	@ OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCIdleState
5983:src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
 4625              		.loc 1 5983 0
 4626 0fc0 24F44064 		bic	r4, r4, #3072	@ tmpcr2, tmpcr2,
 4627              	.LVL361:
5987:src/stm32f1xx_hal_tim.c ****   }
 4628              		.loc 1 5987 0
 4629 0fc4 3543     		orrs	r5, r5, r6	@, tmp147, OC_Config_12(D)->OCIdleState, OC_Config_12(D)->OCNIdleState
5971:src/stm32f1xx_hal_tim.c **** 
 4630              		.loc 1 5971 0
 4631 0fc6 23F04003 		bic	r3, r3, #64	@ tmpccer, tmpccer,
ARM GAS  /tmp/ccTsJCXT.s 			page 212


 4632              	.LVL362:
5987:src/stm32f1xx_hal_tim.c ****   }
 4633              		.loc 1 5987 0
 4634 0fca 44EA8504 		orr	r4, r4, r5, lsl #2	@ tmpcr2, tmpcr2, tmp147,
 4635              	.LVL363:
 4636              	.L377:
5991:src/stm32f1xx_hal_tim.c **** 
 4637              		.loc 1 5991 0
 4638 0fce 4460     		str	r4, [r0, #4]	@ tmpcr2, TIMx_4(D)->CR2
5994:src/stm32f1xx_hal_tim.c **** 
 4639              		.loc 1 5994 0
 4640 0fd0 8261     		str	r2, [r0, #24]	@ tmpccmrx, TIMx_4(D)->CCMR1
5997:src/stm32f1xx_hal_tim.c **** 
 4641              		.loc 1 5997 0
 4642 0fd2 4A68     		ldr	r2, [r1, #4]	@ _34, OC_Config_12(D)->Pulse
 4643              	.LVL364:
 4644 0fd4 8263     		str	r2, [r0, #56]	@ _34, TIMx_4(D)->CCR2
 4645              	.LVL365:
6000:src/stm32f1xx_hal_tim.c **** }
 4646              		.loc 1 6000 0
 4647 0fd6 0362     		str	r3, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 4648 0fd8 70BD     		pop	{r4, r5, r6, pc}	@
 4649              	.LVL366:
 4650              	.L379:
 4651 0fda 00BF     		.align	2
 4652              	.L378:
 4653 0fdc 002C0140 		.word	1073818624
 4654              		.cfi_endproc
 4655              	.LFE166:
 4656              		.size	TIM_OC2_SetConfig, .-TIM_OC2_SetConfig
 4657              		.align	1
 4658              		.global	HAL_TIM_OC_ConfigChannel
 4659              		.syntax unified
 4660              		.thumb
 4661              		.thumb_func
 4662              		.fpu softvfp
 4663              		.type	HAL_TIM_OC_ConfigChannel, %function
 4664              	HAL_TIM_OC_ConfigChannel:
 4665              	.LFB124:
3384:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 4666              		.loc 1 3384 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
 4669              		@ frame_needed = 0, uses_anonymous_args = 0
 4670              	.LVL367:
 4671 0fe0 38B5     		push	{r3, r4, r5, lr}	@
 4672              	.LCFI36:
 4673              		.cfi_def_cfa_offset 16
 4674              		.cfi_offset 3, -16
 4675              		.cfi_offset 4, -12
 4676              		.cfi_offset 5, -8
 4677              		.cfi_offset 14, -4
3391:src/stm32f1xx_hal_tim.c **** 
 4678              		.loc 1 3391 0
 4679 0fe2 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_5(D)->Lock, htim_5(D)->Lock
3384:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 4680              		.loc 1 3384 0
ARM GAS  /tmp/ccTsJCXT.s 			page 213


 4681 0fe6 0446     		mov	r4, r0	@ htim, htim
3391:src/stm32f1xx_hal_tim.c **** 
 4682              		.loc 1 3391 0
 4683 0fe8 012B     		cmp	r3, #1	@ htim_5(D)->Lock,
 4684 0fea 4FF00200 		mov	r0, #2	@ <retval>,
 4685              	.LVL368:
 4686 0fee 18D0     		beq	.L381	@,
3391:src/stm32f1xx_hal_tim.c **** 
 4687              		.loc 1 3391 0 is_stmt 0 discriminator 2
 4688 0ff0 0123     		movs	r3, #1	@ tmp120,
3393:src/stm32f1xx_hal_tim.c **** 
 4689              		.loc 1 3393 0 is_stmt 1 discriminator 2
 4690 0ff2 84F83D00 		strb	r0, [r4, #61]	@ <retval>, htim_5(D)->State
3391:src/stm32f1xx_hal_tim.c **** 
 4691              		.loc 1 3391 0 discriminator 2
 4692 0ff6 84F83C30 		strb	r3, [r4, #60]	@ tmp120, htim_5(D)->Lock
 4693 0ffa 1D46     		mov	r5, r3	@ tmp130, tmp120
3395:src/stm32f1xx_hal_tim.c ****   {
 4694              		.loc 1 3395 0 discriminator 2
 4695 0ffc 0C2A     		cmp	r2, #12	@ Channel,
 4696 0ffe 0BD8     		bhi	.L382	@
 4697 1000 DFE802F0 		tbb	[pc, r2]	@ Channel
 4698              	.L384:
 4699 1004 07       		.byte	(.L383-.L384)/2
 4700 1005 0A       		.byte	(.L382-.L384)/2
 4701 1006 0A       		.byte	(.L382-.L384)/2
 4702 1007 0A       		.byte	(.L382-.L384)/2
 4703 1008 10       		.byte	(.L385-.L384)/2
 4704 1009 0A       		.byte	(.L382-.L384)/2
 4705 100a 0A       		.byte	(.L382-.L384)/2
 4706 100b 0A       		.byte	(.L382-.L384)/2
 4707 100c 14       		.byte	(.L386-.L384)/2
 4708 100d 0A       		.byte	(.L382-.L384)/2
 4709 100e 0A       		.byte	(.L382-.L384)/2
 4710 100f 0A       		.byte	(.L382-.L384)/2
 4711 1010 18       		.byte	(.L387-.L384)/2
 4712 1011 00       		.p2align 1
 4713              	.L383:
3403:src/stm32f1xx_hal_tim.c ****       break;
 4714              		.loc 1 3403 0
 4715 1012 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4716 1014 FEF7F4FF 		bl	TIM_OC1_SetConfig	@
 4717              	.LVL369:
 4718              	.L382:
3443:src/stm32f1xx_hal_tim.c **** 
 4719              		.loc 1 3443 0
 4720 1018 0020     		movs	r0, #0	@ tmp126,
3441:src/stm32f1xx_hal_tim.c **** 
 4721              		.loc 1 3441 0
 4722 101a 84F83D50 		strb	r5, [r4, #61]	@ tmp130, htim_5(D)->State
3443:src/stm32f1xx_hal_tim.c **** 
 4723              		.loc 1 3443 0
 4724 101e 84F83C00 		strb	r0, [r4, #60]	@ tmp126, htim_5(D)->Lock
 4725              	.L381:
3446:src/stm32f1xx_hal_tim.c **** 
 4726              		.loc 1 3446 0
 4727 1022 38BD     		pop	{r3, r4, r5, pc}	@
ARM GAS  /tmp/ccTsJCXT.s 			page 214


 4728              	.LVL370:
 4729              	.L385:
3413:src/stm32f1xx_hal_tim.c ****       break;
 4730              		.loc 1 3413 0
 4731 1024 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4732 1026 FFF7FEFF 		bl	TIM_OC2_SetConfig	@
 4733              	.LVL371:
3414:src/stm32f1xx_hal_tim.c ****     }
 4734              		.loc 1 3414 0
 4735 102a F5E7     		b	.L382	@
 4736              	.LVL372:
 4737              	.L386:
3423:src/stm32f1xx_hal_tim.c ****       break;
 4738              		.loc 1 3423 0
 4739 102c 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4740 102e FFF70FF8 		bl	TIM_OC3_SetConfig	@
 4741              	.LVL373:
3424:src/stm32f1xx_hal_tim.c ****     }
 4742              		.loc 1 3424 0
 4743 1032 F1E7     		b	.L382	@
 4744              	.LVL374:
 4745              	.L387:
3433:src/stm32f1xx_hal_tim.c ****       break;
 4746              		.loc 1 3433 0
 4747 1034 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4748 1036 FFF735F8 		bl	TIM_OC4_SetConfig	@
 4749              	.LVL375:
3434:src/stm32f1xx_hal_tim.c ****     }
 4750              		.loc 1 3434 0
 4751 103a EDE7     		b	.L382	@
 4752              		.cfi_endproc
 4753              	.LFE124:
 4754              		.size	HAL_TIM_OC_ConfigChannel, .-HAL_TIM_OC_ConfigChannel
 4755              		.align	1
 4756              		.global	HAL_TIM_PWM_ConfigChannel
 4757              		.syntax unified
 4758              		.thumb
 4759              		.thumb_func
 4760              		.fpu softvfp
 4761              		.type	HAL_TIM_PWM_ConfigChannel, %function
 4762              	HAL_TIM_PWM_ConfigChannel:
 4763              	.LFB126:
3561:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 4764              		.loc 1 3561 0
 4765              		.cfi_startproc
 4766              		@ args = 0, pretend = 0, frame = 0
 4767              		@ frame_needed = 0, uses_anonymous_args = 0
 4768              	.LVL376:
 4769 103c 38B5     		push	{r3, r4, r5, lr}	@
 4770              	.LCFI37:
 4771              		.cfi_def_cfa_offset 16
 4772              		.cfi_offset 3, -16
 4773              		.cfi_offset 4, -12
 4774              		.cfi_offset 5, -8
 4775              		.cfi_offset 14, -4
3569:src/stm32f1xx_hal_tim.c **** 
 4776              		.loc 1 3569 0
ARM GAS  /tmp/ccTsJCXT.s 			page 215


 4777 103e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_5(D)->Lock, htim_5(D)->Lock
3561:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 4778              		.loc 1 3561 0
 4779 1042 0446     		mov	r4, r0	@ htim, htim
3569:src/stm32f1xx_hal_tim.c **** 
 4780              		.loc 1 3569 0
 4781 1044 012B     		cmp	r3, #1	@ htim_5(D)->Lock,
 4782 1046 4FF00200 		mov	r0, #2	@ <retval>,
 4783              	.LVL377:
 4784 104a 25D0     		beq	.L390	@,
3569:src/stm32f1xx_hal_tim.c **** 
 4785              		.loc 1 3569 0 is_stmt 0 discriminator 2
 4786 104c 0123     		movs	r3, #1	@ tmp154,
3571:src/stm32f1xx_hal_tim.c **** 
 4787              		.loc 1 3571 0 is_stmt 1 discriminator 2
 4788 104e 84F83D00 		strb	r0, [r4, #61]	@ <retval>, htim_5(D)->State
3569:src/stm32f1xx_hal_tim.c **** 
 4789              		.loc 1 3569 0 discriminator 2
 4790 1052 84F83C30 		strb	r3, [r4, #60]	@ tmp154, htim_5(D)->Lock
3573:src/stm32f1xx_hal_tim.c ****   {
 4791              		.loc 1 3573 0 discriminator 2
 4792 1056 0C2A     		cmp	r2, #12	@ Channel,
 4793 1058 18D8     		bhi	.L391	@
 4794 105a DFE802F0 		tbb	[pc, r2]	@ Channel
 4795              	.L393:
 4796 105e 07       		.byte	(.L392-.L393)/2
 4797 105f 17       		.byte	(.L391-.L393)/2
 4798 1060 17       		.byte	(.L391-.L393)/2
 4799 1061 17       		.byte	(.L391-.L393)/2
 4800 1062 1E       		.byte	(.L394-.L393)/2
 4801 1063 17       		.byte	(.L391-.L393)/2
 4802 1064 17       		.byte	(.L391-.L393)/2
 4803 1065 17       		.byte	(.L391-.L393)/2
 4804 1066 2F       		.byte	(.L395-.L393)/2
 4805 1067 17       		.byte	(.L391-.L393)/2
 4806 1068 17       		.byte	(.L391-.L393)/2
 4807 1069 17       		.byte	(.L391-.L393)/2
 4808 106a 40       		.byte	(.L396-.L393)/2
 4809 106b 00       		.p2align 1
 4810              	.L392:
3581:src/stm32f1xx_hal_tim.c **** 
 4811              		.loc 1 3581 0
 4812 106c 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4813 106e FEF7C7FF 		bl	TIM_OC1_SetConfig	@
 4814              	.LVL378:
3584:src/stm32f1xx_hal_tim.c **** 
 4815              		.loc 1 3584 0
 4816 1072 2368     		ldr	r3, [r4]	@ _13, htim_5(D)->Instance
3588:src/stm32f1xx_hal_tim.c ****       break;
 4817              		.loc 1 3588 0
 4818 1074 0969     		ldr	r1, [r1, #16]	@ sConfig_11(D)->OCFastMode, sConfig_11(D)->OCFastMode
 4819              	.LVL379:
3584:src/stm32f1xx_hal_tim.c **** 
 4820              		.loc 1 3584 0
 4821 1076 9A69     		ldr	r2, [r3, #24]	@ _14, _13->CCMR1
 4822 1078 42F00802 		orr	r2, r2, #8	@ _15, _14,
 4823 107c 9A61     		str	r2, [r3, #24]	@ _15, _13->CCMR1
ARM GAS  /tmp/ccTsJCXT.s 			page 216


3587:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
 4824              		.loc 1 3587 0
 4825 107e 9A69     		ldr	r2, [r3, #24]	@ _17, _13->CCMR1
 4826 1080 22F00402 		bic	r2, r2, #4	@ _18, _17,
 4827 1084 9A61     		str	r2, [r3, #24]	@ _18, _13->CCMR1
3588:src/stm32f1xx_hal_tim.c ****       break;
 4828              		.loc 1 3588 0
 4829 1086 9A69     		ldr	r2, [r3, #24]	@ _20, _13->CCMR1
 4830 1088 0A43     		orrs	r2, r2, r1	@, _22, _20, sConfig_11(D)->OCFastMode
 4831              	.L398:
3605:src/stm32f1xx_hal_tim.c ****       break;
 4832              		.loc 1 3605 0
 4833 108a 9A61     		str	r2, [r3, #24]	@ _36,
 4834              	.L391:
3647:src/stm32f1xx_hal_tim.c **** 
 4835              		.loc 1 3647 0
 4836 108c 0123     		movs	r3, #1	@ tmp164,
3649:src/stm32f1xx_hal_tim.c **** 
 4837              		.loc 1 3649 0
 4838 108e 0020     		movs	r0, #0	@ tmp166,
3647:src/stm32f1xx_hal_tim.c **** 
 4839              		.loc 1 3647 0
 4840 1090 84F83D30 		strb	r3, [r4, #61]	@ tmp164, htim_5(D)->State
3649:src/stm32f1xx_hal_tim.c **** 
 4841              		.loc 1 3649 0
 4842 1094 84F83C00 		strb	r0, [r4, #60]	@ tmp166, htim_5(D)->Lock
 4843              	.L390:
3652:src/stm32f1xx_hal_tim.c **** 
 4844              		.loc 1 3652 0
 4845 1098 38BD     		pop	{r3, r4, r5, pc}	@
 4846              	.LVL380:
 4847              	.L394:
3598:src/stm32f1xx_hal_tim.c **** 
 4848              		.loc 1 3598 0
 4849 109a 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4850 109c FFF7FEFF 		bl	TIM_OC2_SetConfig	@
 4851              	.LVL381:
3601:src/stm32f1xx_hal_tim.c **** 
 4852              		.loc 1 3601 0
 4853 10a0 2368     		ldr	r3, [r4]	@ _26, htim_5(D)->Instance
3605:src/stm32f1xx_hal_tim.c ****       break;
 4854              		.loc 1 3605 0
 4855 10a2 0969     		ldr	r1, [r1, #16]	@ sConfig_11(D)->OCFastMode, sConfig_11(D)->OCFastMode
 4856              	.LVL382:
3601:src/stm32f1xx_hal_tim.c **** 
 4857              		.loc 1 3601 0
 4858 10a4 9A69     		ldr	r2, [r3, #24]	@ _27, _26->CCMR1
 4859 10a6 42F40062 		orr	r2, r2, #2048	@ _28, _27,
 4860 10aa 9A61     		str	r2, [r3, #24]	@ _28, _26->CCMR1
3604:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 4861              		.loc 1 3604 0
 4862 10ac 9A69     		ldr	r2, [r3, #24]	@ _30, _26->CCMR1
 4863 10ae 22F48062 		bic	r2, r2, #1024	@ _31, _30,
 4864 10b2 9A61     		str	r2, [r3, #24]	@ _31, _26->CCMR1
3605:src/stm32f1xx_hal_tim.c ****       break;
 4865              		.loc 1 3605 0
 4866 10b4 9A69     		ldr	r2, [r3, #24]	@ _33, _26->CCMR1
ARM GAS  /tmp/ccTsJCXT.s 			page 217


 4867 10b6 42EA0122 		orr	r2, r2, r1, lsl #8	@ _36, _33, sConfig_11(D)->OCFastMode,
 4868 10ba E6E7     		b	.L398	@
 4869              	.LVL383:
 4870              	.L395:
3615:src/stm32f1xx_hal_tim.c **** 
 4871              		.loc 1 3615 0
 4872 10bc 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4873 10be FEF7C7FF 		bl	TIM_OC3_SetConfig	@
 4874              	.LVL384:
3618:src/stm32f1xx_hal_tim.c **** 
 4875              		.loc 1 3618 0
 4876 10c2 2368     		ldr	r3, [r4]	@ _40, htim_5(D)->Instance
3622:src/stm32f1xx_hal_tim.c ****       break;
 4877              		.loc 1 3622 0
 4878 10c4 0969     		ldr	r1, [r1, #16]	@ sConfig_11(D)->OCFastMode, sConfig_11(D)->OCFastMode
 4879              	.LVL385:
3618:src/stm32f1xx_hal_tim.c **** 
 4880              		.loc 1 3618 0
 4881 10c6 DA69     		ldr	r2, [r3, #28]	@ _41, _40->CCMR2
 4882 10c8 42F00802 		orr	r2, r2, #8	@ _42, _41,
 4883 10cc DA61     		str	r2, [r3, #28]	@ _42, _40->CCMR2
3621:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
 4884              		.loc 1 3621 0
 4885 10ce DA69     		ldr	r2, [r3, #28]	@ _44, _40->CCMR2
 4886 10d0 22F00402 		bic	r2, r2, #4	@ _45, _44,
 4887 10d4 DA61     		str	r2, [r3, #28]	@ _45, _40->CCMR2
3622:src/stm32f1xx_hal_tim.c ****       break;
 4888              		.loc 1 3622 0
 4889 10d6 DA69     		ldr	r2, [r3, #28]	@ _47, _40->CCMR2
 4890 10d8 0A43     		orrs	r2, r2, r1	@, _49, _47, sConfig_11(D)->OCFastMode
 4891              	.L399:
3639:src/stm32f1xx_hal_tim.c ****       break;
 4892              		.loc 1 3639 0
 4893 10da DA61     		str	r2, [r3, #28]	@ _63,
3640:src/stm32f1xx_hal_tim.c ****     }
 4894              		.loc 1 3640 0
 4895 10dc D6E7     		b	.L391	@
 4896              	.LVL386:
 4897              	.L396:
3632:src/stm32f1xx_hal_tim.c **** 
 4898              		.loc 1 3632 0
 4899 10de 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 4900 10e0 FEF7E0FF 		bl	TIM_OC4_SetConfig	@
 4901              	.LVL387:
3635:src/stm32f1xx_hal_tim.c **** 
 4902              		.loc 1 3635 0
 4903 10e4 2368     		ldr	r3, [r4]	@ _53, htim_5(D)->Instance
3639:src/stm32f1xx_hal_tim.c ****       break;
 4904              		.loc 1 3639 0
 4905 10e6 0969     		ldr	r1, [r1, #16]	@ sConfig_11(D)->OCFastMode, sConfig_11(D)->OCFastMode
 4906              	.LVL388:
3635:src/stm32f1xx_hal_tim.c **** 
 4907              		.loc 1 3635 0
 4908 10e8 DA69     		ldr	r2, [r3, #28]	@ _54, _53->CCMR2
 4909 10ea 42F40062 		orr	r2, r2, #2048	@ _55, _54,
 4910 10ee DA61     		str	r2, [r3, #28]	@ _55, _53->CCMR2
3638:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
ARM GAS  /tmp/ccTsJCXT.s 			page 218


 4911              		.loc 1 3638 0
 4912 10f0 DA69     		ldr	r2, [r3, #28]	@ _57, _53->CCMR2
 4913 10f2 22F48062 		bic	r2, r2, #1024	@ _58, _57,
 4914 10f6 DA61     		str	r2, [r3, #28]	@ _58, _53->CCMR2
3639:src/stm32f1xx_hal_tim.c ****       break;
 4915              		.loc 1 3639 0
 4916 10f8 DA69     		ldr	r2, [r3, #28]	@ _60, _53->CCMR2
 4917 10fa 42EA0122 		orr	r2, r2, r1, lsl #8	@ _63, _60, sConfig_11(D)->OCFastMode,
 4918 10fe ECE7     		b	.L399	@
 4919              		.cfi_endproc
 4920              	.LFE126:
 4921              		.size	HAL_TIM_PWM_ConfigChannel, .-HAL_TIM_PWM_ConfigChannel
 4922              		.align	1
 4923              		.global	TIM_TI1_SetConfig
 4924              		.syntax unified
 4925              		.thumb
 4926              		.thumb_func
 4927              		.fpu softvfp
 4928              		.type	TIM_TI1_SetConfig, %function
 4929              	TIM_TI1_SetConfig:
 4930              	.LFB170:
6276:src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
 4931              		.loc 1 6276 0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 0
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
 4935              	.LVL389:
 4936 1100 70B5     		push	{r4, r5, r6, lr}	@
 4937              	.LCFI38:
 4938              		.cfi_def_cfa_offset 16
 4939              		.cfi_offset 4, -16
 4940              		.cfi_offset 5, -12
 4941              		.cfi_offset 6, -8
 4942              		.cfi_offset 14, -4
6281:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4943              		.loc 1 6281 0
 4944 1102 046A     		ldr	r4, [r0, #32]	@ _5, TIMx_4(D)->CCER
6286:src/stm32f1xx_hal_tim.c ****   {
 4945              		.loc 1 6286 0
 4946 1104 104E     		ldr	r6, .L409	@ tmp127,
6281:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4947              		.loc 1 6281 0
 4948 1106 24F00104 		bic	r4, r4, #1	@ _6, _5,
 4949 110a 0462     		str	r4, [r0, #32]	@ _6, TIMx_4(D)->CCER
6286:src/stm32f1xx_hal_tim.c ****   {
 4950              		.loc 1 6286 0
 4951 110c B042     		cmp	r0, r6	@ TIMx, tmp127
6282:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 4952              		.loc 1 6282 0
 4953 110e 8469     		ldr	r4, [r0, #24]	@ tmpccmr1, TIMx_4(D)->CCMR1
 4954              	.LVL390:
6283:src/stm32f1xx_hal_tim.c **** 
 4955              		.loc 1 6283 0
 4956 1110 056A     		ldr	r5, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
 4957              	.LVL391:
6286:src/stm32f1xx_hal_tim.c ****   {
 4958              		.loc 1 6286 0
ARM GAS  /tmp/ccTsJCXT.s 			page 219


 4959 1112 06D0     		beq	.L401	@,
6286:src/stm32f1xx_hal_tim.c ****   {
 4960              		.loc 1 6286 0 is_stmt 0 discriminator 2
 4961 1114 B0F1804F 		cmp	r0, #1073741824	@ TIMx,
 4962 1118 03D0     		beq	.L401	@,
6286:src/stm32f1xx_hal_tim.c ****   {
 4963              		.loc 1 6286 0 discriminator 4
 4964 111a A6F59436 		sub	r6, r6, #75776	@ tmp128, tmp128,
 4965 111e B042     		cmp	r0, r6	@ TIMx, tmp128
 4966 1120 0FD1     		bne	.L407	@,
 4967              	.L401:
6288:src/stm32f1xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
 4968              		.loc 1 6288 0 is_stmt 1
 4969 1122 24F00304 		bic	r4, r4, #3	@ tmpccmr1, tmpccmr1,
 4970              	.LVL392:
6289:src/stm32f1xx_hal_tim.c ****   }
 4971              		.loc 1 6289 0
 4972 1126 2243     		orrs	r2, r2, r4	@, tmpccmr1, TIM_ICSelection, tmpccmr1
 4973              	.LVL393:
 4974              	.L403:
6298:src/stm32f1xx_hal_tim.c **** 
 4975              		.loc 1 6298 0
 4976 1128 1B01     		lsls	r3, r3, #4	@ tmp129, TIM_ICFilter,
 4977              	.LVL394:
6297:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 4978              		.loc 1 6297 0
 4979 112a 22F0F002 		bic	r2, r2, #240	@ tmpccmr1, tmpccmr1,
 4980              	.LVL395:
6298:src/stm32f1xx_hal_tim.c **** 
 4981              		.loc 1 6298 0
 4982 112e DBB2     		uxtb	r3, r3	@ tmp130, tmp129
6301:src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 4983              		.loc 1 6301 0
 4984 1130 25F00A05 		bic	r5, r5, #10	@ tmpccer, tmpccer,
 4985              	.LVL396:
6302:src/stm32f1xx_hal_tim.c **** 
 4986              		.loc 1 6302 0
 4987 1134 01F00A01 		and	r1, r1, #10	@ tmp131, TIM_ICPolarity,
 4988              	.LVL397:
6298:src/stm32f1xx_hal_tim.c **** 
 4989              		.loc 1 6298 0
 4990 1138 1A43     		orrs	r2, r2, r3	@, tmpccmr1, tmpccmr1, tmp130
 4991              	.LVL398:
6302:src/stm32f1xx_hal_tim.c **** 
 4992              		.loc 1 6302 0
 4993 113a 0D43     		orrs	r5, r5, r1	@, tmpccer, tmpccer, tmp131
 4994              	.LVL399:
6305:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 4995              		.loc 1 6305 0
 4996 113c 8261     		str	r2, [r0, #24]	@ tmpccmr1, TIMx_4(D)->CCMR1
6306:src/stm32f1xx_hal_tim.c **** }
 4997              		.loc 1 6306 0
 4998 113e 0562     		str	r5, [r0, #32]	@ tmpccer, TIMx_4(D)->CCER
6307:src/stm32f1xx_hal_tim.c **** 
 4999              		.loc 1 6307 0
 5000 1140 70BD     		pop	{r4, r5, r6, pc}	@
 5001              	.LVL400:
ARM GAS  /tmp/ccTsJCXT.s 			page 220


 5002              	.L407:
6293:src/stm32f1xx_hal_tim.c ****   }
 5003              		.loc 1 6293 0
 5004 1142 44F00102 		orr	r2, r4, #1	@ tmpccmr1, tmpccmr1,
 5005              	.LVL401:
 5006 1146 EFE7     		b	.L403	@
 5007              	.L410:
 5008              		.align	2
 5009              	.L409:
 5010 1148 002C0140 		.word	1073818624
 5011              		.cfi_endproc
 5012              	.LFE170:
 5013              		.size	TIM_TI1_SetConfig, .-TIM_TI1_SetConfig
 5014              		.align	1
 5015              		.global	HAL_TIM_IC_ConfigChannel
 5016              		.syntax unified
 5017              		.thumb
 5018              		.thumb_func
 5019              		.fpu softvfp
 5020              		.type	HAL_TIM_IC_ConfigChannel, %function
 5021              	HAL_TIM_IC_ConfigChannel:
 5022              	.LFB125:
3462:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5023              		.loc 1 3462 0
 5024              		.cfi_startproc
 5025              		@ args = 0, pretend = 0, frame = 0
 5026              		@ frame_needed = 0, uses_anonymous_args = 0
 5027              	.LVL402:
 5028 114c F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 5029              	.LCFI39:
 5030              		.cfi_def_cfa_offset 24
 5031              		.cfi_offset 3, -24
 5032              		.cfi_offset 4, -20
 5033              		.cfi_offset 5, -16
 5034              		.cfi_offset 6, -12
 5035              		.cfi_offset 7, -8
 5036              		.cfi_offset 14, -4
3471:src/stm32f1xx_hal_tim.c **** 
 5037              		.loc 1 3471 0
 5038 114e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_5(D)->Lock, htim_5(D)->Lock
3462:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5039              		.loc 1 3462 0
 5040 1152 0446     		mov	r4, r0	@ htim, htim
3471:src/stm32f1xx_hal_tim.c **** 
 5041              		.loc 1 3471 0
 5042 1154 012B     		cmp	r3, #1	@ htim_5(D)->Lock,
3462:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5043              		.loc 1 3462 0
 5044 1156 0D46     		mov	r5, r1	@ sConfig, sConfig
 5045 1158 4FF00200 		mov	r0, #2	@ <retval>,
 5046              	.LVL403:
3471:src/stm32f1xx_hal_tim.c **** 
 5047              		.loc 1 3471 0
 5048 115c 19D0     		beq	.L412	@,
3471:src/stm32f1xx_hal_tim.c **** 
 5049              		.loc 1 3471 0 is_stmt 0 discriminator 2
 5050 115e 0123     		movs	r3, #1	@ tmp199,
ARM GAS  /tmp/ccTsJCXT.s 			page 221


3473:src/stm32f1xx_hal_tim.c **** 
 5051              		.loc 1 3473 0 is_stmt 1 discriminator 2
 5052 1160 84F83D00 		strb	r0, [r4, #61]	@ <retval>, htim_5(D)->State
3471:src/stm32f1xx_hal_tim.c **** 
 5053              		.loc 1 3471 0 discriminator 2
 5054 1164 84F83C30 		strb	r3, [r4, #60]	@ tmp199, htim_5(D)->Lock
3475:src/stm32f1xx_hal_tim.c ****   {
 5055              		.loc 1 3475 0 discriminator 2
 5056 1168 A2B9     		cbnz	r2, .L413	@ Channel,
3478:src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 5057              		.loc 1 3478 0
 5058 116a CB68     		ldr	r3, [r1, #12]	@, sConfig_11(D)->ICFilter
 5059 116c 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 5060 116e 06C9     		ldm	r1, {r1, r2}	@ sConfig,,
 5061              	.LVL404:
 5062 1170 FFF7FEFF 		bl	TIM_TI1_SetConfig	@
 5063              	.LVL405:
3484:src/stm32f1xx_hal_tim.c **** 
 5064              		.loc 1 3484 0
 5065 1174 2368     		ldr	r3, [r4]	@ _16, htim_5(D)->Instance
3487:src/stm32f1xx_hal_tim.c ****   }
 5066              		.loc 1 3487 0
 5067 1176 A968     		ldr	r1, [r5, #8]	@ sConfig_11(D)->ICPrescaler, sConfig_11(D)->ICPrescaler
3484:src/stm32f1xx_hal_tim.c **** 
 5068              		.loc 1 3484 0
 5069 1178 9A69     		ldr	r2, [r3, #24]	@ _17, _16->CCMR1
 5070 117a 22F00C02 		bic	r2, r2, #12	@ _18, _17,
 5071 117e 9A61     		str	r2, [r3, #24]	@ _18, _16->CCMR1
3487:src/stm32f1xx_hal_tim.c ****   }
 5072              		.loc 1 3487 0
 5073 1180 9A69     		ldr	r2, [r3, #24]	@ _20, _16->CCMR1
 5074 1182 0A43     		orrs	r2, r2, r1	@, _22, _20, sConfig_11(D)->ICPrescaler
 5075 1184 9A61     		str	r2, [r3, #24]	@ _22, _16->CCMR1
 5076              	.LVL406:
 5077              	.L414:
3538:src/stm32f1xx_hal_tim.c **** 
 5078              		.loc 1 3538 0
 5079 1186 0123     		movs	r3, #1	@ tmp225,
3540:src/stm32f1xx_hal_tim.c **** 
 5080              		.loc 1 3540 0
 5081 1188 0020     		movs	r0, #0	@ tmp227,
3538:src/stm32f1xx_hal_tim.c **** 
 5082              		.loc 1 3538 0
 5083 118a 84F83D30 		strb	r3, [r4, #61]	@ tmp225, htim_5(D)->State
3540:src/stm32f1xx_hal_tim.c **** 
 5084              		.loc 1 3540 0
 5085 118e 84F83C00 		strb	r0, [r4, #60]	@ tmp227, htim_5(D)->Lock
 5086              	.L412:
3543:src/stm32f1xx_hal_tim.c **** 
 5087              		.loc 1 3543 0
 5088 1192 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 5089              	.LVL407:
 5090              	.L413:
3489:src/stm32f1xx_hal_tim.c ****   {
 5091              		.loc 1 3489 0
 5092 1194 042A     		cmp	r2, #4	@ Channel,
 5093 1196 8E68     		ldr	r6, [r1, #8]	@ sConfig_11(D)->ICPrescaler, sConfig_11(D)->ICPrescaler
ARM GAS  /tmp/ccTsJCXT.s 			page 222


 5094 1198 2368     		ldr	r3, [r4]	@ _24, htim_5(D)->Instance
 5095 119a 82C9     		ldm	r1, {r1, r7}	@ sConfig,,
 5096              	.LVL408:
 5097 119c E868     		ldr	r0, [r5, #12]	@ _27, sConfig_11(D)->ICFilter
 5098 119e 1FD1     		bne	.L415	@,
 5099              	.LVL409:
 5100              	.LBB146:
 5101              	.LBB147:
6371:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5102              		.loc 1 6371 0
 5103 11a0 1A6A     		ldr	r2, [r3, #32]	@ _67, _24->CCER
 5104              	.LVL410:
6381:src/stm32f1xx_hal_tim.c **** 
 5105              		.loc 1 6381 0
 5106 11a2 0003     		lsls	r0, r0, #12	@ tmp205, _27,
 5107              	.LVL411:
6371:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5108              		.loc 1 6371 0
 5109 11a4 22F01002 		bic	r2, r2, #16	@ _68, _67,
 5110 11a8 1A62     		str	r2, [r3, #32]	@ _68, _24->CCER
6372:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 5111              		.loc 1 6372 0
 5112 11aa 9A69     		ldr	r2, [r3, #24]	@ tmpccmr1, _24->CCMR1
 5113              	.LVL412:
6373:src/stm32f1xx_hal_tim.c **** 
 5114              		.loc 1 6373 0
 5115 11ac 1D6A     		ldr	r5, [r3, #32]	@ tmpccer, _24->CCER
 5116              	.LVL413:
6376:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 5117              		.loc 1 6376 0
 5118 11ae 22F44072 		bic	r2, r2, #768	@ tmpccmr1, tmpccmr1,
 5119              	.LVL414:
6377:src/stm32f1xx_hal_tim.c **** 
 5120              		.loc 1 6377 0
 5121 11b2 42EA0722 		orr	r2, r2, r7, lsl #8	@ tmpccmr1, tmpccmr1, _26,
 5122              	.LVL415:
6381:src/stm32f1xx_hal_tim.c **** 
 5123              		.loc 1 6381 0
 5124 11b6 80B2     		uxth	r0, r0	@ tmp206, tmp205
6380:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 5125              		.loc 1 6380 0
 5126 11b8 22F47042 		bic	r2, r2, #61440	@ tmpccmr1, tmpccmr1,
 5127              	.LVL416:
6385:src/stm32f1xx_hal_tim.c **** 
 5128              		.loc 1 6385 0
 5129 11bc 0901     		lsls	r1, r1, #4	@ tmp208, _25,
 5130              	.LVL417:
6381:src/stm32f1xx_hal_tim.c **** 
 5131              		.loc 1 6381 0
 5132 11be 0243     		orrs	r2, r2, r0	@, tmpccmr1, tmpccmr1, tmp206
 5133              	.LVL418:
6385:src/stm32f1xx_hal_tim.c **** 
 5134              		.loc 1 6385 0
 5135 11c0 01F0A001 		and	r1, r1, #160	@ tmp209, tmp208,
6384:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 5136              		.loc 1 6384 0
 5137 11c4 25F0A000 		bic	r0, r5, #160	@ tmpccer, tmpccer,
ARM GAS  /tmp/ccTsJCXT.s 			page 223


 5138              	.LVL419:
6385:src/stm32f1xx_hal_tim.c **** 
 5139              		.loc 1 6385 0
 5140 11c8 0143     		orrs	r1, r1, r0	@, tmpccer, tmp209, tmpccer
 5141              	.LVL420:
6388:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 5142              		.loc 1 6388 0
 5143 11ca 9A61     		str	r2, [r3, #24]	@ tmpccmr1, _24->CCMR1
6389:src/stm32f1xx_hal_tim.c **** }
 5144              		.loc 1 6389 0
 5145 11cc 1962     		str	r1, [r3, #32]	@ tmpccer, _24->CCER
 5146              	.LVL421:
 5147              	.LBE147:
 5148              	.LBE146:
3500:src/stm32f1xx_hal_tim.c **** 
 5149              		.loc 1 3500 0
 5150 11ce 9A69     		ldr	r2, [r3, #24]	@ _30, _24->CCMR1
 5151 11d0 22F44062 		bic	r2, r2, #3072	@ _31, _30,
 5152 11d4 9A61     		str	r2, [r3, #24]	@ _31, _24->CCMR1
3503:src/stm32f1xx_hal_tim.c ****   }
 5153              		.loc 1 3503 0
 5154 11d6 9A69     		ldr	r2, [r3, #24]	@ _33, _24->CCMR1
 5155 11d8 42EA0626 		orr	r6, r2, r6, lsl #8	@ _36, _33, sConfig_11(D)->ICPrescaler,
 5156 11dc 9E61     		str	r6, [r3, #24]	@ _36, _24->CCMR1
 5157 11de D2E7     		b	.L414	@
 5158              	.LVL422:
 5159              	.L415:
3505:src/stm32f1xx_hal_tim.c ****   {
 5160              		.loc 1 3505 0
 5161 11e0 082A     		cmp	r2, #8	@ Channel,
 5162              	.LBB148:
 5163              	.LBB149:
6453:src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5164              		.loc 1 6453 0
 5165 11e2 1A6A     		ldr	r2, [r3, #32]	@ _82,
 5166              	.LVL423:
 5167              	.LBE149:
 5168              	.LBE148:
3505:src/stm32f1xx_hal_tim.c ****   {
 5169              		.loc 1 3505 0
 5170 11e4 1CD1     		bne	.L416	@,
 5171              	.LVL424:
 5172              	.LBB151:
 5173              	.LBB150:
6453:src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5174              		.loc 1 6453 0
 5175 11e6 22F48072 		bic	r2, r2, #256	@ _83, _82,
 5176 11ea 1A62     		str	r2, [r3, #32]	@ _83, _38->CCER
6454:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 5177              		.loc 1 6454 0
 5178 11ec DA69     		ldr	r2, [r3, #28]	@ tmpccmr2, _38->CCMR2
 5179              	.LVL425:
6463:src/stm32f1xx_hal_tim.c **** 
 5180              		.loc 1 6463 0
 5181 11ee 0001     		lsls	r0, r0, #4	@ tmp212, _27,
 5182              	.LVL426:
6458:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
ARM GAS  /tmp/ccTsJCXT.s 			page 224


 5183              		.loc 1 6458 0
 5184 11f0 22F00302 		bic	r2, r2, #3	@ tmpccmr2, tmpccmr2,
 5185              	.LVL427:
6455:src/stm32f1xx_hal_tim.c **** 
 5186              		.loc 1 6455 0
 5187 11f4 1D6A     		ldr	r5, [r3, #32]	@ tmpccer, _38->CCER
 5188              	.LVL428:
6459:src/stm32f1xx_hal_tim.c **** 
 5189              		.loc 1 6459 0
 5190 11f6 3A43     		orrs	r2, r2, r7	@, tmpccmr2, tmpccmr2, _26
 5191              	.LVL429:
6463:src/stm32f1xx_hal_tim.c **** 
 5192              		.loc 1 6463 0
 5193 11f8 C0B2     		uxtb	r0, r0	@ tmp213, tmp212
6462:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 5194              		.loc 1 6462 0
 5195 11fa 22F0F002 		bic	r2, r2, #240	@ tmpccmr2, tmpccmr2,
 5196              	.LVL430:
6467:src/stm32f1xx_hal_tim.c **** 
 5197              		.loc 1 6467 0
 5198 11fe 0902     		lsls	r1, r1, #8	@ tmp214, _25,
 5199              	.LVL431:
6463:src/stm32f1xx_hal_tim.c **** 
 5200              		.loc 1 6463 0
 5201 1200 0243     		orrs	r2, r2, r0	@, tmpccmr2, tmpccmr2, tmp213
 5202              	.LVL432:
6467:src/stm32f1xx_hal_tim.c **** 
 5203              		.loc 1 6467 0
 5204 1202 01F40071 		and	r1, r1, #512	@ tmp215, tmp214,
6466:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & TIM_CCER_CC3P);
 5205              		.loc 1 6466 0
 5206 1206 25F40070 		bic	r0, r5, #512	@ tmpccer, tmpccer,
 5207              	.LVL433:
6467:src/stm32f1xx_hal_tim.c **** 
 5208              		.loc 1 6467 0
 5209 120a 0143     		orrs	r1, r1, r0	@, tmpccer, tmp215, tmpccer
 5210              	.LVL434:
6470:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 5211              		.loc 1 6470 0
 5212 120c DA61     		str	r2, [r3, #28]	@ tmpccmr2, _38->CCMR2
6471:src/stm32f1xx_hal_tim.c **** }
 5213              		.loc 1 6471 0
 5214 120e 1962     		str	r1, [r3, #32]	@ tmpccer, _38->CCER
 5215              	.LVL435:
 5216              	.LBE150:
 5217              	.LBE151:
3516:src/stm32f1xx_hal_tim.c **** 
 5218              		.loc 1 3516 0
 5219 1210 DA69     		ldr	r2, [r3, #28]	@ _44, _38->CCMR2
 5220 1212 22F00C02 		bic	r2, r2, #12	@ _45, _44,
 5221 1216 DA61     		str	r2, [r3, #28]	@ _45, _38->CCMR2
3519:src/stm32f1xx_hal_tim.c ****   }
 5222              		.loc 1 3519 0
 5223 1218 DA69     		ldr	r2, [r3, #28]	@ _47, _38->CCMR2
 5224 121a 1643     		orrs	r6, r6, r2	@, _49, sConfig_11(D)->ICPrescaler, _47
 5225              	.L418:
3535:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 225


 5226              		.loc 1 3535 0
 5227 121c DE61     		str	r6, [r3, #28]	@ _63,
 5228 121e B2E7     		b	.L414	@
 5229              	.LVL436:
 5230              	.L416:
 5231              	.LBB152:
 5232              	.LBB153:
6500:src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5233              		.loc 1 6500 0
 5234 1220 22F48052 		bic	r2, r2, #4096	@ _97, _96,
 5235 1224 1A62     		str	r2, [r3, #32]	@ _97, _51->CCER
6501:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 5236              		.loc 1 6501 0
 5237 1226 DA69     		ldr	r2, [r3, #28]	@ tmpccmr2, _51->CCMR2
 5238              	.LVL437:
6510:src/stm32f1xx_hal_tim.c **** 
 5239              		.loc 1 6510 0
 5240 1228 0003     		lsls	r0, r0, #12	@ tmp218, _27,
 5241              	.LVL438:
6505:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
 5242              		.loc 1 6505 0
 5243 122a 22F44072 		bic	r2, r2, #768	@ tmpccmr2, tmpccmr2,
 5244              	.LVL439:
6502:src/stm32f1xx_hal_tim.c **** 
 5245              		.loc 1 6502 0
 5246 122e 1D6A     		ldr	r5, [r3, #32]	@ tmpccer, _51->CCER
 5247              	.LVL440:
6506:src/stm32f1xx_hal_tim.c **** 
 5248              		.loc 1 6506 0
 5249 1230 42EA0722 		orr	r2, r2, r7, lsl #8	@ tmpccmr2, tmpccmr2, _26,
 5250              	.LVL441:
6509:src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 5251              		.loc 1 6509 0
 5252 1234 22F47042 		bic	r2, r2, #61440	@ tmpccmr2, tmpccmr2,
 5253              	.LVL442:
6510:src/stm32f1xx_hal_tim.c **** 
 5254              		.loc 1 6510 0
 5255 1238 80B2     		uxth	r0, r0	@ tmp219, tmp218
6514:src/stm32f1xx_hal_tim.c **** 
 5256              		.loc 1 6514 0
 5257 123a 0903     		lsls	r1, r1, #12	@ tmp221, _25,
 5258              	.LVL443:
6510:src/stm32f1xx_hal_tim.c **** 
 5259              		.loc 1 6510 0
 5260 123c 1043     		orrs	r0, r0, r2	@, tmpccmr2, tmp219, tmpccmr2
 5261              	.LVL444:
6514:src/stm32f1xx_hal_tim.c **** 
 5262              		.loc 1 6514 0
 5263 123e 01F40051 		and	r1, r1, #8192	@ tmp222, tmp221,
6513:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & TIM_CCER_CC4P);
 5264              		.loc 1 6513 0
 5265 1242 25F40052 		bic	r2, r5, #8192	@ tmpccer, tmpccer,
 5266              	.LVL445:
6514:src/stm32f1xx_hal_tim.c **** 
 5267              		.loc 1 6514 0
 5268 1246 1143     		orrs	r1, r1, r2	@, tmpccer, tmp222, tmpccer
 5269              	.LVL446:
ARM GAS  /tmp/ccTsJCXT.s 			page 226


6517:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
 5270              		.loc 1 6517 0
 5271 1248 D861     		str	r0, [r3, #28]	@ tmpccmr2, _51->CCMR2
6518:src/stm32f1xx_hal_tim.c **** }
 5272              		.loc 1 6518 0
 5273 124a 1962     		str	r1, [r3, #32]	@ tmpccer, _51->CCER
 5274              	.LVL447:
 5275              	.LBE153:
 5276              	.LBE152:
3532:src/stm32f1xx_hal_tim.c **** 
 5277              		.loc 1 3532 0
 5278 124c DA69     		ldr	r2, [r3, #28]	@ _57, _51->CCMR2
 5279 124e 22F44062 		bic	r2, r2, #3072	@ _58, _57,
 5280 1252 DA61     		str	r2, [r3, #28]	@ _58, _51->CCMR2
3535:src/stm32f1xx_hal_tim.c ****   }
 5281              		.loc 1 3535 0
 5282 1254 DA69     		ldr	r2, [r3, #28]	@ _60, _51->CCMR2
 5283 1256 42EA0626 		orr	r6, r2, r6, lsl #8	@ _63, _60, sConfig_11(D)->ICPrescaler,
 5284 125a DFE7     		b	.L418	@
 5285              		.cfi_endproc
 5286              	.LFE125:
 5287              		.size	HAL_TIM_IC_ConfigChannel, .-HAL_TIM_IC_ConfigChannel
 5288              		.align	1
 5289              		.global	HAL_TIM_OnePulse_ConfigChannel
 5290              		.syntax unified
 5291              		.thumb
 5292              		.thumb_func
 5293              		.fpu softvfp
 5294              		.type	HAL_TIM_OnePulse_ConfigChannel, %function
 5295              	HAL_TIM_OnePulse_ConfigChannel:
 5296              	.LFB127:
3675:src/stm32f1xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
 5297              		.loc 1 3675 0
 5298              		.cfi_startproc
 5299              		@ args = 0, pretend = 0, frame = 32
 5300              		@ frame_needed = 0, uses_anonymous_args = 0
 5301              	.LVL448:
 5302 125c 70B5     		push	{r4, r5, r6, lr}	@
 5303              	.LCFI40:
 5304              		.cfi_def_cfa_offset 16
 5305              		.cfi_offset 4, -16
 5306              		.cfi_offset 5, -12
 5307              		.cfi_offset 6, -8
 5308              		.cfi_offset 14, -4
3682:src/stm32f1xx_hal_tim.c ****   {
 5309              		.loc 1 3682 0
 5310 125e 9A42     		cmp	r2, r3	@ OutputChannel, InputChannel
3675:src/stm32f1xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
 5311              		.loc 1 3675 0
 5312 1260 88B0     		sub	sp, sp, #32	@,,
 5313              	.LCFI41:
 5314              		.cfi_def_cfa_offset 48
3675:src/stm32f1xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
 5315              		.loc 1 3675 0
 5316 1262 0546     		mov	r5, r0	@ htim, htim
 5317 1264 0C46     		mov	r4, r1	@ sConfig, sConfig
 5318 1266 1E46     		mov	r6, r3	@ InputChannel, InputChannel
ARM GAS  /tmp/ccTsJCXT.s 			page 227


3682:src/stm32f1xx_hal_tim.c ****   {
 5319              		.loc 1 3682 0
 5320 1268 70D0     		beq	.L427	@,
3685:src/stm32f1xx_hal_tim.c **** 
 5321              		.loc 1 3685 0
 5322 126a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_8(D)->Lock, htim_8(D)->Lock
 5323              	.LVL449:
 5324 126e 0220     		movs	r0, #2	@ <retval>,
 5325              	.LVL450:
 5326 1270 012B     		cmp	r3, #1	@ htim_8(D)->Lock,
 5327 1272 1CD0     		beq	.L420	@,
3685:src/stm32f1xx_hal_tim.c **** 
 5328              		.loc 1 3685 0 is_stmt 0 discriminator 2
 5329 1274 0123     		movs	r3, #1	@ tmp169,
 5330 1276 85F83C30 		strb	r3, [r5, #60]	@ tmp169, htim_8(D)->Lock
3690:src/stm32f1xx_hal_tim.c ****     temp1.Pulse = sConfig->Pulse;
 5331              		.loc 1 3690 0 is_stmt 1 discriminator 2
 5332 127a 0B68     		ldr	r3, [r1]	@ sConfig_12(D)->OCMode, sConfig_12(D)->OCMode
3687:src/stm32f1xx_hal_tim.c **** 
 5333              		.loc 1 3687 0 discriminator 2
 5334 127c 85F83D00 		strb	r0, [r5, #61]	@ <retval>, htim_8(D)->State
3690:src/stm32f1xx_hal_tim.c ****     temp1.Pulse = sConfig->Pulse;
 5335              		.loc 1 3690 0 discriminator 2
 5336 1280 0193     		str	r3, [sp, #4]	@ sConfig_12(D)->OCMode, temp1.OCMode
3691:src/stm32f1xx_hal_tim.c ****     temp1.OCPolarity = sConfig->OCPolarity;
 5337              		.loc 1 3691 0 discriminator 2
 5338 1282 4B68     		ldr	r3, [r1, #4]	@ sConfig_12(D)->Pulse, sConfig_12(D)->Pulse
 5339 1284 0293     		str	r3, [sp, #8]	@ sConfig_12(D)->Pulse, temp1.Pulse
3692:src/stm32f1xx_hal_tim.c ****     temp1.OCNPolarity = sConfig->OCNPolarity;
 5340              		.loc 1 3692 0 discriminator 2
 5341 1286 8B68     		ldr	r3, [r1, #8]	@ sConfig_12(D)->OCPolarity, sConfig_12(D)->OCPolarity
 5342 1288 0393     		str	r3, [sp, #12]	@ sConfig_12(D)->OCPolarity, temp1.OCPolarity
3693:src/stm32f1xx_hal_tim.c ****     temp1.OCIdleState = sConfig->OCIdleState;
 5343              		.loc 1 3693 0 discriminator 2
 5344 128a CB68     		ldr	r3, [r1, #12]	@ sConfig_12(D)->OCNPolarity, sConfig_12(D)->OCNPolarity
 5345 128c 0493     		str	r3, [sp, #16]	@ sConfig_12(D)->OCNPolarity, temp1.OCNPolarity
3694:src/stm32f1xx_hal_tim.c ****     temp1.OCNIdleState = sConfig->OCNIdleState;
 5346              		.loc 1 3694 0 discriminator 2
 5347 128e 0B69     		ldr	r3, [r1, #16]	@ sConfig_12(D)->OCIdleState, sConfig_12(D)->OCIdleState
 5348 1290 0693     		str	r3, [sp, #24]	@ sConfig_12(D)->OCIdleState, temp1.OCIdleState
3695:src/stm32f1xx_hal_tim.c **** 
 5349              		.loc 1 3695 0 discriminator 2
 5350 1292 4B69     		ldr	r3, [r1, #20]	@ sConfig_12(D)->OCNIdleState, sConfig_12(D)->OCNIdleState
 5351 1294 0793     		str	r3, [sp, #28]	@ sConfig_12(D)->OCNIdleState, temp1.OCNIdleState
3697:src/stm32f1xx_hal_tim.c ****     {
 5352              		.loc 1 3697 0 discriminator 2
 5353 1296 62B1     		cbz	r2, .L422	@ OutputChannel,
 5354 1298 042A     		cmp	r2, #4	@ OutputChannel,
 5355 129a 0FD0     		beq	.L423	@,
 5356              	.LVL451:
 5357              	.L421:
3717:src/stm32f1xx_hal_tim.c ****     {
 5358              		.loc 1 3717 0
 5359 129c 9EB1     		cbz	r6, .L425	@ InputChannel,
 5360 129e 042E     		cmp	r6, #4	@ InputChannel,
 5361 12a0 2DD0     		beq	.L426	@,
 5362              	.LVL452:
ARM GAS  /tmp/ccTsJCXT.s 			page 228


 5363              	.L424:
3762:src/stm32f1xx_hal_tim.c **** 
 5364              		.loc 1 3762 0
 5365 12a2 0123     		movs	r3, #1	@ tmp187,
3764:src/stm32f1xx_hal_tim.c **** 
 5366              		.loc 1 3764 0
 5367 12a4 0020     		movs	r0, #0	@ tmp189,
3762:src/stm32f1xx_hal_tim.c **** 
 5368              		.loc 1 3762 0
 5369 12a6 85F83D30 		strb	r3, [r5, #61]	@ tmp187, htim_8(D)->State
3764:src/stm32f1xx_hal_tim.c **** 
 5370              		.loc 1 3764 0
 5371 12aa 85F83C00 		strb	r0, [r5, #60]	@ tmp189, htim_8(D)->Lock
 5372              	.L420:
3772:src/stm32f1xx_hal_tim.c **** 
 5373              		.loc 1 3772 0
 5374 12ae 08B0     		add	sp, sp, #32	@,,
 5375              	.LCFI42:
 5376              		.cfi_remember_state
 5377              		.cfi_def_cfa_offset 16
 5378              		@ sp needed	@
 5379 12b0 70BD     		pop	{r4, r5, r6, pc}	@
 5380              	.LVL453:
 5381              	.L422:
 5382              	.LCFI43:
 5383              		.cfi_restore_state
3703:src/stm32f1xx_hal_tim.c ****         break;
 5384              		.loc 1 3703 0
 5385 12b2 01A9     		add	r1, sp, #4	@,,
 5386              	.LVL454:
 5387 12b4 2868     		ldr	r0, [r5]	@, htim_8(D)->Instance
 5388 12b6 FEF7A3FE 		bl	TIM_OC1_SetConfig	@
 5389              	.LVL455:
3704:src/stm32f1xx_hal_tim.c ****       }
 5390              		.loc 1 3704 0
 5391 12ba EFE7     		b	.L421	@
 5392              	.LVL456:
 5393              	.L423:
3710:src/stm32f1xx_hal_tim.c ****         break;
 5394              		.loc 1 3710 0
 5395 12bc 01A9     		add	r1, sp, #4	@,,
 5396              	.LVL457:
 5397 12be 2868     		ldr	r0, [r5]	@, htim_8(D)->Instance
 5398 12c0 FFF7FEFF 		bl	TIM_OC2_SetConfig	@
 5399              	.LVL458:
3711:src/stm32f1xx_hal_tim.c ****       }
 5400              		.loc 1 3711 0
 5401 12c4 EAE7     		b	.L421	@
 5402              	.L425:
3723:src/stm32f1xx_hal_tim.c ****                           sConfig->ICSelection, sConfig->ICFilter);
 5403              		.loc 1 3723 0
 5404 12c6 04F11801 		add	r1, r4, #24	@,,
 5405 12ca 0EC9     		ldm	r1, {r1, r2, r3}	@,,,
 5406 12cc 2868     		ldr	r0, [r5]	@, htim_8(D)->Instance
 5407 12ce FFF7FEFF 		bl	TIM_TI1_SetConfig	@
 5408              	.LVL459:
3727:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 229


 5409              		.loc 1 3727 0
 5410 12d2 2B68     		ldr	r3, [r5]	@ _34, htim_8(D)->Instance
 5411 12d4 9A69     		ldr	r2, [r3, #24]	@ _35, _34->CCMR1
 5412 12d6 22F00C02 		bic	r2, r2, #12	@ _36, _35,
 5413 12da 9A61     		str	r2, [r3, #24]	@ _36, _34->CCMR1
3730:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_TS_TI1FP1;
 5414              		.loc 1 3730 0
 5415 12dc 9A68     		ldr	r2, [r3, #8]	@ _38, _34->SMCR
 5416 12de 22F07002 		bic	r2, r2, #112	@ _39, _38,
 5417 12e2 9A60     		str	r2, [r3, #8]	@ _39, _34->SMCR
3731:src/stm32f1xx_hal_tim.c **** 
 5418              		.loc 1 3731 0
 5419 12e4 9A68     		ldr	r2, [r3, #8]	@ _41, _34->SMCR
 5420 12e6 42F05002 		orr	r2, r2, #80	@ _42, _41,
 5421              	.LVL460:
 5422              	.L429:
3750:src/stm32f1xx_hal_tim.c **** 
 5423              		.loc 1 3750 0
 5424 12ea 9A60     		str	r2, [r3, #8]	@ _63,
3753:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 5425              		.loc 1 3753 0
 5426 12ec 9A68     		ldr	r2, [r3, #8]	@ _65,
 5427 12ee 22F00702 		bic	r2, r2, #7	@ _66, _65,
 5428 12f2 9A60     		str	r2, [r3, #8]	@ _66,
3754:src/stm32f1xx_hal_tim.c ****         break;
 5429              		.loc 1 3754 0
 5430 12f4 9A68     		ldr	r2, [r3, #8]	@ _68,
 5431 12f6 42F00602 		orr	r2, r2, #6	@ _69, _68,
 5432 12fa 9A60     		str	r2, [r3, #8]	@ _69,
3755:src/stm32f1xx_hal_tim.c ****       }
 5433              		.loc 1 3755 0
 5434 12fc D1E7     		b	.L424	@
 5435              	.LVL461:
 5436              	.L426:
3742:src/stm32f1xx_hal_tim.c ****                           sConfig->ICSelection, sConfig->ICFilter);
 5437              		.loc 1 3742 0
 5438 12fe 2B68     		ldr	r3, [r5]	@ _50, htim_8(D)->Instance
 5439 1300 A269     		ldr	r2, [r4, #24]	@ _51, sConfig_12(D)->ICPolarity
 5440 1302 E669     		ldr	r6, [r4, #28]	@ _52, sConfig_12(D)->ICSelection
 5441              	.LVL462:
 5442 1304 216A     		ldr	r1, [r4, #32]	@ _53, sConfig_12(D)->ICFilter
 5443              	.LVL463:
 5444              	.LBB156:
 5445              	.LBB157:
6371:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5446              		.loc 1 6371 0
 5447 1306 1C6A     		ldr	r4, [r3, #32]	@ _74, _50->CCER
 5448              	.LVL464:
6381:src/stm32f1xx_hal_tim.c **** 
 5449              		.loc 1 6381 0
 5450 1308 0903     		lsls	r1, r1, #12	@ tmp182, _53,
 5451              	.LVL465:
6371:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5452              		.loc 1 6371 0
 5453 130a 24F01004 		bic	r4, r4, #16	@ _75, _74,
 5454 130e 1C62     		str	r4, [r3, #32]	@ _75, _50->CCER
6372:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccTsJCXT.s 			page 230


 5455              		.loc 1 6372 0
 5456 1310 9869     		ldr	r0, [r3, #24]	@ tmpccmr1, _50->CCMR1
 5457              	.LVL466:
6373:src/stm32f1xx_hal_tim.c **** 
 5458              		.loc 1 6373 0
 5459 1312 1C6A     		ldr	r4, [r3, #32]	@ tmpccer, _50->CCER
 5460              	.LVL467:
6376:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 5461              		.loc 1 6376 0
 5462 1314 20F44070 		bic	r0, r0, #768	@ tmpccmr1, tmpccmr1,
 5463              	.LVL468:
6377:src/stm32f1xx_hal_tim.c **** 
 5464              		.loc 1 6377 0
 5465 1318 40EA0620 		orr	r0, r0, r6, lsl #8	@ tmpccmr1, tmpccmr1, _52,
 5466              	.LVL469:
6380:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 5467              		.loc 1 6380 0
 5468 131c 20F47040 		bic	r0, r0, #61440	@ tmpccmr1, tmpccmr1,
 5469              	.LVL470:
6381:src/stm32f1xx_hal_tim.c **** 
 5470              		.loc 1 6381 0
 5471 1320 89B2     		uxth	r1, r1	@ tmp183, tmp182
6385:src/stm32f1xx_hal_tim.c **** 
 5472              		.loc 1 6385 0
 5473 1322 1201     		lsls	r2, r2, #4	@ tmp185, _51,
 5474              	.LVL471:
6381:src/stm32f1xx_hal_tim.c **** 
 5475              		.loc 1 6381 0
 5476 1324 0143     		orrs	r1, r1, r0	@, tmpccmr1, tmp183, tmpccmr1
 5477              	.LVL472:
6385:src/stm32f1xx_hal_tim.c **** 
 5478              		.loc 1 6385 0
 5479 1326 02F0A002 		and	r2, r2, #160	@ tmp186, tmp185,
6384:src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 5480              		.loc 1 6384 0
 5481 132a 24F0A000 		bic	r0, r4, #160	@ tmpccer, tmpccer,
 5482              	.LVL473:
6385:src/stm32f1xx_hal_tim.c **** 
 5483              		.loc 1 6385 0
 5484 132e 0243     		orrs	r2, r2, r0	@, tmpccer, tmp186, tmpccer
 5485              	.LVL474:
6388:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 5486              		.loc 1 6388 0
 5487 1330 9961     		str	r1, [r3, #24]	@ tmpccmr1, _50->CCMR1
6389:src/stm32f1xx_hal_tim.c **** }
 5488              		.loc 1 6389 0
 5489 1332 1A62     		str	r2, [r3, #32]	@ tmpccer, _50->CCER
 5490              	.LVL475:
 5491              	.LBE157:
 5492              	.LBE156:
3746:src/stm32f1xx_hal_tim.c **** 
 5493              		.loc 1 3746 0
 5494 1334 9A69     		ldr	r2, [r3, #24]	@ _56, _50->CCMR1
 5495 1336 22F44062 		bic	r2, r2, #3072	@ _57, _56,
 5496 133a 9A61     		str	r2, [r3, #24]	@ _57, _50->CCMR1
3749:src/stm32f1xx_hal_tim.c ****         htim->Instance->SMCR |= TIM_TS_TI2FP2;
 5497              		.loc 1 3749 0
ARM GAS  /tmp/ccTsJCXT.s 			page 231


 5498 133c 9A68     		ldr	r2, [r3, #8]	@ _59, _50->SMCR
 5499 133e 22F07002 		bic	r2, r2, #112	@ _60, _59,
 5500 1342 9A60     		str	r2, [r3, #8]	@ _60, _50->SMCR
3750:src/stm32f1xx_hal_tim.c **** 
 5501              		.loc 1 3750 0
 5502 1344 9A68     		ldr	r2, [r3, #8]	@ _62, _50->SMCR
 5503 1346 42F06002 		orr	r2, r2, #96	@ _63, _62,
 5504 134a CEE7     		b	.L429	@
 5505              	.LVL476:
 5506              	.L427:
3770:src/stm32f1xx_hal_tim.c ****   }
 5507              		.loc 1 3770 0
 5508 134c 0120     		movs	r0, #1	@ <retval>,
 5509              	.LVL477:
 5510 134e AEE7     		b	.L420	@
 5511              		.cfi_endproc
 5512              	.LFE127:
 5513              		.size	HAL_TIM_OnePulse_ConfigChannel, .-HAL_TIM_OnePulse_ConfigChannel
 5514              		.align	1
 5515              		.global	TIM_ETR_SetConfig
 5516              		.syntax unified
 5517              		.thumb
 5518              		.thumb_func
 5519              		.fpu softvfp
 5520              		.type	TIM_ETR_SetConfig, %function
 5521              	TIM_ETR_SetConfig:
 5522              	.LFB177:
6568:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 5523              		.loc 1 6568 0
 5524              		.cfi_startproc
 5525              		@ args = 0, pretend = 0, frame = 0
 5526              		@ frame_needed = 0, uses_anonymous_args = 0
 5527              	.LVL478:
 5528 1350 10B5     		push	{r4, lr}	@
 5529              	.LCFI44:
 5530              		.cfi_def_cfa_offset 8
 5531              		.cfi_offset 4, -8
 5532              		.cfi_offset 14, -4
6571:src/stm32f1xx_hal_tim.c **** 
 5533              		.loc 1 6571 0
 5534 1352 8468     		ldr	r4, [r0, #8]	@ tmpsmcr, TIMx_2(D)->SMCR
 5535              	.LVL479:
6577:src/stm32f1xx_hal_tim.c **** 
 5536              		.loc 1 6577 0
 5537 1354 0A43     		orrs	r2, r2, r1	@, tmp121, TIM_ExtTRGPolarity, TIM_ExtTRGPrescaler
 5538              	.LVL480:
6574:src/stm32f1xx_hal_tim.c **** 
 5539              		.loc 1 6574 0
 5540 1356 24F47F44 		bic	r4, r4, #65280	@ tmpsmcr, tmpsmcr,
 5541              	.LVL481:
6577:src/stm32f1xx_hal_tim.c **** 
 5542              		.loc 1 6577 0
 5543 135a 42EA0323 		orr	r3, r2, r3, lsl #8	@ tmp122, tmp121, ExtTRGFilter,
 5544              	.LVL482:
 5545 135e 2343     		orrs	r3, r3, r4	@, tmpsmcr, tmp122, tmpsmcr
 5546              	.LVL483:
6580:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 232


 5547              		.loc 1 6580 0
 5548 1360 8360     		str	r3, [r0, #8]	@ tmpsmcr, TIMx_2(D)->SMCR
 5549 1362 10BD     		pop	{r4, pc}	@
 5550              		.cfi_endproc
 5551              	.LFE177:
 5552              		.size	TIM_ETR_SetConfig, .-TIM_ETR_SetConfig
 5553              		.align	1
 5554              		.global	HAL_TIM_ConfigOCrefClear
 5555              		.syntax unified
 5556              		.thumb
 5557              		.thumb_func
 5558              		.fpu softvfp
 5559              		.type	HAL_TIM_ConfigOCrefClear, %function
 5560              	HAL_TIM_ConfigOCrefClear:
 5561              	.LFB133:
4359:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5562              		.loc 1 4359 0
 5563              		.cfi_startproc
 5564              		@ args = 0, pretend = 0, frame = 0
 5565              		@ frame_needed = 0, uses_anonymous_args = 0
 5566              	.LVL484:
4365:src/stm32f1xx_hal_tim.c **** 
 5567              		.loc 1 4365 0
 5568 1364 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_6(D)->Lock, htim_6(D)->Lock
4359:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5569              		.loc 1 4359 0
 5570 1368 70B5     		push	{r4, r5, r6, lr}	@
 5571              	.LCFI45:
 5572              		.cfi_def_cfa_offset 16
 5573              		.cfi_offset 4, -16
 5574              		.cfi_offset 5, -12
 5575              		.cfi_offset 6, -8
 5576              		.cfi_offset 14, -4
4365:src/stm32f1xx_hal_tim.c **** 
 5577              		.loc 1 4365 0
 5578 136a 012B     		cmp	r3, #1	@ htim_6(D)->Lock,
4359:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 5579              		.loc 1 4359 0
 5580 136c 0446     		mov	r4, r0	@ htim, htim
 5581 136e 0D46     		mov	r5, r1	@ sClearInputConfig, sClearInputConfig
 5582 1370 1646     		mov	r6, r2	@ Channel, Channel
 5583 1372 4FF00200 		mov	r0, #2	@ <retval>,
 5584              	.LVL485:
4365:src/stm32f1xx_hal_tim.c **** 
 5585              		.loc 1 4365 0
 5586 1376 34D0     		beq	.L432	@,
4365:src/stm32f1xx_hal_tim.c **** 
 5587              		.loc 1 4365 0 is_stmt 0 discriminator 2
 5588 1378 0123     		movs	r3, #1	@ tmp152,
4367:src/stm32f1xx_hal_tim.c **** 
 5589              		.loc 1 4367 0 is_stmt 1 discriminator 2
 5590 137a 84F83D00 		strb	r0, [r4, #61]	@ <retval>, htim_6(D)->State
4369:src/stm32f1xx_hal_tim.c ****   {
 5591              		.loc 1 4369 0 discriminator 2
 5592 137e 4868     		ldr	r0, [r1, #4]	@ _11, sClearInputConfig_10(D)->ClearInputSource
4365:src/stm32f1xx_hal_tim.c **** 
 5593              		.loc 1 4365 0 discriminator 2
ARM GAS  /tmp/ccTsJCXT.s 			page 233


 5594 1380 84F83C30 		strb	r3, [r4, #60]	@ tmp152, htim_6(D)->Lock
4369:src/stm32f1xx_hal_tim.c ****   {
 5595              		.loc 1 4369 0 discriminator 2
 5596 1384 60B1     		cbz	r0, .L434	@ _11,
 5597 1386 9842     		cmp	r0, r3	@ _11,
 5598 1388 10D0     		beq	.L435	@,
 5599              	.LVL486:
 5600              	.L433:
4404:src/stm32f1xx_hal_tim.c ****   {
 5601              		.loc 1 4404 0
 5602 138a 0C2E     		cmp	r6, #12	@ Channel,
 5603 138c 23D8     		bhi	.L437	@
 5604 138e DFE806F0 		tbb	[pc, r6]	@ Channel
 5605              	.L439:
 5606 1392 1B       		.byte	(.L438-.L439)/2
 5607 1393 22       		.byte	(.L437-.L439)/2
 5608 1394 22       		.byte	(.L437-.L439)/2
 5609 1395 22       		.byte	(.L437-.L439)/2
 5610 1396 2D       		.byte	(.L440-.L439)/2
 5611 1397 22       		.byte	(.L437-.L439)/2
 5612 1398 22       		.byte	(.L437-.L439)/2
 5613 1399 22       		.byte	(.L437-.L439)/2
 5614 139a 38       		.byte	(.L441-.L439)/2
 5615 139b 22       		.byte	(.L437-.L439)/2
 5616 139c 22       		.byte	(.L437-.L439)/2
 5617 139d 22       		.byte	(.L437-.L439)/2
 5618 139e 44       		.byte	(.L442-.L439)/2
 5619              	.LVL487:
 5620 139f 00       		.p2align 1
 5621              	.L434:
4374:src/stm32f1xx_hal_tim.c ****       break;
 5622              		.loc 1 4374 0
 5623 13a0 2268     		ldr	r2, [r4]	@ _19, htim_6(D)->Instance
 5624              	.LVL488:
 5625 13a2 9368     		ldr	r3, [r2, #8]	@ _20, _19->SMCR
 5626 13a4 23F47F43 		bic	r3, r3, #65280	@ _21, _20,
 5627 13a8 9360     		str	r3, [r2, #8]	@ _21, _19->SMCR
4375:src/stm32f1xx_hal_tim.c ****     }
 5628              		.loc 1 4375 0
 5629 13aa EEE7     		b	.L433	@
 5630              	.LVL489:
 5631              	.L435:
4386:src/stm32f1xx_hal_tim.c ****       {
 5632              		.loc 1 4386 0
 5633 13ac C968     		ldr	r1, [r1, #12]	@ sClearInputConfig_10(D)->ClearInputPrescaler, sClearInputConfig_10(D)->ClearIn
 5634              	.LVL490:
 5635 13ae 29B1     		cbz	r1, .L436	@ sClearInputConfig_10(D)->ClearInputPrescaler,
4389:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 5636              		.loc 1 4389 0
 5637 13b0 0023     		movs	r3, #0	@ tmp160,
4388:src/stm32f1xx_hal_tim.c ****         __HAL_UNLOCK(htim);
 5638              		.loc 1 4388 0
 5639 13b2 84F83D00 		strb	r0, [r4, #61]	@ _11, htim_6(D)->State
4389:src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 5640              		.loc 1 4389 0
 5641 13b6 84F83C30 		strb	r3, [r4, #60]	@ tmp160, htim_6(D)->Lock
4390:src/stm32f1xx_hal_tim.c ****       }
ARM GAS  /tmp/ccTsJCXT.s 			page 234


 5642              		.loc 1 4390 0
 5643 13ba 70BD     		pop	{r4, r5, r6, pc}	@
 5644              	.LVL491:
 5645              	.L436:
4393:src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
 5646              		.loc 1 4393 0
 5647 13bc 2B69     		ldr	r3, [r5, #16]	@, sClearInputConfig_10(D)->ClearInputFilter
 5648 13be AA68     		ldr	r2, [r5, #8]	@, sClearInputConfig_10(D)->ClearInputPolarity
 5649              	.LVL492:
 5650 13c0 2068     		ldr	r0, [r4]	@, htim_6(D)->Instance
 5651 13c2 FFF7FEFF 		bl	TIM_ETR_SetConfig	@
 5652              	.LVL493:
4397:src/stm32f1xx_hal_tim.c ****     }
 5653              		.loc 1 4397 0
 5654 13c6 E0E7     		b	.L433	@
 5655              	.L438:
4408:src/stm32f1xx_hal_tim.c ****       {
 5656              		.loc 1 4408 0
 5657 13c8 2A68     		ldr	r2, [r5]	@ sClearInputConfig_10(D)->ClearInputState, sClearInputConfig_10(D)->ClearInputState
 5658 13ca 2368     		ldr	r3, [r4]	@ _25, htim_6(D)->Instance
 5659 13cc 52B1     		cbz	r2, .L443	@ sClearInputConfig_10(D)->ClearInputState,
4411:src/stm32f1xx_hal_tim.c ****       }
 5660              		.loc 1 4411 0
 5661 13ce 9A69     		ldr	r2, [r3, #24]	@ _30,
 5662 13d0 42F08002 		orr	r2, r2, #128	@ _31, _30,
 5663              	.L448:
4425:src/stm32f1xx_hal_tim.c ****       }
 5664              		.loc 1 4425 0
 5665 13d4 9A61     		str	r2, [r3, #24]	@ _40,
 5666              	.L437:
4466:src/stm32f1xx_hal_tim.c **** 
 5667              		.loc 1 4466 0
 5668 13d6 0123     		movs	r3, #1	@ tmp166,
4468:src/stm32f1xx_hal_tim.c **** 
 5669              		.loc 1 4468 0
 5670 13d8 0020     		movs	r0, #0	@ tmp168,
4466:src/stm32f1xx_hal_tim.c **** 
 5671              		.loc 1 4466 0
 5672 13da 84F83D30 		strb	r3, [r4, #61]	@ tmp166, htim_6(D)->State
4468:src/stm32f1xx_hal_tim.c **** 
 5673              		.loc 1 4468 0
 5674 13de 84F83C00 		strb	r0, [r4, #60]	@ tmp168, htim_6(D)->Lock
 5675              	.L432:
4471:src/stm32f1xx_hal_tim.c **** 
 5676              		.loc 1 4471 0
 5677 13e2 70BD     		pop	{r4, r5, r6, pc}	@
 5678              	.LVL494:
 5679              	.L443:
4416:src/stm32f1xx_hal_tim.c ****       }
 5680              		.loc 1 4416 0
 5681 13e4 9A69     		ldr	r2, [r3, #24]	@ _26,
 5682 13e6 22F08002 		bic	r2, r2, #128	@ _27, _26,
 5683 13ea F3E7     		b	.L448	@
 5684              	.L440:
4422:src/stm32f1xx_hal_tim.c ****       {
 5685              		.loc 1 4422 0
 5686 13ec 2A68     		ldr	r2, [r5]	@ sClearInputConfig_10(D)->ClearInputState, sClearInputConfig_10(D)->ClearInputState
ARM GAS  /tmp/ccTsJCXT.s 			page 235


 5687 13ee 2368     		ldr	r3, [r4]	@ _34, htim_6(D)->Instance
 5688 13f0 1AB1     		cbz	r2, .L444	@ sClearInputConfig_10(D)->ClearInputState,
4425:src/stm32f1xx_hal_tim.c ****       }
 5689              		.loc 1 4425 0
 5690 13f2 9A69     		ldr	r2, [r3, #24]	@ _39,
 5691 13f4 42F40042 		orr	r2, r2, #32768	@ _40, _39,
 5692 13f8 ECE7     		b	.L448	@
 5693              	.L444:
4430:src/stm32f1xx_hal_tim.c ****       }
 5694              		.loc 1 4430 0
 5695 13fa 9A69     		ldr	r2, [r3, #24]	@ _35,
 5696 13fc 22F40042 		bic	r2, r2, #32768	@ _36, _35,
 5697 1400 E8E7     		b	.L448	@
 5698              	.L441:
4436:src/stm32f1xx_hal_tim.c ****       {
 5699              		.loc 1 4436 0
 5700 1402 2A68     		ldr	r2, [r5]	@ sClearInputConfig_10(D)->ClearInputState, sClearInputConfig_10(D)->ClearInputState
 5701 1404 2368     		ldr	r3, [r4]	@ _43, htim_6(D)->Instance
 5702 1406 22B1     		cbz	r2, .L445	@ sClearInputConfig_10(D)->ClearInputState,
4439:src/stm32f1xx_hal_tim.c ****       }
 5703              		.loc 1 4439 0
 5704 1408 DA69     		ldr	r2, [r3, #28]	@ _48,
 5705 140a 42F08002 		orr	r2, r2, #128	@ _49, _48,
 5706              	.L449:
4458:src/stm32f1xx_hal_tim.c ****       }
 5707              		.loc 1 4458 0
 5708 140e DA61     		str	r2, [r3, #28]	@ _54,
 5709 1410 E1E7     		b	.L437	@
 5710              	.L445:
4444:src/stm32f1xx_hal_tim.c ****       }
 5711              		.loc 1 4444 0
 5712 1412 DA69     		ldr	r2, [r3, #28]	@ _44,
 5713 1414 22F08002 		bic	r2, r2, #128	@ _45, _44,
 5714 1418 F9E7     		b	.L449	@
 5715              	.L442:
4450:src/stm32f1xx_hal_tim.c ****       {
 5716              		.loc 1 4450 0
 5717 141a 2A68     		ldr	r2, [r5]	@ sClearInputConfig_10(D)->ClearInputState, sClearInputConfig_10(D)->ClearInputState
 5718 141c 2368     		ldr	r3, [r4]	@ _52, htim_6(D)->Instance
 5719 141e 1AB1     		cbz	r2, .L446	@ sClearInputConfig_10(D)->ClearInputState,
4453:src/stm32f1xx_hal_tim.c ****       }
 5720              		.loc 1 4453 0
 5721 1420 DA69     		ldr	r2, [r3, #28]	@ _57,
 5722 1422 42F40042 		orr	r2, r2, #32768	@ _58, _57,
 5723 1426 F2E7     		b	.L449	@
 5724              	.L446:
4458:src/stm32f1xx_hal_tim.c ****       }
 5725              		.loc 1 4458 0
 5726 1428 DA69     		ldr	r2, [r3, #28]	@ _53,
 5727 142a 22F40042 		bic	r2, r2, #32768	@ _54, _53,
 5728 142e EEE7     		b	.L449	@
 5729              		.cfi_endproc
 5730              	.LFE133:
 5731              		.size	HAL_TIM_ConfigOCrefClear, .-HAL_TIM_ConfigOCrefClear
 5732              		.align	1
 5733              		.global	HAL_TIM_ConfigClockSource
 5734              		.syntax unified
ARM GAS  /tmp/ccTsJCXT.s 			page 236


 5735              		.thumb
 5736              		.thumb_func
 5737              		.fpu softvfp
 5738              		.type	HAL_TIM_ConfigClockSource, %function
 5739              	HAL_TIM_ConfigClockSource:
 5740              	.LFB134:
4481:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 5741              		.loc 1 4481 0
 5742              		.cfi_startproc
 5743              		@ args = 0, pretend = 0, frame = 0
 5744              		@ frame_needed = 0, uses_anonymous_args = 0
 5745              	.LVL495:
4485:src/stm32f1xx_hal_tim.c **** 
 5746              		.loc 1 4485 0
 5747 1430 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_5(D)->Lock, htim_5(D)->Lock
4481:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 5748              		.loc 1 4481 0
 5749 1434 70B5     		push	{r4, r5, r6, lr}	@
 5750              	.LCFI46:
 5751              		.cfi_def_cfa_offset 16
 5752              		.cfi_offset 4, -16
 5753              		.cfi_offset 5, -12
 5754              		.cfi_offset 6, -8
 5755              		.cfi_offset 14, -4
4485:src/stm32f1xx_hal_tim.c **** 
 5756              		.loc 1 4485 0
 5757 1436 012B     		cmp	r3, #1	@ htim_5(D)->Lock,
4481:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 5758              		.loc 1 4481 0
 5759 1438 0446     		mov	r4, r0	@ htim, htim
 5760 143a 4FF00200 		mov	r0, #2	@ <retval>,
 5761              	.LVL496:
4485:src/stm32f1xx_hal_tim.c **** 
 5762              		.loc 1 4485 0
 5763 143e 19D0     		beq	.L451	@,
4485:src/stm32f1xx_hal_tim.c **** 
 5764              		.loc 1 4485 0 is_stmt 0 discriminator 2
 5765 1440 0123     		movs	r3, #1	@ tmp178,
4487:src/stm32f1xx_hal_tim.c **** 
 5766              		.loc 1 4487 0 is_stmt 1 discriminator 2
 5767 1442 84F83D00 		strb	r0, [r4, #61]	@ <retval>, htim_5(D)->State
4493:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 5768              		.loc 1 4493 0 discriminator 2
 5769 1446 2068     		ldr	r0, [r4]	@ _9, htim_5(D)->Instance
4485:src/stm32f1xx_hal_tim.c **** 
 5770              		.loc 1 4485 0 discriminator 2
 5771 1448 84F83C30 		strb	r3, [r4, #60]	@ tmp178, htim_5(D)->Lock
4493:src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 5772              		.loc 1 4493 0 discriminator 2
 5773 144c 8368     		ldr	r3, [r0, #8]	@ tmpsmcr, _9->SMCR
 5774              	.LVL497:
4495:src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 5775              		.loc 1 4495 0 discriminator 2
 5776 144e 23F47F43 		bic	r3, r3, #65280	@ tmpsmcr, tmpsmcr,
 5777              	.LVL498:
 5778 1452 23F07703 		bic	r3, r3, #119	@ tmpsmcr, tmpsmcr,
 5779              	.LVL499:
ARM GAS  /tmp/ccTsJCXT.s 			page 237


4496:src/stm32f1xx_hal_tim.c **** 
 5780              		.loc 1 4496 0 discriminator 2
 5781 1456 8360     		str	r3, [r0, #8]	@ tmpsmcr, _9->SMCR
4498:src/stm32f1xx_hal_tim.c ****   {
 5782              		.loc 1 4498 0 discriminator 2
 5783 1458 0B68     		ldr	r3, [r1]	@ _14, sClockSourceConfig_13(D)->ClockSource
 5784              	.LVL500:
 5785 145a 402B     		cmp	r3, #64	@ _14,
 5786 145c 65D0     		beq	.L453	@,
 5787 145e 15D8     		bhi	.L454	@,
 5788 1460 102B     		cmp	r3, #16	@ _14,
 5789 1462 0CD0     		beq	.L455	@,
 5790 1464 07D8     		bhi	.L456	@,
 5791 1466 53B1     		cbz	r3, .L455	@ _14,
 5792              	.LVL501:
 5793              	.L452:
4613:src/stm32f1xx_hal_tim.c **** 
 5794              		.loc 1 4613 0
 5795 1468 0123     		movs	r3, #1	@ tmp188,
4615:src/stm32f1xx_hal_tim.c **** 
 5796              		.loc 1 4615 0
 5797 146a 0020     		movs	r0, #0	@ tmp190,
4613:src/stm32f1xx_hal_tim.c **** 
 5798              		.loc 1 4613 0
 5799 146c 84F83D30 		strb	r3, [r4, #61]	@ tmp188, htim_5(D)->State
4615:src/stm32f1xx_hal_tim.c **** 
 5800              		.loc 1 4615 0
 5801 1470 84F83C00 		strb	r0, [r4, #60]	@ tmp190, htim_5(D)->Lock
 5802              	.L451:
4618:src/stm32f1xx_hal_tim.c **** 
 5803              		.loc 1 4618 0
 5804 1474 70BD     		pop	{r4, r5, r6, pc}	@
 5805              	.LVL502:
 5806              	.L456:
4498:src/stm32f1xx_hal_tim.c ****   {
 5807              		.loc 1 4498 0 discriminator 2
 5808 1476 202B     		cmp	r3, #32	@ _14,
 5809 1478 01D0     		beq	.L455	@,
 5810 147a 302B     		cmp	r3, #48	@ _14,
 5811 147c F4D1     		bne	.L452	@,
 5812              	.L455:
 5813              	.LVL503:
 5814              	.LBB172:
 5815              	.LBB173:
6541:src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
 5816              		.loc 1 6541 0
 5817 147e 8268     		ldr	r2, [r0, #8]	@ tmpsmcr, _9->SMCR
 5818              	.LVL504:
6545:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
 5819              		.loc 1 6545 0
 5820 1480 43F00703 		orr	r3, r3, #7	@ tmp187, _14,
 5821              	.LVL505:
6543:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
 5822              		.loc 1 6543 0
 5823 1484 22F07002 		bic	r2, r2, #112	@ tmpsmcr, tmpsmcr,
 5824              	.LVL506:
6545:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
ARM GAS  /tmp/ccTsJCXT.s 			page 238


 5825              		.loc 1 6545 0
 5826 1488 1343     		orrs	r3, r3, r2	@, tmpsmcr, tmp187, tmpsmcr
 5827 148a 1AE0     		b	.L476	@
 5828              	.LVL507:
 5829              	.L454:
 5830              	.LBE173:
 5831              	.LBE172:
4498:src/stm32f1xx_hal_tim.c ****   {
 5832              		.loc 1 4498 0 discriminator 2
 5833 148c 602B     		cmp	r3, #96	@ _14,
 5834 148e 34D0     		beq	.L457	@,
 5835 1490 19D8     		bhi	.L458	@,
 5836 1492 502B     		cmp	r3, #80	@ _14,
 5837 1494 E8D1     		bne	.L452	@,
4559:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 5838              		.loc 1 4559 0
 5839 1496 4A68     		ldr	r2, [r1, #4]	@ _31, sClockSourceConfig_13(D)->ClockPolarity
 5840 1498 CE68     		ldr	r6, [r1, #12]	@ _32, sClockSourceConfig_13(D)->ClockFilter
 5841              	.LVL508:
 5842              	.LBB175:
 5843              	.LBB176:
6327:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 5844              		.loc 1 6327 0
 5845 149a 016A     		ldr	r1, [r0, #32]	@ tmpccer, _9->CCER
 5846              	.LVL509:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5847              		.loc 1 6328 0
 5848 149c 056A     		ldr	r5, [r0, #32]	@ _54, _9->CCER
6336:src/stm32f1xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 5849              		.loc 1 6336 0
 5850 149e 21F00A01 		bic	r1, r1, #10	@ tmpccer, tmpccer,
 5851              	.LVL510:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5852              		.loc 1 6328 0
 5853 14a2 25F00105 		bic	r5, r5, #1	@ _55, _54,
 5854 14a6 0562     		str	r5, [r0, #32]	@ _55, _9->CCER
 5855              	.LVL511:
6329:src/stm32f1xx_hal_tim.c **** 
 5856              		.loc 1 6329 0
 5857 14a8 8369     		ldr	r3, [r0, #24]	@ tmpccmr1, _9->CCMR1
 5858              	.LVL512:
6337:src/stm32f1xx_hal_tim.c **** 
 5859              		.loc 1 6337 0
 5860 14aa 0A43     		orrs	r2, r2, r1	@, tmpccer, _31, tmpccer
 5861              	.LVL513:
6332:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 5862              		.loc 1 6332 0
 5863 14ac 23F0F003 		bic	r3, r3, #240	@ tmpccmr1, tmpccmr1,
 5864              	.LVL514:
6333:src/stm32f1xx_hal_tim.c **** 
 5865              		.loc 1 6333 0
 5866 14b0 43EA0613 		orr	r3, r3, r6, lsl #4	@ tmpccmr1, tmpccmr1, _32,
 5867              	.LVL515:
6340:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 5868              		.loc 1 6340 0
 5869 14b4 8361     		str	r3, [r0, #24]	@ tmpccmr1, _9->CCMR1
6341:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 239


 5870              		.loc 1 6341 0
 5871 14b6 0262     		str	r2, [r0, #32]	@ tmpccer, _9->CCER
 5872              	.LVL516:
 5873              	.LBE176:
 5874              	.LBE175:
 5875              	.LBB177:
 5876              	.LBB178:
6541:src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
 5877              		.loc 1 6541 0
 5878 14b8 8368     		ldr	r3, [r0, #8]	@ tmpsmcr, _9->SMCR
 5879              	.LVL517:
6543:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
 5880              		.loc 1 6543 0
 5881 14ba 23F07003 		bic	r3, r3, #112	@ tmpsmcr, tmpsmcr,
 5882              	.LVL518:
6545:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
 5883              		.loc 1 6545 0
 5884 14be 43F05703 		orr	r3, r3, #87	@ tmpsmcr, tmpsmcr,
 5885              	.LVL519:
 5886              	.L476:
 5887              	.LBE178:
 5888              	.LBE177:
 5889              	.LBB179:
 5890              	.LBB174:
6547:src/stm32f1xx_hal_tim.c **** }
 5891              		.loc 1 6547 0
 5892 14c2 8360     		str	r3, [r0, #8]	@ tmpsmcr,
 5893 14c4 D0E7     		b	.L452	@
 5894              	.LVL520:
 5895              	.L458:
 5896              	.LBE174:
 5897              	.LBE179:
4498:src/stm32f1xx_hal_tim.c ****   {
 5898              		.loc 1 4498 0 discriminator 2
 5899 14c6 702B     		cmp	r3, #112	@ _14,
 5900 14c8 0CD0     		beq	.L460	@,
 5901 14ca B3F5005F 		cmp	r3, #8192	@ _14,
 5902 14ce CBD1     		bne	.L452	@,
4541:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
 5903              		.loc 1 4541 0
 5904 14d0 CB68     		ldr	r3, [r1, #12]	@, sClockSourceConfig_13(D)->ClockFilter
 5905 14d2 4A68     		ldr	r2, [r1, #4]	@, sClockSourceConfig_13(D)->ClockPolarity
 5906 14d4 8968     		ldr	r1, [r1, #8]	@, sClockSourceConfig_13(D)->ClockPrescaler
 5907              	.LVL521:
 5908 14d6 FFF7FEFF 		bl	TIM_ETR_SetConfig	@
 5909              	.LVL522:
4546:src/stm32f1xx_hal_tim.c ****       break;
 5910              		.loc 1 4546 0
 5911 14da 2268     		ldr	r2, [r4]	@ _27, htim_5(D)->Instance
 5912 14dc 9368     		ldr	r3, [r2, #8]	@ _28, _27->SMCR
 5913 14de 43F48043 		orr	r3, r3, #16384	@ _29, _28,
 5914 14e2 08E0     		b	.L475	@
 5915              	.LVL523:
 5916              	.L460:
4517:src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
 5917              		.loc 1 4517 0
 5918 14e4 CB68     		ldr	r3, [r1, #12]	@, sClockSourceConfig_13(D)->ClockFilter
ARM GAS  /tmp/ccTsJCXT.s 			page 240


 5919 14e6 4A68     		ldr	r2, [r1, #4]	@, sClockSourceConfig_13(D)->ClockPolarity
 5920 14e8 8968     		ldr	r1, [r1, #8]	@, sClockSourceConfig_13(D)->ClockPrescaler
 5921              	.LVL524:
 5922 14ea FFF7FEFF 		bl	TIM_ETR_SetConfig	@
 5923              	.LVL525:
4523:src/stm32f1xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 5924              		.loc 1 4523 0
 5925 14ee 2268     		ldr	r2, [r4]	@ _19, htim_5(D)->Instance
 5926 14f0 9368     		ldr	r3, [r2, #8]	@ tmpsmcr, _19->SMCR
 5927              	.LVL526:
4524:src/stm32f1xx_hal_tim.c ****       /* Write to TIMx SMCR */
 5928              		.loc 1 4524 0
 5929 14f2 43F07703 		orr	r3, r3, #119	@ tmpsmcr, tmpsmcr,
 5930              	.LVL527:
 5931              	.L475:
4546:src/stm32f1xx_hal_tim.c ****       break;
 5932              		.loc 1 4546 0
 5933 14f6 9360     		str	r3, [r2, #8]	@ _29,
4547:src/stm32f1xx_hal_tim.c ****     }
 5934              		.loc 1 4547 0
 5935 14f8 B6E7     		b	.L452	@
 5936              	.LVL528:
 5937              	.L457:
4575:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 5938              		.loc 1 4575 0
 5939 14fa 4D68     		ldr	r5, [r1, #4]	@ _36, sClockSourceConfig_13(D)->ClockPolarity
 5940 14fc CE68     		ldr	r6, [r1, #12]	@ _37, sClockSourceConfig_13(D)->ClockFilter
 5941              	.LVL529:
 5942              	.LBB180:
 5943              	.LBB181:
6410:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5944              		.loc 1 6410 0
 5945 14fe 016A     		ldr	r1, [r0, #32]	@ _66, _9->CCER
 5946              	.LVL530:
 5947 1500 21F01001 		bic	r1, r1, #16	@ _67, _66,
 5948 1504 0162     		str	r1, [r0, #32]	@ _67, _9->CCER
 5949              	.LVL531:
6411:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 5950              		.loc 1 6411 0
 5951 1506 8269     		ldr	r2, [r0, #24]	@ tmpccmr1, _9->CCMR1
 5952              	.LVL532:
6412:src/stm32f1xx_hal_tim.c **** 
 5953              		.loc 1 6412 0
 5954 1508 036A     		ldr	r3, [r0, #32]	@ tmpccer, _9->CCER
 5955              	.LVL533:
6415:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 5956              		.loc 1 6415 0
 5957 150a 22F47042 		bic	r2, r2, #61440	@ tmpccmr1, tmpccmr1,
 5958              	.LVL534:
6419:src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 5959              		.loc 1 6419 0
 5960 150e 23F0A003 		bic	r3, r3, #160	@ tmpccer, tmpccer,
 5961              	.LVL535:
6420:src/stm32f1xx_hal_tim.c **** 
 5962              		.loc 1 6420 0
 5963 1512 43EA0513 		orr	r3, r3, r5, lsl #4	@ tmpccer, tmpccer, _36,
6416:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 241


 5964              		.loc 1 6416 0
 5965 1516 42EA0632 		orr	r2, r2, r6, lsl #12	@ tmpccmr1, tmpccmr1, _37,
 5966              	.LVL536:
6423:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 5967              		.loc 1 6423 0
 5968 151a 8261     		str	r2, [r0, #24]	@ tmpccmr1, _9->CCMR1
6424:src/stm32f1xx_hal_tim.c **** }
 5969              		.loc 1 6424 0
 5970 151c 0362     		str	r3, [r0, #32]	@ tmpccer, _9->CCER
 5971              	.LVL537:
 5972              	.LBE181:
 5973              	.LBE180:
 5974              	.LBB182:
 5975              	.LBB183:
6541:src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
 5976              		.loc 1 6541 0
 5977 151e 8368     		ldr	r3, [r0, #8]	@ tmpsmcr, _9->SMCR
 5978              	.LVL538:
6543:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
 5979              		.loc 1 6543 0
 5980 1520 23F07003 		bic	r3, r3, #112	@ tmpsmcr, tmpsmcr,
 5981              	.LVL539:
6545:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
 5982              		.loc 1 6545 0
 5983 1524 43F06703 		orr	r3, r3, #103	@ tmpsmcr, tmpsmcr,
 5984              	.LVL540:
 5985 1528 CBE7     		b	.L476	@
 5986              	.LVL541:
 5987              	.L453:
 5988              	.LBE183:
 5989              	.LBE182:
4591:src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 5990              		.loc 1 4591 0
 5991 152a 4A68     		ldr	r2, [r1, #4]	@ _41, sClockSourceConfig_13(D)->ClockPolarity
 5992 152c CE68     		ldr	r6, [r1, #12]	@ _42, sClockSourceConfig_13(D)->ClockFilter
 5993              	.LVL542:
 5994              	.LBB184:
 5995              	.LBB185:
6327:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 5996              		.loc 1 6327 0
 5997 152e 016A     		ldr	r1, [r0, #32]	@ tmpccer, _9->CCER
 5998              	.LVL543:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5999              		.loc 1 6328 0
 6000 1530 056A     		ldr	r5, [r0, #32]	@ _81, _9->CCER
6336:src/stm32f1xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 6001              		.loc 1 6336 0
 6002 1532 21F00A01 		bic	r1, r1, #10	@ tmpccer, tmpccer,
 6003              	.LVL544:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6004              		.loc 1 6328 0
 6005 1536 25F00105 		bic	r5, r5, #1	@ _82, _81,
 6006 153a 0562     		str	r5, [r0, #32]	@ _82, _9->CCER
 6007              	.LVL545:
6329:src/stm32f1xx_hal_tim.c **** 
 6008              		.loc 1 6329 0
 6009 153c 8369     		ldr	r3, [r0, #24]	@ tmpccmr1, _9->CCMR1
ARM GAS  /tmp/ccTsJCXT.s 			page 242


 6010              	.LVL546:
6337:src/stm32f1xx_hal_tim.c **** 
 6011              		.loc 1 6337 0
 6012 153e 0A43     		orrs	r2, r2, r1	@, tmpccer, _41, tmpccer
 6013              	.LVL547:
6332:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 6014              		.loc 1 6332 0
 6015 1540 23F0F003 		bic	r3, r3, #240	@ tmpccmr1, tmpccmr1,
 6016              	.LVL548:
6333:src/stm32f1xx_hal_tim.c **** 
 6017              		.loc 1 6333 0
 6018 1544 43EA0613 		orr	r3, r3, r6, lsl #4	@ tmpccmr1, tmpccmr1, _42,
 6019              	.LVL549:
6340:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 6020              		.loc 1 6340 0
 6021 1548 8361     		str	r3, [r0, #24]	@ tmpccmr1, _9->CCMR1
6341:src/stm32f1xx_hal_tim.c **** }
 6022              		.loc 1 6341 0
 6023 154a 0262     		str	r2, [r0, #32]	@ tmpccer, _9->CCER
 6024              	.LVL550:
 6025              	.LBE185:
 6026              	.LBE184:
 6027              	.LBB186:
 6028              	.LBB187:
6541:src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
 6029              		.loc 1 6541 0
 6030 154c 8368     		ldr	r3, [r0, #8]	@ tmpsmcr, _9->SMCR
 6031              	.LVL551:
6543:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
 6032              		.loc 1 6543 0
 6033 154e 23F07003 		bic	r3, r3, #112	@ tmpsmcr, tmpsmcr,
 6034              	.LVL552:
6545:src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
 6035              		.loc 1 6545 0
 6036 1552 43F04703 		orr	r3, r3, #71	@ tmpsmcr, tmpsmcr,
 6037              	.LVL553:
 6038 1556 B4E7     		b	.L476	@
 6039              	.LBE187:
 6040              	.LBE186:
 6041              		.cfi_endproc
 6042              	.LFE134:
 6043              		.size	HAL_TIM_ConfigClockSource, .-HAL_TIM_ConfigClockSource
 6044              		.align	1
 6045              		.syntax unified
 6046              		.thumb
 6047              		.thumb_func
 6048              		.fpu softvfp
 6049              		.type	TIM_SlaveTimer_SetConfig, %function
 6050              	TIM_SlaveTimer_SetConfig:
 6051              	.LFB169:
6145:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6052              		.loc 1 6145 0
 6053              		.cfi_startproc
 6054              		@ args = 0, pretend = 0, frame = 0
 6055              		@ frame_needed = 0, uses_anonymous_args = 0
 6056              	.LVL554:
6151:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 243


 6057              		.loc 1 6151 0
 6058 1558 0068     		ldr	r0, [r0]	@ _5, htim_4(D)->Instance
 6059              	.LVL555:
6145:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6060              		.loc 1 6145 0
 6061 155a 38B5     		push	{r3, r4, r5, lr}	@
 6062              	.LCFI47:
 6063              		.cfi_def_cfa_offset 16
 6064              		.cfi_offset 3, -16
 6065              		.cfi_offset 4, -12
 6066              		.cfi_offset 5, -8
 6067              		.cfi_offset 14, -4
6151:src/stm32f1xx_hal_tim.c **** 
 6068              		.loc 1 6151 0
 6069 155c 8368     		ldr	r3, [r0, #8]	@ tmpsmcr, _5->SMCR
 6070              	.LVL556:
6156:src/stm32f1xx_hal_tim.c **** 
 6071              		.loc 1 6156 0
 6072 155e 4A68     		ldr	r2, [r1, #4]	@ _9, sSlaveConfig_8(D)->InputTrigger
6154:src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source */
 6073              		.loc 1 6154 0
 6074 1560 23F07003 		bic	r3, r3, #112	@ tmpsmcr, tmpsmcr,
 6075              	.LVL557:
6161:src/stm32f1xx_hal_tim.c **** 
 6076              		.loc 1 6161 0
 6077 1564 0C68     		ldr	r4, [r1]	@ _12, sSlaveConfig_8(D)->SlaveMode
6156:src/stm32f1xx_hal_tim.c **** 
 6078              		.loc 1 6156 0
 6079 1566 1343     		orrs	r3, r3, r2	@, tmpsmcr, tmpsmcr, _9
 6080              	.LVL558:
6159:src/stm32f1xx_hal_tim.c ****   /* Set the slave mode */
 6081              		.loc 1 6159 0
 6082 1568 23F00703 		bic	r3, r3, #7	@ tmpsmcr, tmpsmcr,
 6083              	.LVL559:
6161:src/stm32f1xx_hal_tim.c **** 
 6084              		.loc 1 6161 0
 6085 156c 2343     		orrs	r3, r3, r4	@, tmpsmcr, tmpsmcr, _12
 6086              	.LVL560:
6167:src/stm32f1xx_hal_tim.c ****   {
 6087              		.loc 1 6167 0
 6088 156e 502A     		cmp	r2, #80	@ _9,
6164:src/stm32f1xx_hal_tim.c **** 
 6089              		.loc 1 6164 0
 6090 1570 8360     		str	r3, [r0, #8]	@ tmpsmcr, _5->SMCR
6167:src/stm32f1xx_hal_tim.c ****   {
 6091              		.loc 1 6167 0
 6092 1572 1ED0     		beq	.L479	@,
 6093 1574 03D8     		bhi	.L480	@,
 6094 1576 402A     		cmp	r2, #64	@ _9,
 6095 1578 0BD0     		beq	.L481	@,
 6096              	.LVL561:
 6097              	.L486:
6251:src/stm32f1xx_hal_tim.c **** }
 6098              		.loc 1 6251 0
 6099 157a 0020     		movs	r0, #0	@ <retval>,
 6100 157c 38BD     		pop	{r3, r4, r5, pc}	@
 6101              	.LVL562:
ARM GAS  /tmp/ccTsJCXT.s 			page 244


 6102              	.L480:
6167:src/stm32f1xx_hal_tim.c ****   {
 6103              		.loc 1 6167 0
 6104 157e 602A     		cmp	r2, #96	@ _9,
 6105 1580 27D0     		beq	.L482	@,
 6106 1582 702A     		cmp	r2, #112	@ _9,
 6107 1584 F9D1     		bne	.L486	@,
6177:src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
 6108              		.loc 1 6177 0
 6109 1586 0B69     		ldr	r3, [r1, #16]	@, sSlaveConfig_8(D)->TriggerFilter
 6110              	.LVL563:
 6111 1588 8A68     		ldr	r2, [r1, #8]	@, sSlaveConfig_8(D)->TriggerPolarity
 6112 158a C968     		ldr	r1, [r1, #12]	@, sSlaveConfig_8(D)->TriggerPrescaler
 6113              	.LVL564:
 6114 158c FFF7FEFF 		bl	TIM_ETR_SetConfig	@
 6115              	.LVL565:
 6116 1590 F3E7     		b	.L486	@
 6117              	.LVL566:
 6118              	.L481:
6190:src/stm32f1xx_hal_tim.c ****       {
 6119              		.loc 1 6190 0
 6120 1592 052C     		cmp	r4, #5	@ _12,
 6121 1594 30D0     		beq	.L485	@,
6196:src/stm32f1xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
 6122              		.loc 1 6196 0
 6123 1596 026A     		ldr	r2, [r0, #32]	@ tmpccer, _5->CCER
 6124              	.LVL567:
6197:src/stm32f1xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
 6125              		.loc 1 6197 0
 6126 1598 036A     		ldr	r3, [r0, #32]	@ _16, _5->CCER
 6127              	.LVL568:
6202:src/stm32f1xx_hal_tim.c **** 
 6128              		.loc 1 6202 0
 6129 159a 0969     		ldr	r1, [r1, #16]	@ sSlaveConfig_8(D)->TriggerFilter, sSlaveConfig_8(D)->TriggerFilter
 6130              	.LVL569:
6197:src/stm32f1xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
 6131              		.loc 1 6197 0
 6132 159c 23F00103 		bic	r3, r3, #1	@ _17, _16,
 6133 15a0 0362     		str	r3, [r0, #32]	@ _17, _5->CCER
 6134              	.LVL570:
6198:src/stm32f1xx_hal_tim.c **** 
 6135              		.loc 1 6198 0
 6136 15a2 8369     		ldr	r3, [r0, #24]	@ tmpccmr1, _5->CCMR1
 6137              	.LVL571:
6201:src/stm32f1xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 6138              		.loc 1 6201 0
 6139 15a4 23F0F003 		bic	r3, r3, #240	@ tmpccmr1, tmpccmr1,
 6140              	.LVL572:
6202:src/stm32f1xx_hal_tim.c **** 
 6141              		.loc 1 6202 0
 6142 15a8 43EA0113 		orr	r3, r3, r1, lsl #4	@ tmpccmr1, tmpccmr1, sSlaveConfig_8(D)->TriggerFilter,
 6143              	.LVL573:
 6144              	.L487:
 6145              	.LBB192:
 6146              	.LBB193:
6340:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 6147              		.loc 1 6340 0
ARM GAS  /tmp/ccTsJCXT.s 			page 245


 6148 15ac 8361     		str	r3, [r0, #24]	@ tmpccmr1,
6341:src/stm32f1xx_hal_tim.c **** }
 6149              		.loc 1 6341 0
 6150 15ae 0262     		str	r2, [r0, #32]	@ tmpccer,
 6151 15b0 E3E7     		b	.L486	@
 6152              	.LVL574:
 6153              	.L479:
 6154              	.LBE193:
 6155              	.LBE192:
6218:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 6156              		.loc 1 6218 0
 6157 15b2 8A68     		ldr	r2, [r1, #8]	@ _30, sSlaveConfig_8(D)->TriggerPolarity
 6158 15b4 0D69     		ldr	r5, [r1, #16]	@ _31, sSlaveConfig_8(D)->TriggerFilter
 6159              	.LVL575:
 6160              	.LBB195:
 6161              	.LBB194:
6327:src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 6162              		.loc 1 6327 0
 6163 15b6 016A     		ldr	r1, [r0, #32]	@ tmpccer, _5->CCER
 6164              	.LVL576:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6165              		.loc 1 6328 0
 6166 15b8 046A     		ldr	r4, [r0, #32]	@ _37, _5->CCER
6336:src/stm32f1xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 6167              		.loc 1 6336 0
 6168 15ba 21F00A01 		bic	r1, r1, #10	@ tmpccer, tmpccer,
 6169              	.LVL577:
6328:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6170              		.loc 1 6328 0
 6171 15be 24F00104 		bic	r4, r4, #1	@ _38, _37,
 6172 15c2 0462     		str	r4, [r0, #32]	@ _38, _5->CCER
6329:src/stm32f1xx_hal_tim.c **** 
 6173              		.loc 1 6329 0
 6174 15c4 8369     		ldr	r3, [r0, #24]	@ tmpccmr1, _5->CCMR1
 6175              	.LVL578:
6337:src/stm32f1xx_hal_tim.c **** 
 6176              		.loc 1 6337 0
 6177 15c6 0A43     		orrs	r2, r2, r1	@, tmpccer, _30, tmpccer
 6178              	.LVL579:
6332:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 6179              		.loc 1 6332 0
 6180 15c8 23F0F003 		bic	r3, r3, #240	@ tmpccmr1, tmpccmr1,
 6181              	.LVL580:
6333:src/stm32f1xx_hal_tim.c **** 
 6182              		.loc 1 6333 0
 6183 15cc 43EA0513 		orr	r3, r3, r5, lsl #4	@ tmpccmr1, tmpccmr1, _31,
 6184              	.LVL581:
 6185 15d0 ECE7     		b	.L487	@
 6186              	.LVL582:
 6187              	.L482:
 6188              	.LBE194:
 6189              	.LBE195:
6232:src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 6190              		.loc 1 6232 0
 6191 15d2 8C68     		ldr	r4, [r1, #8]	@ _33, sSlaveConfig_8(D)->TriggerPolarity
 6192 15d4 0D69     		ldr	r5, [r1, #16]	@ _34, sSlaveConfig_8(D)->TriggerFilter
 6193              	.LVL583:
ARM GAS  /tmp/ccTsJCXT.s 			page 246


 6194              	.LBB196:
 6195              	.LBB197:
6410:src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6196              		.loc 1 6410 0
 6197 15d6 016A     		ldr	r1, [r0, #32]	@ _45, _5->CCER
 6198              	.LVL584:
 6199 15d8 21F01001 		bic	r1, r1, #16	@ _46, _45,
 6200 15dc 0162     		str	r1, [r0, #32]	@ _46, _5->CCER
6411:src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 6201              		.loc 1 6411 0
 6202 15de 8269     		ldr	r2, [r0, #24]	@ tmpccmr1, _5->CCMR1
 6203              	.LVL585:
6412:src/stm32f1xx_hal_tim.c **** 
 6204              		.loc 1 6412 0
 6205 15e0 036A     		ldr	r3, [r0, #32]	@ tmpccer, _5->CCER
 6206              	.LVL586:
6415:src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 6207              		.loc 1 6415 0
 6208 15e2 22F47042 		bic	r2, r2, #61440	@ tmpccmr1, tmpccmr1,
 6209              	.LVL587:
6419:src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 6210              		.loc 1 6419 0
 6211 15e6 23F0A003 		bic	r3, r3, #160	@ tmpccer, tmpccer,
 6212              	.LVL588:
6416:src/stm32f1xx_hal_tim.c **** 
 6213              		.loc 1 6416 0
 6214 15ea 42EA0532 		orr	r2, r2, r5, lsl #12	@ tmpccmr1, tmpccmr1, _34,
 6215              	.LVL589:
6420:src/stm32f1xx_hal_tim.c **** 
 6216              		.loc 1 6420 0
 6217 15ee 43EA0413 		orr	r3, r3, r4, lsl #4	@ tmpccer, tmpccer, _33,
 6218              	.LVL590:
6423:src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 6219              		.loc 1 6423 0
 6220 15f2 8261     		str	r2, [r0, #24]	@ tmpccmr1, _5->CCMR1
6424:src/stm32f1xx_hal_tim.c **** }
 6221              		.loc 1 6424 0
 6222 15f4 0362     		str	r3, [r0, #32]	@ tmpccer, _5->CCER
 6223 15f6 C0E7     		b	.L486	@
 6224              	.LVL591:
 6225              	.L485:
 6226              	.LBE197:
 6227              	.LBE196:
6192:src/stm32f1xx_hal_tim.c ****       }
 6228              		.loc 1 6192 0
 6229 15f8 0120     		movs	r0, #1	@ <retval>,
6252:src/stm32f1xx_hal_tim.c **** 
 6230              		.loc 1 6252 0
 6231 15fa 38BD     		pop	{r3, r4, r5, pc}	@
 6232              		.cfi_endproc
 6233              	.LFE169:
 6234              		.size	TIM_SlaveTimer_SetConfig, .-TIM_SlaveTimer_SetConfig
 6235              		.align	1
 6236              		.global	HAL_TIM_SlaveConfigSynchro
 6237              		.syntax unified
 6238              		.thumb
 6239              		.thumb_func
ARM GAS  /tmp/ccTsJCXT.s 			page 247


 6240              		.fpu softvfp
 6241              		.type	HAL_TIM_SlaveConfigSynchro, %function
 6242              	HAL_TIM_SlaveConfigSynchro:
 6243              	.LFB136:
4665:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6244              		.loc 1 4665 0
 6245              		.cfi_startproc
 6246              		@ args = 0, pretend = 0, frame = 0
 6247              		@ frame_needed = 0, uses_anonymous_args = 0
 6248              	.LVL592:
 6249 15fc 38B5     		push	{r3, r4, r5, lr}	@
 6250              	.LCFI48:
 6251              		.cfi_def_cfa_offset 16
 6252              		.cfi_offset 3, -16
 6253              		.cfi_offset 4, -12
 6254              		.cfi_offset 5, -8
 6255              		.cfi_offset 14, -4
4671:src/stm32f1xx_hal_tim.c **** 
 6256              		.loc 1 4671 0
 6257 15fe 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_4(D)->Lock, htim_4(D)->Lock
4665:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6258              		.loc 1 4665 0
 6259 1602 0446     		mov	r4, r0	@ htim, htim
4671:src/stm32f1xx_hal_tim.c **** 
 6260              		.loc 1 4671 0
 6261 1604 012B     		cmp	r3, #1	@ htim_4(D)->Lock,
 6262 1606 4FF00203 		mov	r3, #2	@ <retval>,
 6263 160a 1CD0     		beq	.L491	@,
4671:src/stm32f1xx_hal_tim.c **** 
 6264              		.loc 1 4671 0 is_stmt 0 discriminator 2
 6265 160c 0125     		movs	r5, #1	@ tmp120,
4673:src/stm32f1xx_hal_tim.c **** 
 6266              		.loc 1 4673 0 is_stmt 1 discriminator 2
 6267 160e 80F83D30 		strb	r3, [r0, #61]	@ <retval>, htim_4(D)->State
4671:src/stm32f1xx_hal_tim.c **** 
 6268              		.loc 1 4671 0 discriminator 2
 6269 1612 80F83C50 		strb	r5, [r0, #60]	@ tmp120, htim_4(D)->Lock
4675:src/stm32f1xx_hal_tim.c ****   {
 6270              		.loc 1 4675 0 discriminator 2
 6271 1616 FFF79FFF 		bl	TIM_SlaveTimer_SetConfig	@
 6272              	.LVL593:
 6273 161a 30B1     		cbz	r0, .L490	@ <retval>,
4678:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6274              		.loc 1 4678 0
 6275 161c 0023     		movs	r3, #0	@ tmp127,
4677:src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
 6276              		.loc 1 4677 0
 6277 161e 84F83D50 		strb	r5, [r4, #61]	@ tmp120, htim_4(D)->State
4678:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6278              		.loc 1 4678 0
 6279 1622 84F83C30 		strb	r3, [r4, #60]	@ tmp127, htim_4(D)->Lock
4679:src/stm32f1xx_hal_tim.c ****   }
 6280              		.loc 1 4679 0
 6281 1626 2846     		mov	r0, r5	@ <retval>, tmp120
 6282 1628 38BD     		pop	{r3, r4, r5, pc}	@
 6283              	.LVL594:
 6284              	.L490:
ARM GAS  /tmp/ccTsJCXT.s 			page 248


4683:src/stm32f1xx_hal_tim.c **** 
 6285              		.loc 1 4683 0
 6286 162a 2368     		ldr	r3, [r4]	@ _13, htim_4(D)->Instance
 6287 162c DA68     		ldr	r2, [r3, #12]	@ _14, _13->DIER
 6288 162e 22F04002 		bic	r2, r2, #64	@ _15, _14,
 6289 1632 DA60     		str	r2, [r3, #12]	@ _15, _13->DIER
4686:src/stm32f1xx_hal_tim.c **** 
 6290              		.loc 1 4686 0
 6291 1634 DA68     		ldr	r2, [r3, #12]	@ _17, _13->DIER
 6292 1636 22F48042 		bic	r2, r2, #16384	@ _18, _17,
 6293 163a DA60     		str	r2, [r3, #12]	@ _18, _13->DIER
4688:src/stm32f1xx_hal_tim.c **** 
 6294              		.loc 1 4688 0
 6295 163c 84F83D50 		strb	r5, [r4, #61]	@ tmp120, htim_4(D)->State
4690:src/stm32f1xx_hal_tim.c **** 
 6296              		.loc 1 4690 0
 6297 1640 84F83C00 		strb	r0, [r4, #60]	@ <retval>, htim_4(D)->Lock
4692:src/stm32f1xx_hal_tim.c **** }
 6298              		.loc 1 4692 0
 6299 1644 38BD     		pop	{r3, r4, r5, pc}	@
 6300              	.LVL595:
 6301              	.L491:
4671:src/stm32f1xx_hal_tim.c **** 
 6302              		.loc 1 4671 0
 6303 1646 1846     		mov	r0, r3	@ <retval>, <retval>
 6304              	.LVL596:
4693:src/stm32f1xx_hal_tim.c **** 
 6305              		.loc 1 4693 0
 6306 1648 38BD     		pop	{r3, r4, r5, pc}	@
 6307              		.cfi_endproc
 6308              	.LFE136:
 6309              		.size	HAL_TIM_SlaveConfigSynchro, .-HAL_TIM_SlaveConfigSynchro
 6310              		.align	1
 6311              		.global	HAL_TIM_SlaveConfigSynchro_IT
 6312              		.syntax unified
 6313              		.thumb
 6314              		.thumb_func
 6315              		.fpu softvfp
 6316              		.type	HAL_TIM_SlaveConfigSynchro_IT, %function
 6317              	HAL_TIM_SlaveConfigSynchro_IT:
 6318              	.LFB137:
4706:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6319              		.loc 1 4706 0
 6320              		.cfi_startproc
 6321              		@ args = 0, pretend = 0, frame = 0
 6322              		@ frame_needed = 0, uses_anonymous_args = 0
 6323              	.LVL597:
 6324 164a 38B5     		push	{r3, r4, r5, lr}	@
 6325              	.LCFI49:
 6326              		.cfi_def_cfa_offset 16
 6327              		.cfi_offset 3, -16
 6328              		.cfi_offset 4, -12
 6329              		.cfi_offset 5, -8
 6330              		.cfi_offset 14, -4
4712:src/stm32f1xx_hal_tim.c **** 
 6331              		.loc 1 4712 0
 6332 164c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2	@ htim_4(D)->Lock, htim_4(D)->Lock
ARM GAS  /tmp/ccTsJCXT.s 			page 249


4706:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6333              		.loc 1 4706 0
 6334 1650 0446     		mov	r4, r0	@ htim, htim
4712:src/stm32f1xx_hal_tim.c **** 
 6335              		.loc 1 4712 0
 6336 1652 012B     		cmp	r3, #1	@ htim_4(D)->Lock,
 6337 1654 4FF00203 		mov	r3, #2	@ <retval>,
 6338 1658 1CD0     		beq	.L495	@,
4712:src/stm32f1xx_hal_tim.c **** 
 6339              		.loc 1 4712 0 is_stmt 0 discriminator 2
 6340 165a 0125     		movs	r5, #1	@ tmp120,
4714:src/stm32f1xx_hal_tim.c **** 
 6341              		.loc 1 4714 0 is_stmt 1 discriminator 2
 6342 165c 80F83D30 		strb	r3, [r0, #61]	@ <retval>, htim_4(D)->State
4712:src/stm32f1xx_hal_tim.c **** 
 6343              		.loc 1 4712 0 discriminator 2
 6344 1660 80F83C50 		strb	r5, [r0, #60]	@ tmp120, htim_4(D)->Lock
4716:src/stm32f1xx_hal_tim.c ****   {
 6345              		.loc 1 4716 0 discriminator 2
 6346 1664 FFF778FF 		bl	TIM_SlaveTimer_SetConfig	@
 6347              	.LVL598:
 6348 1668 30B1     		cbz	r0, .L494	@ <retval>,
4719:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6349              		.loc 1 4719 0
 6350 166a 0023     		movs	r3, #0	@ tmp127,
4718:src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
 6351              		.loc 1 4718 0
 6352 166c 84F83D50 		strb	r5, [r4, #61]	@ tmp120, htim_4(D)->State
4719:src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6353              		.loc 1 4719 0
 6354 1670 84F83C30 		strb	r3, [r4, #60]	@ tmp127, htim_4(D)->Lock
4720:src/stm32f1xx_hal_tim.c ****   }
 6355              		.loc 1 4720 0
 6356 1674 2846     		mov	r0, r5	@ <retval>, tmp120
 6357 1676 38BD     		pop	{r3, r4, r5, pc}	@
 6358              	.LVL599:
 6359              	.L494:
4724:src/stm32f1xx_hal_tim.c **** 
 6360              		.loc 1 4724 0
 6361 1678 2368     		ldr	r3, [r4]	@ _13, htim_4(D)->Instance
 6362 167a DA68     		ldr	r2, [r3, #12]	@ _14, _13->DIER
 6363 167c 42F04002 		orr	r2, r2, #64	@ _15, _14,
 6364 1680 DA60     		str	r2, [r3, #12]	@ _15, _13->DIER
4727:src/stm32f1xx_hal_tim.c **** 
 6365              		.loc 1 4727 0
 6366 1682 DA68     		ldr	r2, [r3, #12]	@ _17, _13->DIER
 6367 1684 22F48042 		bic	r2, r2, #16384	@ _18, _17,
 6368 1688 DA60     		str	r2, [r3, #12]	@ _18, _13->DIER
4729:src/stm32f1xx_hal_tim.c **** 
 6369              		.loc 1 4729 0
 6370 168a 84F83D50 		strb	r5, [r4, #61]	@ tmp120, htim_4(D)->State
4731:src/stm32f1xx_hal_tim.c **** 
 6371              		.loc 1 4731 0
 6372 168e 84F83C00 		strb	r0, [r4, #60]	@ <retval>, htim_4(D)->Lock
4733:src/stm32f1xx_hal_tim.c **** }
 6373              		.loc 1 4733 0
 6374 1692 38BD     		pop	{r3, r4, r5, pc}	@
ARM GAS  /tmp/ccTsJCXT.s 			page 250


 6375              	.LVL600:
 6376              	.L495:
4712:src/stm32f1xx_hal_tim.c **** 
 6377              		.loc 1 4712 0
 6378 1694 1846     		mov	r0, r3	@ <retval>, <retval>
 6379              	.LVL601:
4734:src/stm32f1xx_hal_tim.c **** 
 6380              		.loc 1 4734 0
 6381 1696 38BD     		pop	{r3, r4, r5, pc}	@
 6382              		.cfi_endproc
 6383              	.LFE137:
 6384              		.size	HAL_TIM_SlaveConfigSynchro_IT, .-HAL_TIM_SlaveConfigSynchro_IT
 6385              		.align	1
 6386              		.global	TIM_CCxChannelCmd
 6387              		.syntax unified
 6388              		.thumb
 6389              		.thumb_func
 6390              		.fpu softvfp
 6391              		.type	TIM_CCxChannelCmd, %function
 6392              	TIM_CCxChannelCmd:
 6393              	.LFB178:
6597:src/stm32f1xx_hal_tim.c ****   uint32_t tmp;
 6394              		.loc 1 6597 0
 6395              		.cfi_startproc
 6396              		@ args = 0, pretend = 0, frame = 0
 6397              		@ frame_needed = 0, uses_anonymous_args = 0
 6398              	.LVL602:
 6399 1698 10B5     		push	{r4, lr}	@
 6400              	.LCFI50:
 6401              		.cfi_def_cfa_offset 8
 6402              		.cfi_offset 4, -8
 6403              		.cfi_offset 14, -4
6604:src/stm32f1xx_hal_tim.c **** 
 6404              		.loc 1 6604 0
 6405 169a 0124     		movs	r4, #1	@ tmp122,
6607:src/stm32f1xx_hal_tim.c **** 
 6406              		.loc 1 6607 0
 6407 169c 036A     		ldr	r3, [r0, #32]	@ _6, TIMx_5(D)->CCER
6604:src/stm32f1xx_hal_tim.c **** 
 6408              		.loc 1 6604 0
 6409 169e 01F01F01 		and	r1, r1, #31	@ _2, Channel,
 6410              	.LVL603:
 6411 16a2 8C40     		lsls	r4, r4, r1	@ tmp, tmp122, _2
 6412              	.LVL604:
6607:src/stm32f1xx_hal_tim.c **** 
 6413              		.loc 1 6607 0
 6414 16a4 23EA0403 		bic	r3, r3, r4	@ _8, _6, tmp
 6415 16a8 0362     		str	r3, [r0, #32]	@ _8, TIMx_5(D)->CCER
 6416              		.loc 1 6610 0
 6417 16aa 036A     		ldr	r3, [r0, #32]	@ _10, TIMx_5(D)->CCER
 6418 16ac 8A40     		lsls	r2, r2, r1	@ tmp124, ChannelState, _2
 6419              	.LVL605:
 6420 16ae 1A43     		orrs	r2, r2, r3	@, _13, tmp124, _10
 6421 16b0 0262     		str	r2, [r0, #32]	@ _13, TIMx_5(D)->CCER
 6422 16b2 10BD     		pop	{r4, pc}	@
 6423              		.cfi_endproc
 6424              	.LFE178:
ARM GAS  /tmp/ccTsJCXT.s 			page 251


 6425              		.size	TIM_CCxChannelCmd, .-TIM_CCxChannelCmd
 6426              		.align	1
 6427              		.global	HAL_TIM_OC_Stop
 6428              		.syntax unified
 6429              		.thumb
 6430              		.thumb_func
 6431              		.fpu softvfp
 6432              		.type	HAL_TIM_OC_Stop, %function
 6433              	HAL_TIM_OC_Stop:
 6434              	.LFB80:
 760:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6435              		.loc 1 760 0
 6436              		.cfi_startproc
 6437              		@ args = 0, pretend = 0, frame = 0
 6438              		@ frame_needed = 0, uses_anonymous_args = 0
 6439              	.LVL606:
 6440 16b4 10B5     		push	{r4, lr}	@
 6441              	.LCFI51:
 6442              		.cfi_def_cfa_offset 8
 6443              		.cfi_offset 4, -8
 6444              		.cfi_offset 14, -4
 760:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6445              		.loc 1 760 0
 6446 16b6 0446     		mov	r4, r0	@ htim, htim
 765:src/stm32f1xx_hal_tim.c **** 
 6447              		.loc 1 765 0
 6448 16b8 0022     		movs	r2, #0	@,
 6449 16ba 0068     		ldr	r0, [r0]	@, htim_4(D)->Instance
 6450              	.LVL607:
 6451 16bc FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 6452              	.LVL608:
 767:src/stm32f1xx_hal_tim.c ****   {
 6453              		.loc 1 767 0
 6454 16c0 2368     		ldr	r3, [r4]	@ _8, htim_4(D)->Instance
 6455 16c2 104A     		ldr	r2, .L500	@ tmp127,
 6456 16c4 9342     		cmp	r3, r2	@ _8, tmp127
 6457 16c6 0DD1     		bne	.L498	@,
 770:src/stm32f1xx_hal_tim.c ****   }
 6458              		.loc 1 770 0
 6459 16c8 41F21112 		movw	r2, #4369	@ tmp129,
 6460 16cc 196A     		ldr	r1, [r3, #32]	@ _9, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6461 16ce 1142     		tst	r1, r2	@ _9, tmp129
 6462 16d0 08D1     		bne	.L498	@,
 770:src/stm32f1xx_hal_tim.c ****   }
 6463              		.loc 1 770 0 is_stmt 0 discriminator 1
 6464 16d2 40F24442 		movw	r2, #1092	@ tmp132,
 6465 16d6 196A     		ldr	r1, [r3, #32]	@ _11, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6466 16d8 1142     		tst	r1, r2	@ _11, tmp132
 6467 16da 02BF     		ittt	eq
 6468 16dc 5A6C     		ldreq	r2, [r3, #68]	@ _13, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6469 16de 22F40042 		biceq	r2, r2, #32768	@ _14, _13,
 6470 16e2 5A64     		streq	r2, [r3, #68]	@ _14, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6471              	.L498:
 774:src/stm32f1xx_hal_tim.c **** 
 6472              		.loc 1 774 0 is_stmt 1
 6473 16e4 41F21112 		movw	r2, #4369	@ tmp136,
 6474 16e8 196A     		ldr	r1, [r3, #32]	@ _16, _8->CCER
ARM GAS  /tmp/ccTsJCXT.s 			page 252


 6475 16ea 1142     		tst	r1, r2	@ _16, tmp136
 6476 16ec 08D1     		bne	.L499	@,
 774:src/stm32f1xx_hal_tim.c **** 
 6477              		.loc 1 774 0 is_stmt 0 discriminator 1
 6478 16ee 40F24442 		movw	r2, #1092	@ tmp138,
 6479 16f2 196A     		ldr	r1, [r3, #32]	@ _18, _8->CCER
 6480 16f4 1142     		tst	r1, r2	@ _18, tmp138
 6481 16f6 02BF     		ittt	eq
 6482 16f8 1A68     		ldreq	r2, [r3]	@ _20, _8->CR1
 6483 16fa 22F00102 		biceq	r2, r2, #1	@ _21, _20,
 6484 16fe 1A60     		streq	r2, [r3]	@ _21, _8->CR1
 6485              	.L499:
 778:src/stm32f1xx_hal_tim.c **** 
 6486              		.loc 1 778 0 is_stmt 1
 6487 1700 0020     		movs	r0, #0	@,
 6488 1702 10BD     		pop	{r4, pc}	@
 6489              	.LVL609:
 6490              	.L501:
 6491              		.align	2
 6492              	.L500:
 6493 1704 002C0140 		.word	1073818624
 6494              		.cfi_endproc
 6495              	.LFE80:
 6496              		.size	HAL_TIM_OC_Stop, .-HAL_TIM_OC_Stop
 6497              		.align	1
 6498              		.global	HAL_TIM_PWM_Start
 6499              		.syntax unified
 6500              		.thumb
 6501              		.thumb_func
 6502              		.fpu softvfp
 6503              		.type	HAL_TIM_PWM_Start, %function
 6504              	HAL_TIM_PWM_Start:
 6505              	.LFB89:
1295:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6506              		.loc 1 1295 0
 6507              		.cfi_startproc
 6508              		@ args = 0, pretend = 0, frame = 0
 6509              		@ frame_needed = 0, uses_anonymous_args = 0
 6510              	.LVL610:
 6511 1708 10B5     		push	{r4, lr}	@
 6512              	.LCFI52:
 6513              		.cfi_def_cfa_offset 8
 6514              		.cfi_offset 4, -8
 6515              		.cfi_offset 14, -4
1295:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6516              		.loc 1 1295 0
 6517 170a 0446     		mov	r4, r0	@ htim, htim
1302:src/stm32f1xx_hal_tim.c **** 
 6518              		.loc 1 1302 0
 6519 170c 0122     		movs	r2, #1	@,
 6520 170e 0068     		ldr	r0, [r0]	@, htim_4(D)->Instance
 6521              	.LVL611:
 6522 1710 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 6523              	.LVL612:
1304:src/stm32f1xx_hal_tim.c ****   {
 6524              		.loc 1 1304 0
 6525 1714 2368     		ldr	r3, [r4]	@ _8, htim_4(D)->Instance
ARM GAS  /tmp/ccTsJCXT.s 			page 253


 6526 1716 094A     		ldr	r2, .L508	@ tmp121,
1319:src/stm32f1xx_hal_tim.c **** 
 6527              		.loc 1 1319 0
 6528 1718 0020     		movs	r0, #0	@,
1304:src/stm32f1xx_hal_tim.c ****   {
 6529              		.loc 1 1304 0
 6530 171a 9342     		cmp	r3, r2	@ _8, tmp121
1307:src/stm32f1xx_hal_tim.c ****   }
 6531              		.loc 1 1307 0
 6532 171c 02BF     		ittt	eq
 6533 171e 5A6C     		ldreq	r2, [r3, #68]	@ _9, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6534 1720 42F40042 		orreq	r2, r2, #32768	@ _10, _9,
 6535 1724 5A64     		streq	r2, [r3, #68]	@ _10, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
1311:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 6536              		.loc 1 1311 0
 6537 1726 9A68     		ldr	r2, [r3, #8]	@ _12, _8->SMCR
 6538              	.LVL613:
 6539 1728 02F00702 		and	r2, r2, #7	@ tmpsmcr, _12,
 6540              	.LVL614:
1312:src/stm32f1xx_hal_tim.c ****   {
 6541              		.loc 1 1312 0
 6542 172c 062A     		cmp	r2, #6	@ tmpsmcr,
1314:src/stm32f1xx_hal_tim.c ****   }
 6543              		.loc 1 1314 0
 6544 172e 1EBF     		ittt	ne
 6545 1730 1A68     		ldrne	r2, [r3]	@ _14, _8->CR1
 6546              	.LVL615:
 6547 1732 42F00102 		orrne	r2, r2, #1	@ _15, _14,
 6548 1736 1A60     		strne	r2, [r3]	@ _15, _8->CR1
1319:src/stm32f1xx_hal_tim.c **** 
 6549              		.loc 1 1319 0
 6550 1738 10BD     		pop	{r4, pc}	@
 6551              	.LVL616:
 6552              	.L509:
 6553 173a 00BF     		.align	2
 6554              	.L508:
 6555 173c 002C0140 		.word	1073818624
 6556              		.cfi_endproc
 6557              	.LFE89:
 6558              		.size	HAL_TIM_PWM_Start, .-HAL_TIM_PWM_Start
 6559              		.align	1
 6560              		.global	HAL_TIM_OC_Start
 6561              		.syntax unified
 6562              		.thumb
 6563              		.thumb_func
 6564              		.fpu softvfp
 6565              		.type	HAL_TIM_OC_Start, %function
 6566              	HAL_TIM_OC_Start:
 6567              	.LFB236:
 6568              		.cfi_startproc
 6569              		@ args = 0, pretend = 0, frame = 0
 6570              		@ frame_needed = 0, uses_anonymous_args = 0
 6571              		@ link register save eliminated.
 6572 1740 FFF7FEBF 		b	HAL_TIM_PWM_Start	@
 6573              		.cfi_endproc
 6574              	.LFE236:
 6575              		.size	HAL_TIM_OC_Start, .-HAL_TIM_OC_Start
ARM GAS  /tmp/ccTsJCXT.s 			page 254


 6576              		.align	1
 6577              		.global	HAL_TIM_PWM_Stop
 6578              		.syntax unified
 6579              		.thumb
 6580              		.thumb_func
 6581              		.fpu softvfp
 6582              		.type	HAL_TIM_PWM_Stop, %function
 6583              	HAL_TIM_PWM_Stop:
 6584              	.LFB90:
1333:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6585              		.loc 1 1333 0
 6586              		.cfi_startproc
 6587              		@ args = 0, pretend = 0, frame = 0
 6588              		@ frame_needed = 0, uses_anonymous_args = 0
 6589              	.LVL617:
1333:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6590              		.loc 1 1333 0
 6591 1744 10B5     		push	{r4, lr}	@
 6592              	.LCFI53:
 6593              		.cfi_def_cfa_offset 8
 6594              		.cfi_offset 4, -8
 6595              		.cfi_offset 14, -4
1333:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6596              		.loc 1 1333 0
 6597 1746 0446     		mov	r4, r0	@ htim, htim
1338:src/stm32f1xx_hal_tim.c **** 
 6598              		.loc 1 1338 0
 6599 1748 0022     		movs	r2, #0	@,
 6600 174a 0068     		ldr	r0, [r0]	@, htim_4(D)->Instance
 6601              	.LVL618:
 6602 174c FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 6603              	.LVL619:
1340:src/stm32f1xx_hal_tim.c ****   {
 6604              		.loc 1 1340 0
 6605 1750 2368     		ldr	r3, [r4]	@ _8, htim_4(D)->Instance
 6606 1752 124A     		ldr	r2, .L514	@ tmp127,
 6607 1754 9342     		cmp	r3, r2	@ _8, tmp127
 6608 1756 0DD1     		bne	.L512	@,
1343:src/stm32f1xx_hal_tim.c ****   }
 6609              		.loc 1 1343 0
 6610 1758 41F21112 		movw	r2, #4369	@ tmp129,
 6611 175c 196A     		ldr	r1, [r3, #32]	@ _9, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6612 175e 1142     		tst	r1, r2	@ _9, tmp129
 6613 1760 08D1     		bne	.L512	@,
1343:src/stm32f1xx_hal_tim.c ****   }
 6614              		.loc 1 1343 0 is_stmt 0 discriminator 1
 6615 1762 40F24442 		movw	r2, #1092	@ tmp132,
 6616 1766 196A     		ldr	r1, [r3, #32]	@ _11, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6617 1768 1142     		tst	r1, r2	@ _11, tmp132
 6618 176a 02BF     		ittt	eq
 6619 176c 5A6C     		ldreq	r2, [r3, #68]	@ _13, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6620 176e 22F40042 		biceq	r2, r2, #32768	@ _14, _13,
 6621 1772 5A64     		streq	r2, [r3, #68]	@ _14, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6622              	.L512:
1347:src/stm32f1xx_hal_tim.c **** 
 6623              		.loc 1 1347 0 is_stmt 1
 6624 1774 41F21112 		movw	r2, #4369	@ tmp136,
ARM GAS  /tmp/ccTsJCXT.s 			page 255


 6625 1778 196A     		ldr	r1, [r3, #32]	@ _16, _8->CCER
 6626 177a 1142     		tst	r1, r2	@ _16, tmp136
 6627 177c 08D1     		bne	.L513	@,
1347:src/stm32f1xx_hal_tim.c **** 
 6628              		.loc 1 1347 0 is_stmt 0 discriminator 1
 6629 177e 40F24442 		movw	r2, #1092	@ tmp138,
 6630 1782 196A     		ldr	r1, [r3, #32]	@ _18, _8->CCER
 6631 1784 1142     		tst	r1, r2	@ _18, tmp138
 6632 1786 02BF     		ittt	eq
 6633 1788 1A68     		ldreq	r2, [r3]	@ _20, _8->CR1
 6634 178a 22F00102 		biceq	r2, r2, #1	@ _21, _20,
 6635 178e 1A60     		streq	r2, [r3]	@ _21, _8->CR1
 6636              	.L513:
1350:src/stm32f1xx_hal_tim.c **** 
 6637              		.loc 1 1350 0 is_stmt 1
 6638 1790 0123     		movs	r3, #1	@ tmp140,
1354:src/stm32f1xx_hal_tim.c **** 
 6639              		.loc 1 1354 0
 6640 1792 0020     		movs	r0, #0	@,
1350:src/stm32f1xx_hal_tim.c **** 
 6641              		.loc 1 1350 0
 6642 1794 84F83D30 		strb	r3, [r4, #61]	@ tmp140, htim_4(D)->State
1354:src/stm32f1xx_hal_tim.c **** 
 6643              		.loc 1 1354 0
 6644 1798 10BD     		pop	{r4, pc}	@
 6645              	.LVL620:
 6646              	.L515:
 6647 179a 00BF     		.align	2
 6648              	.L514:
 6649 179c 002C0140 		.word	1073818624
 6650              		.cfi_endproc
 6651              	.LFE90:
 6652              		.size	HAL_TIM_PWM_Stop, .-HAL_TIM_PWM_Stop
 6653              		.align	1
 6654              		.global	HAL_TIM_PWM_Start_IT
 6655              		.syntax unified
 6656              		.thumb
 6657              		.thumb_func
 6658              		.fpu softvfp
 6659              		.type	HAL_TIM_PWM_Start_IT, %function
 6660              	HAL_TIM_PWM_Start_IT:
 6661              	.LFB91:
1368:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6662              		.loc 1 1368 0
 6663              		.cfi_startproc
 6664              		@ args = 0, pretend = 0, frame = 0
 6665              		@ frame_needed = 0, uses_anonymous_args = 0
 6666              	.LVL621:
 6667 17a0 10B5     		push	{r4, lr}	@
 6668              	.LCFI54:
 6669              		.cfi_def_cfa_offset 8
 6670              		.cfi_offset 4, -8
 6671              		.cfi_offset 14, -4
1368:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6672              		.loc 1 1368 0
 6673 17a2 0446     		mov	r4, r0	@ htim, htim
1373:src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp/ccTsJCXT.s 			page 256


 6674              		.loc 1 1373 0
 6675 17a4 0C29     		cmp	r1, #12	@ Channel,
 6676 17a6 0DD8     		bhi	.L517	@
 6677 17a8 DFE801F0 		tbb	[pc, r1]	@ Channel
 6678              	.L519:
 6679 17ac 07       		.byte	(.L518-.L519)/2
 6680 17ad 0C       		.byte	(.L517-.L519)/2
 6681 17ae 0C       		.byte	(.L517-.L519)/2
 6682 17af 0C       		.byte	(.L517-.L519)/2
 6683 17b0 23       		.byte	(.L520-.L519)/2
 6684 17b1 0C       		.byte	(.L517-.L519)/2
 6685 17b2 0C       		.byte	(.L517-.L519)/2
 6686 17b3 0C       		.byte	(.L517-.L519)/2
 6687 17b4 28       		.byte	(.L521-.L519)/2
 6688 17b5 0C       		.byte	(.L517-.L519)/2
 6689 17b6 0C       		.byte	(.L517-.L519)/2
 6690 17b7 0C       		.byte	(.L517-.L519)/2
 6691 17b8 2D       		.byte	(.L522-.L519)/2
 6692 17b9 00       		.p2align 1
 6693              	.L518:
1378:src/stm32f1xx_hal_tim.c ****       break;
 6694              		.loc 1 1378 0
 6695 17ba 0268     		ldr	r2, [r0]	@ _7, htim_6(D)->Instance
 6696 17bc D368     		ldr	r3, [r2, #12]	@ _8, _7->DIER
 6697 17be 43F00203 		orr	r3, r3, #2	@ _9, _8,
 6698              	.L528:
1399:src/stm32f1xx_hal_tim.c ****       break;
 6699              		.loc 1 1399 0
 6700 17c2 D360     		str	r3, [r2, #12]	@ _21,
 6701              	.L517:
1408:src/stm32f1xx_hal_tim.c **** 
 6702              		.loc 1 1408 0
 6703 17c4 2068     		ldr	r0, [r4]	@, htim_6(D)->Instance
 6704              	.LVL622:
 6705 17c6 0122     		movs	r2, #1	@,
 6706 17c8 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 6707              	.LVL623:
1410:src/stm32f1xx_hal_tim.c ****   {
 6708              		.loc 1 1410 0
 6709 17cc 2368     		ldr	r3, [r4]	@ _25, htim_6(D)->Instance
 6710 17ce 104A     		ldr	r2, .L529	@ tmp133,
1425:src/stm32f1xx_hal_tim.c **** 
 6711              		.loc 1 1425 0
 6712 17d0 0020     		movs	r0, #0	@,
1410:src/stm32f1xx_hal_tim.c ****   {
 6713              		.loc 1 1410 0
 6714 17d2 9342     		cmp	r3, r2	@ _25, tmp133
1413:src/stm32f1xx_hal_tim.c ****   }
 6715              		.loc 1 1413 0
 6716 17d4 02BF     		ittt	eq
 6717 17d6 5A6C     		ldreq	r2, [r3, #68]	@ _26, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6718 17d8 42F40042 		orreq	r2, r2, #32768	@ _27, _26,
 6719 17dc 5A64     		streq	r2, [r3, #68]	@ _27, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
1417:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 6720              		.loc 1 1417 0
 6721 17de 9A68     		ldr	r2, [r3, #8]	@ _29, _25->SMCR
 6722              	.LVL624:
ARM GAS  /tmp/ccTsJCXT.s 			page 257


 6723 17e0 02F00702 		and	r2, r2, #7	@ tmpsmcr, _29,
 6724              	.LVL625:
1418:src/stm32f1xx_hal_tim.c ****   {
 6725              		.loc 1 1418 0
 6726 17e4 062A     		cmp	r2, #6	@ tmpsmcr,
1420:src/stm32f1xx_hal_tim.c ****   }
 6727              		.loc 1 1420 0
 6728 17e6 1EBF     		ittt	ne
 6729 17e8 1A68     		ldrne	r2, [r3]	@ _31, _25->CR1
 6730              	.LVL626:
 6731 17ea 42F00102 		orrne	r2, r2, #1	@ _32, _31,
 6732 17ee 1A60     		strne	r2, [r3]	@ _32, _25->CR1
1425:src/stm32f1xx_hal_tim.c **** 
 6733              		.loc 1 1425 0
 6734 17f0 10BD     		pop	{r4, pc}	@
 6735              	.LVL627:
 6736              	.L520:
1385:src/stm32f1xx_hal_tim.c ****       break;
 6737              		.loc 1 1385 0
 6738 17f2 0268     		ldr	r2, [r0]	@ _11, htim_6(D)->Instance
 6739 17f4 D368     		ldr	r3, [r2, #12]	@ _12, _11->DIER
 6740 17f6 43F00403 		orr	r3, r3, #4	@ _13, _12,
 6741 17fa E2E7     		b	.L528	@
 6742              	.L521:
1392:src/stm32f1xx_hal_tim.c ****       break;
 6743              		.loc 1 1392 0
 6744 17fc 0268     		ldr	r2, [r0]	@ _15, htim_6(D)->Instance
 6745 17fe D368     		ldr	r3, [r2, #12]	@ _16, _15->DIER
 6746 1800 43F00803 		orr	r3, r3, #8	@ _17, _16,
 6747 1804 DDE7     		b	.L528	@
 6748              	.L522:
1399:src/stm32f1xx_hal_tim.c ****       break;
 6749              		.loc 1 1399 0
 6750 1806 0268     		ldr	r2, [r0]	@ _19, htim_6(D)->Instance
 6751 1808 D368     		ldr	r3, [r2, #12]	@ _20, _19->DIER
 6752 180a 43F01003 		orr	r3, r3, #16	@ _21, _20,
 6753 180e D8E7     		b	.L528	@
 6754              	.L530:
 6755              		.align	2
 6756              	.L529:
 6757 1810 002C0140 		.word	1073818624
 6758              		.cfi_endproc
 6759              	.LFE91:
 6760              		.size	HAL_TIM_PWM_Start_IT, .-HAL_TIM_PWM_Start_IT
 6761              		.align	1
 6762              		.global	HAL_TIM_OC_Start_IT
 6763              		.syntax unified
 6764              		.thumb
 6765              		.thumb_func
 6766              		.fpu softvfp
 6767              		.type	HAL_TIM_OC_Start_IT, %function
 6768              	HAL_TIM_OC_Start_IT:
 6769              	.LFB234:
 6770              		.cfi_startproc
 6771              		@ args = 0, pretend = 0, frame = 0
 6772              		@ frame_needed = 0, uses_anonymous_args = 0
 6773              		@ link register save eliminated.
ARM GAS  /tmp/ccTsJCXT.s 			page 258


 6774 1814 FFF7FEBF 		b	HAL_TIM_PWM_Start_IT	@
 6775              		.cfi_endproc
 6776              	.LFE234:
 6777              		.size	HAL_TIM_OC_Start_IT, .-HAL_TIM_OC_Start_IT
 6778              		.align	1
 6779              		.global	HAL_TIM_PWM_Stop_IT
 6780              		.syntax unified
 6781              		.thumb
 6782              		.thumb_func
 6783              		.fpu softvfp
 6784              		.type	HAL_TIM_PWM_Stop_IT, %function
 6785              	HAL_TIM_PWM_Stop_IT:
 6786              	.LFB92:
1439:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6787              		.loc 1 1439 0
 6788              		.cfi_startproc
 6789              		@ args = 0, pretend = 0, frame = 0
 6790              		@ frame_needed = 0, uses_anonymous_args = 0
 6791              	.LVL628:
1439:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6792              		.loc 1 1439 0
 6793 1818 10B5     		push	{r4, lr}	@
 6794              	.LCFI55:
 6795              		.cfi_def_cfa_offset 8
 6796              		.cfi_offset 4, -8
 6797              		.cfi_offset 14, -4
1439:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 6798              		.loc 1 1439 0
 6799 181a 0446     		mov	r4, r0	@ htim, htim
1443:src/stm32f1xx_hal_tim.c ****   {
 6800              		.loc 1 1443 0
 6801 181c 0C29     		cmp	r1, #12	@ Channel,
 6802 181e 0DD8     		bhi	.L533	@
 6803 1820 DFE801F0 		tbb	[pc, r1]	@ Channel
 6804              	.L535:
 6805 1824 07       		.byte	(.L534-.L535)/2
 6806 1825 0C       		.byte	(.L533-.L535)/2
 6807 1826 0C       		.byte	(.L533-.L535)/2
 6808 1827 0C       		.byte	(.L533-.L535)/2
 6809 1828 32       		.byte	(.L536-.L535)/2
 6810 1829 0C       		.byte	(.L533-.L535)/2
 6811 182a 0C       		.byte	(.L533-.L535)/2
 6812 182b 0C       		.byte	(.L533-.L535)/2
 6813 182c 37       		.byte	(.L537-.L535)/2
 6814 182d 0C       		.byte	(.L533-.L535)/2
 6815 182e 0C       		.byte	(.L533-.L535)/2
 6816 182f 0C       		.byte	(.L533-.L535)/2
 6817 1830 3C       		.byte	(.L538-.L535)/2
 6818 1831 00       		.p2align 1
 6819              	.L534:
1448:src/stm32f1xx_hal_tim.c ****       break;
 6820              		.loc 1 1448 0
 6821 1832 0268     		ldr	r2, [r0]	@ _7, htim_6(D)->Instance
 6822 1834 D368     		ldr	r3, [r2, #12]	@ _8, _7->DIER
 6823 1836 23F00203 		bic	r3, r3, #2	@ _9, _8,
 6824              	.L541:
1469:src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccTsJCXT.s 			page 259


 6825              		.loc 1 1469 0
 6826 183a D360     		str	r3, [r2, #12]	@ _21,
 6827              	.L533:
1478:src/stm32f1xx_hal_tim.c **** 
 6828              		.loc 1 1478 0
 6829 183c 0022     		movs	r2, #0	@,
 6830 183e 2068     		ldr	r0, [r4]	@, htim_6(D)->Instance
 6831              	.LVL629:
 6832 1840 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 6833              	.LVL630:
1480:src/stm32f1xx_hal_tim.c ****   {
 6834              		.loc 1 1480 0
 6835 1844 2368     		ldr	r3, [r4]	@ _25, htim_6(D)->Instance
 6836 1846 184A     		ldr	r2, .L542	@ tmp139,
 6837 1848 9342     		cmp	r3, r2	@ _25, tmp139
 6838 184a 0DD1     		bne	.L539	@,
1483:src/stm32f1xx_hal_tim.c ****   }
 6839              		.loc 1 1483 0
 6840 184c 41F21112 		movw	r2, #4369	@ tmp141,
 6841 1850 196A     		ldr	r1, [r3, #32]	@ _26, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6842 1852 1142     		tst	r1, r2	@ _26, tmp141
 6843 1854 08D1     		bne	.L539	@,
1483:src/stm32f1xx_hal_tim.c ****   }
 6844              		.loc 1 1483 0 is_stmt 0 discriminator 1
 6845 1856 40F24442 		movw	r2, #1092	@ tmp144,
 6846 185a 196A     		ldr	r1, [r3, #32]	@ _28, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 6847 185c 1142     		tst	r1, r2	@ _28, tmp144
 6848 185e 02BF     		ittt	eq
 6849 1860 5A6C     		ldreq	r2, [r3, #68]	@ _30, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6850 1862 22F40042 		biceq	r2, r2, #32768	@ _31, _30,
 6851 1866 5A64     		streq	r2, [r3, #68]	@ _31, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 6852              	.L539:
1487:src/stm32f1xx_hal_tim.c **** 
 6853              		.loc 1 1487 0 is_stmt 1
 6854 1868 41F21112 		movw	r2, #4369	@ tmp148,
 6855 186c 196A     		ldr	r1, [r3, #32]	@ _33, _25->CCER
 6856 186e 1142     		tst	r1, r2	@ _33, tmp148
 6857 1870 08D1     		bne	.L540	@,
1487:src/stm32f1xx_hal_tim.c **** 
 6858              		.loc 1 1487 0 is_stmt 0 discriminator 1
 6859 1872 40F24442 		movw	r2, #1092	@ tmp150,
 6860 1876 196A     		ldr	r1, [r3, #32]	@ _35, _25->CCER
 6861 1878 1142     		tst	r1, r2	@ _35, tmp150
 6862 187a 02BF     		ittt	eq
 6863 187c 1A68     		ldreq	r2, [r3]	@ _37, _25->CR1
 6864 187e 22F00102 		biceq	r2, r2, #1	@ _38, _37,
 6865 1882 1A60     		streq	r2, [r3]	@ _38, _25->CR1
 6866              	.L540:
1491:src/stm32f1xx_hal_tim.c **** 
 6867              		.loc 1 1491 0 is_stmt 1
 6868 1884 0020     		movs	r0, #0	@,
 6869 1886 10BD     		pop	{r4, pc}	@
 6870              	.LVL631:
 6871              	.L536:
1455:src/stm32f1xx_hal_tim.c ****       break;
 6872              		.loc 1 1455 0
 6873 1888 0268     		ldr	r2, [r0]	@ _11, htim_6(D)->Instance
ARM GAS  /tmp/ccTsJCXT.s 			page 260


 6874 188a D368     		ldr	r3, [r2, #12]	@ _12, _11->DIER
 6875 188c 23F00403 		bic	r3, r3, #4	@ _13, _12,
 6876 1890 D3E7     		b	.L541	@
 6877              	.L537:
1462:src/stm32f1xx_hal_tim.c ****       break;
 6878              		.loc 1 1462 0
 6879 1892 0268     		ldr	r2, [r0]	@ _15, htim_6(D)->Instance
 6880 1894 D368     		ldr	r3, [r2, #12]	@ _16, _15->DIER
 6881 1896 23F00803 		bic	r3, r3, #8	@ _17, _16,
 6882 189a CEE7     		b	.L541	@
 6883              	.L538:
1469:src/stm32f1xx_hal_tim.c ****       break;
 6884              		.loc 1 1469 0
 6885 189c 0268     		ldr	r2, [r0]	@ _19, htim_6(D)->Instance
 6886 189e D368     		ldr	r3, [r2, #12]	@ _20, _19->DIER
 6887 18a0 23F01003 		bic	r3, r3, #16	@ _21, _20,
 6888 18a4 C9E7     		b	.L541	@
 6889              	.L543:
 6890 18a6 00BF     		.align	2
 6891              	.L542:
 6892 18a8 002C0140 		.word	1073818624
 6893              		.cfi_endproc
 6894              	.LFE92:
 6895              		.size	HAL_TIM_PWM_Stop_IT, .-HAL_TIM_PWM_Stop_IT
 6896              		.align	1
 6897              		.global	HAL_TIM_OC_Stop_IT
 6898              		.syntax unified
 6899              		.thumb
 6900              		.thumb_func
 6901              		.fpu softvfp
 6902              		.type	HAL_TIM_OC_Stop_IT, %function
 6903              	HAL_TIM_OC_Stop_IT:
 6904              	.LFB232:
 6905              		.cfi_startproc
 6906              		@ args = 0, pretend = 0, frame = 0
 6907              		@ frame_needed = 0, uses_anonymous_args = 0
 6908              		@ link register save eliminated.
 6909 18ac FFF7FEBF 		b	HAL_TIM_PWM_Stop_IT	@
 6910              		.cfi_endproc
 6911              	.LFE232:
 6912              		.size	HAL_TIM_OC_Stop_IT, .-HAL_TIM_OC_Stop_IT
 6913              		.align	1
 6914              		.global	HAL_TIM_PWM_Start_DMA
 6915              		.syntax unified
 6916              		.thumb
 6917              		.thumb_func
 6918              		.fpu softvfp
 6919              		.type	HAL_TIM_PWM_Start_DMA, %function
 6920              	HAL_TIM_PWM_Start_DMA:
 6921              	.LFB93:
1507:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6922              		.loc 1 1507 0
 6923              		.cfi_startproc
 6924              		@ args = 0, pretend = 0, frame = 0
 6925              		@ frame_needed = 0, uses_anonymous_args = 0
 6926              	.LVL632:
1507:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
ARM GAS  /tmp/ccTsJCXT.s 			page 261


 6927              		.loc 1 1507 0
 6928 18b0 38B5     		push	{r3, r4, r5, lr}	@
 6929              	.LCFI56:
 6930              		.cfi_def_cfa_offset 16
 6931              		.cfi_offset 3, -16
 6932              		.cfi_offset 4, -12
 6933              		.cfi_offset 5, -8
 6934              		.cfi_offset 14, -4
1507:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6935              		.loc 1 1507 0
 6936 18b2 0446     		mov	r4, r0	@ htim, htim
1513:src/stm32f1xx_hal_tim.c ****   {
 6937              		.loc 1 1513 0
 6938 18b4 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_7(D)->State, htim_7(D)->State
 6939              	.LVL633:
1507:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6940              		.loc 1 1507 0
 6941 18b8 0D46     		mov	r5, r1	@ Channel, Channel
1513:src/stm32f1xx_hal_tim.c ****   {
 6942              		.loc 1 1513 0
 6943 18ba C0B2     		uxtb	r0, r0	@ _8, htim_7(D)->State
 6944 18bc 0228     		cmp	r0, #2	@ _8,
1507:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 6945              		.loc 1 1507 0
 6946 18be 1146     		mov	r1, r2	@ pData, pData
 6947              	.LVL634:
1513:src/stm32f1xx_hal_tim.c ****   {
 6948              		.loc 1 1513 0
 6949 18c0 3ED0     		beq	.L546	@,
1517:src/stm32f1xx_hal_tim.c ****   {
 6950              		.loc 1 1517 0
 6951 18c2 94F83D20 		ldrb	r2, [r4, #61]	@ zero_extendqisi2	@ htim_7(D)->State, htim_7(D)->State
 6952              	.LVL635:
 6953 18c6 012A     		cmp	r2, #1	@ htim_7(D)->State,
 6954 18c8 06D1     		bne	.L547	@,
1519:src/stm32f1xx_hal_tim.c ****     {
 6955              		.loc 1 1519 0
 6956 18ca 11B9     		cbnz	r1, .L548	@ pData,
1519:src/stm32f1xx_hal_tim.c ****     {
 6957              		.loc 1 1519 0 is_stmt 0 discriminator 1
 6958 18cc 0BB1     		cbz	r3, .L548	@ Length,
 6959              	.LVL636:
 6960              	.L555:
1521:src/stm32f1xx_hal_tim.c ****     }
 6961              		.loc 1 1521 0 is_stmt 1
 6962 18ce 0120     		movs	r0, #1	@ <retval>,
 6963 18d0 38BD     		pop	{r3, r4, r5, pc}	@
 6964              	.LVL637:
 6965              	.L548:
1525:src/stm32f1xx_hal_tim.c ****     }
 6966              		.loc 1 1525 0
 6967 18d2 0222     		movs	r2, #2	@ tmp171,
 6968 18d4 84F83D20 		strb	r2, [r4, #61]	@ tmp171, htim_7(D)->State
 6969              	.L547:
1533:src/stm32f1xx_hal_tim.c ****   {
 6970              		.loc 1 1533 0
 6971 18d8 0C2D     		cmp	r5, #12	@ Channel,
ARM GAS  /tmp/ccTsJCXT.s 			page 262


 6972 18da 1AD8     		bhi	.L549	@
 6973 18dc DFE805F0 		tbb	[pc, r5]	@ Channel
 6974              	.L551:
 6975 18e0 07       		.byte	(.L550-.L551)/2
 6976 18e1 19       		.byte	(.L549-.L551)/2
 6977 18e2 19       		.byte	(.L549-.L551)/2
 6978 18e3 19       		.byte	(.L549-.L551)/2
 6979 18e4 31       		.byte	(.L552-.L551)/2
 6980 18e5 19       		.byte	(.L549-.L551)/2
 6981 18e6 19       		.byte	(.L549-.L551)/2
 6982 18e7 19       		.byte	(.L549-.L551)/2
 6983 18e8 43       		.byte	(.L553-.L551)/2
 6984 18e9 19       		.byte	(.L549-.L551)/2
 6985 18ea 19       		.byte	(.L549-.L551)/2
 6986 18eb 19       		.byte	(.L549-.L551)/2
 6987 18ec 55       		.byte	(.L554-.L551)/2
 6988 18ed 00       		.p2align 1
 6989              	.L550:
1538:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 6990              		.loc 1 1538 0
 6991 18ee 606A     		ldr	r0, [r4, #36]	@ _14, htim_7(D)->hdma
 6992 18f0 2F4A     		ldr	r2, .L563	@ tmp173,
 6993 18f2 8262     		str	r2, [r0, #40]	@ tmp173, _14->XferCpltCallback
1539:src/stm32f1xx_hal_tim.c **** 
 6994              		.loc 1 1539 0
 6995 18f4 2F4A     		ldr	r2, .L563+4	@ tmp174,
 6996 18f6 C262     		str	r2, [r0, #44]	@ tmp174, _14->XferHalfCpltCallback
1542:src/stm32f1xx_hal_tim.c **** 
 6997              		.loc 1 1542 0
 6998 18f8 2F4A     		ldr	r2, .L563+8	@ tmp175,
 6999 18fa 0263     		str	r2, [r0, #48]	@ tmp175, _14->XferErrorCallback
1545:src/stm32f1xx_hal_tim.c ****       {
 7000              		.loc 1 1545 0
 7001 18fc 2268     		ldr	r2, [r4]	@ htim_7(D)->Instance, htim_7(D)->Instance
 7002 18fe 3432     		adds	r2, r2, #52	@, htim_7(D)->Instance,
 7003 1900 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7004              	.LVL638:
 7005 1904 0028     		cmp	r0, #0	@
 7006 1906 E2D1     		bne	.L555	@
1551:src/stm32f1xx_hal_tim.c ****       break;
 7007              		.loc 1 1551 0
 7008 1908 2268     		ldr	r2, [r4]	@ _25, htim_7(D)->Instance
 7009 190a D368     		ldr	r3, [r2, #12]	@ _26, _25->DIER
 7010 190c 43F40073 		orr	r3, r3, #512	@ _27, _26,
 7011              	.L562:
1608:src/stm32f1xx_hal_tim.c ****       break;
 7012              		.loc 1 1608 0
 7013 1910 D360     		str	r3, [r2, #12]	@ _72,
 7014              	.L549:
1617:src/stm32f1xx_hal_tim.c **** 
 7015              		.loc 1 1617 0
 7016 1912 0122     		movs	r2, #1	@,
 7017 1914 2068     		ldr	r0, [r4]	@, htim_7(D)->Instance
 7018 1916 2946     		mov	r1, r5	@, Channel
 7019 1918 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7020              	.LVL639:
1633:src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp/ccTsJCXT.s 			page 263


 7021              		.loc 1 1633 0
 7022 191c 0020     		movs	r0, #0	@ <retval>,
1619:src/stm32f1xx_hal_tim.c ****   {
 7023              		.loc 1 1619 0
 7024 191e 2368     		ldr	r3, [r4]	@ _76, htim_7(D)->Instance
 7025 1920 264A     		ldr	r2, .L563+12	@ tmp197,
 7026 1922 9342     		cmp	r3, r2	@ _76, tmp197
1622:src/stm32f1xx_hal_tim.c ****   }
 7027              		.loc 1 1622 0
 7028 1924 02BF     		ittt	eq
 7029 1926 5A6C     		ldreq	r2, [r3, #68]	@ _77, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 7030 1928 42F40042 		orreq	r2, r2, #32768	@ _78, _77,
 7031 192c 5A64     		streq	r2, [r3, #68]	@ _78, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
1626:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7032              		.loc 1 1626 0
 7033 192e 9A68     		ldr	r2, [r3, #8]	@ _80, _76->SMCR
 7034              	.LVL640:
 7035 1930 02F00702 		and	r2, r2, #7	@ tmpsmcr, _80,
 7036              	.LVL641:
1627:src/stm32f1xx_hal_tim.c ****   {
 7037              		.loc 1 1627 0
 7038 1934 062A     		cmp	r2, #6	@ tmpsmcr,
1629:src/stm32f1xx_hal_tim.c ****   }
 7039              		.loc 1 1629 0
 7040 1936 1EBF     		ittt	ne
 7041 1938 1A68     		ldrne	r2, [r3]	@ _82, _76->CR1
 7042              	.LVL642:
 7043 193a 42F00102 		orrne	r2, r2, #1	@ _83, _82,
 7044 193e 1A60     		strne	r2, [r3]	@ _83, _76->CR1
 7045              	.L546:
1634:src/stm32f1xx_hal_tim.c **** 
 7046              		.loc 1 1634 0
 7047 1940 38BD     		pop	{r3, r4, r5, pc}	@
 7048              	.LVL643:
 7049              	.L552:
1558:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 7050              		.loc 1 1558 0
 7051 1942 A06A     		ldr	r0, [r4, #40]	@ _29, htim_7(D)->hdma
 7052 1944 1A4A     		ldr	r2, .L563	@ tmp179,
 7053 1946 8262     		str	r2, [r0, #40]	@ tmp179, _29->XferCpltCallback
1559:src/stm32f1xx_hal_tim.c **** 
 7054              		.loc 1 1559 0
 7055 1948 1A4A     		ldr	r2, .L563+4	@ tmp180,
 7056 194a C262     		str	r2, [r0, #44]	@ tmp180, _29->XferHalfCpltCallback
1562:src/stm32f1xx_hal_tim.c **** 
 7057              		.loc 1 1562 0
 7058 194c 1A4A     		ldr	r2, .L563+8	@ tmp181,
 7059 194e 0263     		str	r2, [r0, #48]	@ tmp181, _29->XferErrorCallback
1565:src/stm32f1xx_hal_tim.c ****       {
 7060              		.loc 1 1565 0
 7061 1950 2268     		ldr	r2, [r4]	@ htim_7(D)->Instance, htim_7(D)->Instance
 7062 1952 3832     		adds	r2, r2, #56	@, htim_7(D)->Instance,
 7063 1954 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7064              	.LVL644:
 7065 1958 0028     		cmp	r0, #0	@
 7066 195a B8D1     		bne	.L555	@
1570:src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccTsJCXT.s 			page 264


 7067              		.loc 1 1570 0
 7068 195c 2268     		ldr	r2, [r4]	@ _40, htim_7(D)->Instance
 7069 195e D368     		ldr	r3, [r2, #12]	@ _41, _40->DIER
 7070 1960 43F48063 		orr	r3, r3, #1024	@ _42, _41,
 7071 1964 D4E7     		b	.L562	@
 7072              	.LVL645:
 7073              	.L553:
1577:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 7074              		.loc 1 1577 0
 7075 1966 E06A     		ldr	r0, [r4, #44]	@ _44, htim_7(D)->hdma
 7076 1968 114A     		ldr	r2, .L563	@ tmp185,
 7077 196a 8262     		str	r2, [r0, #40]	@ tmp185, _44->XferCpltCallback
1578:src/stm32f1xx_hal_tim.c **** 
 7078              		.loc 1 1578 0
 7079 196c 114A     		ldr	r2, .L563+4	@ tmp186,
 7080 196e C262     		str	r2, [r0, #44]	@ tmp186, _44->XferHalfCpltCallback
1581:src/stm32f1xx_hal_tim.c **** 
 7081              		.loc 1 1581 0
 7082 1970 114A     		ldr	r2, .L563+8	@ tmp187,
 7083 1972 0263     		str	r2, [r0, #48]	@ tmp187, _44->XferErrorCallback
1584:src/stm32f1xx_hal_tim.c ****       {
 7084              		.loc 1 1584 0
 7085 1974 2268     		ldr	r2, [r4]	@ htim_7(D)->Instance, htim_7(D)->Instance
 7086 1976 3C32     		adds	r2, r2, #60	@, htim_7(D)->Instance,
 7087 1978 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7088              	.LVL646:
 7089 197c 0028     		cmp	r0, #0	@
 7090 197e A6D1     		bne	.L555	@
1589:src/stm32f1xx_hal_tim.c ****       break;
 7091              		.loc 1 1589 0
 7092 1980 2268     		ldr	r2, [r4]	@ _55, htim_7(D)->Instance
 7093 1982 D368     		ldr	r3, [r2, #12]	@ _56, _55->DIER
 7094 1984 43F40063 		orr	r3, r3, #2048	@ _57, _56,
 7095 1988 C2E7     		b	.L562	@
 7096              	.LVL647:
 7097              	.L554:
1596:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 7098              		.loc 1 1596 0
 7099 198a 206B     		ldr	r0, [r4, #48]	@ _59, htim_7(D)->hdma
 7100 198c 084A     		ldr	r2, .L563	@ tmp191,
 7101 198e 8262     		str	r2, [r0, #40]	@ tmp191, _59->XferCpltCallback
1597:src/stm32f1xx_hal_tim.c **** 
 7102              		.loc 1 1597 0
 7103 1990 084A     		ldr	r2, .L563+4	@ tmp192,
 7104 1992 C262     		str	r2, [r0, #44]	@ tmp192, _59->XferHalfCpltCallback
1600:src/stm32f1xx_hal_tim.c **** 
 7105              		.loc 1 1600 0
 7106 1994 084A     		ldr	r2, .L563+8	@ tmp193,
 7107 1996 0263     		str	r2, [r0, #48]	@ tmp193, _59->XferErrorCallback
1603:src/stm32f1xx_hal_tim.c ****       {
 7108              		.loc 1 1603 0
 7109 1998 2268     		ldr	r2, [r4]	@ htim_7(D)->Instance, htim_7(D)->Instance
 7110 199a 4032     		adds	r2, r2, #64	@, htim_7(D)->Instance,
 7111 199c FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7112              	.LVL648:
 7113 19a0 0028     		cmp	r0, #0	@
 7114 19a2 94D1     		bne	.L555	@
ARM GAS  /tmp/ccTsJCXT.s 			page 265


1608:src/stm32f1xx_hal_tim.c ****       break;
 7115              		.loc 1 1608 0
 7116 19a4 2268     		ldr	r2, [r4]	@ _70, htim_7(D)->Instance
 7117 19a6 D368     		ldr	r3, [r2, #12]	@ _71, _70->DIER
 7118 19a8 43F48053 		orr	r3, r3, #4096	@ _72, _71,
 7119 19ac B0E7     		b	.L562	@
 7120              	.L564:
 7121 19ae 00BF     		.align	2
 7122              	.L563:
 7123 19b0 00000000 		.word	TIM_DMADelayPulseCplt
 7124 19b4 00000000 		.word	TIM_DMADelayPulseHalfCplt
 7125 19b8 00000000 		.word	TIM_DMAError
 7126 19bc 002C0140 		.word	1073818624
 7127              		.cfi_endproc
 7128              	.LFE93:
 7129              		.size	HAL_TIM_PWM_Start_DMA, .-HAL_TIM_PWM_Start_DMA
 7130              		.align	1
 7131              		.global	HAL_TIM_OC_Start_DMA
 7132              		.syntax unified
 7133              		.thumb
 7134              		.thumb_func
 7135              		.fpu softvfp
 7136              		.type	HAL_TIM_OC_Start_DMA, %function
 7137              	HAL_TIM_OC_Start_DMA:
 7138              	.LFB242:
 7139              		.cfi_startproc
 7140              		@ args = 0, pretend = 0, frame = 0
 7141              		@ frame_needed = 0, uses_anonymous_args = 0
 7142              		@ link register save eliminated.
 7143 19c0 FFF7FEBF 		b	HAL_TIM_PWM_Start_DMA	@
 7144              		.cfi_endproc
 7145              	.LFE242:
 7146              		.size	HAL_TIM_OC_Start_DMA, .-HAL_TIM_OC_Start_DMA
 7147              		.align	1
 7148              		.global	HAL_TIM_PWM_Stop_DMA
 7149              		.syntax unified
 7150              		.thumb
 7151              		.thumb_func
 7152              		.fpu softvfp
 7153              		.type	HAL_TIM_PWM_Stop_DMA, %function
 7154              	HAL_TIM_PWM_Stop_DMA:
 7155              	.LFB94:
1648:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7156              		.loc 1 1648 0
 7157              		.cfi_startproc
 7158              		@ args = 0, pretend = 0, frame = 0
 7159              		@ frame_needed = 0, uses_anonymous_args = 0
 7160              	.LVL649:
1648:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7161              		.loc 1 1648 0
 7162 19c4 38B5     		push	{r3, r4, r5, lr}	@
 7163              	.LCFI57:
 7164              		.cfi_def_cfa_offset 16
 7165              		.cfi_offset 3, -16
 7166              		.cfi_offset 4, -12
 7167              		.cfi_offset 5, -8
 7168              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTsJCXT.s 			page 266


1648:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7169              		.loc 1 1648 0
 7170 19c6 0446     		mov	r4, r0	@ htim, htim
 7171 19c8 0D46     		mov	r5, r1	@ Channel, Channel
1652:src/stm32f1xx_hal_tim.c ****   {
 7172              		.loc 1 1652 0
 7173 19ca 0C29     		cmp	r1, #12	@ Channel,
 7174 19cc 10D8     		bhi	.L567	@
 7175 19ce DFE801F0 		tbb	[pc, r1]	@ Channel
 7176              	.L569:
 7177 19d2 07       		.byte	(.L568-.L569)/2
 7178 19d3 0F       		.byte	(.L567-.L569)/2
 7179 19d4 0F       		.byte	(.L567-.L569)/2
 7180 19d5 0F       		.byte	(.L567-.L569)/2
 7181 19d6 39       		.byte	(.L570-.L569)/2
 7182 19d7 0F       		.byte	(.L567-.L569)/2
 7183 19d8 0F       		.byte	(.L567-.L569)/2
 7184 19d9 0F       		.byte	(.L567-.L569)/2
 7185 19da 40       		.byte	(.L571-.L569)/2
 7186 19db 0F       		.byte	(.L567-.L569)/2
 7187 19dc 0F       		.byte	(.L567-.L569)/2
 7188 19dd 0F       		.byte	(.L567-.L569)/2
 7189 19de 47       		.byte	(.L572-.L569)/2
 7190 19df 00       		.p2align 1
 7191              	.L568:
1657:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 7192              		.loc 1 1657 0
 7193 19e0 0268     		ldr	r2, [r0]	@ _7, htim_6(D)->Instance
1658:src/stm32f1xx_hal_tim.c ****       break;
 7194              		.loc 1 1658 0
 7195 19e2 406A     		ldr	r0, [r0, #36]	@, htim_6(D)->hdma
 7196              	.LVL650:
1657:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 7197              		.loc 1 1657 0
 7198 19e4 D368     		ldr	r3, [r2, #12]	@ _8, _7->DIER
 7199 19e6 23F40073 		bic	r3, r3, #512	@ _9, _8,
 7200 19ea D360     		str	r3, [r2, #12]	@ _9, _7->DIER
 7201              	.L575:
1682:src/stm32f1xx_hal_tim.c ****       break;
 7202              		.loc 1 1682 0
 7203 19ec FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 7204              	.LVL651:
 7205              	.L567:
1691:src/stm32f1xx_hal_tim.c **** 
 7206              		.loc 1 1691 0
 7207 19f0 0022     		movs	r2, #0	@,
 7208 19f2 2946     		mov	r1, r5	@, Channel
 7209 19f4 2068     		ldr	r0, [r4]	@, htim_6(D)->Instance
 7210 19f6 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7211              	.LVL652:
1693:src/stm32f1xx_hal_tim.c ****   {
 7212              		.loc 1 1693 0
 7213 19fa 2368     		ldr	r3, [r4]	@ _33, htim_6(D)->Instance
 7214 19fc 1C4A     		ldr	r2, .L576	@ tmp143,
 7215 19fe 9342     		cmp	r3, r2	@ _33, tmp143
 7216 1a00 0DD1     		bne	.L573	@,
1696:src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp/ccTsJCXT.s 			page 267


 7217              		.loc 1 1696 0
 7218 1a02 41F21112 		movw	r2, #4369	@ tmp145,
 7219 1a06 196A     		ldr	r1, [r3, #32]	@ _34, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 7220 1a08 1142     		tst	r1, r2	@ _34, tmp145
 7221 1a0a 08D1     		bne	.L573	@,
1696:src/stm32f1xx_hal_tim.c ****   }
 7222              		.loc 1 1696 0 is_stmt 0 discriminator 1
 7223 1a0c 40F24442 		movw	r2, #1092	@ tmp148,
 7224 1a10 196A     		ldr	r1, [r3, #32]	@ _36, MEM[(struct TIM_TypeDef *)1073818624B].CCER
 7225 1a12 1142     		tst	r1, r2	@ _36, tmp148
 7226 1a14 02BF     		ittt	eq
 7227 1a16 5A6C     		ldreq	r2, [r3, #68]	@ _38, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 7228 1a18 22F40042 		biceq	r2, r2, #32768	@ _39, _38,
 7229 1a1c 5A64     		streq	r2, [r3, #68]	@ _39, MEM[(struct TIM_TypeDef *)1073818624B].BDTR
 7230              	.L573:
1700:src/stm32f1xx_hal_tim.c **** 
 7231              		.loc 1 1700 0 is_stmt 1
 7232 1a1e 41F21112 		movw	r2, #4369	@ tmp152,
 7233 1a22 196A     		ldr	r1, [r3, #32]	@ _41, _33->CCER
 7234 1a24 1142     		tst	r1, r2	@ _41, tmp152
 7235 1a26 08D1     		bne	.L574	@,
1700:src/stm32f1xx_hal_tim.c **** 
 7236              		.loc 1 1700 0 is_stmt 0 discriminator 1
 7237 1a28 40F24442 		movw	r2, #1092	@ tmp154,
 7238 1a2c 196A     		ldr	r1, [r3, #32]	@ _43, _33->CCER
 7239 1a2e 1142     		tst	r1, r2	@ _43, tmp154
 7240 1a30 02BF     		ittt	eq
 7241 1a32 1A68     		ldreq	r2, [r3]	@ _45, _33->CR1
 7242 1a34 22F00102 		biceq	r2, r2, #1	@ _46, _45,
 7243 1a38 1A60     		streq	r2, [r3]	@ _46, _33->CR1
 7244              	.L574:
1703:src/stm32f1xx_hal_tim.c **** 
 7245              		.loc 1 1703 0 is_stmt 1
 7246 1a3a 0123     		movs	r3, #1	@ tmp156,
1707:src/stm32f1xx_hal_tim.c **** 
 7247              		.loc 1 1707 0
 7248 1a3c 0020     		movs	r0, #0	@,
1703:src/stm32f1xx_hal_tim.c **** 
 7249              		.loc 1 1703 0
 7250 1a3e 84F83D30 		strb	r3, [r4, #61]	@ tmp156, htim_6(D)->State
1707:src/stm32f1xx_hal_tim.c **** 
 7251              		.loc 1 1707 0
 7252 1a42 38BD     		pop	{r3, r4, r5, pc}	@
 7253              	.LVL653:
 7254              	.L570:
1665:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 7255              		.loc 1 1665 0
 7256 1a44 0268     		ldr	r2, [r0]	@ _13, htim_6(D)->Instance
1666:src/stm32f1xx_hal_tim.c ****       break;
 7257              		.loc 1 1666 0
 7258 1a46 806A     		ldr	r0, [r0, #40]	@, htim_6(D)->hdma
 7259              	.LVL654:
1665:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 7260              		.loc 1 1665 0
 7261 1a48 D368     		ldr	r3, [r2, #12]	@ _14, _13->DIER
 7262 1a4a 23F48063 		bic	r3, r3, #1024	@ _15, _14,
 7263 1a4e D360     		str	r3, [r2, #12]	@ _15, _13->DIER
ARM GAS  /tmp/ccTsJCXT.s 			page 268


 7264 1a50 CCE7     		b	.L575	@
 7265              	.LVL655:
 7266              	.L571:
1673:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 7267              		.loc 1 1673 0
 7268 1a52 0268     		ldr	r2, [r0]	@ _19, htim_6(D)->Instance
1674:src/stm32f1xx_hal_tim.c ****       break;
 7269              		.loc 1 1674 0
 7270 1a54 C06A     		ldr	r0, [r0, #44]	@, htim_6(D)->hdma
 7271              	.LVL656:
1673:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 7272              		.loc 1 1673 0
 7273 1a56 D368     		ldr	r3, [r2, #12]	@ _20, _19->DIER
 7274 1a58 23F40063 		bic	r3, r3, #2048	@ _21, _20,
 7275 1a5c D360     		str	r3, [r2, #12]	@ _21, _19->DIER
 7276 1a5e C5E7     		b	.L575	@
 7277              	.LVL657:
 7278              	.L572:
1681:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 7279              		.loc 1 1681 0
 7280 1a60 0268     		ldr	r2, [r0]	@ _25, htim_6(D)->Instance
1682:src/stm32f1xx_hal_tim.c ****       break;
 7281              		.loc 1 1682 0
 7282 1a62 006B     		ldr	r0, [r0, #48]	@, htim_6(D)->hdma
 7283              	.LVL658:
1681:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 7284              		.loc 1 1681 0
 7285 1a64 D368     		ldr	r3, [r2, #12]	@ _26, _25->DIER
 7286 1a66 23F48053 		bic	r3, r3, #4096	@ _27, _26,
 7287 1a6a D360     		str	r3, [r2, #12]	@ _27, _25->DIER
 7288 1a6c BEE7     		b	.L575	@
 7289              	.L577:
 7290 1a6e 00BF     		.align	2
 7291              	.L576:
 7292 1a70 002C0140 		.word	1073818624
 7293              		.cfi_endproc
 7294              	.LFE94:
 7295              		.size	HAL_TIM_PWM_Stop_DMA, .-HAL_TIM_PWM_Stop_DMA
 7296              		.align	1
 7297              		.global	HAL_TIM_OC_Stop_DMA
 7298              		.syntax unified
 7299              		.thumb
 7300              		.thumb_func
 7301              		.fpu softvfp
 7302              		.type	HAL_TIM_OC_Stop_DMA, %function
 7303              	HAL_TIM_OC_Stop_DMA:
 7304              	.LFB240:
 7305              		.cfi_startproc
 7306              		@ args = 0, pretend = 0, frame = 0
 7307              		@ frame_needed = 0, uses_anonymous_args = 0
 7308              		@ link register save eliminated.
 7309 1a74 FFF7FEBF 		b	HAL_TIM_PWM_Stop_DMA	@
 7310              		.cfi_endproc
 7311              	.LFE240:
 7312              		.size	HAL_TIM_OC_Stop_DMA, .-HAL_TIM_OC_Stop_DMA
 7313              		.align	1
 7314              		.global	HAL_TIM_IC_Start
ARM GAS  /tmp/ccTsJCXT.s 			page 269


 7315              		.syntax unified
 7316              		.thumb
 7317              		.thumb_func
 7318              		.fpu softvfp
 7319              		.type	HAL_TIM_IC_Start, %function
 7320              	HAL_TIM_IC_Start:
 7321              	.LFB99:
1869:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7322              		.loc 1 1869 0
 7323              		.cfi_startproc
 7324              		@ args = 0, pretend = 0, frame = 0
 7325              		@ frame_needed = 0, uses_anonymous_args = 0
 7326              	.LVL659:
1869:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7327              		.loc 1 1869 0
 7328 1a78 10B5     		push	{r4, lr}	@
 7329              	.LCFI58:
 7330              		.cfi_def_cfa_offset 8
 7331              		.cfi_offset 4, -8
 7332              		.cfi_offset 14, -4
1869:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7333              		.loc 1 1869 0
 7334 1a7a 0446     		mov	r4, r0	@ htim, htim
1876:src/stm32f1xx_hal_tim.c **** 
 7335              		.loc 1 1876 0
 7336 1a7c 0122     		movs	r2, #1	@,
 7337 1a7e 0068     		ldr	r0, [r0]	@, htim_3(D)->Instance
 7338              	.LVL660:
 7339 1a80 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7340              	.LVL661:
1879:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7341              		.loc 1 1879 0
 7342 1a84 2368     		ldr	r3, [r4]	@ _7, htim_3(D)->Instance
1887:src/stm32f1xx_hal_tim.c **** 
 7343              		.loc 1 1887 0
 7344 1a86 0020     		movs	r0, #0	@,
1879:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7345              		.loc 1 1879 0
 7346 1a88 9A68     		ldr	r2, [r3, #8]	@ _8, _7->SMCR
 7347              	.LVL662:
 7348 1a8a 02F00702 		and	r2, r2, #7	@ tmpsmcr, _8,
 7349              	.LVL663:
1880:src/stm32f1xx_hal_tim.c ****   {
 7350              		.loc 1 1880 0
 7351 1a8e 062A     		cmp	r2, #6	@ tmpsmcr,
1882:src/stm32f1xx_hal_tim.c ****   }
 7352              		.loc 1 1882 0
 7353 1a90 1EBF     		ittt	ne
 7354 1a92 1A68     		ldrne	r2, [r3]	@ _10, _7->CR1
 7355              	.LVL664:
 7356 1a94 42F00102 		orrne	r2, r2, #1	@ _11, _10,
 7357 1a98 1A60     		strne	r2, [r3]	@ _11, _7->CR1
1887:src/stm32f1xx_hal_tim.c **** 
 7358              		.loc 1 1887 0
 7359 1a9a 10BD     		pop	{r4, pc}	@
 7360              		.cfi_endproc
 7361              	.LFE99:
ARM GAS  /tmp/ccTsJCXT.s 			page 270


 7362              		.size	HAL_TIM_IC_Start, .-HAL_TIM_IC_Start
 7363              		.align	1
 7364              		.global	HAL_TIM_IC_Stop
 7365              		.syntax unified
 7366              		.thumb
 7367              		.thumb_func
 7368              		.fpu softvfp
 7369              		.type	HAL_TIM_IC_Stop, %function
 7370              	HAL_TIM_IC_Stop:
 7371              	.LFB100:
1901:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7372              		.loc 1 1901 0
 7373              		.cfi_startproc
 7374              		@ args = 0, pretend = 0, frame = 0
 7375              		@ frame_needed = 0, uses_anonymous_args = 0
 7376              	.LVL665:
 7377 1a9c 10B5     		push	{r4, lr}	@
 7378              	.LCFI59:
 7379              		.cfi_def_cfa_offset 8
 7380              		.cfi_offset 4, -8
 7381              		.cfi_offset 14, -4
1901:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7382              		.loc 1 1901 0
 7383 1a9e 0446     		mov	r4, r0	@ htim, htim
1906:src/stm32f1xx_hal_tim.c **** 
 7384              		.loc 1 1906 0
 7385 1aa0 0022     		movs	r2, #0	@,
 7386 1aa2 0068     		ldr	r0, [r0]	@, htim_3(D)->Instance
 7387              	.LVL666:
 7388 1aa4 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7389              	.LVL667:
1909:src/stm32f1xx_hal_tim.c **** 
 7390              		.loc 1 1909 0
 7391 1aa8 41F21112 		movw	r2, #4369	@ tmp121,
 7392 1aac 2368     		ldr	r3, [r4]	@ _7, htim_3(D)->Instance
 7393 1aae 196A     		ldr	r1, [r3, #32]	@ _8, _7->CCER
 7394 1ab0 1142     		tst	r1, r2	@ _8, tmp121
 7395 1ab2 08D1     		bne	.L585	@,
1909:src/stm32f1xx_hal_tim.c **** 
 7396              		.loc 1 1909 0 is_stmt 0 discriminator 1
 7397 1ab4 40F24442 		movw	r2, #1092	@ tmp123,
 7398 1ab8 196A     		ldr	r1, [r3, #32]	@ _10, _7->CCER
 7399 1aba 1142     		tst	r1, r2	@ _10, tmp123
 7400 1abc 02BF     		ittt	eq
 7401 1abe 1A68     		ldreq	r2, [r3]	@ _12, _7->CR1
 7402 1ac0 22F00102 		biceq	r2, r2, #1	@ _13, _12,
 7403 1ac4 1A60     		streq	r2, [r3]	@ _13, _7->CR1
 7404              	.L585:
1913:src/stm32f1xx_hal_tim.c **** 
 7405              		.loc 1 1913 0 is_stmt 1
 7406 1ac6 0020     		movs	r0, #0	@,
 7407 1ac8 10BD     		pop	{r4, pc}	@
 7408              		.cfi_endproc
 7409              	.LFE100:
 7410              		.size	HAL_TIM_IC_Stop, .-HAL_TIM_IC_Stop
 7411              		.align	1
 7412              		.global	HAL_TIM_IC_Start_IT
ARM GAS  /tmp/ccTsJCXT.s 			page 271


 7413              		.syntax unified
 7414              		.thumb
 7415              		.thumb_func
 7416              		.fpu softvfp
 7417              		.type	HAL_TIM_IC_Start_IT, %function
 7418              	HAL_TIM_IC_Start_IT:
 7419              	.LFB101:
1927:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7420              		.loc 1 1927 0
 7421              		.cfi_startproc
 7422              		@ args = 0, pretend = 0, frame = 0
 7423              		@ frame_needed = 0, uses_anonymous_args = 0
 7424              	.LVL668:
 7425 1aca 10B5     		push	{r4, lr}	@
 7426              	.LCFI60:
 7427              		.cfi_def_cfa_offset 8
 7428              		.cfi_offset 4, -8
 7429              		.cfi_offset 14, -4
1927:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7430              		.loc 1 1927 0
 7431 1acc 0446     		mov	r4, r0	@ htim, htim
1933:src/stm32f1xx_hal_tim.c ****   {
 7432              		.loc 1 1933 0
 7433 1ace 0C29     		cmp	r1, #12	@ Channel,
 7434 1ad0 0DD8     		bhi	.L587	@
 7435 1ad2 DFE801F0 		tbb	[pc, r1]	@ Channel
 7436              	.L589:
 7437 1ad6 07       		.byte	(.L588-.L589)/2
 7438 1ad7 0C       		.byte	(.L587-.L589)/2
 7439 1ad8 0C       		.byte	(.L587-.L589)/2
 7440 1ad9 0C       		.byte	(.L587-.L589)/2
 7441 1ada 1C       		.byte	(.L590-.L589)/2
 7442 1adb 0C       		.byte	(.L587-.L589)/2
 7443 1adc 0C       		.byte	(.L587-.L589)/2
 7444 1add 0C       		.byte	(.L587-.L589)/2
 7445 1ade 21       		.byte	(.L591-.L589)/2
 7446 1adf 0C       		.byte	(.L587-.L589)/2
 7447 1ae0 0C       		.byte	(.L587-.L589)/2
 7448 1ae1 0C       		.byte	(.L587-.L589)/2
 7449 1ae2 26       		.byte	(.L592-.L589)/2
 7450 1ae3 00       		.p2align 1
 7451              	.L588:
1938:src/stm32f1xx_hal_tim.c ****       break;
 7452              		.loc 1 1938 0
 7453 1ae4 0268     		ldr	r2, [r0]	@ _6, htim_5(D)->Instance
 7454 1ae6 D368     		ldr	r3, [r2, #12]	@ _7, _6->DIER
 7455 1ae8 43F00203 		orr	r3, r3, #2	@ _8, _7,
 7456              	.L597:
1959:src/stm32f1xx_hal_tim.c ****       break;
 7457              		.loc 1 1959 0
 7458 1aec D360     		str	r3, [r2, #12]	@ _20,
 7459              	.L587:
1967:src/stm32f1xx_hal_tim.c **** 
 7460              		.loc 1 1967 0
 7461 1aee 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 7462              	.LVL669:
 7463 1af0 0122     		movs	r2, #1	@,
ARM GAS  /tmp/ccTsJCXT.s 			page 272


 7464 1af2 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7465              	.LVL670:
1970:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7466              		.loc 1 1970 0
 7467 1af6 2368     		ldr	r3, [r4]	@ _24, htim_5(D)->Instance
1978:src/stm32f1xx_hal_tim.c **** 
 7468              		.loc 1 1978 0
 7469 1af8 0020     		movs	r0, #0	@,
1970:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7470              		.loc 1 1970 0
 7471 1afa 9A68     		ldr	r2, [r3, #8]	@ _25, _24->SMCR
 7472              	.LVL671:
 7473 1afc 02F00702 		and	r2, r2, #7	@ tmpsmcr, _25,
 7474              	.LVL672:
1971:src/stm32f1xx_hal_tim.c ****   {
 7475              		.loc 1 1971 0
 7476 1b00 062A     		cmp	r2, #6	@ tmpsmcr,
1973:src/stm32f1xx_hal_tim.c ****   }
 7477              		.loc 1 1973 0
 7478 1b02 1EBF     		ittt	ne
 7479 1b04 1A68     		ldrne	r2, [r3]	@ _27, _24->CR1
 7480              	.LVL673:
 7481 1b06 42F00102 		orrne	r2, r2, #1	@ _28, _27,
 7482 1b0a 1A60     		strne	r2, [r3]	@ _28, _24->CR1
1978:src/stm32f1xx_hal_tim.c **** 
 7483              		.loc 1 1978 0
 7484 1b0c 10BD     		pop	{r4, pc}	@
 7485              	.LVL674:
 7486              	.L590:
1945:src/stm32f1xx_hal_tim.c ****       break;
 7487              		.loc 1 1945 0
 7488 1b0e 0268     		ldr	r2, [r0]	@ _10, htim_5(D)->Instance
 7489 1b10 D368     		ldr	r3, [r2, #12]	@ _11, _10->DIER
 7490 1b12 43F00403 		orr	r3, r3, #4	@ _12, _11,
 7491 1b16 E9E7     		b	.L597	@
 7492              	.L591:
1952:src/stm32f1xx_hal_tim.c ****       break;
 7493              		.loc 1 1952 0
 7494 1b18 0268     		ldr	r2, [r0]	@ _14, htim_5(D)->Instance
 7495 1b1a D368     		ldr	r3, [r2, #12]	@ _15, _14->DIER
 7496 1b1c 43F00803 		orr	r3, r3, #8	@ _16, _15,
 7497 1b20 E4E7     		b	.L597	@
 7498              	.L592:
1959:src/stm32f1xx_hal_tim.c ****       break;
 7499              		.loc 1 1959 0
 7500 1b22 0268     		ldr	r2, [r0]	@ _18, htim_5(D)->Instance
 7501 1b24 D368     		ldr	r3, [r2, #12]	@ _19, _18->DIER
 7502 1b26 43F01003 		orr	r3, r3, #16	@ _20, _19,
 7503 1b2a DFE7     		b	.L597	@
 7504              		.cfi_endproc
 7505              	.LFE101:
 7506              		.size	HAL_TIM_IC_Start_IT, .-HAL_TIM_IC_Start_IT
 7507              		.align	1
 7508              		.global	HAL_TIM_IC_Stop_IT
 7509              		.syntax unified
 7510              		.thumb
 7511              		.thumb_func
ARM GAS  /tmp/ccTsJCXT.s 			page 273


 7512              		.fpu softvfp
 7513              		.type	HAL_TIM_IC_Stop_IT, %function
 7514              	HAL_TIM_IC_Stop_IT:
 7515              	.LFB102:
1992:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7516              		.loc 1 1992 0
 7517              		.cfi_startproc
 7518              		@ args = 0, pretend = 0, frame = 0
 7519              		@ frame_needed = 0, uses_anonymous_args = 0
 7520              	.LVL675:
 7521 1b2c 10B5     		push	{r4, lr}	@
 7522              	.LCFI61:
 7523              		.cfi_def_cfa_offset 8
 7524              		.cfi_offset 4, -8
 7525              		.cfi_offset 14, -4
1992:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7526              		.loc 1 1992 0
 7527 1b2e 0446     		mov	r4, r0	@ htim, htim
1996:src/stm32f1xx_hal_tim.c ****   {
 7528              		.loc 1 1996 0
 7529 1b30 0C29     		cmp	r1, #12	@ Channel,
 7530 1b32 0DD8     		bhi	.L599	@
 7531 1b34 DFE801F0 		tbb	[pc, r1]	@ Channel
 7532              	.L601:
 7533 1b38 07       		.byte	(.L600-.L601)/2
 7534 1b39 0C       		.byte	(.L599-.L601)/2
 7535 1b3a 0C       		.byte	(.L599-.L601)/2
 7536 1b3b 0C       		.byte	(.L599-.L601)/2
 7537 1b3c 21       		.byte	(.L602-.L601)/2
 7538 1b3d 0C       		.byte	(.L599-.L601)/2
 7539 1b3e 0C       		.byte	(.L599-.L601)/2
 7540 1b3f 0C       		.byte	(.L599-.L601)/2
 7541 1b40 26       		.byte	(.L603-.L601)/2
 7542 1b41 0C       		.byte	(.L599-.L601)/2
 7543 1b42 0C       		.byte	(.L599-.L601)/2
 7544 1b43 0C       		.byte	(.L599-.L601)/2
 7545 1b44 2B       		.byte	(.L604-.L601)/2
 7546 1b45 00       		.p2align 1
 7547              	.L600:
2001:src/stm32f1xx_hal_tim.c ****       break;
 7548              		.loc 1 2001 0
 7549 1b46 0268     		ldr	r2, [r0]	@ _6, htim_5(D)->Instance
 7550 1b48 D368     		ldr	r3, [r2, #12]	@ _7, _6->DIER
 7551 1b4a 23F00203 		bic	r3, r3, #2	@ _8, _7,
 7552              	.L606:
2022:src/stm32f1xx_hal_tim.c ****       break;
 7553              		.loc 1 2022 0
 7554 1b4e D360     		str	r3, [r2, #12]	@ _20,
 7555              	.L599:
2031:src/stm32f1xx_hal_tim.c **** 
 7556              		.loc 1 2031 0
 7557 1b50 0022     		movs	r2, #0	@,
 7558 1b52 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 7559              	.LVL676:
 7560 1b54 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7561              	.LVL677:
2034:src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp/ccTsJCXT.s 			page 274


 7562              		.loc 1 2034 0
 7563 1b58 41F21112 		movw	r2, #4369	@ tmp133,
 7564 1b5c 2368     		ldr	r3, [r4]	@ _24, htim_5(D)->Instance
 7565 1b5e 196A     		ldr	r1, [r3, #32]	@ _25, _24->CCER
 7566 1b60 1142     		tst	r1, r2	@ _25, tmp133
 7567 1b62 08D1     		bne	.L605	@,
2034:src/stm32f1xx_hal_tim.c **** 
 7568              		.loc 1 2034 0 is_stmt 0 discriminator 1
 7569 1b64 40F24442 		movw	r2, #1092	@ tmp135,
 7570 1b68 196A     		ldr	r1, [r3, #32]	@ _27, _24->CCER
 7571 1b6a 1142     		tst	r1, r2	@ _27, tmp135
 7572 1b6c 02BF     		ittt	eq
 7573 1b6e 1A68     		ldreq	r2, [r3]	@ _29, _24->CR1
 7574 1b70 22F00102 		biceq	r2, r2, #1	@ _30, _29,
 7575 1b74 1A60     		streq	r2, [r3]	@ _30, _24->CR1
 7576              	.L605:
2038:src/stm32f1xx_hal_tim.c **** 
 7577              		.loc 1 2038 0 is_stmt 1
 7578 1b76 0020     		movs	r0, #0	@,
 7579 1b78 10BD     		pop	{r4, pc}	@
 7580              	.LVL678:
 7581              	.L602:
2008:src/stm32f1xx_hal_tim.c ****       break;
 7582              		.loc 1 2008 0
 7583 1b7a 0268     		ldr	r2, [r0]	@ _10, htim_5(D)->Instance
 7584 1b7c D368     		ldr	r3, [r2, #12]	@ _11, _10->DIER
 7585 1b7e 23F00403 		bic	r3, r3, #4	@ _12, _11,
 7586 1b82 E4E7     		b	.L606	@
 7587              	.L603:
2015:src/stm32f1xx_hal_tim.c ****       break;
 7588              		.loc 1 2015 0
 7589 1b84 0268     		ldr	r2, [r0]	@ _14, htim_5(D)->Instance
 7590 1b86 D368     		ldr	r3, [r2, #12]	@ _15, _14->DIER
 7591 1b88 23F00803 		bic	r3, r3, #8	@ _16, _15,
 7592 1b8c DFE7     		b	.L606	@
 7593              	.L604:
2022:src/stm32f1xx_hal_tim.c ****       break;
 7594              		.loc 1 2022 0
 7595 1b8e 0268     		ldr	r2, [r0]	@ _18, htim_5(D)->Instance
 7596 1b90 D368     		ldr	r3, [r2, #12]	@ _19, _18->DIER
 7597 1b92 23F01003 		bic	r3, r3, #16	@ _20, _19,
 7598 1b96 DAE7     		b	.L606	@
 7599              		.cfi_endproc
 7600              	.LFE102:
 7601              		.size	HAL_TIM_IC_Stop_IT, .-HAL_TIM_IC_Stop_IT
 7602              		.align	1
 7603              		.global	HAL_TIM_IC_Start_DMA
 7604              		.syntax unified
 7605              		.thumb
 7606              		.thumb_func
 7607              		.fpu softvfp
 7608              		.type	HAL_TIM_IC_Start_DMA, %function
 7609              	HAL_TIM_IC_Start_DMA:
 7610              	.LFB103:
2054:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7611              		.loc 1 2054 0
 7612              		.cfi_startproc
ARM GAS  /tmp/ccTsJCXT.s 			page 275


 7613              		@ args = 0, pretend = 0, frame = 0
 7614              		@ frame_needed = 0, uses_anonymous_args = 0
 7615              	.LVL679:
 7616 1b98 38B5     		push	{r3, r4, r5, lr}	@
 7617              	.LCFI62:
 7618              		.cfi_def_cfa_offset 16
 7619              		.cfi_offset 3, -16
 7620              		.cfi_offset 4, -12
 7621              		.cfi_offset 5, -8
 7622              		.cfi_offset 14, -4
2054:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7623              		.loc 1 2054 0
 7624 1b9a 0446     		mov	r4, r0	@ htim, htim
2061:src/stm32f1xx_hal_tim.c ****   {
 7625              		.loc 1 2061 0
 7626 1b9c 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 7627              	.LVL680:
2054:src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 7628              		.loc 1 2054 0
 7629 1ba0 0D46     		mov	r5, r1	@ Channel, Channel
2061:src/stm32f1xx_hal_tim.c ****   {
 7630              		.loc 1 2061 0
 7631 1ba2 C0B2     		uxtb	r0, r0	@ _7, htim_6(D)->State
 7632 1ba4 0228     		cmp	r0, #2	@ _7,
 7633 1ba6 37D0     		beq	.L608	@,
2065:src/stm32f1xx_hal_tim.c ****   {
 7634              		.loc 1 2065 0
 7635 1ba8 94F83D10 		ldrb	r1, [r4, #61]	@ zero_extendqisi2	@ htim_6(D)->State, htim_6(D)->State
 7636              	.LVL681:
 7637 1bac 0129     		cmp	r1, #1	@ htim_6(D)->State,
 7638 1bae 06D1     		bne	.L609	@,
2067:src/stm32f1xx_hal_tim.c ****     {
 7639              		.loc 1 2067 0
 7640 1bb0 12B9     		cbnz	r2, .L610	@ pData,
2067:src/stm32f1xx_hal_tim.c ****     {
 7641              		.loc 1 2067 0 is_stmt 0 discriminator 1
 7642 1bb2 0BB1     		cbz	r3, .L610	@ Length,
 7643              	.LVL682:
 7644              	.L617:
2069:src/stm32f1xx_hal_tim.c ****     }
 7645              		.loc 1 2069 0 is_stmt 1
 7646 1bb4 0120     		movs	r0, #1	@ <retval>,
 7647 1bb6 38BD     		pop	{r3, r4, r5, pc}	@
 7648              	.LVL683:
 7649              	.L610:
2073:src/stm32f1xx_hal_tim.c ****     }
 7650              		.loc 1 2073 0
 7651 1bb8 0221     		movs	r1, #2	@ tmp169,
 7652 1bba 84F83D10 		strb	r1, [r4, #61]	@ tmp169, htim_6(D)->State
 7653              	.L609:
2081:src/stm32f1xx_hal_tim.c ****   {
 7654              		.loc 1 2081 0
 7655 1bbe 0C2D     		cmp	r5, #12	@ Channel,
 7656 1bc0 1AD8     		bhi	.L611	@
 7657 1bc2 DFE805F0 		tbb	[pc, r5]	@ Channel
 7658              	.L613:
 7659 1bc6 07       		.byte	(.L612-.L613)/2
ARM GAS  /tmp/ccTsJCXT.s 			page 276


 7660 1bc7 19       		.byte	(.L611-.L613)/2
 7661 1bc8 19       		.byte	(.L611-.L613)/2
 7662 1bc9 19       		.byte	(.L611-.L613)/2
 7663 1bca 2A       		.byte	(.L614-.L613)/2
 7664 1bcb 19       		.byte	(.L611-.L613)/2
 7665 1bcc 19       		.byte	(.L611-.L613)/2
 7666 1bcd 19       		.byte	(.L611-.L613)/2
 7667 1bce 3C       		.byte	(.L615-.L613)/2
 7668 1bcf 19       		.byte	(.L611-.L613)/2
 7669 1bd0 19       		.byte	(.L611-.L613)/2
 7670 1bd1 19       		.byte	(.L611-.L613)/2
 7671 1bd2 4E       		.byte	(.L616-.L613)/2
 7672 1bd3 00       		.p2align 1
 7673              	.L612:
2086:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7674              		.loc 1 2086 0
 7675 1bd4 606A     		ldr	r0, [r4, #36]	@ _13, htim_6(D)->hdma
 7676 1bd6 2C49     		ldr	r1, .L624	@ tmp171,
 7677 1bd8 8162     		str	r1, [r0, #40]	@ tmp171, _13->XferCpltCallback
2087:src/stm32f1xx_hal_tim.c **** 
 7678              		.loc 1 2087 0
 7679 1bda 2C49     		ldr	r1, .L624+4	@ tmp172,
 7680 1bdc C162     		str	r1, [r0, #44]	@ tmp172, _13->XferHalfCpltCallback
2090:src/stm32f1xx_hal_tim.c **** 
 7681              		.loc 1 2090 0
 7682 1bde 2C49     		ldr	r1, .L624+8	@ tmp173,
 7683 1be0 0163     		str	r1, [r0, #48]	@ tmp173, _13->XferErrorCallback
2093:src/stm32f1xx_hal_tim.c ****       {
 7684              		.loc 1 2093 0
 7685 1be2 2168     		ldr	r1, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 7686 1be4 3431     		adds	r1, r1, #52	@, htim_6(D)->Instance,
 7687 1be6 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7688              	.LVL684:
 7689 1bea 0028     		cmp	r0, #0	@
 7690 1bec E2D1     		bne	.L617	@
2098:src/stm32f1xx_hal_tim.c ****       break;
 7691              		.loc 1 2098 0
 7692 1bee 2268     		ldr	r2, [r4]	@ _24, htim_6(D)->Instance
 7693 1bf0 D368     		ldr	r3, [r2, #12]	@ _25, _24->DIER
 7694 1bf2 43F40073 		orr	r3, r3, #512	@ _26, _25,
 7695              	.L623:
2155:src/stm32f1xx_hal_tim.c ****       break;
 7696              		.loc 1 2155 0
 7697 1bf6 D360     		str	r3, [r2, #12]	@ _71,
 7698              	.L611:
2164:src/stm32f1xx_hal_tim.c **** 
 7699              		.loc 1 2164 0
 7700 1bf8 0122     		movs	r2, #1	@,
 7701 1bfa 2068     		ldr	r0, [r4]	@, htim_6(D)->Instance
 7702 1bfc 2946     		mov	r1, r5	@, Channel
 7703 1bfe FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7704              	.LVL685:
2174:src/stm32f1xx_hal_tim.c **** }
 7705              		.loc 1 2174 0
 7706 1c02 0020     		movs	r0, #0	@ <retval>,
2167:src/stm32f1xx_hal_tim.c ****   if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7707              		.loc 1 2167 0
ARM GAS  /tmp/ccTsJCXT.s 			page 277


 7708 1c04 2368     		ldr	r3, [r4]	@ _75, htim_6(D)->Instance
 7709 1c06 9A68     		ldr	r2, [r3, #8]	@ _76, _75->SMCR
 7710              	.LVL686:
 7711 1c08 02F00702 		and	r2, r2, #7	@ tmpsmcr, _76,
 7712              	.LVL687:
2168:src/stm32f1xx_hal_tim.c ****   {
 7713              		.loc 1 2168 0
 7714 1c0c 062A     		cmp	r2, #6	@ tmpsmcr,
2170:src/stm32f1xx_hal_tim.c ****   }
 7715              		.loc 1 2170 0
 7716 1c0e 1EBF     		ittt	ne
 7717 1c10 1A68     		ldrne	r2, [r3]	@ _78, _75->CR1
 7718              	.LVL688:
 7719 1c12 42F00102 		orrne	r2, r2, #1	@ _79, _78,
 7720 1c16 1A60     		strne	r2, [r3]	@ _79, _75->CR1
 7721              	.L608:
2175:src/stm32f1xx_hal_tim.c **** 
 7722              		.loc 1 2175 0
 7723 1c18 38BD     		pop	{r3, r4, r5, pc}	@
 7724              	.LVL689:
 7725              	.L614:
2105:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7726              		.loc 1 2105 0
 7727 1c1a A06A     		ldr	r0, [r4, #40]	@ _28, htim_6(D)->hdma
 7728 1c1c 1A49     		ldr	r1, .L624	@ tmp177,
 7729 1c1e 8162     		str	r1, [r0, #40]	@ tmp177, _28->XferCpltCallback
2106:src/stm32f1xx_hal_tim.c **** 
 7730              		.loc 1 2106 0
 7731 1c20 1A49     		ldr	r1, .L624+4	@ tmp178,
 7732 1c22 C162     		str	r1, [r0, #44]	@ tmp178, _28->XferHalfCpltCallback
2109:src/stm32f1xx_hal_tim.c **** 
 7733              		.loc 1 2109 0
 7734 1c24 1A49     		ldr	r1, .L624+8	@ tmp179,
 7735 1c26 0163     		str	r1, [r0, #48]	@ tmp179, _28->XferErrorCallback
2112:src/stm32f1xx_hal_tim.c ****       {
 7736              		.loc 1 2112 0
 7737 1c28 2168     		ldr	r1, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 7738 1c2a 3831     		adds	r1, r1, #56	@, htim_6(D)->Instance,
 7739 1c2c FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7740              	.LVL690:
 7741 1c30 0028     		cmp	r0, #0	@
 7742 1c32 BFD1     		bne	.L617	@
2117:src/stm32f1xx_hal_tim.c ****       break;
 7743              		.loc 1 2117 0
 7744 1c34 2268     		ldr	r2, [r4]	@ _39, htim_6(D)->Instance
 7745 1c36 D368     		ldr	r3, [r2, #12]	@ _40, _39->DIER
 7746 1c38 43F48063 		orr	r3, r3, #1024	@ _41, _40,
 7747 1c3c DBE7     		b	.L623	@
 7748              	.LVL691:
 7749              	.L615:
2124:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7750              		.loc 1 2124 0
 7751 1c3e E06A     		ldr	r0, [r4, #44]	@ _43, htim_6(D)->hdma
 7752 1c40 1149     		ldr	r1, .L624	@ tmp183,
 7753 1c42 8162     		str	r1, [r0, #40]	@ tmp183, _43->XferCpltCallback
2125:src/stm32f1xx_hal_tim.c **** 
 7754              		.loc 1 2125 0
ARM GAS  /tmp/ccTsJCXT.s 			page 278


 7755 1c44 1149     		ldr	r1, .L624+4	@ tmp184,
 7756 1c46 C162     		str	r1, [r0, #44]	@ tmp184, _43->XferHalfCpltCallback
2128:src/stm32f1xx_hal_tim.c **** 
 7757              		.loc 1 2128 0
 7758 1c48 1149     		ldr	r1, .L624+8	@ tmp185,
 7759 1c4a 0163     		str	r1, [r0, #48]	@ tmp185, _43->XferErrorCallback
2131:src/stm32f1xx_hal_tim.c ****       {
 7760              		.loc 1 2131 0
 7761 1c4c 2168     		ldr	r1, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 7762 1c4e 3C31     		adds	r1, r1, #60	@, htim_6(D)->Instance,
 7763 1c50 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7764              	.LVL692:
 7765 1c54 0028     		cmp	r0, #0	@
 7766 1c56 ADD1     		bne	.L617	@
2136:src/stm32f1xx_hal_tim.c ****       break;
 7767              		.loc 1 2136 0
 7768 1c58 2268     		ldr	r2, [r4]	@ _54, htim_6(D)->Instance
 7769 1c5a D368     		ldr	r3, [r2, #12]	@ _55, _54->DIER
 7770 1c5c 43F40063 		orr	r3, r3, #2048	@ _56, _55,
 7771 1c60 C9E7     		b	.L623	@
 7772              	.LVL693:
 7773              	.L616:
2143:src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7774              		.loc 1 2143 0
 7775 1c62 206B     		ldr	r0, [r4, #48]	@ _58, htim_6(D)->hdma
 7776 1c64 0849     		ldr	r1, .L624	@ tmp189,
 7777 1c66 8162     		str	r1, [r0, #40]	@ tmp189, _58->XferCpltCallback
2144:src/stm32f1xx_hal_tim.c **** 
 7778              		.loc 1 2144 0
 7779 1c68 0849     		ldr	r1, .L624+4	@ tmp190,
 7780 1c6a C162     		str	r1, [r0, #44]	@ tmp190, _58->XferHalfCpltCallback
2147:src/stm32f1xx_hal_tim.c **** 
 7781              		.loc 1 2147 0
 7782 1c6c 0849     		ldr	r1, .L624+8	@ tmp191,
 7783 1c6e 0163     		str	r1, [r0, #48]	@ tmp191, _58->XferErrorCallback
2150:src/stm32f1xx_hal_tim.c ****       {
 7784              		.loc 1 2150 0
 7785 1c70 2168     		ldr	r1, [r4]	@ htim_6(D)->Instance, htim_6(D)->Instance
 7786 1c72 4031     		adds	r1, r1, #64	@, htim_6(D)->Instance,
 7787 1c74 FFF7FEFF 		bl	HAL_DMA_Start_IT	@
 7788              	.LVL694:
 7789 1c78 0028     		cmp	r0, #0	@
 7790 1c7a 9BD1     		bne	.L617	@
2155:src/stm32f1xx_hal_tim.c ****       break;
 7791              		.loc 1 2155 0
 7792 1c7c 2268     		ldr	r2, [r4]	@ _69, htim_6(D)->Instance
 7793 1c7e D368     		ldr	r3, [r2, #12]	@ _70, _69->DIER
 7794 1c80 43F48053 		orr	r3, r3, #4096	@ _71, _70,
 7795 1c84 B7E7     		b	.L623	@
 7796              	.L625:
 7797 1c86 00BF     		.align	2
 7798              	.L624:
 7799 1c88 00000000 		.word	TIM_DMACaptureCplt
 7800 1c8c 00000000 		.word	TIM_DMACaptureHalfCplt
 7801 1c90 00000000 		.word	TIM_DMAError
 7802              		.cfi_endproc
 7803              	.LFE103:
ARM GAS  /tmp/ccTsJCXT.s 			page 279


 7804              		.size	HAL_TIM_IC_Start_DMA, .-HAL_TIM_IC_Start_DMA
 7805              		.align	1
 7806              		.global	HAL_TIM_IC_Stop_DMA
 7807              		.syntax unified
 7808              		.thumb
 7809              		.thumb_func
 7810              		.fpu softvfp
 7811              		.type	HAL_TIM_IC_Stop_DMA, %function
 7812              	HAL_TIM_IC_Stop_DMA:
 7813              	.LFB104:
2189:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7814              		.loc 1 2189 0
 7815              		.cfi_startproc
 7816              		@ args = 0, pretend = 0, frame = 0
 7817              		@ frame_needed = 0, uses_anonymous_args = 0
 7818              	.LVL695:
 7819 1c94 38B5     		push	{r3, r4, r5, lr}	@
 7820              	.LCFI63:
 7821              		.cfi_def_cfa_offset 16
 7822              		.cfi_offset 3, -16
 7823              		.cfi_offset 4, -12
 7824              		.cfi_offset 5, -8
 7825              		.cfi_offset 14, -4
2189:src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 7826              		.loc 1 2189 0
 7827 1c96 0446     		mov	r4, r0	@ htim, htim
 7828 1c98 0D46     		mov	r5, r1	@ Channel, Channel
2194:src/stm32f1xx_hal_tim.c ****   {
 7829              		.loc 1 2194 0
 7830 1c9a 0C29     		cmp	r1, #12	@ Channel,
 7831 1c9c 10D8     		bhi	.L627	@
 7832 1c9e DFE801F0 		tbb	[pc, r1]	@ Channel
 7833              	.L629:
 7834 1ca2 07       		.byte	(.L628-.L629)/2
 7835 1ca3 0F       		.byte	(.L627-.L629)/2
 7836 1ca4 0F       		.byte	(.L627-.L629)/2
 7837 1ca5 0F       		.byte	(.L627-.L629)/2
 7838 1ca6 28       		.byte	(.L630-.L629)/2
 7839 1ca7 0F       		.byte	(.L627-.L629)/2
 7840 1ca8 0F       		.byte	(.L627-.L629)/2
 7841 1ca9 0F       		.byte	(.L627-.L629)/2
 7842 1caa 2F       		.byte	(.L631-.L629)/2
 7843 1cab 0F       		.byte	(.L627-.L629)/2
 7844 1cac 0F       		.byte	(.L627-.L629)/2
 7845 1cad 0F       		.byte	(.L627-.L629)/2
 7846 1cae 36       		.byte	(.L632-.L629)/2
 7847 1caf 00       		.p2align 1
 7848              	.L628:
2199:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 7849              		.loc 1 2199 0
 7850 1cb0 0268     		ldr	r2, [r0]	@ _6, htim_5(D)->Instance
2200:src/stm32f1xx_hal_tim.c ****       break;
 7851              		.loc 1 2200 0
 7852 1cb2 406A     		ldr	r0, [r0, #36]	@, htim_5(D)->hdma
 7853              	.LVL696:
2199:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 7854              		.loc 1 2199 0
ARM GAS  /tmp/ccTsJCXT.s 			page 280


 7855 1cb4 D368     		ldr	r3, [r2, #12]	@ _7, _6->DIER
 7856 1cb6 23F40073 		bic	r3, r3, #512	@ _8, _7,
 7857 1cba D360     		str	r3, [r2, #12]	@ _8, _6->DIER
 7858              	.L634:
2224:src/stm32f1xx_hal_tim.c ****       break;
 7859              		.loc 1 2224 0
 7860 1cbc FFF7FEFF 		bl	HAL_DMA_Abort_IT	@
 7861              	.LVL697:
 7862              	.L627:
2233:src/stm32f1xx_hal_tim.c **** 
 7863              		.loc 1 2233 0
 7864 1cc0 0022     		movs	r2, #0	@,
 7865 1cc2 2946     		mov	r1, r5	@, Channel
 7866 1cc4 2068     		ldr	r0, [r4]	@, htim_5(D)->Instance
 7867 1cc6 FFF7FEFF 		bl	TIM_CCxChannelCmd	@
 7868              	.LVL698:
2236:src/stm32f1xx_hal_tim.c **** 
 7869              		.loc 1 2236 0
 7870 1cca 41F21112 		movw	r2, #4369	@ tmp137,
 7871 1cce 2368     		ldr	r3, [r4]	@ _32, htim_5(D)->Instance
 7872 1cd0 196A     		ldr	r1, [r3, #32]	@ _33, _32->CCER
 7873 1cd2 1142     		tst	r1, r2	@ _33, tmp137
 7874 1cd4 08D1     		bne	.L633	@,
2236:src/stm32f1xx_hal_tim.c **** 
 7875              		.loc 1 2236 0 is_stmt 0 discriminator 1
 7876 1cd6 40F24442 		movw	r2, #1092	@ tmp139,
 7877 1cda 196A     		ldr	r1, [r3, #32]	@ _35, _32->CCER
 7878 1cdc 1142     		tst	r1, r2	@ _35, tmp139
 7879 1cde 02BF     		ittt	eq
 7880 1ce0 1A68     		ldreq	r2, [r3]	@ _37, _32->CR1
 7881 1ce2 22F00102 		biceq	r2, r2, #1	@ _38, _37,
 7882 1ce6 1A60     		streq	r2, [r3]	@ _38, _32->CR1
 7883              	.L633:
2239:src/stm32f1xx_hal_tim.c **** 
 7884              		.loc 1 2239 0 is_stmt 1
 7885 1ce8 0123     		movs	r3, #1	@ tmp141,
2243:src/stm32f1xx_hal_tim.c **** /**
 7886              		.loc 1 2243 0
 7887 1cea 0020     		movs	r0, #0	@,
2239:src/stm32f1xx_hal_tim.c **** 
 7888              		.loc 1 2239 0
 7889 1cec 84F83D30 		strb	r3, [r4, #61]	@ tmp141, htim_5(D)->State
2243:src/stm32f1xx_hal_tim.c **** /**
 7890              		.loc 1 2243 0
 7891 1cf0 38BD     		pop	{r3, r4, r5, pc}	@
 7892              	.LVL699:
 7893              	.L630:
2207:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 7894              		.loc 1 2207 0
 7895 1cf2 0268     		ldr	r2, [r0]	@ _12, htim_5(D)->Instance
2208:src/stm32f1xx_hal_tim.c ****       break;
 7896              		.loc 1 2208 0
 7897 1cf4 806A     		ldr	r0, [r0, #40]	@, htim_5(D)->hdma
 7898              	.LVL700:
2207:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 7899              		.loc 1 2207 0
 7900 1cf6 D368     		ldr	r3, [r2, #12]	@ _13, _12->DIER
ARM GAS  /tmp/ccTsJCXT.s 			page 281


 7901 1cf8 23F48063 		bic	r3, r3, #1024	@ _14, _13,
 7902 1cfc D360     		str	r3, [r2, #12]	@ _14, _12->DIER
 7903 1cfe DDE7     		b	.L634	@
 7904              	.LVL701:
 7905              	.L631:
2215:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 7906              		.loc 1 2215 0
 7907 1d00 0268     		ldr	r2, [r0]	@ _18, htim_5(D)->Instance
2216:src/stm32f1xx_hal_tim.c ****       break;
 7908              		.loc 1 2216 0
 7909 1d02 C06A     		ldr	r0, [r0, #44]	@, htim_5(D)->hdma
 7910              	.LVL702:
2215:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 7911              		.loc 1 2215 0
 7912 1d04 D368     		ldr	r3, [r2, #12]	@ _19, _18->DIER
 7913 1d06 23F40063 		bic	r3, r3, #2048	@ _20, _19,
 7914 1d0a D360     		str	r3, [r2, #12]	@ _20, _18->DIER
 7915 1d0c D6E7     		b	.L634	@
 7916              	.LVL703:
 7917              	.L632:
2223:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 7918              		.loc 1 2223 0
 7919 1d0e 0268     		ldr	r2, [r0]	@ _24, htim_5(D)->Instance
2224:src/stm32f1xx_hal_tim.c ****       break;
 7920              		.loc 1 2224 0
 7921 1d10 006B     		ldr	r0, [r0, #48]	@, htim_5(D)->hdma
 7922              	.LVL704:
2223:src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 7923              		.loc 1 2223 0
 7924 1d12 D368     		ldr	r3, [r2, #12]	@ _25, _24->DIER
 7925 1d14 23F48053 		bic	r3, r3, #4096	@ _26, _25,
 7926 1d18 D360     		str	r3, [r2, #12]	@ _26, _24->DIER
 7927 1d1a CFE7     		b	.L634	@
 7928              		.cfi_endproc
 7929              	.LFE104:
 7930              		.size	HAL_TIM_IC_Stop_DMA, .-HAL_TIM_IC_Stop_DMA
 7931              	.Letext0:
 7932              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 7933              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 7934              		.file 4 "../cmsiscore/inc/core_cm3.h"
 7935              		.file 5 "../cmsisstm32f1xx/inc/system_stm32f1xx.h"
 7936              		.file 6 "../cmsisstm32f1xx/inc/stm32f103x6.h"
 7937              		.file 7 "../cmsisstm32f1xx/inc/stm32f1xx.h"
 7938              		.file 8 "./inc/stm32f1xx_hal_def.h"
 7939              		.file 9 "./inc/stm32f1xx_hal_dma.h"
 7940              		.file 10 "./inc/stm32f1xx_hal_tim.h"
 7941              		.file 11 "./inc/stm32f1xx_hal.h"
 7942              		.file 12 "./inc/stm32f1xx_hal_tim_ex.h"
 7943              		.section	.debug_info,"",%progbits
 7944              	.Ldebug_info0:
 7945 0000 51370000 		.4byte	0x3751
 7946 0004 0200     		.2byte	0x2
 7947 0006 00000000 		.4byte	.Ldebug_abbrev0
 7948 000a 04       		.byte	0x4
 7949 000b 01       		.uleb128 0x1
 7950 000c 85060000 		.4byte	.LASF303
 7951 0010 0C       		.byte	0xc
ARM GAS  /tmp/ccTsJCXT.s 			page 282


 7952 0011 870C0000 		.4byte	.LASF304
 7953 0015 DA130000 		.4byte	.LASF305
 7954 0019 00000000 		.4byte	.Ltext0
 7955 001d 1C1D0000 		.4byte	.Letext0
 7956 0021 00000000 		.4byte	.Ldebug_line0
 7957 0025 02       		.uleb128 0x2
 7958 0026 01       		.byte	0x1
 7959 0027 06       		.byte	0x6
 7960 0028 ED030000 		.4byte	.LASF0
 7961 002c 03       		.uleb128 0x3
 7962 002d D7010000 		.4byte	.LASF3
 7963 0031 02       		.byte	0x2
 7964 0032 1D       		.byte	0x1d
 7965 0033 37000000 		.4byte	0x37
 7966 0037 02       		.uleb128 0x2
 7967 0038 01       		.byte	0x1
 7968 0039 08       		.byte	0x8
 7969 003a 59040000 		.4byte	.LASF1
 7970 003e 02       		.uleb128 0x2
 7971 003f 02       		.byte	0x2
 7972 0040 05       		.byte	0x5
 7973 0041 8B100000 		.4byte	.LASF2
 7974 0045 03       		.uleb128 0x3
 7975 0046 C3050000 		.4byte	.LASF4
 7976 004a 02       		.byte	0x2
 7977 004b 2B       		.byte	0x2b
 7978 004c 50000000 		.4byte	0x50
 7979 0050 02       		.uleb128 0x2
 7980 0051 02       		.byte	0x2
 7981 0052 07       		.byte	0x7
 7982 0053 6D120000 		.4byte	.LASF5
 7983 0057 03       		.uleb128 0x3
 7984 0058 24130000 		.4byte	.LASF6
 7985 005c 02       		.byte	0x2
 7986 005d 3F       		.byte	0x3f
 7987 005e 62000000 		.4byte	0x62
 7988 0062 02       		.uleb128 0x2
 7989 0063 04       		.byte	0x4
 7990 0064 05       		.byte	0x5
 7991 0065 AF020000 		.4byte	.LASF7
 7992 0069 03       		.uleb128 0x3
 7993 006a 3A090000 		.4byte	.LASF8
 7994 006e 02       		.byte	0x2
 7995 006f 41       		.byte	0x41
 7996 0070 74000000 		.4byte	0x74
 7997 0074 02       		.uleb128 0x2
 7998 0075 04       		.byte	0x4
 7999 0076 07       		.byte	0x7
 8000 0077 D5070000 		.4byte	.LASF9
 8001 007b 02       		.uleb128 0x2
 8002 007c 08       		.byte	0x8
 8003 007d 05       		.byte	0x5
 8004 007e 45090000 		.4byte	.LASF10
 8005 0082 02       		.uleb128 0x2
 8006 0083 08       		.byte	0x8
 8007 0084 07       		.byte	0x7
 8008 0085 770D0000 		.4byte	.LASF11
ARM GAS  /tmp/ccTsJCXT.s 			page 283


 8009 0089 04       		.uleb128 0x4
 8010 008a 04       		.byte	0x4
 8011 008b 05       		.byte	0x5
 8012 008c 696E7400 		.ascii	"int\000"
 8013 0090 02       		.uleb128 0x2
 8014 0091 04       		.byte	0x4
 8015 0092 07       		.byte	0x7
 8016 0093 500A0000 		.4byte	.LASF12
 8017 0097 03       		.uleb128 0x3
 8018 0098 06040000 		.4byte	.LASF13
 8019 009c 03       		.byte	0x3
 8020 009d 18       		.byte	0x18
 8021 009e 2C000000 		.4byte	0x2c
 8022 00a2 05       		.uleb128 0x5
 8023 00a3 97000000 		.4byte	0x97
 8024 00a7 03       		.uleb128 0x3
 8025 00a8 D90D0000 		.4byte	.LASF14
 8026 00ac 03       		.byte	0x3
 8027 00ad 24       		.byte	0x24
 8028 00ae 45000000 		.4byte	0x45
 8029 00b2 03       		.uleb128 0x3
 8030 00b3 B6000000 		.4byte	.LASF15
 8031 00b7 03       		.byte	0x3
 8032 00b8 2C       		.byte	0x2c
 8033 00b9 57000000 		.4byte	0x57
 8034 00bd 06       		.uleb128 0x6
 8035 00be B2000000 		.4byte	0xb2
 8036 00c2 03       		.uleb128 0x3
 8037 00c3 FE110000 		.4byte	.LASF16
 8038 00c7 03       		.byte	0x3
 8039 00c8 30       		.byte	0x30
 8040 00c9 69000000 		.4byte	0x69
 8041 00cd 06       		.uleb128 0x6
 8042 00ce C2000000 		.4byte	0xc2
 8043 00d2 02       		.uleb128 0x2
 8044 00d3 04       		.byte	0x4
 8045 00d4 07       		.byte	0x7
 8046 00d5 43000000 		.4byte	.LASF17
 8047 00d9 07       		.uleb128 0x7
 8048 00da D2090000 		.4byte	.LASF18
 8049 00de 04       		.byte	0x4
 8050 00df 4807     		.2byte	0x748
 8051 00e1 BD000000 		.4byte	0xbd
 8052 00e5 01       		.byte	0x1
 8053 00e6 01       		.byte	0x1
 8054 00e7 08       		.uleb128 0x8
 8055 00e8 13080000 		.4byte	.LASF19
 8056 00ec 05       		.byte	0x5
 8057 00ed 33       		.byte	0x33
 8058 00ee C2000000 		.4byte	0xc2
 8059 00f2 01       		.byte	0x1
 8060 00f3 01       		.byte	0x1
 8061 00f4 09       		.uleb128 0x9
 8062 00f5 A2000000 		.4byte	0xa2
 8063 00f9 04010000 		.4byte	0x104
 8064 00fd 0A       		.uleb128 0xa
 8065 00fe D2000000 		.4byte	0xd2
ARM GAS  /tmp/ccTsJCXT.s 			page 284


 8066 0102 0F       		.byte	0xf
 8067 0103 00       		.byte	0
 8068 0104 05       		.uleb128 0x5
 8069 0105 F4000000 		.4byte	0xf4
 8070 0109 08       		.uleb128 0x8
 8071 010a D20C0000 		.4byte	.LASF20
 8072 010e 05       		.byte	0x5
 8073 010f 34       		.byte	0x34
 8074 0110 04010000 		.4byte	0x104
 8075 0114 01       		.byte	0x1
 8076 0115 01       		.byte	0x1
 8077 0116 09       		.uleb128 0x9
 8078 0117 A2000000 		.4byte	0xa2
 8079 011b 26010000 		.4byte	0x126
 8080 011f 0A       		.uleb128 0xa
 8081 0120 D2000000 		.4byte	0xd2
 8082 0124 07       		.byte	0x7
 8083 0125 00       		.byte	0
 8084 0126 05       		.uleb128 0x5
 8085 0127 16010000 		.4byte	0x116
 8086 012b 08       		.uleb128 0x8
 8087 012c 44100000 		.4byte	.LASF21
 8088 0130 05       		.byte	0x5
 8089 0131 35       		.byte	0x35
 8090 0132 26010000 		.4byte	0x126
 8091 0136 01       		.byte	0x1
 8092 0137 01       		.byte	0x1
 8093 0138 0B       		.uleb128 0xb
 8094 0139 10       		.byte	0x10
 8095 013a 06       		.byte	0x6
 8096 013b 1E01     		.2byte	0x11e
 8097 013d 7E010000 		.4byte	0x17e
 8098 0141 0C       		.uleb128 0xc
 8099 0142 43435200 		.ascii	"CCR\000"
 8100 0146 06       		.byte	0x6
 8101 0147 2001     		.2byte	0x120
 8102 0149 CD000000 		.4byte	0xcd
 8103 014d 02       		.byte	0x2
 8104 014e 23       		.byte	0x23
 8105 014f 00       		.uleb128 0
 8106 0150 0D       		.uleb128 0xd
 8107 0151 97010000 		.4byte	.LASF22
 8108 0155 06       		.byte	0x6
 8109 0156 2101     		.2byte	0x121
 8110 0158 CD000000 		.4byte	0xcd
 8111 015c 02       		.byte	0x2
 8112 015d 23       		.byte	0x23
 8113 015e 04       		.uleb128 0x4
 8114 015f 0D       		.uleb128 0xd
 8115 0160 CA030000 		.4byte	.LASF23
 8116 0164 06       		.byte	0x6
 8117 0165 2201     		.2byte	0x122
 8118 0167 CD000000 		.4byte	0xcd
 8119 016b 02       		.byte	0x2
 8120 016c 23       		.byte	0x23
 8121 016d 08       		.uleb128 0x8
 8122 016e 0D       		.uleb128 0xd
ARM GAS  /tmp/ccTsJCXT.s 			page 285


 8123 016f EB0A0000 		.4byte	.LASF24
 8124 0173 06       		.byte	0x6
 8125 0174 2301     		.2byte	0x123
 8126 0176 CD000000 		.4byte	0xcd
 8127 017a 02       		.byte	0x2
 8128 017b 23       		.byte	0x23
 8129 017c 0C       		.uleb128 0xc
 8130 017d 00       		.byte	0
 8131 017e 0E       		.uleb128 0xe
 8132 017f BE0C0000 		.4byte	.LASF25
 8133 0183 06       		.byte	0x6
 8134 0184 2401     		.2byte	0x124
 8135 0186 38010000 		.4byte	0x138
 8136 018a 0B       		.uleb128 0xb
 8137 018b 08       		.byte	0x8
 8138 018c 06       		.byte	0x6
 8139 018d 2601     		.2byte	0x126
 8140 018f B2010000 		.4byte	0x1b2
 8141 0193 0C       		.uleb128 0xc
 8142 0194 49535200 		.ascii	"ISR\000"
 8143 0198 06       		.byte	0x6
 8144 0199 2801     		.2byte	0x128
 8145 019b CD000000 		.4byte	0xcd
 8146 019f 02       		.byte	0x2
 8147 01a0 23       		.byte	0x23
 8148 01a1 00       		.uleb128 0
 8149 01a2 0D       		.uleb128 0xd
 8150 01a3 9F050000 		.4byte	.LASF26
 8151 01a7 06       		.byte	0x6
 8152 01a8 2901     		.2byte	0x129
 8153 01aa CD000000 		.4byte	0xcd
 8154 01ae 02       		.byte	0x2
 8155 01af 23       		.byte	0x23
 8156 01b0 04       		.uleb128 0x4
 8157 01b1 00       		.byte	0
 8158 01b2 0E       		.uleb128 0xe
 8159 01b3 67040000 		.4byte	.LASF27
 8160 01b7 06       		.byte	0x6
 8161 01b8 2A01     		.2byte	0x12a
 8162 01ba 8A010000 		.4byte	0x18a
 8163 01be 0B       		.uleb128 0xb
 8164 01bf 54       		.byte	0x54
 8165 01c0 06       		.byte	0x6
 8166 01c1 D801     		.2byte	0x1d8
 8167 01c3 01030000 		.4byte	0x301
 8168 01c7 0C       		.uleb128 0xc
 8169 01c8 43523100 		.ascii	"CR1\000"
 8170 01cc 06       		.byte	0x6
 8171 01cd DA01     		.2byte	0x1da
 8172 01cf CD000000 		.4byte	0xcd
 8173 01d3 02       		.byte	0x2
 8174 01d4 23       		.byte	0x23
 8175 01d5 00       		.uleb128 0
 8176 01d6 0C       		.uleb128 0xc
 8177 01d7 43523200 		.ascii	"CR2\000"
 8178 01db 06       		.byte	0x6
 8179 01dc DB01     		.2byte	0x1db
ARM GAS  /tmp/ccTsJCXT.s 			page 286


 8180 01de CD000000 		.4byte	0xcd
 8181 01e2 02       		.byte	0x2
 8182 01e3 23       		.byte	0x23
 8183 01e4 04       		.uleb128 0x4
 8184 01e5 0D       		.uleb128 0xd
 8185 01e6 140F0000 		.4byte	.LASF28
 8186 01ea 06       		.byte	0x6
 8187 01eb DC01     		.2byte	0x1dc
 8188 01ed CD000000 		.4byte	0xcd
 8189 01f1 02       		.byte	0x2
 8190 01f2 23       		.byte	0x23
 8191 01f3 08       		.uleb128 0x8
 8192 01f4 0D       		.uleb128 0xd
 8193 01f5 0E080000 		.4byte	.LASF29
 8194 01f9 06       		.byte	0x6
 8195 01fa DD01     		.2byte	0x1dd
 8196 01fc CD000000 		.4byte	0xcd
 8197 0200 02       		.byte	0x2
 8198 0201 23       		.byte	0x23
 8199 0202 0C       		.uleb128 0xc
 8200 0203 0C       		.uleb128 0xc
 8201 0204 535200   		.ascii	"SR\000"
 8202 0207 06       		.byte	0x6
 8203 0208 DE01     		.2byte	0x1de
 8204 020a CD000000 		.4byte	0xcd
 8205 020e 02       		.byte	0x2
 8206 020f 23       		.byte	0x23
 8207 0210 10       		.uleb128 0x10
 8208 0211 0C       		.uleb128 0xc
 8209 0212 45475200 		.ascii	"EGR\000"
 8210 0216 06       		.byte	0x6
 8211 0217 DF01     		.2byte	0x1df
 8212 0219 CD000000 		.4byte	0xcd
 8213 021d 02       		.byte	0x2
 8214 021e 23       		.byte	0x23
 8215 021f 14       		.uleb128 0x14
 8216 0220 0D       		.uleb128 0xd
 8217 0221 75050000 		.4byte	.LASF30
 8218 0225 06       		.byte	0x6
 8219 0226 E001     		.2byte	0x1e0
 8220 0228 CD000000 		.4byte	0xcd
 8221 022c 02       		.byte	0x2
 8222 022d 23       		.byte	0x23
 8223 022e 18       		.uleb128 0x18
 8224 022f 0D       		.uleb128 0xd
 8225 0230 7B050000 		.4byte	.LASF31
 8226 0234 06       		.byte	0x6
 8227 0235 E101     		.2byte	0x1e1
 8228 0237 CD000000 		.4byte	0xcd
 8229 023b 02       		.byte	0x2
 8230 023c 23       		.byte	0x23
 8231 023d 1C       		.uleb128 0x1c
 8232 023e 0D       		.uleb128 0xd
 8233 023f 280E0000 		.4byte	.LASF32
 8234 0243 06       		.byte	0x6
 8235 0244 E201     		.2byte	0x1e2
 8236 0246 CD000000 		.4byte	0xcd
ARM GAS  /tmp/ccTsJCXT.s 			page 287


 8237 024a 02       		.byte	0x2
 8238 024b 23       		.byte	0x23
 8239 024c 20       		.uleb128 0x20
 8240 024d 0C       		.uleb128 0xc
 8241 024e 434E5400 		.ascii	"CNT\000"
 8242 0252 06       		.byte	0x6
 8243 0253 E301     		.2byte	0x1e3
 8244 0255 CD000000 		.4byte	0xcd
 8245 0259 02       		.byte	0x2
 8246 025a 23       		.byte	0x23
 8247 025b 24       		.uleb128 0x24
 8248 025c 0C       		.uleb128 0xc
 8249 025d 50534300 		.ascii	"PSC\000"
 8250 0261 06       		.byte	0x6
 8251 0262 E401     		.2byte	0x1e4
 8252 0264 CD000000 		.4byte	0xcd
 8253 0268 02       		.byte	0x2
 8254 0269 23       		.byte	0x23
 8255 026a 28       		.uleb128 0x28
 8256 026b 0C       		.uleb128 0xc
 8257 026c 41525200 		.ascii	"ARR\000"
 8258 0270 06       		.byte	0x6
 8259 0271 E501     		.2byte	0x1e5
 8260 0273 CD000000 		.4byte	0xcd
 8261 0277 02       		.byte	0x2
 8262 0278 23       		.byte	0x23
 8263 0279 2C       		.uleb128 0x2c
 8264 027a 0C       		.uleb128 0xc
 8265 027b 52435200 		.ascii	"RCR\000"
 8266 027f 06       		.byte	0x6
 8267 0280 E601     		.2byte	0x1e6
 8268 0282 CD000000 		.4byte	0xcd
 8269 0286 02       		.byte	0x2
 8270 0287 23       		.byte	0x23
 8271 0288 30       		.uleb128 0x30
 8272 0289 0D       		.uleb128 0xd
 8273 028a BE010000 		.4byte	.LASF33
 8274 028e 06       		.byte	0x6
 8275 028f E701     		.2byte	0x1e7
 8276 0291 CD000000 		.4byte	0xcd
 8277 0295 02       		.byte	0x2
 8278 0296 23       		.byte	0x23
 8279 0297 34       		.uleb128 0x34
 8280 0298 0D       		.uleb128 0xd
 8281 0299 C3010000 		.4byte	.LASF34
 8282 029d 06       		.byte	0x6
 8283 029e E801     		.2byte	0x1e8
 8284 02a0 CD000000 		.4byte	0xcd
 8285 02a4 02       		.byte	0x2
 8286 02a5 23       		.byte	0x23
 8287 02a6 38       		.uleb128 0x38
 8288 02a7 0D       		.uleb128 0xd
 8289 02a8 C8010000 		.4byte	.LASF35
 8290 02ac 06       		.byte	0x6
 8291 02ad E901     		.2byte	0x1e9
 8292 02af CD000000 		.4byte	0xcd
 8293 02b3 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 288


 8294 02b4 23       		.byte	0x23
 8295 02b5 3C       		.uleb128 0x3c
 8296 02b6 0D       		.uleb128 0xd
 8297 02b7 CD010000 		.4byte	.LASF36
 8298 02bb 06       		.byte	0x6
 8299 02bc EA01     		.2byte	0x1ea
 8300 02be CD000000 		.4byte	0xcd
 8301 02c2 02       		.byte	0x2
 8302 02c3 23       		.byte	0x23
 8303 02c4 40       		.uleb128 0x40
 8304 02c5 0D       		.uleb128 0xd
 8305 02c6 E6110000 		.4byte	.LASF37
 8306 02ca 06       		.byte	0x6
 8307 02cb EB01     		.2byte	0x1eb
 8308 02cd CD000000 		.4byte	0xcd
 8309 02d1 02       		.byte	0x2
 8310 02d2 23       		.byte	0x23
 8311 02d3 44       		.uleb128 0x44
 8312 02d4 0C       		.uleb128 0xc
 8313 02d5 44435200 		.ascii	"DCR\000"
 8314 02d9 06       		.byte	0x6
 8315 02da EC01     		.2byte	0x1ec
 8316 02dc CD000000 		.4byte	0xcd
 8317 02e0 02       		.byte	0x2
 8318 02e1 23       		.byte	0x23
 8319 02e2 48       		.uleb128 0x48
 8320 02e3 0D       		.uleb128 0xd
 8321 02e4 9D010000 		.4byte	.LASF38
 8322 02e8 06       		.byte	0x6
 8323 02e9 ED01     		.2byte	0x1ed
 8324 02eb CD000000 		.4byte	0xcd
 8325 02ef 02       		.byte	0x2
 8326 02f0 23       		.byte	0x23
 8327 02f1 4C       		.uleb128 0x4c
 8328 02f2 0C       		.uleb128 0xc
 8329 02f3 4F5200   		.ascii	"OR\000"
 8330 02f6 06       		.byte	0x6
 8331 02f7 EE01     		.2byte	0x1ee
 8332 02f9 CD000000 		.4byte	0xcd
 8333 02fd 02       		.byte	0x2
 8334 02fe 23       		.byte	0x23
 8335 02ff 50       		.uleb128 0x50
 8336 0300 00       		.byte	0
 8337 0301 0E       		.uleb128 0xe
 8338 0302 4D040000 		.4byte	.LASF39
 8339 0306 06       		.byte	0x6
 8340 0307 EF01     		.2byte	0x1ef
 8341 0309 BE010000 		.4byte	0x1be
 8342 030d 0F       		.uleb128 0xf
 8343 030e 01       		.byte	0x1
 8344 030f 37000000 		.4byte	0x37
 8345 0313 07       		.byte	0x7
 8346 0314 98       		.byte	0x98
 8347 0315 26030000 		.4byte	0x326
 8348 0319 10       		.uleb128 0x10
 8349 031a 3B0F0000 		.4byte	.LASF40
 8350 031e 00       		.byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 289


 8351 031f 11       		.uleb128 0x11
 8352 0320 53455400 		.ascii	"SET\000"
 8353 0324 01       		.byte	0x1
 8354 0325 00       		.byte	0
 8355 0326 0F       		.uleb128 0xf
 8356 0327 01       		.byte	0x1
 8357 0328 37000000 		.4byte	0x37
 8358 032c 07       		.byte	0x7
 8359 032d 9E       		.byte	0x9e
 8360 032e 3F030000 		.4byte	0x33f
 8361 0332 10       		.uleb128 0x10
 8362 0333 EE0B0000 		.4byte	.LASF41
 8363 0337 00       		.byte	0
 8364 0338 10       		.uleb128 0x10
 8365 0339 30110000 		.4byte	.LASF42
 8366 033d 01       		.byte	0x1
 8367 033e 00       		.byte	0
 8368 033f 02       		.uleb128 0x2
 8369 0340 08       		.byte	0x8
 8370 0341 04       		.byte	0x4
 8371 0342 150C0000 		.4byte	.LASF43
 8372 0346 0F       		.uleb128 0xf
 8373 0347 01       		.byte	0x1
 8374 0348 37000000 		.4byte	0x37
 8375 034c 08       		.byte	0x8
 8376 034d 2A       		.byte	0x2a
 8377 034e 6B030000 		.4byte	0x36b
 8378 0352 10       		.uleb128 0x10
 8379 0353 21040000 		.4byte	.LASF44
 8380 0357 00       		.byte	0
 8381 0358 10       		.uleb128 0x10
 8382 0359 FF000000 		.4byte	.LASF45
 8383 035d 01       		.byte	0x1
 8384 035e 10       		.uleb128 0x10
 8385 035f 9F0C0000 		.4byte	.LASF46
 8386 0363 02       		.byte	0x2
 8387 0364 10       		.uleb128 0x10
 8388 0365 43120000 		.4byte	.LASF47
 8389 0369 03       		.byte	0x3
 8390 036a 00       		.byte	0
 8391 036b 03       		.uleb128 0x3
 8392 036c 63000000 		.4byte	.LASF48
 8393 0370 08       		.byte	0x8
 8394 0371 2F       		.byte	0x2f
 8395 0372 46030000 		.4byte	0x346
 8396 0376 0F       		.uleb128 0xf
 8397 0377 01       		.byte	0x1
 8398 0378 37000000 		.4byte	0x37
 8399 037c 08       		.byte	0x8
 8400 037d 35       		.byte	0x35
 8401 037e 8F030000 		.4byte	0x38f
 8402 0382 10       		.uleb128 0x10
 8403 0383 550E0000 		.4byte	.LASF49
 8404 0387 00       		.byte	0
 8405 0388 10       		.uleb128 0x10
 8406 0389 38120000 		.4byte	.LASF50
 8407 038d 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 290


 8408 038e 00       		.byte	0
 8409 038f 03       		.uleb128 0x3
 8410 0390 9D030000 		.4byte	.LASF51
 8411 0394 08       		.byte	0x8
 8412 0395 38       		.byte	0x38
 8413 0396 76030000 		.4byte	0x376
 8414 039a 12       		.uleb128 0x12
 8415 039b 1C       		.byte	0x1c
 8416 039c 09       		.byte	0x9
 8417 039d 30       		.byte	0x30
 8418 039e 05040000 		.4byte	0x405
 8419 03a2 13       		.uleb128 0x13
 8420 03a3 24000000 		.4byte	.LASF52
 8421 03a7 09       		.byte	0x9
 8422 03a8 32       		.byte	0x32
 8423 03a9 C2000000 		.4byte	0xc2
 8424 03ad 02       		.byte	0x2
 8425 03ae 23       		.byte	0x23
 8426 03af 00       		.uleb128 0
 8427 03b0 13       		.uleb128 0x13
 8428 03b1 44060000 		.4byte	.LASF53
 8429 03b5 09       		.byte	0x9
 8430 03b6 36       		.byte	0x36
 8431 03b7 C2000000 		.4byte	0xc2
 8432 03bb 02       		.byte	0x2
 8433 03bc 23       		.byte	0x23
 8434 03bd 04       		.uleb128 0x4
 8435 03be 13       		.uleb128 0x13
 8436 03bf A00B0000 		.4byte	.LASF54
 8437 03c3 09       		.byte	0x9
 8438 03c4 39       		.byte	0x39
 8439 03c5 C2000000 		.4byte	0xc2
 8440 03c9 02       		.byte	0x2
 8441 03ca 23       		.byte	0x23
 8442 03cb 08       		.uleb128 0x8
 8443 03cc 13       		.uleb128 0x13
 8444 03cd 64090000 		.4byte	.LASF55
 8445 03d1 09       		.byte	0x9
 8446 03d2 3C       		.byte	0x3c
 8447 03d3 C2000000 		.4byte	0xc2
 8448 03d7 02       		.byte	0x2
 8449 03d8 23       		.byte	0x23
 8450 03d9 0C       		.uleb128 0xc
 8451 03da 13       		.uleb128 0x13
 8452 03db 29090000 		.4byte	.LASF56
 8453 03df 09       		.byte	0x9
 8454 03e0 3F       		.byte	0x3f
 8455 03e1 C2000000 		.4byte	0xc2
 8456 03e5 02       		.byte	0x2
 8457 03e6 23       		.byte	0x23
 8458 03e7 10       		.uleb128 0x10
 8459 03e8 13       		.uleb128 0x13
 8460 03e9 4D0C0000 		.4byte	.LASF57
 8461 03ed 09       		.byte	0x9
 8462 03ee 42       		.byte	0x42
 8463 03ef C2000000 		.4byte	0xc2
 8464 03f3 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 291


 8465 03f4 23       		.byte	0x23
 8466 03f5 14       		.uleb128 0x14
 8467 03f6 13       		.uleb128 0x13
 8468 03f7 2D030000 		.4byte	.LASF58
 8469 03fb 09       		.byte	0x9
 8470 03fc 47       		.byte	0x47
 8471 03fd C2000000 		.4byte	0xc2
 8472 0401 02       		.byte	0x2
 8473 0402 23       		.byte	0x23
 8474 0403 18       		.uleb128 0x18
 8475 0404 00       		.byte	0
 8476 0405 03       		.uleb128 0x3
 8477 0406 E10F0000 		.4byte	.LASF59
 8478 040a 09       		.byte	0x9
 8479 040b 49       		.byte	0x49
 8480 040c 9A030000 		.4byte	0x39a
 8481 0410 0F       		.uleb128 0xf
 8482 0411 01       		.byte	0x1
 8483 0412 37000000 		.4byte	0x37
 8484 0416 09       		.byte	0x9
 8485 0417 4F       		.byte	0x4f
 8486 0418 35040000 		.4byte	0x435
 8487 041c 10       		.uleb128 0x10
 8488 041d 130B0000 		.4byte	.LASF60
 8489 0421 00       		.byte	0
 8490 0422 10       		.uleb128 0x10
 8491 0423 CB120000 		.4byte	.LASF61
 8492 0427 01       		.byte	0x1
 8493 0428 10       		.uleb128 0x10
 8494 0429 970F0000 		.4byte	.LASF62
 8495 042d 02       		.byte	0x2
 8496 042e 10       		.uleb128 0x10
 8497 042f 3A0A0000 		.4byte	.LASF63
 8498 0433 03       		.byte	0x3
 8499 0434 00       		.byte	0
 8500 0435 03       		.uleb128 0x3
 8501 0436 1B110000 		.4byte	.LASF64
 8502 043a 09       		.byte	0x9
 8503 043b 54       		.byte	0x54
 8504 043c 10040000 		.4byte	0x410
 8505 0440 14       		.uleb128 0x14
 8506 0441 A90D0000 		.4byte	.LASF306
 8507 0445 44       		.byte	0x44
 8508 0446 09       		.byte	0x9
 8509 0447 6F       		.byte	0x6f
 8510 0448 F5040000 		.4byte	0x4f5
 8511 044c 13       		.uleb128 0x13
 8512 044d 95070000 		.4byte	.LASF65
 8513 0451 09       		.byte	0x9
 8514 0452 71       		.byte	0x71
 8515 0453 F5040000 		.4byte	0x4f5
 8516 0457 02       		.byte	0x2
 8517 0458 23       		.byte	0x23
 8518 0459 00       		.uleb128 0
 8519 045a 13       		.uleb128 0x13
 8520 045b 410B0000 		.4byte	.LASF66
 8521 045f 09       		.byte	0x9
ARM GAS  /tmp/ccTsJCXT.s 			page 292


 8522 0460 73       		.byte	0x73
 8523 0461 05040000 		.4byte	0x405
 8524 0465 02       		.byte	0x2
 8525 0466 23       		.byte	0x23
 8526 0467 04       		.uleb128 0x4
 8527 0468 13       		.uleb128 0x13
 8528 0469 D2010000 		.4byte	.LASF67
 8529 046d 09       		.byte	0x9
 8530 046e 75       		.byte	0x75
 8531 046f 8F030000 		.4byte	0x38f
 8532 0473 02       		.byte	0x2
 8533 0474 23       		.byte	0x23
 8534 0475 20       		.uleb128 0x20
 8535 0476 13       		.uleb128 0x13
 8536 0477 390E0000 		.4byte	.LASF68
 8537 047b 09       		.byte	0x9
 8538 047c 77       		.byte	0x77
 8539 047d 35040000 		.4byte	0x435
 8540 0481 02       		.byte	0x2
 8541 0482 23       		.byte	0x23
 8542 0483 21       		.uleb128 0x21
 8543 0484 13       		.uleb128 0x13
 8544 0485 D40A0000 		.4byte	.LASF69
 8545 0489 09       		.byte	0x9
 8546 048a 79       		.byte	0x79
 8547 048b FB040000 		.4byte	0x4fb
 8548 048f 02       		.byte	0x2
 8549 0490 23       		.byte	0x23
 8550 0491 24       		.uleb128 0x24
 8551 0492 13       		.uleb128 0x13
 8552 0493 880E0000 		.4byte	.LASF70
 8553 0497 09       		.byte	0x9
 8554 0498 7B       		.byte	0x7b
 8555 0499 0F050000 		.4byte	0x50f
 8556 049d 02       		.byte	0x2
 8557 049e 23       		.byte	0x23
 8558 049f 28       		.uleb128 0x28
 8559 04a0 13       		.uleb128 0x13
 8560 04a1 D1110000 		.4byte	.LASF71
 8561 04a5 09       		.byte	0x9
 8562 04a6 7D       		.byte	0x7d
 8563 04a7 0F050000 		.4byte	0x50f
 8564 04ab 02       		.byte	0x2
 8565 04ac 23       		.byte	0x23
 8566 04ad 2C       		.uleb128 0x2c
 8567 04ae 13       		.uleb128 0x13
 8568 04af F60B0000 		.4byte	.LASF72
 8569 04b3 09       		.byte	0x9
 8570 04b4 7F       		.byte	0x7f
 8571 04b5 0F050000 		.4byte	0x50f
 8572 04b9 02       		.byte	0x2
 8573 04ba 23       		.byte	0x23
 8574 04bb 30       		.uleb128 0x30
 8575 04bc 13       		.uleb128 0x13
 8576 04bd 5A060000 		.4byte	.LASF73
 8577 04c1 09       		.byte	0x9
 8578 04c2 81       		.byte	0x81
ARM GAS  /tmp/ccTsJCXT.s 			page 293


 8579 04c3 0F050000 		.4byte	0x50f
 8580 04c7 02       		.byte	0x2
 8581 04c8 23       		.byte	0x23
 8582 04c9 34       		.uleb128 0x34
 8583 04ca 13       		.uleb128 0x13
 8584 04cb 36030000 		.4byte	.LASF74
 8585 04cf 09       		.byte	0x9
 8586 04d0 83       		.byte	0x83
 8587 04d1 CD000000 		.4byte	0xcd
 8588 04d5 02       		.byte	0x2
 8589 04d6 23       		.byte	0x23
 8590 04d7 38       		.uleb128 0x38
 8591 04d8 13       		.uleb128 0x13
 8592 04d9 980A0000 		.4byte	.LASF75
 8593 04dd 09       		.byte	0x9
 8594 04de 85       		.byte	0x85
 8595 04df 15050000 		.4byte	0x515
 8596 04e3 02       		.byte	0x2
 8597 04e4 23       		.byte	0x23
 8598 04e5 3C       		.uleb128 0x3c
 8599 04e6 13       		.uleb128 0x13
 8600 04e7 7B040000 		.4byte	.LASF76
 8601 04eb 09       		.byte	0x9
 8602 04ec 87       		.byte	0x87
 8603 04ed C2000000 		.4byte	0xc2
 8604 04f1 02       		.byte	0x2
 8605 04f2 23       		.byte	0x23
 8606 04f3 40       		.uleb128 0x40
 8607 04f4 00       		.byte	0
 8608 04f5 15       		.uleb128 0x15
 8609 04f6 04       		.byte	0x4
 8610 04f7 7E010000 		.4byte	0x17e
 8611 04fb 16       		.uleb128 0x16
 8612 04fc 04       		.byte	0x4
 8613 04fd 17       		.uleb128 0x17
 8614 04fe 01       		.byte	0x1
 8615 04ff 09050000 		.4byte	0x509
 8616 0503 18       		.uleb128 0x18
 8617 0504 09050000 		.4byte	0x509
 8618 0508 00       		.byte	0
 8619 0509 15       		.uleb128 0x15
 8620 050a 04       		.byte	0x4
 8621 050b 40040000 		.4byte	0x440
 8622 050f 15       		.uleb128 0x15
 8623 0510 04       		.byte	0x4
 8624 0511 FD040000 		.4byte	0x4fd
 8625 0515 15       		.uleb128 0x15
 8626 0516 04       		.byte	0x4
 8627 0517 B2010000 		.4byte	0x1b2
 8628 051b 03       		.uleb128 0x3
 8629 051c 620E0000 		.4byte	.LASF77
 8630 0520 09       		.byte	0x9
 8631 0521 89       		.byte	0x89
 8632 0522 40040000 		.4byte	0x440
 8633 0526 15       		.uleb128 0x15
 8634 0527 04       		.byte	0x4
 8635 0528 1B050000 		.4byte	0x51b
ARM GAS  /tmp/ccTsJCXT.s 			page 294


 8636 052c 12       		.uleb128 0x12
 8637 052d 18       		.byte	0x18
 8638 052e 0A       		.byte	0xa
 8639 052f 2F       		.byte	0x2f
 8640 0530 89050000 		.4byte	0x589
 8641 0534 13       		.uleb128 0x13
 8642 0535 3A060000 		.4byte	.LASF78
 8643 0539 0A       		.byte	0xa
 8644 053a 31       		.byte	0x31
 8645 053b C2000000 		.4byte	0xc2
 8646 053f 02       		.byte	0x2
 8647 0540 23       		.byte	0x23
 8648 0541 00       		.uleb128 0
 8649 0542 13       		.uleb128 0x13
 8650 0543 2D0E0000 		.4byte	.LASF79
 8651 0547 0A       		.byte	0xa
 8652 0548 34       		.byte	0x34
 8653 0549 C2000000 		.4byte	0xc2
 8654 054d 02       		.byte	0x2
 8655 054e 23       		.byte	0x23
 8656 054f 04       		.uleb128 0x4
 8657 0550 13       		.uleb128 0x13
 8658 0551 21100000 		.4byte	.LASF80
 8659 0555 0A       		.byte	0xa
 8660 0556 37       		.byte	0x37
 8661 0557 C2000000 		.4byte	0xc2
 8662 055b 02       		.byte	0x2
 8663 055c 23       		.byte	0x23
 8664 055d 08       		.uleb128 0x8
 8665 055e 13       		.uleb128 0x13
 8666 055f 77140000 		.4byte	.LASF81
 8667 0563 0A       		.byte	0xa
 8668 0564 3B       		.byte	0x3b
 8669 0565 C2000000 		.4byte	0xc2
 8670 0569 02       		.byte	0x2
 8671 056a 23       		.byte	0x23
 8672 056b 0C       		.uleb128 0xc
 8673 056c 13       		.uleb128 0x13
 8674 056d 3B0C0000 		.4byte	.LASF82
 8675 0571 0A       		.byte	0xa
 8676 0572 3E       		.byte	0x3e
 8677 0573 C2000000 		.4byte	0xc2
 8678 0577 02       		.byte	0x2
 8679 0578 23       		.byte	0x23
 8680 0579 10       		.uleb128 0x10
 8681 057a 13       		.uleb128 0x13
 8682 057b 020A0000 		.4byte	.LASF83
 8683 057f 0A       		.byte	0xa
 8684 0580 47       		.byte	0x47
 8685 0581 C2000000 		.4byte	0xc2
 8686 0585 02       		.byte	0x2
 8687 0586 23       		.byte	0x23
 8688 0587 14       		.uleb128 0x14
 8689 0588 00       		.byte	0
 8690 0589 03       		.uleb128 0x3
 8691 058a 05030000 		.4byte	.LASF84
 8692 058e 0A       		.byte	0xa
ARM GAS  /tmp/ccTsJCXT.s 			page 295


 8693 058f 49       		.byte	0x49
 8694 0590 2C050000 		.4byte	0x52c
 8695 0594 12       		.uleb128 0x12
 8696 0595 1C       		.byte	0x1c
 8697 0596 0A       		.byte	0xa
 8698 0597 4E       		.byte	0x4e
 8699 0598 FF050000 		.4byte	0x5ff
 8700 059c 13       		.uleb128 0x13
 8701 059d 7D0B0000 		.4byte	.LASF85
 8702 05a1 0A       		.byte	0xa
 8703 05a2 50       		.byte	0x50
 8704 05a3 C2000000 		.4byte	0xc2
 8705 05a7 02       		.byte	0x2
 8706 05a8 23       		.byte	0x23
 8707 05a9 00       		.uleb128 0
 8708 05aa 13       		.uleb128 0x13
 8709 05ab 83110000 		.4byte	.LASF86
 8710 05af 0A       		.byte	0xa
 8711 05b0 53       		.byte	0x53
 8712 05b1 C2000000 		.4byte	0xc2
 8713 05b5 02       		.byte	0x2
 8714 05b6 23       		.byte	0x23
 8715 05b7 04       		.uleb128 0x4
 8716 05b8 13       		.uleb128 0x13
 8717 05b9 A4050000 		.4byte	.LASF87
 8718 05bd 0A       		.byte	0xa
 8719 05be 56       		.byte	0x56
 8720 05bf C2000000 		.4byte	0xc2
 8721 05c3 02       		.byte	0x2
 8722 05c4 23       		.byte	0x23
 8723 05c5 08       		.uleb128 0x8
 8724 05c6 13       		.uleb128 0x13
 8725 05c7 4E060000 		.4byte	.LASF88
 8726 05cb 0A       		.byte	0xa
 8727 05cc 59       		.byte	0x59
 8728 05cd C2000000 		.4byte	0xc2
 8729 05d1 02       		.byte	0x2
 8730 05d2 23       		.byte	0x23
 8731 05d3 0C       		.uleb128 0xc
 8732 05d4 13       		.uleb128 0x13
 8733 05d5 730A0000 		.4byte	.LASF89
 8734 05d9 0A       		.byte	0xa
 8735 05da 5D       		.byte	0x5d
 8736 05db C2000000 		.4byte	0xc2
 8737 05df 02       		.byte	0x2
 8738 05e0 23       		.byte	0x23
 8739 05e1 10       		.uleb128 0x10
 8740 05e2 13       		.uleb128 0x13
 8741 05e3 09010000 		.4byte	.LASF90
 8742 05e7 0A       		.byte	0xa
 8743 05e8 62       		.byte	0x62
 8744 05e9 C2000000 		.4byte	0xc2
 8745 05ed 02       		.byte	0x2
 8746 05ee 23       		.byte	0x23
 8747 05ef 14       		.uleb128 0x14
 8748 05f0 13       		.uleb128 0x13
 8749 05f1 81050000 		.4byte	.LASF91
ARM GAS  /tmp/ccTsJCXT.s 			page 296


 8750 05f5 0A       		.byte	0xa
 8751 05f6 66       		.byte	0x66
 8752 05f7 C2000000 		.4byte	0xc2
 8753 05fb 02       		.byte	0x2
 8754 05fc 23       		.byte	0x23
 8755 05fd 18       		.uleb128 0x18
 8756 05fe 00       		.byte	0
 8757 05ff 03       		.uleb128 0x3
 8758 0600 EF090000 		.4byte	.LASF92
 8759 0604 0A       		.byte	0xa
 8760 0605 69       		.byte	0x69
 8761 0606 94050000 		.4byte	0x594
 8762 060a 12       		.uleb128 0x12
 8763 060b 24       		.byte	0x24
 8764 060c 0A       		.byte	0xa
 8765 060d 6E       		.byte	0x6e
 8766 060e 91060000 		.4byte	0x691
 8767 0612 13       		.uleb128 0x13
 8768 0613 7D0B0000 		.4byte	.LASF85
 8769 0617 0A       		.byte	0xa
 8770 0618 70       		.byte	0x70
 8771 0619 C2000000 		.4byte	0xc2
 8772 061d 02       		.byte	0x2
 8773 061e 23       		.byte	0x23
 8774 061f 00       		.uleb128 0
 8775 0620 13       		.uleb128 0x13
 8776 0621 83110000 		.4byte	.LASF86
 8777 0625 0A       		.byte	0xa
 8778 0626 73       		.byte	0x73
 8779 0627 C2000000 		.4byte	0xc2
 8780 062b 02       		.byte	0x2
 8781 062c 23       		.byte	0x23
 8782 062d 04       		.uleb128 0x4
 8783 062e 13       		.uleb128 0x13
 8784 062f A4050000 		.4byte	.LASF87
 8785 0633 0A       		.byte	0xa
 8786 0634 76       		.byte	0x76
 8787 0635 C2000000 		.4byte	0xc2
 8788 0639 02       		.byte	0x2
 8789 063a 23       		.byte	0x23
 8790 063b 08       		.uleb128 0x8
 8791 063c 13       		.uleb128 0x13
 8792 063d 4E060000 		.4byte	.LASF88
 8793 0641 0A       		.byte	0xa
 8794 0642 79       		.byte	0x79
 8795 0643 C2000000 		.4byte	0xc2
 8796 0647 02       		.byte	0x2
 8797 0648 23       		.byte	0x23
 8798 0649 0C       		.uleb128 0xc
 8799 064a 13       		.uleb128 0x13
 8800 064b 09010000 		.4byte	.LASF90
 8801 064f 0A       		.byte	0xa
 8802 0650 7D       		.byte	0x7d
 8803 0651 C2000000 		.4byte	0xc2
 8804 0655 02       		.byte	0x2
 8805 0656 23       		.byte	0x23
 8806 0657 10       		.uleb128 0x10
ARM GAS  /tmp/ccTsJCXT.s 			page 297


 8807 0658 13       		.uleb128 0x13
 8808 0659 81050000 		.4byte	.LASF91
 8809 065d 0A       		.byte	0xa
 8810 065e 81       		.byte	0x81
 8811 065f C2000000 		.4byte	0xc2
 8812 0663 02       		.byte	0x2
 8813 0664 23       		.byte	0x23
 8814 0665 14       		.uleb128 0x14
 8815 0666 13       		.uleb128 0x13
 8816 0667 29070000 		.4byte	.LASF93
 8817 066b 0A       		.byte	0xa
 8818 066c 85       		.byte	0x85
 8819 066d C2000000 		.4byte	0xc2
 8820 0671 02       		.byte	0x2
 8821 0672 23       		.byte	0x23
 8822 0673 18       		.uleb128 0x18
 8823 0674 13       		.uleb128 0x13
 8824 0675 79060000 		.4byte	.LASF94
 8825 0679 0A       		.byte	0xa
 8826 067a 88       		.byte	0x88
 8827 067b C2000000 		.4byte	0xc2
 8828 067f 02       		.byte	0x2
 8829 0680 23       		.byte	0x23
 8830 0681 1C       		.uleb128 0x1c
 8831 0682 13       		.uleb128 0x13
 8832 0683 BA0A0000 		.4byte	.LASF95
 8833 0687 0A       		.byte	0xa
 8834 0688 8B       		.byte	0x8b
 8835 0689 C2000000 		.4byte	0xc2
 8836 068d 02       		.byte	0x2
 8837 068e 23       		.byte	0x23
 8838 068f 20       		.uleb128 0x20
 8839 0690 00       		.byte	0
 8840 0691 03       		.uleb128 0x3
 8841 0692 B2120000 		.4byte	.LASF96
 8842 0696 0A       		.byte	0xa
 8843 0697 8D       		.byte	0x8d
 8844 0698 0A060000 		.4byte	0x60a
 8845 069c 12       		.uleb128 0x12
 8846 069d 10       		.byte	0x10
 8847 069e 0A       		.byte	0xa
 8848 069f 92       		.byte	0x92
 8849 06a0 DD060000 		.4byte	0x6dd
 8850 06a4 13       		.uleb128 0x13
 8851 06a5 29070000 		.4byte	.LASF93
 8852 06a9 0A       		.byte	0xa
 8853 06aa 94       		.byte	0x94
 8854 06ab C2000000 		.4byte	0xc2
 8855 06af 02       		.byte	0x2
 8856 06b0 23       		.byte	0x23
 8857 06b1 00       		.uleb128 0
 8858 06b2 13       		.uleb128 0x13
 8859 06b3 79060000 		.4byte	.LASF94
 8860 06b7 0A       		.byte	0xa
 8861 06b8 97       		.byte	0x97
 8862 06b9 C2000000 		.4byte	0xc2
 8863 06bd 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 298


 8864 06be 23       		.byte	0x23
 8865 06bf 04       		.uleb128 0x4
 8866 06c0 13       		.uleb128 0x13
 8867 06c1 37110000 		.4byte	.LASF97
 8868 06c5 0A       		.byte	0xa
 8869 06c6 9A       		.byte	0x9a
 8870 06c7 C2000000 		.4byte	0xc2
 8871 06cb 02       		.byte	0x2
 8872 06cc 23       		.byte	0x23
 8873 06cd 08       		.uleb128 0x8
 8874 06ce 13       		.uleb128 0x13
 8875 06cf BA0A0000 		.4byte	.LASF95
 8876 06d3 0A       		.byte	0xa
 8877 06d4 9D       		.byte	0x9d
 8878 06d5 C2000000 		.4byte	0xc2
 8879 06d9 02       		.byte	0x2
 8880 06da 23       		.byte	0x23
 8881 06db 0C       		.uleb128 0xc
 8882 06dc 00       		.byte	0
 8883 06dd 03       		.uleb128 0x3
 8884 06de 1A030000 		.4byte	.LASF98
 8885 06e2 0A       		.byte	0xa
 8886 06e3 9F       		.byte	0x9f
 8887 06e4 9C060000 		.4byte	0x69c
 8888 06e8 12       		.uleb128 0x12
 8889 06e9 24       		.byte	0x24
 8890 06ea 0A       		.byte	0xa
 8891 06eb A4       		.byte	0xa4
 8892 06ec 6F070000 		.4byte	0x76f
 8893 06f0 13       		.uleb128 0x13
 8894 06f1 1C0E0000 		.4byte	.LASF99
 8895 06f5 0A       		.byte	0xa
 8896 06f6 A6       		.byte	0xa6
 8897 06f7 C2000000 		.4byte	0xc2
 8898 06fb 02       		.byte	0x2
 8899 06fc 23       		.byte	0x23
 8900 06fd 00       		.uleb128 0
 8901 06fe 13       		.uleb128 0x13
 8902 06ff 9E070000 		.4byte	.LASF100
 8903 0703 0A       		.byte	0xa
 8904 0704 A9       		.byte	0xa9
 8905 0705 C2000000 		.4byte	0xc2
 8906 0709 02       		.byte	0x2
 8907 070a 23       		.byte	0x23
 8908 070b 04       		.uleb128 0x4
 8909 070c 13       		.uleb128 0x13
 8910 070d 83000000 		.4byte	.LASF101
 8911 0711 0A       		.byte	0xa
 8912 0712 AC       		.byte	0xac
 8913 0713 C2000000 		.4byte	0xc2
 8914 0717 02       		.byte	0x2
 8915 0718 23       		.byte	0x23
 8916 0719 08       		.uleb128 0x8
 8917 071a 13       		.uleb128 0x13
 8918 071b AB090000 		.4byte	.LASF102
 8919 071f 0A       		.byte	0xa
 8920 0720 AF       		.byte	0xaf
ARM GAS  /tmp/ccTsJCXT.s 			page 299


 8921 0721 C2000000 		.4byte	0xc2
 8922 0725 02       		.byte	0x2
 8923 0726 23       		.byte	0x23
 8924 0727 0C       		.uleb128 0xc
 8925 0728 13       		.uleb128 0x13
 8926 0729 BD0D0000 		.4byte	.LASF103
 8927 072d 0A       		.byte	0xa
 8928 072e B2       		.byte	0xb2
 8929 072f C2000000 		.4byte	0xc2
 8930 0733 02       		.byte	0x2
 8931 0734 23       		.byte	0x23
 8932 0735 10       		.uleb128 0x10
 8933 0736 13       		.uleb128 0x13
 8934 0737 840B0000 		.4byte	.LASF104
 8935 073b 0A       		.byte	0xa
 8936 073c B5       		.byte	0xb5
 8937 073d C2000000 		.4byte	0xc2
 8938 0741 02       		.byte	0x2
 8939 0742 23       		.byte	0x23
 8940 0743 14       		.uleb128 0x14
 8941 0744 13       		.uleb128 0x13
 8942 0745 B8090000 		.4byte	.LASF105
 8943 0749 0A       		.byte	0xa
 8944 074a B8       		.byte	0xb8
 8945 074b C2000000 		.4byte	0xc2
 8946 074f 02       		.byte	0x2
 8947 0750 23       		.byte	0x23
 8948 0751 18       		.uleb128 0x18
 8949 0752 13       		.uleb128 0x13
 8950 0753 6C060000 		.4byte	.LASF106
 8951 0757 0A       		.byte	0xa
 8952 0758 BB       		.byte	0xbb
 8953 0759 C2000000 		.4byte	0xc2
 8954 075d 02       		.byte	0x2
 8955 075e 23       		.byte	0x23
 8956 075f 1C       		.uleb128 0x1c
 8957 0760 13       		.uleb128 0x13
 8958 0761 190F0000 		.4byte	.LASF107
 8959 0765 0A       		.byte	0xa
 8960 0766 BE       		.byte	0xbe
 8961 0767 C2000000 		.4byte	0xc2
 8962 076b 02       		.byte	0x2
 8963 076c 23       		.byte	0x23
 8964 076d 20       		.uleb128 0x20
 8965 076e 00       		.byte	0
 8966 076f 03       		.uleb128 0x3
 8967 0770 5F140000 		.4byte	.LASF108
 8968 0774 0A       		.byte	0xa
 8969 0775 C0       		.byte	0xc0
 8970 0776 E8060000 		.4byte	0x6e8
 8971 077a 12       		.uleb128 0x12
 8972 077b 10       		.byte	0x10
 8973 077c 0A       		.byte	0xa
 8974 077d C5       		.byte	0xc5
 8975 077e BB070000 		.4byte	0x7bb
 8976 0782 13       		.uleb128 0x13
 8977 0783 34070000 		.4byte	.LASF109
ARM GAS  /tmp/ccTsJCXT.s 			page 300


 8978 0787 0A       		.byte	0xa
 8979 0788 C7       		.byte	0xc7
 8980 0789 C2000000 		.4byte	0xc2
 8981 078d 02       		.byte	0x2
 8982 078e 23       		.byte	0x23
 8983 078f 00       		.uleb128 0
 8984 0790 13       		.uleb128 0x13
 8985 0791 DA060000 		.4byte	.LASF110
 8986 0795 0A       		.byte	0xa
 8987 0796 C9       		.byte	0xc9
 8988 0797 C2000000 		.4byte	0xc2
 8989 079b 02       		.byte	0x2
 8990 079c 23       		.byte	0x23
 8991 079d 04       		.uleb128 0x4
 8992 079e 13       		.uleb128 0x13
 8993 079f 43110000 		.4byte	.LASF111
 8994 07a3 0A       		.byte	0xa
 8995 07a4 CB       		.byte	0xcb
 8996 07a5 C2000000 		.4byte	0xc2
 8997 07a9 02       		.byte	0x2
 8998 07aa 23       		.byte	0x23
 8999 07ab 08       		.uleb128 0x8
 9000 07ac 13       		.uleb128 0x13
 9001 07ad 4F120000 		.4byte	.LASF112
 9002 07b1 0A       		.byte	0xa
 9003 07b2 CD       		.byte	0xcd
 9004 07b3 C2000000 		.4byte	0xc2
 9005 07b7 02       		.byte	0x2
 9006 07b8 23       		.byte	0x23
 9007 07b9 0C       		.uleb128 0xc
 9008 07ba 00       		.byte	0
 9009 07bb 03       		.uleb128 0x3
 9010 07bc 990E0000 		.4byte	.LASF113
 9011 07c0 0A       		.byte	0xa
 9012 07c1 CF       		.byte	0xcf
 9013 07c2 7A070000 		.4byte	0x77a
 9014 07c6 12       		.uleb128 0x12
 9015 07c7 14       		.byte	0x14
 9016 07c8 0A       		.byte	0xa
 9017 07c9 D4       		.byte	0xd4
 9018 07ca 15080000 		.4byte	0x815
 9019 07ce 13       		.uleb128 0x13
 9020 07cf 900B0000 		.4byte	.LASF114
 9021 07d3 0A       		.byte	0xa
 9022 07d4 D6       		.byte	0xd6
 9023 07d5 C2000000 		.4byte	0xc2
 9024 07d9 02       		.byte	0x2
 9025 07da 23       		.byte	0x23
 9026 07db 00       		.uleb128 0
 9027 07dc 13       		.uleb128 0x13
 9028 07dd A5000000 		.4byte	.LASF115
 9029 07e1 0A       		.byte	0xa
 9030 07e2 D8       		.byte	0xd8
 9031 07e3 C2000000 		.4byte	0xc2
 9032 07e7 02       		.byte	0x2
 9033 07e8 23       		.byte	0x23
 9034 07e9 04       		.uleb128 0x4
ARM GAS  /tmp/ccTsJCXT.s 			page 301


 9035 07ea 13       		.uleb128 0x13
 9036 07eb 95100000 		.4byte	.LASF116
 9037 07ef 0A       		.byte	0xa
 9038 07f0 DA       		.byte	0xda
 9039 07f1 C2000000 		.4byte	0xc2
 9040 07f5 02       		.byte	0x2
 9041 07f6 23       		.byte	0x23
 9042 07f7 08       		.uleb128 0x8
 9043 07f8 13       		.uleb128 0x13
 9044 07f9 50080000 		.4byte	.LASF117
 9045 07fd 0A       		.byte	0xa
 9046 07fe DC       		.byte	0xdc
 9047 07ff C2000000 		.4byte	0xc2
 9048 0803 02       		.byte	0x2
 9049 0804 23       		.byte	0x23
 9050 0805 0C       		.uleb128 0xc
 9051 0806 13       		.uleb128 0x13
 9052 0807 C30A0000 		.4byte	.LASF118
 9053 080b 0A       		.byte	0xa
 9054 080c DE       		.byte	0xde
 9055 080d C2000000 		.4byte	0xc2
 9056 0811 02       		.byte	0x2
 9057 0812 23       		.byte	0x23
 9058 0813 10       		.uleb128 0x10
 9059 0814 00       		.byte	0
 9060 0815 03       		.uleb128 0x3
 9061 0816 28100000 		.4byte	.LASF119
 9062 081a 0A       		.byte	0xa
 9063 081b E0       		.byte	0xe0
 9064 081c C6070000 		.4byte	0x7c6
 9065 0820 12       		.uleb128 0x12
 9066 0821 14       		.byte	0x14
 9067 0822 0A       		.byte	0xa
 9068 0823 F5       		.byte	0xf5
 9069 0824 6F080000 		.4byte	0x86f
 9070 0828 13       		.uleb128 0x13
 9071 0829 B9130000 		.4byte	.LASF120
 9072 082d 0A       		.byte	0xa
 9073 082e F7       		.byte	0xf7
 9074 082f C2000000 		.4byte	0xc2
 9075 0833 02       		.byte	0x2
 9076 0834 23       		.byte	0x23
 9077 0835 00       		.uleb128 0
 9078 0836 13       		.uleb128 0x13
 9079 0837 080C0000 		.4byte	.LASF121
 9080 083b 0A       		.byte	0xa
 9081 083c F9       		.byte	0xf9
 9082 083d C2000000 		.4byte	0xc2
 9083 0841 02       		.byte	0x2
 9084 0842 23       		.byte	0x23
 9085 0843 04       		.uleb128 0x4
 9086 0844 13       		.uleb128 0x13
 9087 0845 2A060000 		.4byte	.LASF122
 9088 0849 0A       		.byte	0xa
 9089 084a FB       		.byte	0xfb
 9090 084b C2000000 		.4byte	0xc2
 9091 084f 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 302


 9092 0850 23       		.byte	0x23
 9093 0851 08       		.uleb128 0x8
 9094 0852 13       		.uleb128 0x13
 9095 0853 53090000 		.4byte	.LASF123
 9096 0857 0A       		.byte	0xa
 9097 0858 FD       		.byte	0xfd
 9098 0859 C2000000 		.4byte	0xc2
 9099 085d 02       		.byte	0x2
 9100 085e 23       		.byte	0x23
 9101 085f 0C       		.uleb128 0xc
 9102 0860 13       		.uleb128 0x13
 9103 0861 B1110000 		.4byte	.LASF124
 9104 0865 0A       		.byte	0xa
 9105 0866 FF       		.byte	0xff
 9106 0867 C2000000 		.4byte	0xc2
 9107 086b 02       		.byte	0x2
 9108 086c 23       		.byte	0x23
 9109 086d 10       		.uleb128 0x10
 9110 086e 00       		.byte	0
 9111 086f 0E       		.uleb128 0xe
 9112 0870 15010000 		.4byte	.LASF125
 9113 0874 0A       		.byte	0xa
 9114 0875 0201     		.2byte	0x102
 9115 0877 20080000 		.4byte	0x820
 9116 087b 19       		.uleb128 0x19
 9117 087c 01       		.byte	0x1
 9118 087d 37000000 		.4byte	0x37
 9119 0881 0A       		.byte	0xa
 9120 0882 2101     		.2byte	0x121
 9121 0884 A7080000 		.4byte	0x8a7
 9122 0888 10       		.uleb128 0x10
 9123 0889 3C080000 		.4byte	.LASF126
 9124 088d 00       		.byte	0
 9125 088e 10       		.uleb128 0x10
 9126 088f AA0F0000 		.4byte	.LASF127
 9127 0893 01       		.byte	0x1
 9128 0894 10       		.uleb128 0x10
 9129 0895 58070000 		.4byte	.LASF128
 9130 0899 02       		.byte	0x2
 9131 089a 10       		.uleb128 0x10
 9132 089b 3F0E0000 		.4byte	.LASF129
 9133 089f 03       		.byte	0x3
 9134 08a0 10       		.uleb128 0x10
 9135 08a1 9B020000 		.4byte	.LASF130
 9136 08a5 04       		.byte	0x4
 9137 08a6 00       		.byte	0
 9138 08a7 0E       		.uleb128 0xe
 9139 08a8 B5030000 		.4byte	.LASF131
 9140 08ac 0A       		.byte	0xa
 9141 08ad 2701     		.2byte	0x127
 9142 08af 7B080000 		.4byte	0x87b
 9143 08b3 06       		.uleb128 0x6
 9144 08b4 A7080000 		.4byte	0x8a7
 9145 08b8 19       		.uleb128 0x19
 9146 08b9 01       		.byte	0x1
 9147 08ba 37000000 		.4byte	0x37
 9148 08be 0A       		.byte	0xa
ARM GAS  /tmp/ccTsJCXT.s 			page 303


 9149 08bf 2D01     		.2byte	0x12d
 9150 08c1 E4080000 		.4byte	0x8e4
 9151 08c5 10       		.uleb128 0x10
 9152 08c6 11050000 		.4byte	.LASF132
 9153 08ca 01       		.byte	0x1
 9154 08cb 10       		.uleb128 0x10
 9155 08cc 2A050000 		.4byte	.LASF133
 9156 08d0 02       		.byte	0x2
 9157 08d1 10       		.uleb128 0x10
 9158 08d2 43050000 		.4byte	.LASF134
 9159 08d6 04       		.byte	0x4
 9160 08d7 10       		.uleb128 0x10
 9161 08d8 5C050000 		.4byte	.LASF135
 9162 08dc 08       		.byte	0x8
 9163 08dd 10       		.uleb128 0x10
 9164 08de 8C090000 		.4byte	.LASF136
 9165 08e2 00       		.byte	0
 9166 08e3 00       		.byte	0
 9167 08e4 0E       		.uleb128 0xe
 9168 08e5 A80C0000 		.4byte	.LASF137
 9169 08e9 0A       		.byte	0xa
 9170 08ea 3301     		.2byte	0x133
 9171 08ec B8080000 		.4byte	0x8b8
 9172 08f0 0B       		.uleb128 0xb
 9173 08f1 40       		.byte	0x40
 9174 08f2 0A       		.byte	0xa
 9175 08f3 3B01     		.2byte	0x13b
 9176 08f5 54090000 		.4byte	0x954
 9177 08f9 0D       		.uleb128 0xd
 9178 08fa 95070000 		.4byte	.LASF65
 9179 08fe 0A       		.byte	0xa
 9180 08ff 3E01     		.2byte	0x13e
 9181 0901 54090000 		.4byte	0x954
 9182 0905 02       		.byte	0x2
 9183 0906 23       		.byte	0x23
 9184 0907 00       		.uleb128 0
 9185 0908 0D       		.uleb128 0xd
 9186 0909 410B0000 		.4byte	.LASF66
 9187 090d 0A       		.byte	0xa
 9188 090e 3F01     		.2byte	0x13f
 9189 0910 89050000 		.4byte	0x589
 9190 0914 02       		.byte	0x2
 9191 0915 23       		.byte	0x23
 9192 0916 04       		.uleb128 0x4
 9193 0917 0D       		.uleb128 0xd
 9194 0918 AD030000 		.4byte	.LASF138
 9195 091c 0A       		.byte	0xa
 9196 091d 4001     		.2byte	0x140
 9197 091f E4080000 		.4byte	0x8e4
 9198 0923 02       		.byte	0x2
 9199 0924 23       		.byte	0x23
 9200 0925 1C       		.uleb128 0x1c
 9201 0926 0D       		.uleb128 0xd
 9202 0927 40070000 		.4byte	.LASF139
 9203 092b 0A       		.byte	0xa
 9204 092c 4101     		.2byte	0x141
 9205 092e 5A090000 		.4byte	0x95a
ARM GAS  /tmp/ccTsJCXT.s 			page 304


 9206 0932 02       		.byte	0x2
 9207 0933 23       		.byte	0x23
 9208 0934 20       		.uleb128 0x20
 9209 0935 0D       		.uleb128 0xd
 9210 0936 D2010000 		.4byte	.LASF67
 9211 093a 0A       		.byte	0xa
 9212 093b 4301     		.2byte	0x143
 9213 093d 8F030000 		.4byte	0x38f
 9214 0941 02       		.byte	0x2
 9215 0942 23       		.byte	0x23
 9216 0943 3C       		.uleb128 0x3c
 9217 0944 0D       		.uleb128 0xd
 9218 0945 390E0000 		.4byte	.LASF68
 9219 0949 0A       		.byte	0xa
 9220 094a 4401     		.2byte	0x144
 9221 094c B3080000 		.4byte	0x8b3
 9222 0950 02       		.byte	0x2
 9223 0951 23       		.byte	0x23
 9224 0952 3D       		.uleb128 0x3d
 9225 0953 00       		.byte	0
 9226 0954 15       		.uleb128 0x15
 9227 0955 04       		.byte	0x4
 9228 0956 01030000 		.4byte	0x301
 9229 095a 09       		.uleb128 0x9
 9230 095b 26050000 		.4byte	0x526
 9231 095f 6A090000 		.4byte	0x96a
 9232 0963 0A       		.uleb128 0xa
 9233 0964 D2000000 		.4byte	0xd2
 9234 0968 06       		.byte	0x6
 9235 0969 00       		.byte	0
 9236 096a 0E       		.uleb128 0xe
 9237 096b BF110000 		.4byte	.LASF140
 9238 096f 0A       		.byte	0xa
 9239 0970 6301     		.2byte	0x163
 9240 0972 F0080000 		.4byte	0x8f0
 9241 0976 0F       		.uleb128 0xf
 9242 0977 01       		.byte	0x1
 9243 0978 37000000 		.4byte	0x37
 9244 097c 0B       		.byte	0xb
 9245 097d 33       		.byte	0x33
 9246 097e 9B090000 		.4byte	0x99b
 9247 0982 10       		.uleb128 0x10
 9248 0983 80120000 		.4byte	.LASF141
 9249 0987 64       		.byte	0x64
 9250 0988 10       		.uleb128 0x10
 9251 0989 CD0B0000 		.4byte	.LASF142
 9252 098d 0A       		.byte	0xa
 9253 098e 10       		.uleb128 0x10
 9254 098f 45070000 		.4byte	.LASF143
 9255 0993 01       		.byte	0x1
 9256 0994 10       		.uleb128 0x10
 9257 0995 43130000 		.4byte	.LASF144
 9258 0999 01       		.byte	0x1
 9259 099a 00       		.byte	0
 9260 099b 03       		.uleb128 0x3
 9261 099c 740E0000 		.4byte	.LASF145
 9262 09a0 0B       		.byte	0xb
ARM GAS  /tmp/ccTsJCXT.s 			page 305


 9263 09a1 38       		.byte	0x38
 9264 09a2 76090000 		.4byte	0x976
 9265 09a6 08       		.uleb128 0x8
 9266 09a7 FC070000 		.4byte	.LASF146
 9267 09ab 0B       		.byte	0xb
 9268 09ac 3D       		.byte	0x3d
 9269 09ad C2000000 		.4byte	0xc2
 9270 09b1 01       		.byte	0x1
 9271 09b2 01       		.byte	0x1
 9272 09b3 08       		.uleb128 0x8
 9273 09b4 C1040000 		.4byte	.LASF147
 9274 09b8 0B       		.byte	0xb
 9275 09b9 3E       		.byte	0x3e
 9276 09ba 9B090000 		.4byte	0x99b
 9277 09be 01       		.byte	0x1
 9278 09bf 01       		.byte	0x1
 9279 09c0 1A       		.uleb128 0x1a
 9280 09c1 01       		.byte	0x1
 9281 09c2 140A0000 		.4byte	.LASF190
 9282 09c6 01       		.byte	0x1
 9283 09c7 C419     		.2byte	0x19c4
 9284 09c9 01       		.byte	0x1
 9285 09ca 01       		.byte	0x1
 9286 09cb 000A0000 		.4byte	0xa00
 9287 09cf 1B       		.uleb128 0x1b
 9288 09d0 DC0F0000 		.4byte	.LASF148
 9289 09d4 01       		.byte	0x1
 9290 09d5 C419     		.2byte	0x19c4
 9291 09d7 54090000 		.4byte	0x954
 9292 09db 1B       		.uleb128 0x1b
 9293 09dc AD030000 		.4byte	.LASF138
 9294 09e0 01       		.byte	0x1
 9295 09e1 C419     		.2byte	0x19c4
 9296 09e3 C2000000 		.4byte	0xc2
 9297 09e7 1B       		.uleb128 0x1b
 9298 09e8 F00A0000 		.4byte	.LASF149
 9299 09ec 01       		.byte	0x1
 9300 09ed C419     		.2byte	0x19c4
 9301 09ef C2000000 		.4byte	0xc2
 9302 09f3 1C       		.uleb128 0x1c
 9303 09f4 746D7000 		.ascii	"tmp\000"
 9304 09f8 01       		.byte	0x1
 9305 09f9 C619     		.2byte	0x19c6
 9306 09fb C2000000 		.4byte	0xc2
 9307 09ff 00       		.byte	0
 9308 0a00 1D       		.uleb128 0x1d
 9309 0a01 01       		.byte	0x1
 9310 0a02 8B030000 		.4byte	.LASF167
 9311 0a06 01       		.byte	0x1
 9312 0a07 A619     		.2byte	0x19a6
 9313 0a09 01       		.byte	0x1
 9314 0a0a 50130000 		.4byte	.LFB177
 9315 0a0e 64130000 		.4byte	.LFE177
 9316 0a12 00000000 		.4byte	.LLST291
 9317 0a16 01       		.byte	0x1
 9318 0a17 680A0000 		.4byte	0xa68
 9319 0a1b 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccTsJCXT.s 			page 306


 9320 0a1c DC0F0000 		.4byte	.LASF148
 9321 0a20 01       		.byte	0x1
 9322 0a21 A619     		.2byte	0x19a6
 9323 0a23 54090000 		.4byte	0x954
 9324 0a27 01       		.byte	0x1
 9325 0a28 50       		.byte	0x50
 9326 0a29 1E       		.uleb128 0x1e
 9327 0a2a 78090000 		.4byte	.LASF150
 9328 0a2e 01       		.byte	0x1
 9329 0a2f A619     		.2byte	0x19a6
 9330 0a31 C2000000 		.4byte	0xc2
 9331 0a35 01       		.byte	0x1
 9332 0a36 51       		.byte	0x51
 9333 0a37 1F       		.uleb128 0x1f
 9334 0a38 08110000 		.4byte	.LASF151
 9335 0a3c 01       		.byte	0x1
 9336 0a3d A719     		.2byte	0x19a7
 9337 0a3f C2000000 		.4byte	0xc2
 9338 0a43 20000000 		.4byte	.LLST292
 9339 0a47 1F       		.uleb128 0x1f
 9340 0a48 460B0000 		.4byte	.LASF152
 9341 0a4c 01       		.byte	0x1
 9342 0a4d A719     		.2byte	0x19a7
 9343 0a4f C2000000 		.4byte	0xc2
 9344 0a53 41000000 		.4byte	.LLST293
 9345 0a57 20       		.uleb128 0x20
 9346 0a58 F9120000 		.4byte	.LASF154
 9347 0a5c 01       		.byte	0x1
 9348 0a5d A919     		.2byte	0x19a9
 9349 0a5f C2000000 		.4byte	0xc2
 9350 0a63 62000000 		.4byte	.LLST294
 9351 0a67 00       		.byte	0
 9352 0a68 21       		.uleb128 0x21
 9353 0a69 640D0000 		.4byte	.LASF155
 9354 0a6d 01       		.byte	0x1
 9355 0a6e 8819     		.2byte	0x1988
 9356 0a70 01       		.byte	0x1
 9357 0a71 01       		.byte	0x1
 9358 0a72 9B0A0000 		.4byte	0xa9b
 9359 0a76 1B       		.uleb128 0x1b
 9360 0a77 DC0F0000 		.4byte	.LASF148
 9361 0a7b 01       		.byte	0x1
 9362 0a7c 8819     		.2byte	0x1988
 9363 0a7e 54090000 		.4byte	0x954
 9364 0a82 1B       		.uleb128 0x1b
 9365 0a83 F60D0000 		.4byte	.LASF153
 9366 0a87 01       		.byte	0x1
 9367 0a88 8819     		.2byte	0x1988
 9368 0a8a C2000000 		.4byte	0xc2
 9369 0a8e 22       		.uleb128 0x22
 9370 0a8f F9120000 		.4byte	.LASF154
 9371 0a93 01       		.byte	0x1
 9372 0a94 8A19     		.2byte	0x198a
 9373 0a96 C2000000 		.4byte	0xc2
 9374 0a9a 00       		.byte	0
 9375 0a9b 21       		.uleb128 0x21
 9376 0a9c 640C0000 		.4byte	.LASF156
ARM GAS  /tmp/ccTsJCXT.s 			page 307


 9377 0aa0 01       		.byte	0x1
 9378 0aa1 5D19     		.2byte	0x195d
 9379 0aa3 01       		.byte	0x1
 9380 0aa4 01       		.byte	0x1
 9381 0aa5 F20A0000 		.4byte	0xaf2
 9382 0aa9 1B       		.uleb128 0x1b
 9383 0aaa DC0F0000 		.4byte	.LASF148
 9384 0aae 01       		.byte	0x1
 9385 0aaf 5D19     		.2byte	0x195d
 9386 0ab1 54090000 		.4byte	0x954
 9387 0ab5 1B       		.uleb128 0x1b
 9388 0ab6 12020000 		.4byte	.LASF157
 9389 0aba 01       		.byte	0x1
 9390 0abb 5D19     		.2byte	0x195d
 9391 0abd C2000000 		.4byte	0xc2
 9392 0ac1 1B       		.uleb128 0x1b
 9393 0ac2 F5020000 		.4byte	.LASF158
 9394 0ac6 01       		.byte	0x1
 9395 0ac7 5D19     		.2byte	0x195d
 9396 0ac9 C2000000 		.4byte	0xc2
 9397 0acd 1B       		.uleb128 0x1b
 9398 0ace BC070000 		.4byte	.LASF159
 9399 0ad2 01       		.byte	0x1
 9400 0ad3 5E19     		.2byte	0x195e
 9401 0ad5 C2000000 		.4byte	0xc2
 9402 0ad9 22       		.uleb128 0x22
 9403 0ada 61010000 		.4byte	.LASF160
 9404 0ade 01       		.byte	0x1
 9405 0adf 6019     		.2byte	0x1960
 9406 0ae1 C2000000 		.4byte	0xc2
 9407 0ae5 22       		.uleb128 0x22
 9408 0ae6 1A120000 		.4byte	.LASF161
 9409 0aea 01       		.byte	0x1
 9410 0aeb 6119     		.2byte	0x1961
 9411 0aed C2000000 		.4byte	0xc2
 9412 0af1 00       		.byte	0
 9413 0af2 21       		.uleb128 0x21
 9414 0af3 400D0000 		.4byte	.LASF162
 9415 0af7 01       		.byte	0x1
 9416 0af8 2E19     		.2byte	0x192e
 9417 0afa 01       		.byte	0x1
 9418 0afb 01       		.byte	0x1
 9419 0afc 490B0000 		.4byte	0xb49
 9420 0b00 1B       		.uleb128 0x1b
 9421 0b01 DC0F0000 		.4byte	.LASF148
 9422 0b05 01       		.byte	0x1
 9423 0b06 2E19     		.2byte	0x192e
 9424 0b08 54090000 		.4byte	0x954
 9425 0b0c 1B       		.uleb128 0x1b
 9426 0b0d 12020000 		.4byte	.LASF157
 9427 0b11 01       		.byte	0x1
 9428 0b12 2E19     		.2byte	0x192e
 9429 0b14 C2000000 		.4byte	0xc2
 9430 0b18 1B       		.uleb128 0x1b
 9431 0b19 F5020000 		.4byte	.LASF158
 9432 0b1d 01       		.byte	0x1
 9433 0b1e 2E19     		.2byte	0x192e
ARM GAS  /tmp/ccTsJCXT.s 			page 308


 9434 0b20 C2000000 		.4byte	0xc2
 9435 0b24 1B       		.uleb128 0x1b
 9436 0b25 BC070000 		.4byte	.LASF159
 9437 0b29 01       		.byte	0x1
 9438 0b2a 2F19     		.2byte	0x192f
 9439 0b2c C2000000 		.4byte	0xc2
 9440 0b30 22       		.uleb128 0x22
 9441 0b31 61010000 		.4byte	.LASF160
 9442 0b35 01       		.byte	0x1
 9443 0b36 3119     		.2byte	0x1931
 9444 0b38 C2000000 		.4byte	0xc2
 9445 0b3c 22       		.uleb128 0x22
 9446 0b3d 1A120000 		.4byte	.LASF161
 9447 0b41 01       		.byte	0x1
 9448 0b42 3219     		.2byte	0x1932
 9449 0b44 C2000000 		.4byte	0xc2
 9450 0b48 00       		.byte	0
 9451 0b49 21       		.uleb128 0x21
 9452 0b4a 2C140000 		.4byte	.LASF163
 9453 0b4e 01       		.byte	0x1
 9454 0b4f 0419     		.2byte	0x1904
 9455 0b51 01       		.byte	0x1
 9456 0b52 01       		.byte	0x1
 9457 0b53 940B0000 		.4byte	0xb94
 9458 0b57 1B       		.uleb128 0x1b
 9459 0b58 DC0F0000 		.4byte	.LASF148
 9460 0b5c 01       		.byte	0x1
 9461 0b5d 0419     		.2byte	0x1904
 9462 0b5f 54090000 		.4byte	0x954
 9463 0b63 1B       		.uleb128 0x1b
 9464 0b64 12020000 		.4byte	.LASF157
 9465 0b68 01       		.byte	0x1
 9466 0b69 0419     		.2byte	0x1904
 9467 0b6b C2000000 		.4byte	0xc2
 9468 0b6f 1B       		.uleb128 0x1b
 9469 0b70 BC070000 		.4byte	.LASF159
 9470 0b74 01       		.byte	0x1
 9471 0b75 0419     		.2byte	0x1904
 9472 0b77 C2000000 		.4byte	0xc2
 9473 0b7b 22       		.uleb128 0x22
 9474 0b7c 58010000 		.4byte	.LASF164
 9475 0b80 01       		.byte	0x1
 9476 0b81 0619     		.2byte	0x1906
 9477 0b83 C2000000 		.4byte	0xc2
 9478 0b87 22       		.uleb128 0x22
 9479 0b88 1A120000 		.4byte	.LASF161
 9480 0b8c 01       		.byte	0x1
 9481 0b8d 0719     		.2byte	0x1907
 9482 0b8f C2000000 		.4byte	0xc2
 9483 0b93 00       		.byte	0
 9484 0b94 21       		.uleb128 0x21
 9485 0b95 83070000 		.4byte	.LASF165
 9486 0b99 01       		.byte	0x1
 9487 0b9a DC18     		.2byte	0x18dc
 9488 0b9c 01       		.byte	0x1
 9489 0b9d 01       		.byte	0x1
 9490 0b9e EB0B0000 		.4byte	0xbeb
ARM GAS  /tmp/ccTsJCXT.s 			page 309


 9491 0ba2 1B       		.uleb128 0x1b
 9492 0ba3 DC0F0000 		.4byte	.LASF148
 9493 0ba7 01       		.byte	0x1
 9494 0ba8 DC18     		.2byte	0x18dc
 9495 0baa 54090000 		.4byte	0x954
 9496 0bae 1B       		.uleb128 0x1b
 9497 0baf 12020000 		.4byte	.LASF157
 9498 0bb3 01       		.byte	0x1
 9499 0bb4 DC18     		.2byte	0x18dc
 9500 0bb6 C2000000 		.4byte	0xc2
 9501 0bba 1B       		.uleb128 0x1b
 9502 0bbb F5020000 		.4byte	.LASF158
 9503 0bbf 01       		.byte	0x1
 9504 0bc0 DC18     		.2byte	0x18dc
 9505 0bc2 C2000000 		.4byte	0xc2
 9506 0bc6 1B       		.uleb128 0x1b
 9507 0bc7 BC070000 		.4byte	.LASF159
 9508 0bcb 01       		.byte	0x1
 9509 0bcc DD18     		.2byte	0x18dd
 9510 0bce C2000000 		.4byte	0xc2
 9511 0bd2 22       		.uleb128 0x22
 9512 0bd3 58010000 		.4byte	.LASF164
 9513 0bd7 01       		.byte	0x1
 9514 0bd8 DF18     		.2byte	0x18df
 9515 0bda C2000000 		.4byte	0xc2
 9516 0bde 22       		.uleb128 0x22
 9517 0bdf 1A120000 		.4byte	.LASF161
 9518 0be3 01       		.byte	0x1
 9519 0be4 E018     		.2byte	0x18e0
 9520 0be6 C2000000 		.4byte	0xc2
 9521 0bea 00       		.byte	0
 9522 0beb 21       		.uleb128 0x21
 9523 0bec 2C010000 		.4byte	.LASF166
 9524 0bf0 01       		.byte	0x1
 9525 0bf1 B118     		.2byte	0x18b1
 9526 0bf3 01       		.byte	0x1
 9527 0bf4 01       		.byte	0x1
 9528 0bf5 360C0000 		.4byte	0xc36
 9529 0bf9 1B       		.uleb128 0x1b
 9530 0bfa DC0F0000 		.4byte	.LASF148
 9531 0bfe 01       		.byte	0x1
 9532 0bff B118     		.2byte	0x18b1
 9533 0c01 54090000 		.4byte	0x954
 9534 0c05 1B       		.uleb128 0x1b
 9535 0c06 12020000 		.4byte	.LASF157
 9536 0c0a 01       		.byte	0x1
 9537 0c0b B118     		.2byte	0x18b1
 9538 0c0d C2000000 		.4byte	0xc2
 9539 0c11 1B       		.uleb128 0x1b
 9540 0c12 BC070000 		.4byte	.LASF159
 9541 0c16 01       		.byte	0x1
 9542 0c17 B118     		.2byte	0x18b1
 9543 0c19 C2000000 		.4byte	0xc2
 9544 0c1d 22       		.uleb128 0x22
 9545 0c1e 58010000 		.4byte	.LASF164
 9546 0c22 01       		.byte	0x1
 9547 0c23 B318     		.2byte	0x18b3
ARM GAS  /tmp/ccTsJCXT.s 			page 310


 9548 0c25 C2000000 		.4byte	0xc2
 9549 0c29 22       		.uleb128 0x22
 9550 0c2a 1A120000 		.4byte	.LASF161
 9551 0c2e 01       		.byte	0x1
 9552 0c2f B418     		.2byte	0x18b4
 9553 0c31 C2000000 		.4byte	0xc2
 9554 0c35 00       		.byte	0
 9555 0c36 1D       		.uleb128 0x1d
 9556 0c37 01       		.byte	0x1
 9557 0c38 AA070000 		.4byte	.LASF168
 9558 0c3c 01       		.byte	0x1
 9559 0c3d 8218     		.2byte	0x1882
 9560 0c3f 01       		.byte	0x1
 9561 0c40 00110000 		.4byte	.LFB170
 9562 0c44 4C110000 		.4byte	.LFE170
 9563 0c48 80000000 		.4byte	.LLST252
 9564 0c4c 01       		.byte	0x1
 9565 0c4d B00C0000 		.4byte	0xcb0
 9566 0c51 1E       		.uleb128 0x1e
 9567 0c52 DC0F0000 		.4byte	.LASF148
 9568 0c56 01       		.byte	0x1
 9569 0c57 8218     		.2byte	0x1882
 9570 0c59 54090000 		.4byte	0x954
 9571 0c5d 01       		.byte	0x1
 9572 0c5e 50       		.byte	0x50
 9573 0c5f 1F       		.uleb128 0x1f
 9574 0c60 12020000 		.4byte	.LASF157
 9575 0c64 01       		.byte	0x1
 9576 0c65 8218     		.2byte	0x1882
 9577 0c67 C2000000 		.4byte	0xc2
 9578 0c6b A0000000 		.4byte	.LLST253
 9579 0c6f 1F       		.uleb128 0x1f
 9580 0c70 F5020000 		.4byte	.LASF158
 9581 0c74 01       		.byte	0x1
 9582 0c75 8218     		.2byte	0x1882
 9583 0c77 C2000000 		.4byte	0xc2
 9584 0c7b CC000000 		.4byte	.LLST254
 9585 0c7f 1F       		.uleb128 0x1f
 9586 0c80 BC070000 		.4byte	.LASF159
 9587 0c84 01       		.byte	0x1
 9588 0c85 8318     		.2byte	0x1883
 9589 0c87 C2000000 		.4byte	0xc2
 9590 0c8b 06010000 		.4byte	.LLST255
 9591 0c8f 20       		.uleb128 0x20
 9592 0c90 58010000 		.4byte	.LASF164
 9593 0c94 01       		.byte	0x1
 9594 0c95 8518     		.2byte	0x1885
 9595 0c97 C2000000 		.4byte	0xc2
 9596 0c9b 32010000 		.4byte	.LLST256
 9597 0c9f 20       		.uleb128 0x20
 9598 0ca0 1A120000 		.4byte	.LASF161
 9599 0ca4 01       		.byte	0x1
 9600 0ca5 8618     		.2byte	0x1886
 9601 0ca7 C2000000 		.4byte	0xc2
 9602 0cab 66010000 		.4byte	.LLST257
 9603 0caf 00       		.byte	0
 9604 0cb0 23       		.uleb128 0x23
ARM GAS  /tmp/ccTsJCXT.s 			page 311


 9605 0cb1 52100000 		.4byte	.LASF307
 9606 0cb5 01       		.byte	0x1
 9607 0cb6 FF17     		.2byte	0x17ff
 9608 0cb8 01       		.byte	0x1
 9609 0cb9 6B030000 		.4byte	0x36b
 9610 0cbd 58150000 		.4byte	.LFB169
 9611 0cc1 FC150000 		.4byte	.LFE169
 9612 0cc5 84010000 		.4byte	.LLST327
 9613 0cc9 01       		.byte	0x1
 9614 0cca C30D0000 		.4byte	0xdc3
 9615 0cce 1F       		.uleb128 0x1f
 9616 0ccf 0F090000 		.4byte	.LASF169
 9617 0cd3 01       		.byte	0x1
 9618 0cd4 FF17     		.2byte	0x17ff
 9619 0cd6 C30D0000 		.4byte	0xdc3
 9620 0cda A4010000 		.4byte	.LLST328
 9621 0cde 1F       		.uleb128 0x1f
 9622 0cdf E10B0000 		.4byte	.LASF170
 9623 0ce3 01       		.byte	0x1
 9624 0ce4 0018     		.2byte	0x1800
 9625 0ce6 C90D0000 		.4byte	0xdc9
 9626 0cea C5010000 		.4byte	.LLST329
 9627 0cee 20       		.uleb128 0x20
 9628 0cef F9120000 		.4byte	.LASF154
 9629 0cf3 01       		.byte	0x1
 9630 0cf4 0218     		.2byte	0x1802
 9631 0cf6 C2000000 		.4byte	0xc2
 9632 0cfa 55020000 		.4byte	.LLST330
 9633 0cfe 20       		.uleb128 0x20
 9634 0cff 58010000 		.4byte	.LASF164
 9635 0d03 01       		.byte	0x1
 9636 0d04 0318     		.2byte	0x1803
 9637 0d06 C2000000 		.4byte	0xc2
 9638 0d0a B7020000 		.4byte	.LLST331
 9639 0d0e 20       		.uleb128 0x20
 9640 0d0f 1A120000 		.4byte	.LASF161
 9641 0d13 01       		.byte	0x1
 9642 0d14 0418     		.2byte	0x1804
 9643 0d16 C2000000 		.4byte	0xc2
 9644 0d1a CA020000 		.4byte	.LLST332
 9645 0d1e 24       		.uleb128 0x24
 9646 0d1f EB0B0000 		.4byte	0xbeb
 9647 0d23 AC150000 		.4byte	.LBB192
 9648 0d27 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 9649 0d2b 01       		.byte	0x1
 9650 0d2c 4A18     		.2byte	0x184a
 9651 0d2e 660D0000 		.4byte	0xd66
 9652 0d32 25       		.uleb128 0x25
 9653 0d33 110C0000 		.4byte	0xc11
 9654 0d37 DD020000 		.4byte	.LLST333
 9655 0d3b 25       		.uleb128 0x25
 9656 0d3c 050C0000 		.4byte	0xc05
 9657 0d40 F0020000 		.4byte	.LLST334
 9658 0d44 25       		.uleb128 0x25
 9659 0d45 F90B0000 		.4byte	0xbf9
 9660 0d49 12030000 		.4byte	.LLST335
 9661 0d4d 26       		.uleb128 0x26
ARM GAS  /tmp/ccTsJCXT.s 			page 312


 9662 0d4e C8000000 		.4byte	.Ldebug_ranges0+0xc8
 9663 0d52 27       		.uleb128 0x27
 9664 0d53 1D0C0000 		.4byte	0xc1d
 9665 0d57 25030000 		.4byte	.LLST336
 9666 0d5b 27       		.uleb128 0x27
 9667 0d5c 290C0000 		.4byte	0xc29
 9668 0d60 38030000 		.4byte	.LLST337
 9669 0d64 00       		.byte	0
 9670 0d65 00       		.byte	0
 9671 0d66 28       		.uleb128 0x28
 9672 0d67 490B0000 		.4byte	0xb49
 9673 0d6b D6150000 		.4byte	.LBB196
 9674 0d6f F8150000 		.4byte	.LBE196
 9675 0d73 01       		.byte	0x1
 9676 0d74 5818     		.2byte	0x1858
 9677 0d76 B20D0000 		.4byte	0xdb2
 9678 0d7a 25       		.uleb128 0x25
 9679 0d7b 6F0B0000 		.4byte	0xb6f
 9680 0d7f 61030000 		.4byte	.LLST338
 9681 0d83 25       		.uleb128 0x25
 9682 0d84 630B0000 		.4byte	0xb63
 9683 0d88 74030000 		.4byte	.LLST339
 9684 0d8c 25       		.uleb128 0x25
 9685 0d8d 570B0000 		.4byte	0xb57
 9686 0d91 87030000 		.4byte	.LLST340
 9687 0d95 29       		.uleb128 0x29
 9688 0d96 D6150000 		.4byte	.LBB197
 9689 0d9a F8150000 		.4byte	.LBE197
 9690 0d9e 27       		.uleb128 0x27
 9691 0d9f 7B0B0000 		.4byte	0xb7b
 9692 0da3 9A030000 		.4byte	.LLST341
 9693 0da7 27       		.uleb128 0x27
 9694 0da8 870B0000 		.4byte	0xb87
 9695 0dac AD030000 		.4byte	.LLST342
 9696 0db0 00       		.byte	0
 9697 0db1 00       		.byte	0
 9698 0db2 2A       		.uleb128 0x2a
 9699 0db3 90150000 		.4byte	.LVL565
 9700 0db7 000A0000 		.4byte	0xa00
 9701 0dbb 2B       		.uleb128 0x2b
 9702 0dbc 01       		.byte	0x1
 9703 0dbd 51       		.byte	0x51
 9704 0dbe 02       		.byte	0x2
 9705 0dbf 71       		.byte	0x71
 9706 0dc0 00       		.sleb128 0
 9707 0dc1 00       		.byte	0
 9708 0dc2 00       		.byte	0
 9709 0dc3 15       		.uleb128 0x15
 9710 0dc4 04       		.byte	0x4
 9711 0dc5 6A090000 		.4byte	0x96a
 9712 0dc9 15       		.uleb128 0x15
 9713 0dca 04       		.byte	0x4
 9714 0dcb 6F080000 		.4byte	0x86f
 9715 0dcf 2C       		.uleb128 0x2c
 9716 0dd0 520C0000 		.4byte	.LASF174
 9717 0dd4 01       		.byte	0x1
 9718 0dd5 C317     		.2byte	0x17c3
ARM GAS  /tmp/ccTsJCXT.s 			page 313


 9719 0dd7 01       		.byte	0x1
 9720 0dd8 A4000000 		.4byte	.LFB168
 9721 0ddc E8000000 		.4byte	.LFE168
 9722 0de0 CB030000 		.4byte	.LLST6
 9723 0de4 01       		.byte	0x1
 9724 0de5 340E0000 		.4byte	0xe34
 9725 0de9 1E       		.uleb128 0x1e
 9726 0dea DC0F0000 		.4byte	.LASF148
 9727 0dee 01       		.byte	0x1
 9728 0def C317     		.2byte	0x17c3
 9729 0df1 54090000 		.4byte	0x954
 9730 0df5 01       		.byte	0x1
 9731 0df6 50       		.byte	0x50
 9732 0df7 1E       		.uleb128 0x1e
 9733 0df8 81030000 		.4byte	.LASF171
 9734 0dfc 01       		.byte	0x1
 9735 0dfd C317     		.2byte	0x17c3
 9736 0dff 340E0000 		.4byte	0xe34
 9737 0e03 01       		.byte	0x1
 9738 0e04 51       		.byte	0x51
 9739 0e05 20       		.uleb128 0x20
 9740 0e06 A2010000 		.4byte	.LASF172
 9741 0e0a 01       		.byte	0x1
 9742 0e0b C517     		.2byte	0x17c5
 9743 0e0d C2000000 		.4byte	0xc2
 9744 0e11 EB030000 		.4byte	.LLST7
 9745 0e15 2D       		.uleb128 0x2d
 9746 0e16 1A120000 		.4byte	.LASF161
 9747 0e1a 01       		.byte	0x1
 9748 0e1b C617     		.2byte	0x17c6
 9749 0e1d C2000000 		.4byte	0xc2
 9750 0e21 01       		.byte	0x1
 9751 0e22 53       		.byte	0x53
 9752 0e23 20       		.uleb128 0x20
 9753 0e24 94020000 		.4byte	.LASF173
 9754 0e28 01       		.byte	0x1
 9755 0e29 C717     		.2byte	0x17c7
 9756 0e2b C2000000 		.4byte	0xc2
 9757 0e2f 1B040000 		.4byte	.LLST8
 9758 0e33 00       		.byte	0
 9759 0e34 15       		.uleb128 0x15
 9760 0e35 04       		.byte	0x4
 9761 0e36 FF050000 		.4byte	0x5ff
 9762 0e3a 2C       		.uleb128 0x2c
 9763 0e3b E00C0000 		.4byte	.LASF175
 9764 0e3f 01       		.byte	0x1
 9765 0e40 7917     		.2byte	0x1779
 9766 0e42 01       		.byte	0x1
 9767 0e43 50000000 		.4byte	.LFB167
 9768 0e47 A4000000 		.4byte	.LFE167
 9769 0e4b 2E040000 		.4byte	.LLST3
 9770 0e4f 01       		.byte	0x1
 9771 0e50 9F0E0000 		.4byte	0xe9f
 9772 0e54 1E       		.uleb128 0x1e
 9773 0e55 DC0F0000 		.4byte	.LASF148
 9774 0e59 01       		.byte	0x1
 9775 0e5a 7917     		.2byte	0x1779
ARM GAS  /tmp/ccTsJCXT.s 			page 314


 9776 0e5c 54090000 		.4byte	0x954
 9777 0e60 01       		.byte	0x1
 9778 0e61 50       		.byte	0x50
 9779 0e62 1E       		.uleb128 0x1e
 9780 0e63 81030000 		.4byte	.LASF171
 9781 0e67 01       		.byte	0x1
 9782 0e68 7917     		.2byte	0x1779
 9783 0e6a 340E0000 		.4byte	0xe34
 9784 0e6e 01       		.byte	0x1
 9785 0e6f 51       		.byte	0x51
 9786 0e70 20       		.uleb128 0x20
 9787 0e71 A2010000 		.4byte	.LASF172
 9788 0e75 01       		.byte	0x1
 9789 0e76 7B17     		.2byte	0x177b
 9790 0e78 C2000000 		.4byte	0xc2
 9791 0e7c 4E040000 		.4byte	.LLST4
 9792 0e80 2D       		.uleb128 0x2d
 9793 0e81 1A120000 		.4byte	.LASF161
 9794 0e85 01       		.byte	0x1
 9795 0e86 7C17     		.2byte	0x177c
 9796 0e88 C2000000 		.4byte	0xc2
 9797 0e8c 01       		.byte	0x1
 9798 0e8d 53       		.byte	0x53
 9799 0e8e 20       		.uleb128 0x20
 9800 0e8f 94020000 		.4byte	.LASF173
 9801 0e93 01       		.byte	0x1
 9802 0e94 7D17     		.2byte	0x177d
 9803 0e96 C2000000 		.4byte	0xc2
 9804 0e9a 7D040000 		.4byte	.LLST5
 9805 0e9e 00       		.byte	0
 9806 0e9f 1D       		.uleb128 0x1d
 9807 0ea0 01       		.byte	0x1
 9808 0ea1 C70D0000 		.4byte	.LASF176
 9809 0ea5 01       		.byte	0x1
 9810 0ea6 2D17     		.2byte	0x172d
 9811 0ea8 01       		.byte	0x1
 9812 0ea9 880F0000 		.4byte	.LFB166
 9813 0ead E00F0000 		.4byte	.LFE166
 9814 0eb1 AE040000 		.4byte	.LLST242
 9815 0eb5 01       		.byte	0x1
 9816 0eb6 050F0000 		.4byte	0xf05
 9817 0eba 1E       		.uleb128 0x1e
 9818 0ebb DC0F0000 		.4byte	.LASF148
 9819 0ebf 01       		.byte	0x1
 9820 0ec0 2D17     		.2byte	0x172d
 9821 0ec2 54090000 		.4byte	0x954
 9822 0ec6 01       		.byte	0x1
 9823 0ec7 50       		.byte	0x50
 9824 0ec8 1E       		.uleb128 0x1e
 9825 0ec9 81030000 		.4byte	.LASF171
 9826 0ecd 01       		.byte	0x1
 9827 0ece 2D17     		.2byte	0x172d
 9828 0ed0 340E0000 		.4byte	0xe34
 9829 0ed4 01       		.byte	0x1
 9830 0ed5 51       		.byte	0x51
 9831 0ed6 20       		.uleb128 0x20
 9832 0ed7 A2010000 		.4byte	.LASF172
ARM GAS  /tmp/ccTsJCXT.s 			page 315


 9833 0edb 01       		.byte	0x1
 9834 0edc 2F17     		.2byte	0x172f
 9835 0ede C2000000 		.4byte	0xc2
 9836 0ee2 CE040000 		.4byte	.LLST243
 9837 0ee6 2D       		.uleb128 0x2d
 9838 0ee7 1A120000 		.4byte	.LASF161
 9839 0eeb 01       		.byte	0x1
 9840 0eec 3017     		.2byte	0x1730
 9841 0eee C2000000 		.4byte	0xc2
 9842 0ef2 01       		.byte	0x1
 9843 0ef3 53       		.byte	0x53
 9844 0ef4 20       		.uleb128 0x20
 9845 0ef5 94020000 		.4byte	.LASF173
 9846 0ef9 01       		.byte	0x1
 9847 0efa 3117     		.2byte	0x1731
 9848 0efc C2000000 		.4byte	0xc2
 9849 0f00 FE040000 		.4byte	.LLST244
 9850 0f04 00       		.byte	0
 9851 0f05 2C       		.uleb128 0x2c
 9852 0f06 5B120000 		.4byte	.LASF177
 9853 0f0a 01       		.byte	0x1
 9854 0f0b E216     		.2byte	0x16e2
 9855 0f0d 01       		.byte	0x1
 9856 0f0e 00000000 		.4byte	.LFB165
 9857 0f12 50000000 		.4byte	.LFE165
 9858 0f16 2F050000 		.4byte	.LLST0
 9859 0f1a 01       		.byte	0x1
 9860 0f1b 6A0F0000 		.4byte	0xf6a
 9861 0f1f 1E       		.uleb128 0x1e
 9862 0f20 DC0F0000 		.4byte	.LASF148
 9863 0f24 01       		.byte	0x1
 9864 0f25 E216     		.2byte	0x16e2
 9865 0f27 54090000 		.4byte	0x954
 9866 0f2b 01       		.byte	0x1
 9867 0f2c 50       		.byte	0x50
 9868 0f2d 1E       		.uleb128 0x1e
 9869 0f2e 81030000 		.4byte	.LASF171
 9870 0f32 01       		.byte	0x1
 9871 0f33 E216     		.2byte	0x16e2
 9872 0f35 340E0000 		.4byte	0xe34
 9873 0f39 01       		.byte	0x1
 9874 0f3a 51       		.byte	0x51
 9875 0f3b 20       		.uleb128 0x20
 9876 0f3c A2010000 		.4byte	.LASF172
 9877 0f40 01       		.byte	0x1
 9878 0f41 E416     		.2byte	0x16e4
 9879 0f43 C2000000 		.4byte	0xc2
 9880 0f47 4F050000 		.4byte	.LLST1
 9881 0f4b 2D       		.uleb128 0x2d
 9882 0f4c 1A120000 		.4byte	.LASF161
 9883 0f50 01       		.byte	0x1
 9884 0f51 E516     		.2byte	0x16e5
 9885 0f53 C2000000 		.4byte	0xc2
 9886 0f57 01       		.byte	0x1
 9887 0f58 53       		.byte	0x53
 9888 0f59 20       		.uleb128 0x20
 9889 0f5a 94020000 		.4byte	.LASF173
ARM GAS  /tmp/ccTsJCXT.s 			page 316


 9890 0f5e 01       		.byte	0x1
 9891 0f5f E616     		.2byte	0x16e6
 9892 0f61 C2000000 		.4byte	0xc2
 9893 0f65 7E050000 		.4byte	.LLST2
 9894 0f69 00       		.byte	0
 9895 0f6a 1D       		.uleb128 0x1d
 9896 0f6b 01       		.byte	0x1
 9897 0f6c AB010000 		.4byte	.LASF178
 9898 0f70 01       		.byte	0x1
 9899 0f71 B216     		.2byte	0x16b2
 9900 0f73 01       		.byte	0x1
 9901 0f74 7A0D0000 		.4byte	.LFB164
 9902 0f78 DC0D0000 		.4byte	.LFE164
 9903 0f7c AD050000 		.4byte	.LLST223
 9904 0f80 01       		.byte	0x1
 9905 0f81 B20F0000 		.4byte	0xfb2
 9906 0f85 1E       		.uleb128 0x1e
 9907 0f86 DC0F0000 		.4byte	.LASF148
 9908 0f8a 01       		.byte	0x1
 9909 0f8b B216     		.2byte	0x16b2
 9910 0f8d 54090000 		.4byte	0x954
 9911 0f91 01       		.byte	0x1
 9912 0f92 50       		.byte	0x50
 9913 0f93 1E       		.uleb128 0x1e
 9914 0f94 C30B0000 		.4byte	.LASF179
 9915 0f98 01       		.byte	0x1
 9916 0f99 B216     		.2byte	0x16b2
 9917 0f9b B20F0000 		.4byte	0xfb2
 9918 0f9f 01       		.byte	0x1
 9919 0fa0 51       		.byte	0x51
 9920 0fa1 20       		.uleb128 0x20
 9921 0fa2 8D020000 		.4byte	.LASF180
 9922 0fa6 01       		.byte	0x1
 9923 0fa7 B416     		.2byte	0x16b4
 9924 0fa9 C2000000 		.4byte	0xc2
 9925 0fad CD050000 		.4byte	.LLST224
 9926 0fb1 00       		.byte	0
 9927 0fb2 15       		.uleb128 0x15
 9928 0fb3 04       		.byte	0x4
 9929 0fb4 89050000 		.4byte	0x589
 9930 0fb8 2C       		.uleb128 0x2c
 9931 0fb9 4C000000 		.4byte	.LASF181
 9932 0fbd 01       		.byte	0x1
 9933 0fbe 9F16     		.2byte	0x169f
 9934 0fc0 01       		.byte	0x1
 9935 0fc1 340D0000 		.4byte	.LFB163
 9936 0fc5 440D0000 		.4byte	.LFE163
 9937 0fc9 F7050000 		.4byte	.LLST216
 9938 0fcd 01       		.byte	0x1
 9939 0fce FC0F0000 		.4byte	0xffc
 9940 0fd2 1F       		.uleb128 0x1f
 9941 0fd3 40070000 		.4byte	.LASF139
 9942 0fd7 01       		.byte	0x1
 9943 0fd8 9F16     		.2byte	0x169f
 9944 0fda 26050000 		.4byte	0x526
 9945 0fde 17060000 		.4byte	.LLST217
 9946 0fe2 20       		.uleb128 0x20
ARM GAS  /tmp/ccTsJCXT.s 			page 317


 9947 0fe3 0F090000 		.4byte	.LASF169
 9948 0fe7 01       		.byte	0x1
 9949 0fe8 A116     		.2byte	0x16a1
 9950 0fea C30D0000 		.4byte	0xdc3
 9951 0fee 38060000 		.4byte	.LLST218
 9952 0ff2 2E       		.uleb128 0x2e
 9953 0ff3 420D0000 		.4byte	.LVL293
 9954 0ff7 0C130000 		.4byte	0x130c
 9955 0ffb 00       		.byte	0
 9956 0ffc 2C       		.uleb128 0x2c
 9957 0ffd 07120000 		.4byte	.LASF182
 9958 1001 01       		.byte	0x1
 9959 1002 8D16     		.2byte	0x168d
 9960 1004 01       		.byte	0x1
 9961 1005 220D0000 		.4byte	.LFB162
 9962 1009 320D0000 		.4byte	.LFE162
 9963 100d 4B060000 		.4byte	.LLST213
 9964 1011 01       		.byte	0x1
 9965 1012 40100000 		.4byte	0x1040
 9966 1016 1F       		.uleb128 0x1f
 9967 1017 40070000 		.4byte	.LASF139
 9968 101b 01       		.byte	0x1
 9969 101c 8D16     		.2byte	0x168d
 9970 101e 26050000 		.4byte	0x526
 9971 1022 6B060000 		.4byte	.LLST214
 9972 1026 20       		.uleb128 0x20
 9973 1027 0F090000 		.4byte	.LASF169
 9974 102b 01       		.byte	0x1
 9975 102c 8F16     		.2byte	0x168f
 9976 102e C30D0000 		.4byte	0xdc3
 9977 1032 8C060000 		.4byte	.LLST215
 9978 1036 2E       		.uleb128 0x2e
 9979 1037 300D0000 		.4byte	.LVL290
 9980 103b 27130000 		.4byte	0x1327
 9981 103f 00       		.byte	0
 9982 1040 2C       		.uleb128 0x2c
 9983 1041 A2080000 		.4byte	.LASF183
 9984 1045 01       		.byte	0x1
 9985 1046 7B16     		.2byte	0x167b
 9986 1048 01       		.byte	0x1
 9987 1049 D20A0000 		.4byte	.LFB161
 9988 104d E20A0000 		.4byte	.LFE161
 9989 1051 9F060000 		.4byte	.LLST200
 9990 1055 01       		.byte	0x1
 9991 1056 84100000 		.4byte	0x1084
 9992 105a 1F       		.uleb128 0x1f
 9993 105b 40070000 		.4byte	.LASF139
 9994 105f 01       		.byte	0x1
 9995 1060 7B16     		.2byte	0x167b
 9996 1062 26050000 		.4byte	0x526
 9997 1066 BF060000 		.4byte	.LLST201
 9998 106a 20       		.uleb128 0x20
 9999 106b 0F090000 		.4byte	.LASF169
 10000 106f 01       		.byte	0x1
 10001 1070 7D16     		.2byte	0x167d
 10002 1072 C30D0000 		.4byte	0xdc3
 10003 1076 E0060000 		.4byte	.LLST202
ARM GAS  /tmp/ccTsJCXT.s 			page 318


 10004 107a 2E       		.uleb128 0x2e
 10005 107b E00A0000 		.4byte	.LVL243
 10006 107f C9130000 		.4byte	0x13c9
 10007 1083 00       		.byte	0
 10008 1084 2C       		.uleb128 0x2c
 10009 1085 F6080000 		.4byte	.LASF184
 10010 1089 01       		.byte	0x1
 10011 108a 6916     		.2byte	0x1669
 10012 108c 01       		.byte	0x1
 10013 108d C00A0000 		.4byte	.LFB160
 10014 1091 D00A0000 		.4byte	.LFE160
 10015 1095 F3060000 		.4byte	.LLST197
 10016 1099 01       		.byte	0x1
 10017 109a C8100000 		.4byte	0x10c8
 10018 109e 1F       		.uleb128 0x1f
 10019 109f 40070000 		.4byte	.LASF139
 10020 10a3 01       		.byte	0x1
 10021 10a4 6916     		.2byte	0x1669
 10022 10a6 26050000 		.4byte	0x526
 10023 10aa 13070000 		.4byte	.LLST198
 10024 10ae 20       		.uleb128 0x20
 10025 10af 0F090000 		.4byte	.LASF169
 10026 10b3 01       		.byte	0x1
 10027 10b4 6B16     		.2byte	0x166b
 10028 10b6 C30D0000 		.4byte	0xdc3
 10029 10ba 34070000 		.4byte	.LLST199
 10030 10be 2E       		.uleb128 0x2e
 10031 10bf CE0A0000 		.4byte	.LVL240
 10032 10c3 E4130000 		.4byte	0x13e4
 10033 10c7 00       		.byte	0
 10034 10c8 1D       		.uleb128 0x1d
 10035 10c9 01       		.byte	0x1
 10036 10ca C3130000 		.4byte	.LASF185
 10037 10ce 01       		.byte	0x1
 10038 10cf 4016     		.2byte	0x1640
 10039 10d1 01       		.byte	0x1
 10040 10d2 240B0000 		.4byte	.LFB159
 10041 10d6 600B0000 		.4byte	.LFE159
 10042 10da 47070000 		.4byte	.LLST205
 10043 10de 01       		.byte	0x1
 10044 10df 12110000 		.4byte	0x1112
 10045 10e3 1F       		.uleb128 0x1f
 10046 10e4 40070000 		.4byte	.LASF139
 10047 10e8 01       		.byte	0x1
 10048 10e9 4016     		.2byte	0x1640
 10049 10eb 26050000 		.4byte	0x526
 10050 10ef 67070000 		.4byte	.LLST206
 10051 10f3 2D       		.uleb128 0x2d
 10052 10f4 0F090000 		.4byte	.LASF169
 10053 10f8 01       		.byte	0x1
 10054 10f9 4216     		.2byte	0x1642
 10055 10fb C30D0000 		.4byte	0xdc3
 10056 10ff 01       		.byte	0x1
 10057 1100 54       		.byte	0x54
 10058 1101 2A       		.uleb128 0x2a
 10059 1102 3C0B0000 		.4byte	.LVL252
 10060 1106 78130000 		.4byte	0x1378
ARM GAS  /tmp/ccTsJCXT.s 			page 319


 10061 110a 2B       		.uleb128 0x2b
 10062 110b 01       		.byte	0x1
 10063 110c 50       		.byte	0x50
 10064 110d 02       		.byte	0x2
 10065 110e 74       		.byte	0x74
 10066 110f 00       		.sleb128 0
 10067 1110 00       		.byte	0
 10068 1111 00       		.byte	0
 10069 1112 1D       		.uleb128 0x1d
 10070 1113 01       		.byte	0x1
 10071 1114 E1100000 		.4byte	.LASF186
 10072 1118 01       		.byte	0x1
 10073 1119 1716     		.2byte	0x1617
 10074 111b 01       		.byte	0x1
 10075 111c E60A0000 		.4byte	.LFB158
 10076 1120 220B0000 		.4byte	.LFE158
 10077 1124 93070000 		.4byte	.LLST203
 10078 1128 01       		.byte	0x1
 10079 1129 5C110000 		.4byte	0x115c
 10080 112d 1F       		.uleb128 0x1f
 10081 112e 40070000 		.4byte	.LASF139
 10082 1132 01       		.byte	0x1
 10083 1133 1716     		.2byte	0x1617
 10084 1135 26050000 		.4byte	0x526
 10085 1139 B3070000 		.4byte	.LLST204
 10086 113d 2D       		.uleb128 0x2d
 10087 113e 0F090000 		.4byte	.LASF169
 10088 1142 01       		.byte	0x1
 10089 1143 1916     		.2byte	0x1619
 10090 1145 C30D0000 		.4byte	0xdc3
 10091 1149 01       		.byte	0x1
 10092 114a 54       		.byte	0x54
 10093 114b 2A       		.uleb128 0x2a
 10094 114c FE0A0000 		.4byte	.LVL247
 10095 1150 93130000 		.4byte	0x1393
 10096 1154 2B       		.uleb128 0x2b
 10097 1155 01       		.byte	0x1
 10098 1156 50       		.byte	0x50
 10099 1157 02       		.byte	0x2
 10100 1158 74       		.byte	0x74
 10101 1159 00       		.sleb128 0
 10102 115a 00       		.byte	0
 10103 115b 00       		.byte	0
 10104 115c 1D       		.uleb128 0x1d
 10105 115d 01       		.byte	0x1
 10106 115e 7D0F0000 		.4byte	.LASF187
 10107 1162 01       		.byte	0x1
 10108 1163 EE15     		.2byte	0x15ee
 10109 1165 01       		.byte	0x1
 10110 1166 A00B0000 		.4byte	.LFB157
 10111 116a DC0B0000 		.4byte	.LFE157
 10112 116e DF070000 		.4byte	.LLST209
 10113 1172 01       		.byte	0x1
 10114 1173 A6110000 		.4byte	0x11a6
 10115 1177 1F       		.uleb128 0x1f
 10116 1178 40070000 		.4byte	.LASF139
 10117 117c 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 320


 10118 117d EE15     		.2byte	0x15ee
 10119 117f 26050000 		.4byte	0x526
 10120 1183 FF070000 		.4byte	.LLST210
 10121 1187 2D       		.uleb128 0x2d
 10122 1188 0F090000 		.4byte	.LASF169
 10123 118c 01       		.byte	0x1
 10124 118d F015     		.2byte	0x15f0
 10125 118f C30D0000 		.4byte	0xdc3
 10126 1193 01       		.byte	0x1
 10127 1194 54       		.byte	0x54
 10128 1195 2A       		.uleb128 0x2a
 10129 1196 B80B0000 		.4byte	.LVL262
 10130 119a 42130000 		.4byte	0x1342
 10131 119e 2B       		.uleb128 0x2b
 10132 119f 01       		.byte	0x1
 10133 11a0 50       		.byte	0x50
 10134 11a1 02       		.byte	0x2
 10135 11a2 74       		.byte	0x74
 10136 11a3 00       		.sleb128 0
 10137 11a4 00       		.byte	0
 10138 11a5 00       		.byte	0
 10139 11a6 1D       		.uleb128 0x1d
 10140 11a7 01       		.byte	0x1
 10141 11a8 21020000 		.4byte	.LASF188
 10142 11ac 01       		.byte	0x1
 10143 11ad C515     		.2byte	0x15c5
 10144 11af 01       		.byte	0x1
 10145 11b0 620B0000 		.4byte	.LFB156
 10146 11b4 9E0B0000 		.4byte	.LFE156
 10147 11b8 2B080000 		.4byte	.LLST207
 10148 11bc 01       		.byte	0x1
 10149 11bd F0110000 		.4byte	0x11f0
 10150 11c1 1F       		.uleb128 0x1f
 10151 11c2 40070000 		.4byte	.LASF139
 10152 11c6 01       		.byte	0x1
 10153 11c7 C515     		.2byte	0x15c5
 10154 11c9 26050000 		.4byte	0x526
 10155 11cd 4B080000 		.4byte	.LLST208
 10156 11d1 2D       		.uleb128 0x2d
 10157 11d2 0F090000 		.4byte	.LASF169
 10158 11d6 01       		.byte	0x1
 10159 11d7 C715     		.2byte	0x15c7
 10160 11d9 C30D0000 		.4byte	0xdc3
 10161 11dd 01       		.byte	0x1
 10162 11de 54       		.byte	0x54
 10163 11df 2A       		.uleb128 0x2a
 10164 11e0 7A0B0000 		.4byte	.LVL257
 10165 11e4 5D130000 		.4byte	0x135d
 10166 11e8 2B       		.uleb128 0x2b
 10167 11e9 01       		.byte	0x1
 10168 11ea 50       		.byte	0x50
 10169 11eb 02       		.byte	0x2
 10170 11ec 74       		.byte	0x74
 10171 11ed 00       		.sleb128 0
 10172 11ee 00       		.byte	0
 10173 11ef 00       		.byte	0
 10174 11f0 1D       		.uleb128 0x1d
ARM GAS  /tmp/ccTsJCXT.s 			page 321


 10175 11f1 01       		.byte	0x1
 10176 11f2 C5090000 		.4byte	.LASF189
 10177 11f6 01       		.byte	0x1
 10178 11f7 B315     		.2byte	0x15b3
 10179 11f9 01       		.byte	0x1
 10180 11fa 460D0000 		.4byte	.LFB155
 10181 11fe 560D0000 		.4byte	.LFE155
 10182 1202 77080000 		.4byte	.LLST219
 10183 1206 01       		.byte	0x1
 10184 1207 35120000 		.4byte	0x1235
 10185 120b 1F       		.uleb128 0x1f
 10186 120c 40070000 		.4byte	.LASF139
 10187 1210 01       		.byte	0x1
 10188 1211 B315     		.2byte	0x15b3
 10189 1213 26050000 		.4byte	0x526
 10190 1217 97080000 		.4byte	.LLST220
 10191 121b 20       		.uleb128 0x20
 10192 121c 0F090000 		.4byte	.LASF169
 10193 1220 01       		.byte	0x1
 10194 1221 B515     		.2byte	0x15b5
 10195 1223 C30D0000 		.4byte	0xdc3
 10196 1227 B8080000 		.4byte	.LLST221
 10197 122b 2E       		.uleb128 0x2e
 10198 122c 540D0000 		.4byte	.LVL297
 10199 1230 F0120000 		.4byte	0x12f0
 10200 1234 00       		.byte	0
 10201 1235 2F       		.uleb128 0x2f
 10202 1236 01       		.byte	0x1
 10203 1237 D0000000 		.4byte	.LASF308
 10204 123b 01       		.byte	0x1
 10205 123c 9D15     		.2byte	0x159d
 10206 123e 01       		.byte	0x1
 10207 123f A7080000 		.4byte	0x8a7
 10208 1243 01       		.byte	0x1
 10209 1244 55120000 		.4byte	0x1255
 10210 1248 1B       		.uleb128 0x1b
 10211 1249 0F090000 		.4byte	.LASF169
 10212 124d 01       		.byte	0x1
 10213 124e 9D15     		.2byte	0x159d
 10214 1250 C30D0000 		.4byte	0xdc3
 10215 1254 00       		.byte	0
 10216 1255 30       		.uleb128 0x30
 10217 1256 01       		.byte	0x1
 10218 1257 67030000 		.4byte	.LASF191
 10219 125b 01       		.byte	0x1
 10220 125c 9315     		.2byte	0x1593
 10221 125e 01       		.byte	0x1
 10222 125f A7080000 		.4byte	0x8a7
 10223 1263 74120000 		.4byte	0x1274
 10224 1267 1B       		.uleb128 0x1b
 10225 1268 0F090000 		.4byte	.LASF169
 10226 126c 01       		.byte	0x1
 10227 126d 9315     		.2byte	0x1593
 10228 126f C30D0000 		.4byte	0xdc3
 10229 1273 00       		.byte	0
 10230 1274 30       		.uleb128 0x30
 10231 1275 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 322


 10232 1276 40030000 		.4byte	.LASF192
 10233 127a 01       		.byte	0x1
 10234 127b 8915     		.2byte	0x1589
 10235 127d 01       		.byte	0x1
 10236 127e A7080000 		.4byte	0x8a7
 10237 1282 93120000 		.4byte	0x1293
 10238 1286 1B       		.uleb128 0x1b
 10239 1287 0F090000 		.4byte	.LASF169
 10240 128b 01       		.byte	0x1
 10241 128c 8915     		.2byte	0x1589
 10242 128e C30D0000 		.4byte	0xdc3
 10243 1292 00       		.byte	0
 10244 1293 30       		.uleb128 0x30
 10245 1294 01       		.byte	0x1
 10246 1295 8C130000 		.4byte	.LASF193
 10247 1299 01       		.byte	0x1
 10248 129a 7F15     		.2byte	0x157f
 10249 129c 01       		.byte	0x1
 10250 129d A7080000 		.4byte	0x8a7
 10251 12a1 B2120000 		.4byte	0x12b2
 10252 12a5 1B       		.uleb128 0x1b
 10253 12a6 0F090000 		.4byte	.LASF169
 10254 12aa 01       		.byte	0x1
 10255 12ab 7F15     		.2byte	0x157f
 10256 12ad C30D0000 		.4byte	0xdc3
 10257 12b1 00       		.byte	0
 10258 12b2 30       		.uleb128 0x30
 10259 12b3 01       		.byte	0x1
 10260 12b4 E20D0000 		.4byte	.LASF194
 10261 12b8 01       		.byte	0x1
 10262 12b9 7515     		.2byte	0x1575
 10263 12bb 01       		.byte	0x1
 10264 12bc A7080000 		.4byte	0x8a7
 10265 12c0 D1120000 		.4byte	0x12d1
 10266 12c4 1B       		.uleb128 0x1b
 10267 12c5 0F090000 		.4byte	.LASF169
 10268 12c9 01       		.byte	0x1
 10269 12ca 7515     		.2byte	0x1575
 10270 12cc C30D0000 		.4byte	0xdc3
 10271 12d0 00       		.byte	0
 10272 12d1 30       		.uleb128 0x30
 10273 12d2 01       		.byte	0x1
 10274 12d3 22120000 		.4byte	.LASF195
 10275 12d7 01       		.byte	0x1
 10276 12d8 6B15     		.2byte	0x156b
 10277 12da 01       		.byte	0x1
 10278 12db A7080000 		.4byte	0x8a7
 10279 12df F0120000 		.4byte	0x12f0
 10280 12e3 1B       		.uleb128 0x1b
 10281 12e4 0F090000 		.4byte	.LASF169
 10282 12e8 01       		.byte	0x1
 10283 12e9 6B15     		.2byte	0x156b
 10284 12eb C30D0000 		.4byte	0xdc3
 10285 12ef 00       		.byte	0
 10286 12f0 1A       		.uleb128 0x1a
 10287 12f1 01       		.byte	0x1
 10288 12f2 F10F0000 		.4byte	.LASF196
ARM GAS  /tmp/ccTsJCXT.s 			page 323


 10289 12f6 01       		.byte	0x1
 10290 12f7 6613     		.2byte	0x1366
 10291 12f9 01       		.byte	0x1
 10292 12fa 01       		.byte	0x1
 10293 12fb 0C130000 		.4byte	0x130c
 10294 12ff 1B       		.uleb128 0x1b
 10295 1300 0F090000 		.4byte	.LASF169
 10296 1304 01       		.byte	0x1
 10297 1305 6613     		.2byte	0x1366
 10298 1307 C30D0000 		.4byte	0xdc3
 10299 130b 00       		.byte	0
 10300 130c 31       		.uleb128 0x31
 10301 130d 01       		.byte	0x1
 10302 130e 6B100000 		.4byte	.LASF197
 10303 1312 01       		.byte	0x1
 10304 1313 5713     		.2byte	0x1357
 10305 1315 01       		.byte	0x1
 10306 1316 27130000 		.4byte	0x1327
 10307 131a 1B       		.uleb128 0x1b
 10308 131b 0F090000 		.4byte	.LASF169
 10309 131f 01       		.byte	0x1
 10310 1320 5713     		.2byte	0x1357
 10311 1322 C30D0000 		.4byte	0xdc3
 10312 1326 00       		.byte	0
 10313 1327 31       		.uleb128 0x31
 10314 1328 01       		.byte	0x1
 10315 1329 50020000 		.4byte	.LASF198
 10316 132d 01       		.byte	0x1
 10317 132e 4813     		.2byte	0x1348
 10318 1330 01       		.byte	0x1
 10319 1331 42130000 		.4byte	0x1342
 10320 1335 1B       		.uleb128 0x1b
 10321 1336 0F090000 		.4byte	.LASF169
 10322 133a 01       		.byte	0x1
 10323 133b 4813     		.2byte	0x1348
 10324 133d C30D0000 		.4byte	0xdc3
 10325 1341 00       		.byte	0
 10326 1342 31       		.uleb128 0x31
 10327 1343 01       		.byte	0x1
 10328 1344 530B0000 		.4byte	.LASF199
 10329 1348 01       		.byte	0x1
 10330 1349 3913     		.2byte	0x1339
 10331 134b 01       		.byte	0x1
 10332 134c 5D130000 		.4byte	0x135d
 10333 1350 1B       		.uleb128 0x1b
 10334 1351 0F090000 		.4byte	.LASF169
 10335 1355 01       		.byte	0x1
 10336 1356 3913     		.2byte	0x1339
 10337 1358 C30D0000 		.4byte	0xdc3
 10338 135c 00       		.byte	0
 10339 135d 31       		.uleb128 0x31
 10340 135e 01       		.byte	0x1
 10341 135f D90E0000 		.4byte	.LASF200
 10342 1363 01       		.byte	0x1
 10343 1364 2A13     		.2byte	0x132a
 10344 1366 01       		.byte	0x1
 10345 1367 78130000 		.4byte	0x1378
ARM GAS  /tmp/ccTsJCXT.s 			page 324


 10346 136b 1B       		.uleb128 0x1b
 10347 136c 0F090000 		.4byte	.LASF169
 10348 1370 01       		.byte	0x1
 10349 1371 2A13     		.2byte	0x132a
 10350 1373 C30D0000 		.4byte	0xdc3
 10351 1377 00       		.byte	0
 10352 1378 31       		.uleb128 0x31
 10353 1379 01       		.byte	0x1
 10354 137a 01130000 		.4byte	.LASF201
 10355 137e 01       		.byte	0x1
 10356 137f 1B13     		.2byte	0x131b
 10357 1381 01       		.byte	0x1
 10358 1382 93130000 		.4byte	0x1393
 10359 1386 1B       		.uleb128 0x1b
 10360 1387 0F090000 		.4byte	.LASF169
 10361 138b 01       		.byte	0x1
 10362 138c 1B13     		.2byte	0x131b
 10363 138e C30D0000 		.4byte	0xdc3
 10364 1392 00       		.byte	0
 10365 1393 31       		.uleb128 0x31
 10366 1394 01       		.byte	0x1
 10367 1395 E2040000 		.4byte	.LASF202
 10368 1399 01       		.byte	0x1
 10369 139a 0C13     		.2byte	0x130c
 10370 139c 01       		.byte	0x1
 10371 139d AE130000 		.4byte	0x13ae
 10372 13a1 1B       		.uleb128 0x1b
 10373 13a2 0F090000 		.4byte	.LASF169
 10374 13a6 01       		.byte	0x1
 10375 13a7 0C13     		.2byte	0x130c
 10376 13a9 C30D0000 		.4byte	0xdc3
 10377 13ad 00       		.byte	0
 10378 13ae 31       		.uleb128 0x31
 10379 13af 01       		.byte	0x1
 10380 13b0 A1040000 		.4byte	.LASF203
 10381 13b4 01       		.byte	0x1
 10382 13b5 FD12     		.2byte	0x12fd
 10383 13b7 01       		.byte	0x1
 10384 13b8 C9130000 		.4byte	0x13c9
 10385 13bc 1B       		.uleb128 0x1b
 10386 13bd 0F090000 		.4byte	.LASF169
 10387 13c1 01       		.byte	0x1
 10388 13c2 FD12     		.2byte	0x12fd
 10389 13c4 C30D0000 		.4byte	0xdc3
 10390 13c8 00       		.byte	0
 10391 13c9 31       		.uleb128 0x31
 10392 13ca 01       		.byte	0x1
 10393 13cb F20C0000 		.4byte	.LASF204
 10394 13cf 01       		.byte	0x1
 10395 13d0 EE12     		.2byte	0x12ee
 10396 13d2 01       		.byte	0x1
 10397 13d3 E4130000 		.4byte	0x13e4
 10398 13d7 1B       		.uleb128 0x1b
 10399 13d8 0F090000 		.4byte	.LASF169
 10400 13dc 01       		.byte	0x1
 10401 13dd EE12     		.2byte	0x12ee
 10402 13df C30D0000 		.4byte	0xdc3
ARM GAS  /tmp/ccTsJCXT.s 			page 325


 10403 13e3 00       		.byte	0
 10404 13e4 31       		.uleb128 0x31
 10405 13e5 01       		.byte	0x1
 10406 13e6 410F0000 		.4byte	.LASF205
 10407 13ea 01       		.byte	0x1
 10408 13eb DF12     		.2byte	0x12df
 10409 13ed 01       		.byte	0x1
 10410 13ee FF130000 		.4byte	0x13ff
 10411 13f2 1B       		.uleb128 0x1b
 10412 13f3 0F090000 		.4byte	.LASF169
 10413 13f7 01       		.byte	0x1
 10414 13f8 DF12     		.2byte	0x12df
 10415 13fa C30D0000 		.4byte	0xdc3
 10416 13fe 00       		.byte	0
 10417 13ff 32       		.uleb128 0x32
 10418 1400 01       		.byte	0x1
 10419 1401 07100000 		.4byte	.LASF207
 10420 1405 01       		.byte	0x1
 10421 1406 8B12     		.2byte	0x128b
 10422 1408 01       		.byte	0x1
 10423 1409 C2000000 		.4byte	0xc2
 10424 140d 8C0A0000 		.4byte	.LFB138
 10425 1411 BE0A0000 		.4byte	.LFE138
 10426 1415 02       		.byte	0x2
 10427 1416 7D       		.byte	0x7d
 10428 1417 00       		.sleb128 0
 10429 1418 01       		.byte	0x1
 10430 1419 4C140000 		.4byte	0x144c
 10431 141d 1F       		.uleb128 0x1f
 10432 141e 0F090000 		.4byte	.LASF169
 10433 1422 01       		.byte	0x1
 10434 1423 8B12     		.2byte	0x128b
 10435 1425 C30D0000 		.4byte	0xdc3
 10436 1429 CB080000 		.4byte	.LLST195
 10437 142d 1E       		.uleb128 0x1e
 10438 142e AD030000 		.4byte	.LASF138
 10439 1432 01       		.byte	0x1
 10440 1433 8B12     		.2byte	0x128b
 10441 1435 C2000000 		.4byte	0xc2
 10442 1439 01       		.byte	0x1
 10443 143a 51       		.byte	0x51
 10444 143b 20       		.uleb128 0x20
 10445 143c 760F0000 		.4byte	.LASF206
 10446 1440 01       		.byte	0x1
 10447 1441 8D12     		.2byte	0x128d
 10448 1443 C2000000 		.4byte	0xc2
 10449 1447 50090000 		.4byte	.LLST196
 10450 144b 00       		.byte	0
 10451 144c 33       		.uleb128 0x33
 10452 144d 01       		.byte	0x1
 10453 144e CF030000 		.4byte	.LASF208
 10454 1452 01       		.byte	0x1
 10455 1453 6012     		.2byte	0x1260
 10456 1455 01       		.byte	0x1
 10457 1456 6B030000 		.4byte	0x36b
 10458 145a 4A160000 		.4byte	.LFB137
 10459 145e 98160000 		.4byte	.LFE137
ARM GAS  /tmp/ccTsJCXT.s 			page 326


 10460 1462 C0090000 		.4byte	.LLST346
 10461 1466 01       		.byte	0x1
 10462 1467 A3140000 		.4byte	0x14a3
 10463 146b 1F       		.uleb128 0x1f
 10464 146c 0F090000 		.4byte	.LASF169
 10465 1470 01       		.byte	0x1
 10466 1471 6012     		.2byte	0x1260
 10467 1473 C30D0000 		.4byte	0xdc3
 10468 1477 E0090000 		.4byte	.LLST347
 10469 147b 1F       		.uleb128 0x1f
 10470 147c E10B0000 		.4byte	.LASF170
 10471 1480 01       		.byte	0x1
 10472 1481 6112     		.2byte	0x1261
 10473 1483 C90D0000 		.4byte	0xdc9
 10474 1487 140A0000 		.4byte	.LLST348
 10475 148b 2A       		.uleb128 0x2a
 10476 148c 68160000 		.4byte	.LVL598
 10477 1490 B00C0000 		.4byte	0xcb0
 10478 1494 2B       		.uleb128 0x2b
 10479 1495 01       		.byte	0x1
 10480 1496 50       		.byte	0x50
 10481 1497 02       		.byte	0x2
 10482 1498 74       		.byte	0x74
 10483 1499 00       		.sleb128 0
 10484 149a 2B       		.uleb128 0x2b
 10485 149b 01       		.byte	0x1
 10486 149c 51       		.byte	0x51
 10487 149d 03       		.byte	0x3
 10488 149e F3       		.byte	0xf3
 10489 149f 01       		.uleb128 0x1
 10490 14a0 51       		.byte	0x51
 10491 14a1 00       		.byte	0
 10492 14a2 00       		.byte	0
 10493 14a3 33       		.uleb128 0x33
 10494 14a4 01       		.byte	0x1
 10495 14a5 B00E0000 		.4byte	.LASF209
 10496 14a9 01       		.byte	0x1
 10497 14aa 3812     		.2byte	0x1238
 10498 14ac 01       		.byte	0x1
 10499 14ad 6B030000 		.4byte	0x36b
 10500 14b1 FC150000 		.4byte	.LFB136
 10501 14b5 4A160000 		.4byte	.LFE136
 10502 14b9 400A0000 		.4byte	.LLST343
 10503 14bd 01       		.byte	0x1
 10504 14be FA140000 		.4byte	0x14fa
 10505 14c2 1F       		.uleb128 0x1f
 10506 14c3 0F090000 		.4byte	.LASF169
 10507 14c7 01       		.byte	0x1
 10508 14c8 3812     		.2byte	0x1238
 10509 14ca C30D0000 		.4byte	0xdc3
 10510 14ce 600A0000 		.4byte	.LLST344
 10511 14d2 1F       		.uleb128 0x1f
 10512 14d3 E10B0000 		.4byte	.LASF170
 10513 14d7 01       		.byte	0x1
 10514 14d8 3812     		.2byte	0x1238
 10515 14da C90D0000 		.4byte	0xdc9
 10516 14de 940A0000 		.4byte	.LLST345
ARM GAS  /tmp/ccTsJCXT.s 			page 327


 10517 14e2 2A       		.uleb128 0x2a
 10518 14e3 1A160000 		.4byte	.LVL593
 10519 14e7 B00C0000 		.4byte	0xcb0
 10520 14eb 2B       		.uleb128 0x2b
 10521 14ec 01       		.byte	0x1
 10522 14ed 50       		.byte	0x50
 10523 14ee 02       		.byte	0x2
 10524 14ef 74       		.byte	0x74
 10525 14f0 00       		.sleb128 0
 10526 14f1 2B       		.uleb128 0x2b
 10527 14f2 01       		.byte	0x1
 10528 14f3 51       		.byte	0x51
 10529 14f4 03       		.byte	0x3
 10530 14f5 F3       		.byte	0xf3
 10531 14f6 01       		.uleb128 0x1
 10532 14f7 51       		.byte	0x51
 10533 14f8 00       		.byte	0
 10534 14f9 00       		.byte	0
 10535 14fa 32       		.uleb128 0x32
 10536 14fb 01       		.byte	0x1
 10537 14fc A8100000 		.4byte	.LASF210
 10538 1500 01       		.byte	0x1
 10539 1501 1812     		.2byte	0x1218
 10540 1503 01       		.byte	0x1
 10541 1504 6B030000 		.4byte	0x36b
 10542 1508 7C0A0000 		.4byte	.LFB135
 10543 150c 8C0A0000 		.4byte	.LFE135
 10544 1510 02       		.byte	0x2
 10545 1511 7D       		.byte	0x7d
 10546 1512 00       		.sleb128 0
 10547 1513 01       		.byte	0x1
 10548 1514 49150000 		.4byte	0x1549
 10549 1518 1F       		.uleb128 0x1f
 10550 1519 0F090000 		.4byte	.LASF169
 10551 151d 01       		.byte	0x1
 10552 151e 1812     		.2byte	0x1218
 10553 1520 C30D0000 		.4byte	0xdc3
 10554 1524 C00A0000 		.4byte	.LLST192
 10555 1528 1F       		.uleb128 0x1f
 10556 1529 75000000 		.4byte	.LASF211
 10557 152d 01       		.byte	0x1
 10558 152e 1812     		.2byte	0x1218
 10559 1530 C2000000 		.4byte	0xc2
 10560 1534 E10A0000 		.4byte	.LLST193
 10561 1538 20       		.uleb128 0x20
 10562 1539 94020000 		.4byte	.LASF173
 10563 153d 01       		.byte	0x1
 10564 153e 1A12     		.2byte	0x121a
 10565 1540 C2000000 		.4byte	0xc2
 10566 1544 020B0000 		.4byte	.LLST194
 10567 1548 00       		.byte	0
 10568 1549 33       		.uleb128 0x33
 10569 154a 01       		.byte	0x1
 10570 154b 45140000 		.4byte	.LASF212
 10571 154f 01       		.byte	0x1
 10572 1550 8011     		.2byte	0x1180
 10573 1552 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 328


 10574 1553 6B030000 		.4byte	0x36b
 10575 1557 30140000 		.4byte	.LFB134
 10576 155b 58150000 		.4byte	.LFE134
 10577 155f 200B0000 		.4byte	.LLST299
 10578 1563 01       		.byte	0x1
 10579 1564 7E170000 		.4byte	0x177e
 10580 1568 1F       		.uleb128 0x1f
 10581 1569 0F090000 		.4byte	.LASF169
 10582 156d 01       		.byte	0x1
 10583 156e 8011     		.2byte	0x1180
 10584 1570 C30D0000 		.4byte	0xdc3
 10585 1574 400B0000 		.4byte	.LLST300
 10586 1578 1F       		.uleb128 0x1f
 10587 1579 090E0000 		.4byte	.LASF213
 10588 157d 01       		.byte	0x1
 10589 157e 8011     		.2byte	0x1180
 10590 1580 7E170000 		.4byte	0x177e
 10591 1584 5E0B0000 		.4byte	.LLST301
 10592 1588 20       		.uleb128 0x20
 10593 1589 F9120000 		.4byte	.LASF154
 10594 158d 01       		.byte	0x1
 10595 158e 8211     		.2byte	0x1182
 10596 1590 C2000000 		.4byte	0xc2
 10597 1594 FC0B0000 		.4byte	.LLST302
 10598 1598 24       		.uleb128 0x24
 10599 1599 680A0000 		.4byte	0xa68
 10600 159d 7E140000 		.4byte	.LBB172
 10601 15a1 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 10602 15a5 01       		.byte	0x1
 10603 15a6 FE11     		.2byte	0x11fe
 10604 15a8 CE150000 		.4byte	0x15ce
 10605 15ac 25       		.uleb128 0x25
 10606 15ad 820A0000 		.4byte	0xa82
 10607 15b1 720C0000 		.4byte	.LLST303
 10608 15b5 25       		.uleb128 0x25
 10609 15b6 760A0000 		.4byte	0xa76
 10610 15ba 910C0000 		.4byte	.LLST304
 10611 15be 26       		.uleb128 0x26
 10612 15bf B0000000 		.4byte	.Ldebug_ranges0+0xb0
 10613 15c3 27       		.uleb128 0x27
 10614 15c4 8E0A0000 		.4byte	0xa8e
 10615 15c8 A40C0000 		.4byte	.LLST305
 10616 15cc 00       		.byte	0
 10617 15cd 00       		.byte	0
 10618 15ce 28       		.uleb128 0x28
 10619 15cf EB0B0000 		.4byte	0xbeb
 10620 15d3 9A140000 		.4byte	.LBB175
 10621 15d7 B8140000 		.4byte	.LBE175
 10622 15db 01       		.byte	0x1
 10623 15dc CF11     		.2byte	0x11cf
 10624 15de 1A160000 		.4byte	0x161a
 10625 15e2 25       		.uleb128 0x25
 10626 15e3 110C0000 		.4byte	0xc11
 10627 15e7 C20C0000 		.4byte	.LLST306
 10628 15eb 25       		.uleb128 0x25
 10629 15ec 050C0000 		.4byte	0xc05
 10630 15f0 D50C0000 		.4byte	.LLST307
ARM GAS  /tmp/ccTsJCXT.s 			page 329


 10631 15f4 25       		.uleb128 0x25
 10632 15f5 F90B0000 		.4byte	0xbf9
 10633 15f9 F70C0000 		.4byte	.LLST308
 10634 15fd 29       		.uleb128 0x29
 10635 15fe 9A140000 		.4byte	.LBB176
 10636 1602 B8140000 		.4byte	.LBE176
 10637 1606 27       		.uleb128 0x27
 10638 1607 1D0C0000 		.4byte	0xc1d
 10639 160b 0A0D0000 		.4byte	.LLST309
 10640 160f 27       		.uleb128 0x27
 10641 1610 290C0000 		.4byte	0xc29
 10642 1614 1D0D0000 		.4byte	.LLST310
 10643 1618 00       		.byte	0
 10644 1619 00       		.byte	0
 10645 161a 28       		.uleb128 0x28
 10646 161b 680A0000 		.4byte	0xa68
 10647 161f B8140000 		.4byte	.LBB177
 10648 1623 C2140000 		.4byte	.LBE177
 10649 1627 01       		.byte	0x1
 10650 1628 D211     		.2byte	0x11d2
 10651 162a 54160000 		.4byte	0x1654
 10652 162e 25       		.uleb128 0x25
 10653 162f 820A0000 		.4byte	0xa82
 10654 1633 3B0D0000 		.4byte	.LLST311
 10655 1637 25       		.uleb128 0x25
 10656 1638 760A0000 		.4byte	0xa76
 10657 163c 500D0000 		.4byte	.LLST312
 10658 1640 29       		.uleb128 0x29
 10659 1641 B8140000 		.4byte	.LBB178
 10660 1645 C2140000 		.4byte	.LBE178
 10661 1649 27       		.uleb128 0x27
 10662 164a 8E0A0000 		.4byte	0xa8e
 10663 164e 630D0000 		.4byte	.LLST313
 10664 1652 00       		.byte	0
 10665 1653 00       		.byte	0
 10666 1654 28       		.uleb128 0x28
 10667 1655 490B0000 		.4byte	0xb49
 10668 1659 FE140000 		.4byte	.LBB180
 10669 165d 1E150000 		.4byte	.LBE180
 10670 1661 01       		.byte	0x1
 10671 1662 DF11     		.2byte	0x11df
 10672 1664 A0160000 		.4byte	0x16a0
 10673 1668 25       		.uleb128 0x25
 10674 1669 6F0B0000 		.4byte	0xb6f
 10675 166d 760D0000 		.4byte	.LLST314
 10676 1671 25       		.uleb128 0x25
 10677 1672 630B0000 		.4byte	0xb63
 10678 1676 890D0000 		.4byte	.LLST315
 10679 167a 25       		.uleb128 0x25
 10680 167b 570B0000 		.4byte	0xb57
 10681 167f 9C0D0000 		.4byte	.LLST316
 10682 1683 29       		.uleb128 0x29
 10683 1684 FE140000 		.4byte	.LBB181
 10684 1688 1E150000 		.4byte	.LBE181
 10685 168c 27       		.uleb128 0x27
 10686 168d 7B0B0000 		.4byte	0xb7b
 10687 1691 AF0D0000 		.4byte	.LLST317
ARM GAS  /tmp/ccTsJCXT.s 			page 330


 10688 1695 27       		.uleb128 0x27
 10689 1696 870B0000 		.4byte	0xb87
 10690 169a C20D0000 		.4byte	.LLST318
 10691 169e 00       		.byte	0
 10692 169f 00       		.byte	0
 10693 16a0 28       		.uleb128 0x28
 10694 16a1 680A0000 		.4byte	0xa68
 10695 16a5 1E150000 		.4byte	.LBB182
 10696 16a9 2A150000 		.4byte	.LBE182
 10697 16ad 01       		.byte	0x1
 10698 16ae E211     		.2byte	0x11e2
 10699 16b0 DA160000 		.4byte	0x16da
 10700 16b4 25       		.uleb128 0x25
 10701 16b5 820A0000 		.4byte	0xa82
 10702 16b9 E00D0000 		.4byte	.LLST319
 10703 16bd 25       		.uleb128 0x25
 10704 16be 760A0000 		.4byte	0xa76
 10705 16c2 F50D0000 		.4byte	.LLST320
 10706 16c6 29       		.uleb128 0x29
 10707 16c7 1E150000 		.4byte	.LBB183
 10708 16cb 2A150000 		.4byte	.LBE183
 10709 16cf 27       		.uleb128 0x27
 10710 16d0 8E0A0000 		.4byte	0xa8e
 10711 16d4 080E0000 		.4byte	.LLST321
 10712 16d8 00       		.byte	0
 10713 16d9 00       		.byte	0
 10714 16da 28       		.uleb128 0x28
 10715 16db EB0B0000 		.4byte	0xbeb
 10716 16df 2E150000 		.4byte	.LBB184
 10717 16e3 4C150000 		.4byte	.LBE184
 10718 16e7 01       		.byte	0x1
 10719 16e8 EF11     		.2byte	0x11ef
 10720 16ea 26170000 		.4byte	0x1726
 10721 16ee 25       		.uleb128 0x25
 10722 16ef 110C0000 		.4byte	0xc11
 10723 16f3 1B0E0000 		.4byte	.LLST322
 10724 16f7 25       		.uleb128 0x25
 10725 16f8 050C0000 		.4byte	0xc05
 10726 16fc 2E0E0000 		.4byte	.LLST323
 10727 1700 25       		.uleb128 0x25
 10728 1701 F90B0000 		.4byte	0xbf9
 10729 1705 500E0000 		.4byte	.LLST324
 10730 1709 29       		.uleb128 0x29
 10731 170a 2E150000 		.4byte	.LBB185
 10732 170e 4C150000 		.4byte	.LBE185
 10733 1712 27       		.uleb128 0x27
 10734 1713 1D0C0000 		.4byte	0xc1d
 10735 1717 630E0000 		.4byte	.LLST325
 10736 171b 27       		.uleb128 0x27
 10737 171c 290C0000 		.4byte	0xc29
 10738 1720 760E0000 		.4byte	.LLST326
 10739 1724 00       		.byte	0
 10740 1725 00       		.byte	0
 10741 1726 28       		.uleb128 0x28
 10742 1727 680A0000 		.4byte	0xa68
 10743 172b 4C150000 		.4byte	.LBB186
 10744 172f 58150000 		.4byte	.LBE186
ARM GAS  /tmp/ccTsJCXT.s 			page 331


 10745 1733 01       		.byte	0x1
 10746 1734 F211     		.2byte	0x11f2
 10747 1736 59170000 		.4byte	0x1759
 10748 173a 34       		.uleb128 0x34
 10749 173b 820A0000 		.4byte	0xa82
 10750 173f 40       		.byte	0x40
 10751 1740 35       		.uleb128 0x35
 10752 1741 760A0000 		.4byte	0xa76
 10753 1745 01       		.byte	0x1
 10754 1746 50       		.byte	0x50
 10755 1747 29       		.uleb128 0x29
 10756 1748 4C150000 		.4byte	.LBB187
 10757 174c 58150000 		.4byte	.LBE187
 10758 1750 36       		.uleb128 0x36
 10759 1751 8E0A0000 		.4byte	0xa8e
 10760 1755 01       		.byte	0x1
 10761 1756 53       		.byte	0x53
 10762 1757 00       		.byte	0
 10763 1758 00       		.byte	0
 10764 1759 37       		.uleb128 0x37
 10765 175a DA140000 		.4byte	.LVL522
 10766 175e 000A0000 		.4byte	0xa00
 10767 1762 6D170000 		.4byte	0x176d
 10768 1766 2B       		.uleb128 0x2b
 10769 1767 01       		.byte	0x1
 10770 1768 51       		.byte	0x51
 10771 1769 02       		.byte	0x2
 10772 176a 71       		.byte	0x71
 10773 176b 00       		.sleb128 0
 10774 176c 00       		.byte	0
 10775 176d 2A       		.uleb128 0x2a
 10776 176e EE140000 		.4byte	.LVL525
 10777 1772 000A0000 		.4byte	0xa00
 10778 1776 2B       		.uleb128 0x2b
 10779 1777 01       		.byte	0x1
 10780 1778 51       		.byte	0x51
 10781 1779 02       		.byte	0x2
 10782 177a 71       		.byte	0x71
 10783 177b 00       		.sleb128 0
 10784 177c 00       		.byte	0
 10785 177d 00       		.byte	0
 10786 177e 15       		.uleb128 0x15
 10787 177f 04       		.byte	0x4
 10788 1780 BB070000 		.4byte	0x7bb
 10789 1784 33       		.uleb128 0x33
 10790 1785 01       		.byte	0x1
 10791 1786 6A010000 		.4byte	.LASF214
 10792 178a 01       		.byte	0x1
 10793 178b 0411     		.2byte	0x1104
 10794 178d 01       		.byte	0x1
 10795 178e 6B030000 		.4byte	0x36b
 10796 1792 64130000 		.4byte	.LFB133
 10797 1796 30140000 		.4byte	.LFE133
 10798 179a 940E0000 		.4byte	.LLST295
 10799 179e 01       		.byte	0x1
 10800 179f E4170000 		.4byte	0x17e4
 10801 17a3 1F       		.uleb128 0x1f
ARM GAS  /tmp/ccTsJCXT.s 			page 332


 10802 17a4 0F090000 		.4byte	.LASF169
 10803 17a8 01       		.byte	0x1
 10804 17a9 0411     		.2byte	0x1104
 10805 17ab C30D0000 		.4byte	0xdc3
 10806 17af B40E0000 		.4byte	.LLST296
 10807 17b3 1F       		.uleb128 0x1f
 10808 17b4 BE000000 		.4byte	.LASF215
 10809 17b8 01       		.byte	0x1
 10810 17b9 0511     		.2byte	0x1105
 10811 17bb E4170000 		.4byte	0x17e4
 10812 17bf D20E0000 		.4byte	.LLST297
 10813 17c3 1F       		.uleb128 0x1f
 10814 17c4 AD030000 		.4byte	.LASF138
 10815 17c8 01       		.byte	0x1
 10816 17c9 0611     		.2byte	0x1106
 10817 17cb C2000000 		.4byte	0xc2
 10818 17cf 060F0000 		.4byte	.LLST298
 10819 17d3 2A       		.uleb128 0x2a
 10820 17d4 C6130000 		.4byte	.LVL493
 10821 17d8 000A0000 		.4byte	0xa00
 10822 17dc 2B       		.uleb128 0x2b
 10823 17dd 01       		.byte	0x1
 10824 17de 50       		.byte	0x50
 10825 17df 02       		.byte	0x2
 10826 17e0 70       		.byte	0x70
 10827 17e1 00       		.sleb128 0
 10828 17e2 00       		.byte	0
 10829 17e3 00       		.byte	0
 10830 17e4 15       		.uleb128 0x15
 10831 17e5 04       		.byte	0x4
 10832 17e6 15080000 		.4byte	0x815
 10833 17ea 32       		.uleb128 0x32
 10834 17eb 01       		.byte	0x1
 10835 17ec 5D0A0000 		.4byte	.LASF216
 10836 17f0 01       		.byte	0x1
 10837 17f1 DF10     		.2byte	0x10df
 10838 17f3 01       		.byte	0x1
 10839 17f4 6B030000 		.4byte	0x36b
 10840 17f8 580A0000 		.4byte	.LFB132
 10841 17fc 7C0A0000 		.4byte	.LFE132
 10842 1800 02       		.byte	0x2
 10843 1801 7D       		.byte	0x7d
 10844 1802 00       		.sleb128 0
 10845 1803 01       		.byte	0x1
 10846 1804 27180000 		.4byte	0x1827
 10847 1808 1F       		.uleb128 0x1f
 10848 1809 0F090000 		.4byte	.LASF169
 10849 180d 01       		.byte	0x1
 10850 180e DF10     		.2byte	0x10df
 10851 1810 C30D0000 		.4byte	0xdc3
 10852 1814 500F0000 		.4byte	.LLST191
 10853 1818 1E       		.uleb128 0x1e
 10854 1819 C9070000 		.4byte	.LASF217
 10855 181d 01       		.byte	0x1
 10856 181e DF10     		.2byte	0x10df
 10857 1820 C2000000 		.4byte	0xc2
 10858 1824 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 333


 10859 1825 51       		.byte	0x51
 10860 1826 00       		.byte	0
 10861 1827 33       		.uleb128 0x33
 10862 1828 01       		.byte	0x1
 10863 1829 0F070000 		.4byte	.LASF218
 10864 182d 01       		.byte	0x1
 10865 182e 9110     		.2byte	0x1091
 10866 1830 01       		.byte	0x1
 10867 1831 6B030000 		.4byte	0x36b
 10868 1835 F4090000 		.4byte	.LFB131
 10869 1839 540A0000 		.4byte	.LFE131
 10870 183d 710F0000 		.4byte	.LLST187
 10871 1841 01       		.byte	0x1
 10872 1842 80180000 		.4byte	0x1880
 10873 1846 1F       		.uleb128 0x1f
 10874 1847 0F090000 		.4byte	.LASF169
 10875 184b 01       		.byte	0x1
 10876 184c 9110     		.2byte	0x1091
 10877 184e C30D0000 		.4byte	0xdc3
 10878 1852 910F0000 		.4byte	.LLST188
 10879 1856 1F       		.uleb128 0x1f
 10880 1857 DF090000 		.4byte	.LASF219
 10881 185b 01       		.byte	0x1
 10882 185c 9110     		.2byte	0x1091
 10883 185e C2000000 		.4byte	0xc2
 10884 1862 33100000 		.4byte	.LLST189
 10885 1866 20       		.uleb128 0x20
 10886 1867 07080000 		.4byte	.LASF220
 10887 186b 01       		.byte	0x1
 10888 186c 9310     		.2byte	0x1093
 10889 186e 6B030000 		.4byte	0x36b
 10890 1872 6A100000 		.4byte	.LLST190
 10891 1876 2E       		.uleb128 0x2e
 10892 1877 1A0A0000 		.4byte	.LVL205
 10893 187b 1E370000 		.4byte	0x371e
 10894 187f 00       		.byte	0
 10895 1880 33       		.uleb128 0x33
 10896 1881 01       		.byte	0x1
 10897 1882 8E0D0000 		.4byte	.LASF221
 10898 1886 01       		.byte	0x1
 10899 1887 ED0F     		.2byte	0xfed
 10900 1889 01       		.byte	0x1
 10901 188a 6B030000 		.4byte	0x36b
 10902 188e 18090000 		.4byte	.LFB130
 10903 1892 F4090000 		.4byte	.LFE130
 10904 1896 A1100000 		.4byte	.LLST181
 10905 189a 01       		.byte	0x1
 10906 189b 04190000 		.4byte	0x1904
 10907 189f 1F       		.uleb128 0x1f
 10908 18a0 0F090000 		.4byte	.LASF169
 10909 18a4 01       		.byte	0x1
 10910 18a5 ED0F     		.2byte	0xfed
 10911 18a7 C30D0000 		.4byte	0xdc3
 10912 18ab C1100000 		.4byte	.LLST182
 10913 18af 1F       		.uleb128 0x1f
 10914 18b0 760C0000 		.4byte	.LASF222
 10915 18b4 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 334


 10916 18b5 ED0F     		.2byte	0xfed
 10917 18b7 C2000000 		.4byte	0xc2
 10918 18bb DF100000 		.4byte	.LLST183
 10919 18bf 1F       		.uleb128 0x1f
 10920 18c0 DF090000 		.4byte	.LASF219
 10921 18c4 01       		.byte	0x1
 10922 18c5 EE0F     		.2byte	0xfee
 10923 18c7 C2000000 		.4byte	0xc2
 10924 18cb 13110000 		.4byte	.LLST184
 10925 18cf 1F       		.uleb128 0x1f
 10926 18d0 7D080000 		.4byte	.LASF223
 10927 18d4 01       		.byte	0x1
 10928 18d5 EE0F     		.2byte	0xfee
 10929 18d7 04190000 		.4byte	0x1904
 10930 18db 4A110000 		.4byte	.LLST185
 10931 18df 1F       		.uleb128 0x1f
 10932 18e0 D00F0000 		.4byte	.LASF224
 10933 18e4 01       		.byte	0x1
 10934 18e5 EE0F     		.2byte	0xfee
 10935 18e7 C2000000 		.4byte	0xc2
 10936 18eb 9A110000 		.4byte	.LLST186
 10937 18ef 2A       		.uleb128 0x2a
 10938 18f0 78090000 		.4byte	.LVL200
 10939 18f4 2C370000 		.4byte	0x372c
 10940 18f8 2B       		.uleb128 0x2b
 10941 18f9 01       		.byte	0x1
 10942 18fa 53       		.byte	0x53
 10943 18fb 06       		.byte	0x6
 10944 18fc 75       		.byte	0x75
 10945 18fd 00       		.sleb128 0
 10946 18fe 38       		.byte	0x38
 10947 18ff 25       		.byte	0x25
 10948 1900 23       		.byte	0x23
 10949 1901 01       		.uleb128 0x1
 10950 1902 00       		.byte	0
 10951 1903 00       		.byte	0
 10952 1904 15       		.uleb128 0x15
 10953 1905 04       		.byte	0x4
 10954 1906 C2000000 		.4byte	0xc2
 10955 190a 30       		.uleb128 0x30
 10956 190b 01       		.byte	0x1
 10957 190c 52110000 		.4byte	.LASF225
 10958 1910 01       		.byte	0x1
 10959 1911 8D0F     		.2byte	0xf8d
 10960 1913 01       		.byte	0x1
 10961 1914 6B030000 		.4byte	0x36b
 10962 1918 41190000 		.4byte	0x1941
 10963 191c 1B       		.uleb128 0x1b
 10964 191d 0F090000 		.4byte	.LASF169
 10965 1921 01       		.byte	0x1
 10966 1922 8D0F     		.2byte	0xf8d
 10967 1924 C30D0000 		.4byte	0xdc3
 10968 1928 1B       		.uleb128 0x1b
 10969 1929 DF090000 		.4byte	.LASF219
 10970 192d 01       		.byte	0x1
 10971 192e 8D0F     		.2byte	0xf8d
 10972 1930 C2000000 		.4byte	0xc2
ARM GAS  /tmp/ccTsJCXT.s 			page 335


 10973 1934 22       		.uleb128 0x22
 10974 1935 07080000 		.4byte	.LASF220
 10975 1939 01       		.byte	0x1
 10976 193a 8F0F     		.2byte	0xf8f
 10977 193c 6B030000 		.4byte	0x36b
 10978 1940 00       		.byte	0
 10979 1941 33       		.uleb128 0x33
 10980 1942 01       		.byte	0x1
 10981 1943 A70B0000 		.4byte	.LASF226
 10982 1947 01       		.byte	0x1
 10983 1948 E40E     		.2byte	0xee4
 10984 194a 01       		.byte	0x1
 10985 194b 6B030000 		.4byte	0x36b
 10986 194f 3E080000 		.4byte	.LFB128
 10987 1953 18090000 		.4byte	.LFE128
 10988 1957 BA110000 		.4byte	.LLST175
 10989 195b 01       		.byte	0x1
 10990 195c C5190000 		.4byte	0x19c5
 10991 1960 1F       		.uleb128 0x1f
 10992 1961 0F090000 		.4byte	.LASF169
 10993 1965 01       		.byte	0x1
 10994 1966 E40E     		.2byte	0xee4
 10995 1968 C30D0000 		.4byte	0xdc3
 10996 196c DA110000 		.4byte	.LLST176
 10997 1970 1F       		.uleb128 0x1f
 10998 1971 760C0000 		.4byte	.LASF222
 10999 1975 01       		.byte	0x1
 11000 1976 E40E     		.2byte	0xee4
 11001 1978 C2000000 		.4byte	0xc2
 11002 197c F8110000 		.4byte	.LLST177
 11003 1980 1F       		.uleb128 0x1f
 11004 1981 DF090000 		.4byte	.LASF219
 11005 1985 01       		.byte	0x1
 11006 1986 E40E     		.2byte	0xee4
 11007 1988 C2000000 		.4byte	0xc2
 11008 198c 16120000 		.4byte	.LLST178
 11009 1990 1F       		.uleb128 0x1f
 11010 1991 7D080000 		.4byte	.LASF223
 11011 1995 01       		.byte	0x1
 11012 1996 E50E     		.2byte	0xee5
 11013 1998 04190000 		.4byte	0x1904
 11014 199c 63120000 		.4byte	.LLST179
 11015 19a0 1F       		.uleb128 0x1f
 11016 19a1 D00F0000 		.4byte	.LASF224
 11017 19a5 01       		.byte	0x1
 11018 19a6 E50E     		.2byte	0xee5
 11019 19a8 C2000000 		.4byte	0xc2
 11020 19ac B3120000 		.4byte	.LLST180
 11021 19b0 2A       		.uleb128 0x2a
 11022 19b1 9E080000 		.4byte	.LVL190
 11023 19b5 2C370000 		.4byte	0x372c
 11024 19b9 2B       		.uleb128 0x2b
 11025 19ba 01       		.byte	0x1
 11026 19bb 53       		.byte	0x53
 11027 19bc 06       		.byte	0x6
 11028 19bd 75       		.byte	0x75
 11029 19be 00       		.sleb128 0
ARM GAS  /tmp/ccTsJCXT.s 			page 336


 11030 19bf 38       		.byte	0x38
 11031 19c0 25       		.byte	0x25
 11032 19c1 23       		.byte	0x23
 11033 19c2 01       		.uleb128 0x1
 11034 19c3 00       		.byte	0
 11035 19c4 00       		.byte	0
 11036 19c5 33       		.uleb128 0x33
 11037 19c6 01       		.byte	0x1
 11038 19c7 93120000 		.4byte	.LASF227
 11039 19cb 01       		.byte	0x1
 11040 19cc 590E     		.2byte	0xe59
 11041 19ce 01       		.byte	0x1
 11042 19cf 6B030000 		.4byte	0x36b
 11043 19d3 5C120000 		.4byte	.LFB127
 11044 19d7 50130000 		.4byte	.LFE127
 11045 19db D3120000 		.4byte	.LLST280
 11046 19df 01       		.byte	0x1
 11047 19e0 CD1A0000 		.4byte	0x1acd
 11048 19e4 1F       		.uleb128 0x1f
 11049 19e5 0F090000 		.4byte	.LASF169
 11050 19e9 01       		.byte	0x1
 11051 19ea 590E     		.2byte	0xe59
 11052 19ec C30D0000 		.4byte	0xdc3
 11053 19f0 17130000 		.4byte	.LLST281
 11054 19f4 1F       		.uleb128 0x1f
 11055 19f5 73040000 		.4byte	.LASF228
 11056 19f9 01       		.byte	0x1
 11057 19fa 590E     		.2byte	0xe59
 11058 19fc CD1A0000 		.4byte	0x1acd
 11059 1a00 4B130000 		.4byte	.LLST282
 11060 1a04 1F       		.uleb128 0x1f
 11061 1a05 CB0E0000 		.4byte	.LASF229
 11062 1a09 01       		.byte	0x1
 11063 1a0a 5A0E     		.2byte	0xe5a
 11064 1a0c C2000000 		.4byte	0xc2
 11065 1a10 D5130000 		.4byte	.LLST283
 11066 1a14 1F       		.uleb128 0x1f
 11067 1a15 F9030000 		.4byte	.LASF230
 11068 1a19 01       		.byte	0x1
 11069 1a1a 5A0E     		.2byte	0xe5a
 11070 1a1c C2000000 		.4byte	0xc2
 11071 1a20 33140000 		.4byte	.LLST284
 11072 1a24 2D       		.uleb128 0x2d
 11073 1a25 3B0B0000 		.4byte	.LASF231
 11074 1a29 01       		.byte	0x1
 11075 1a2a 5C0E     		.2byte	0xe5c
 11076 1a2c FF050000 		.4byte	0x5ff
 11077 1a30 02       		.byte	0x2
 11078 1a31 91       		.byte	0x91
 11079 1a32 54       		.sleb128 -44
 11080 1a33 28       		.uleb128 0x28
 11081 1a34 940B0000 		.4byte	0xb94
 11082 1a38 06130000 		.4byte	.LBB156
 11083 1a3c 34130000 		.4byte	.LBE156
 11084 1a40 01       		.byte	0x1
 11085 1a41 9E0E     		.2byte	0xe9e
 11086 1a43 881A0000 		.4byte	0x1a88
ARM GAS  /tmp/ccTsJCXT.s 			page 337


 11087 1a47 25       		.uleb128 0x25
 11088 1a48 C60B0000 		.4byte	0xbc6
 11089 1a4c 9C140000 		.4byte	.LLST285
 11090 1a50 25       		.uleb128 0x25
 11091 1a51 BA0B0000 		.4byte	0xbba
 11092 1a55 BE140000 		.4byte	.LLST286
 11093 1a59 25       		.uleb128 0x25
 11094 1a5a AE0B0000 		.4byte	0xbae
 11095 1a5e D1140000 		.4byte	.LLST287
 11096 1a62 25       		.uleb128 0x25
 11097 1a63 A20B0000 		.4byte	0xba2
 11098 1a67 F3140000 		.4byte	.LLST288
 11099 1a6b 29       		.uleb128 0x29
 11100 1a6c 06130000 		.4byte	.LBB157
 11101 1a70 34130000 		.4byte	.LBE157
 11102 1a74 27       		.uleb128 0x27
 11103 1a75 D20B0000 		.4byte	0xbd2
 11104 1a79 06150000 		.4byte	.LLST289
 11105 1a7d 27       		.uleb128 0x27
 11106 1a7e DE0B0000 		.4byte	0xbde
 11107 1a82 24150000 		.4byte	.LLST290
 11108 1a86 00       		.byte	0
 11109 1a87 00       		.byte	0
 11110 1a88 37       		.uleb128 0x37
 11111 1a89 BA120000 		.4byte	.LVL455
 11112 1a8d 050F0000 		.4byte	0xf05
 11113 1a91 A21A0000 		.4byte	0x1aa2
 11114 1a95 2B       		.uleb128 0x2b
 11115 1a96 01       		.byte	0x1
 11116 1a97 50       		.byte	0x50
 11117 1a98 02       		.byte	0x2
 11118 1a99 70       		.byte	0x70
 11119 1a9a 00       		.sleb128 0
 11120 1a9b 2B       		.uleb128 0x2b
 11121 1a9c 01       		.byte	0x1
 11122 1a9d 51       		.byte	0x51
 11123 1a9e 02       		.byte	0x2
 11124 1a9f 71       		.byte	0x71
 11125 1aa0 00       		.sleb128 0
 11126 1aa1 00       		.byte	0
 11127 1aa2 37       		.uleb128 0x37
 11128 1aa3 C4120000 		.4byte	.LVL458
 11129 1aa7 9F0E0000 		.4byte	0xe9f
 11130 1aab BC1A0000 		.4byte	0x1abc
 11131 1aaf 2B       		.uleb128 0x2b
 11132 1ab0 01       		.byte	0x1
 11133 1ab1 50       		.byte	0x50
 11134 1ab2 02       		.byte	0x2
 11135 1ab3 70       		.byte	0x70
 11136 1ab4 00       		.sleb128 0
 11137 1ab5 2B       		.uleb128 0x2b
 11138 1ab6 01       		.byte	0x1
 11139 1ab7 51       		.byte	0x51
 11140 1ab8 02       		.byte	0x2
 11141 1ab9 71       		.byte	0x71
 11142 1aba 00       		.sleb128 0
 11143 1abb 00       		.byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 338


 11144 1abc 2A       		.uleb128 0x2a
 11145 1abd D2120000 		.4byte	.LVL459
 11146 1ac1 360C0000 		.4byte	0xc36
 11147 1ac5 2B       		.uleb128 0x2b
 11148 1ac6 01       		.byte	0x1
 11149 1ac7 50       		.byte	0x50
 11150 1ac8 02       		.byte	0x2
 11151 1ac9 70       		.byte	0x70
 11152 1aca 00       		.sleb128 0
 11153 1acb 00       		.byte	0
 11154 1acc 00       		.byte	0
 11155 1acd 15       		.uleb128 0x15
 11156 1ace 04       		.byte	0x4
 11157 1acf 91060000 		.4byte	0x691
 11158 1ad3 33       		.uleb128 0x33
 11159 1ad4 01       		.byte	0x1
 11160 1ad5 210C0000 		.4byte	.LASF232
 11161 1ad9 01       		.byte	0x1
 11162 1ada E60D     		.2byte	0xde6
 11163 1adc 01       		.byte	0x1
 11164 1add 6B030000 		.4byte	0x36b
 11165 1ae1 3C100000 		.4byte	.LFB126
 11166 1ae5 00110000 		.4byte	.LFE126
 11167 1ae9 4D150000 		.4byte	.LLST248
 11168 1aed 01       		.byte	0x1
 11169 1aee 6F1B0000 		.4byte	0x1b6f
 11170 1af2 1F       		.uleb128 0x1f
 11171 1af3 0F090000 		.4byte	.LASF169
 11172 1af7 01       		.byte	0x1
 11173 1af8 E60D     		.2byte	0xde6
 11174 1afa C30D0000 		.4byte	0xdc3
 11175 1afe 6D150000 		.4byte	.LLST249
 11176 1b02 1F       		.uleb128 0x1f
 11177 1b03 73040000 		.4byte	.LASF228
 11178 1b07 01       		.byte	0x1
 11179 1b08 E70D     		.2byte	0xde7
 11180 1b0a 340E0000 		.4byte	0xe34
 11181 1b0e 8B150000 		.4byte	.LLST250
 11182 1b12 1F       		.uleb128 0x1f
 11183 1b13 AD030000 		.4byte	.LASF138
 11184 1b17 01       		.byte	0x1
 11185 1b18 E80D     		.2byte	0xde8
 11186 1b1a C2000000 		.4byte	0xc2
 11187 1b1e F7150000 		.4byte	.LLST251
 11188 1b22 37       		.uleb128 0x37
 11189 1b23 72100000 		.4byte	.LVL378
 11190 1b27 050F0000 		.4byte	0xf05
 11191 1b2b 361B0000 		.4byte	0x1b36
 11192 1b2f 2B       		.uleb128 0x2b
 11193 1b30 01       		.byte	0x1
 11194 1b31 50       		.byte	0x50
 11195 1b32 02       		.byte	0x2
 11196 1b33 70       		.byte	0x70
 11197 1b34 00       		.sleb128 0
 11198 1b35 00       		.byte	0
 11199 1b36 37       		.uleb128 0x37
 11200 1b37 A0100000 		.4byte	.LVL381
ARM GAS  /tmp/ccTsJCXT.s 			page 339


 11201 1b3b 9F0E0000 		.4byte	0xe9f
 11202 1b3f 4A1B0000 		.4byte	0x1b4a
 11203 1b43 2B       		.uleb128 0x2b
 11204 1b44 01       		.byte	0x1
 11205 1b45 50       		.byte	0x50
 11206 1b46 02       		.byte	0x2
 11207 1b47 70       		.byte	0x70
 11208 1b48 00       		.sleb128 0
 11209 1b49 00       		.byte	0
 11210 1b4a 37       		.uleb128 0x37
 11211 1b4b C2100000 		.4byte	.LVL384
 11212 1b4f 3A0E0000 		.4byte	0xe3a
 11213 1b53 5E1B0000 		.4byte	0x1b5e
 11214 1b57 2B       		.uleb128 0x2b
 11215 1b58 01       		.byte	0x1
 11216 1b59 50       		.byte	0x50
 11217 1b5a 02       		.byte	0x2
 11218 1b5b 70       		.byte	0x70
 11219 1b5c 00       		.sleb128 0
 11220 1b5d 00       		.byte	0
 11221 1b5e 2A       		.uleb128 0x2a
 11222 1b5f E4100000 		.4byte	.LVL387
 11223 1b63 CF0D0000 		.4byte	0xdcf
 11224 1b67 2B       		.uleb128 0x2b
 11225 1b68 01       		.byte	0x1
 11226 1b69 50       		.byte	0x50
 11227 1b6a 02       		.byte	0x2
 11228 1b6b 70       		.byte	0x70
 11229 1b6c 00       		.sleb128 0
 11230 1b6d 00       		.byte	0
 11231 1b6e 00       		.byte	0
 11232 1b6f 33       		.uleb128 0x33
 11233 1b70 01       		.byte	0x1
 11234 1b71 88040000 		.4byte	.LASF233
 11235 1b75 01       		.byte	0x1
 11236 1b76 850D     		.2byte	0xd85
 11237 1b78 01       		.byte	0x1
 11238 1b79 6B030000 		.4byte	0x36b
 11239 1b7d 4C110000 		.4byte	.LFB125
 11240 1b81 5C120000 		.4byte	.LFE125
 11241 1b85 63160000 		.4byte	.LLST258
 11242 1b89 01       		.byte	0x1
 11243 1b8a CA1C0000 		.4byte	0x1cca
 11244 1b8e 1F       		.uleb128 0x1f
 11245 1b8f 0F090000 		.4byte	.LASF169
 11246 1b93 01       		.byte	0x1
 11247 1b94 850D     		.2byte	0xd85
 11248 1b96 C30D0000 		.4byte	0xdc3
 11249 1b9a 83160000 		.4byte	.LLST259
 11250 1b9e 1F       		.uleb128 0x1f
 11251 1b9f 73040000 		.4byte	.LASF228
 11252 1ba3 01       		.byte	0x1
 11253 1ba4 850D     		.2byte	0xd85
 11254 1ba6 CA1C0000 		.4byte	0x1cca
 11255 1baa A1160000 		.4byte	.LLST260
 11256 1bae 1F       		.uleb128 0x1f
 11257 1baf AD030000 		.4byte	.LASF138
ARM GAS  /tmp/ccTsJCXT.s 			page 340


 11258 1bb3 01       		.byte	0x1
 11259 1bb4 850D     		.2byte	0xd85
 11260 1bb6 C2000000 		.4byte	0xc2
 11261 1bba 23170000 		.4byte	.LLST261
 11262 1bbe 28       		.uleb128 0x28
 11263 1bbf 940B0000 		.4byte	0xb94
 11264 1bc3 A0110000 		.4byte	.LBB146
 11265 1bc7 CE110000 		.4byte	.LBE146
 11266 1bcb 01       		.byte	0x1
 11267 1bcc A60D     		.2byte	0xda6
 11268 1bce 131C0000 		.4byte	0x1c13
 11269 1bd2 25       		.uleb128 0x25
 11270 1bd3 C60B0000 		.4byte	0xbc6
 11271 1bd7 76170000 		.4byte	.LLST262
 11272 1bdb 25       		.uleb128 0x25
 11273 1bdc BA0B0000 		.4byte	0xbba
 11274 1be0 A4170000 		.4byte	.LLST263
 11275 1be4 25       		.uleb128 0x25
 11276 1be5 AE0B0000 		.4byte	0xbae
 11277 1be9 B7170000 		.4byte	.LLST264
 11278 1bed 25       		.uleb128 0x25
 11279 1bee A20B0000 		.4byte	0xba2
 11280 1bf2 D7170000 		.4byte	.LLST265
 11281 1bf6 29       		.uleb128 0x29
 11282 1bf7 A0110000 		.4byte	.LBB147
 11283 1bfb CE110000 		.4byte	.LBE147
 11284 1bff 27       		.uleb128 0x27
 11285 1c00 D20B0000 		.4byte	0xbd2
 11286 1c04 EA170000 		.4byte	.LLST266
 11287 1c08 27       		.uleb128 0x27
 11288 1c09 DE0B0000 		.4byte	0xbde
 11289 1c0d FD170000 		.4byte	.LLST267
 11290 1c11 00       		.byte	0
 11291 1c12 00       		.byte	0
 11292 1c13 24       		.uleb128 0x24
 11293 1c14 F20A0000 		.4byte	0xaf2
 11294 1c18 E2110000 		.4byte	.LBB148
 11295 1c1c 98000000 		.4byte	.Ldebug_ranges0+0x98
 11296 1c20 01       		.byte	0x1
 11297 1c21 B60D     		.2byte	0xdb6
 11298 1c23 641C0000 		.4byte	0x1c64
 11299 1c27 25       		.uleb128 0x25
 11300 1c28 240B0000 		.4byte	0xb24
 11301 1c2c 26180000 		.4byte	.LLST268
 11302 1c30 25       		.uleb128 0x25
 11303 1c31 180B0000 		.4byte	0xb18
 11304 1c35 54180000 		.4byte	.LLST269
 11305 1c39 25       		.uleb128 0x25
 11306 1c3a 0C0B0000 		.4byte	0xb0c
 11307 1c3e 67180000 		.4byte	.LLST270
 11308 1c42 25       		.uleb128 0x25
 11309 1c43 000B0000 		.4byte	0xb00
 11310 1c47 87180000 		.4byte	.LLST271
 11311 1c4b 26       		.uleb128 0x26
 11312 1c4c 98000000 		.4byte	.Ldebug_ranges0+0x98
 11313 1c50 27       		.uleb128 0x27
 11314 1c51 300B0000 		.4byte	0xb30
ARM GAS  /tmp/ccTsJCXT.s 			page 341


 11315 1c55 9A180000 		.4byte	.LLST272
 11316 1c59 27       		.uleb128 0x27
 11317 1c5a 3C0B0000 		.4byte	0xb3c
 11318 1c5e B8180000 		.4byte	.LLST273
 11319 1c62 00       		.byte	0
 11320 1c63 00       		.byte	0
 11321 1c64 28       		.uleb128 0x28
 11322 1c65 9B0A0000 		.4byte	0xa9b
 11323 1c69 20120000 		.4byte	.LBB152
 11324 1c6d 4C120000 		.4byte	.LBE152
 11325 1c71 01       		.byte	0x1
 11326 1c72 C60D     		.2byte	0xdc6
 11327 1c74 B91C0000 		.4byte	0x1cb9
 11328 1c78 25       		.uleb128 0x25
 11329 1c79 CD0A0000 		.4byte	0xacd
 11330 1c7d E1180000 		.4byte	.LLST274
 11331 1c81 25       		.uleb128 0x25
 11332 1c82 C10A0000 		.4byte	0xac1
 11333 1c86 0F190000 		.4byte	.LLST275
 11334 1c8a 25       		.uleb128 0x25
 11335 1c8b B50A0000 		.4byte	0xab5
 11336 1c8f 22190000 		.4byte	.LLST276
 11337 1c93 25       		.uleb128 0x25
 11338 1c94 A90A0000 		.4byte	0xaa9
 11339 1c98 42190000 		.4byte	.LLST277
 11340 1c9c 29       		.uleb128 0x29
 11341 1c9d 20120000 		.4byte	.LBB153
 11342 1ca1 4C120000 		.4byte	.LBE153
 11343 1ca5 27       		.uleb128 0x27
 11344 1ca6 D90A0000 		.4byte	0xad9
 11345 1caa 55190000 		.4byte	.LLST278
 11346 1cae 27       		.uleb128 0x27
 11347 1caf E50A0000 		.4byte	0xae5
 11348 1cb3 7E190000 		.4byte	.LLST279
 11349 1cb7 00       		.byte	0
 11350 1cb8 00       		.byte	0
 11351 1cb9 2A       		.uleb128 0x2a
 11352 1cba 74110000 		.4byte	.LVL405
 11353 1cbe 360C0000 		.4byte	0xc36
 11354 1cc2 2B       		.uleb128 0x2b
 11355 1cc3 01       		.byte	0x1
 11356 1cc4 50       		.byte	0x50
 11357 1cc5 02       		.byte	0x2
 11358 1cc6 70       		.byte	0x70
 11359 1cc7 00       		.sleb128 0
 11360 1cc8 00       		.byte	0
 11361 1cc9 00       		.byte	0
 11362 1cca 15       		.uleb128 0x15
 11363 1ccb 04       		.byte	0x4
 11364 1ccc DD060000 		.4byte	0x6dd
 11365 1cd0 33       		.uleb128 0x33
 11366 1cd1 01       		.byte	0x1
 11367 1cd2 FB0E0000 		.4byte	.LASF234
 11368 1cd6 01       		.byte	0x1
 11369 1cd7 350D     		.2byte	0xd35
 11370 1cd9 01       		.byte	0x1
 11371 1cda 6B030000 		.4byte	0x36b
ARM GAS  /tmp/ccTsJCXT.s 			page 342


 11372 1cde E00F0000 		.4byte	.LFB124
 11373 1ce2 3C100000 		.4byte	.LFE124
 11374 1ce6 A7190000 		.4byte	.LLST245
 11375 1cea 01       		.byte	0x1
 11376 1ceb 6A1D0000 		.4byte	0x1d6a
 11377 1cef 1F       		.uleb128 0x1f
 11378 1cf0 0F090000 		.4byte	.LASF169
 11379 1cf4 01       		.byte	0x1
 11380 1cf5 350D     		.2byte	0xd35
 11381 1cf7 C30D0000 		.4byte	0xdc3
 11382 1cfb C7190000 		.4byte	.LLST246
 11383 1cff 1E       		.uleb128 0x1e
 11384 1d00 73040000 		.4byte	.LASF228
 11385 1d04 01       		.byte	0x1
 11386 1d05 360D     		.2byte	0xd36
 11387 1d07 340E0000 		.4byte	0xe34
 11388 1d0b 01       		.byte	0x1
 11389 1d0c 51       		.byte	0x51
 11390 1d0d 1F       		.uleb128 0x1f
 11391 1d0e AD030000 		.4byte	.LASF138
 11392 1d12 01       		.byte	0x1
 11393 1d13 370D     		.2byte	0xd37
 11394 1d15 C2000000 		.4byte	0xc2
 11395 1d19 E5190000 		.4byte	.LLST247
 11396 1d1d 37       		.uleb128 0x37
 11397 1d1e 18100000 		.4byte	.LVL369
 11398 1d22 050F0000 		.4byte	0xf05
 11399 1d26 311D0000 		.4byte	0x1d31
 11400 1d2a 2B       		.uleb128 0x2b
 11401 1d2b 01       		.byte	0x1
 11402 1d2c 50       		.byte	0x50
 11403 1d2d 02       		.byte	0x2
 11404 1d2e 70       		.byte	0x70
 11405 1d2f 00       		.sleb128 0
 11406 1d30 00       		.byte	0
 11407 1d31 37       		.uleb128 0x37
 11408 1d32 2A100000 		.4byte	.LVL371
 11409 1d36 9F0E0000 		.4byte	0xe9f
 11410 1d3a 451D0000 		.4byte	0x1d45
 11411 1d3e 2B       		.uleb128 0x2b
 11412 1d3f 01       		.byte	0x1
 11413 1d40 50       		.byte	0x50
 11414 1d41 02       		.byte	0x2
 11415 1d42 70       		.byte	0x70
 11416 1d43 00       		.sleb128 0
 11417 1d44 00       		.byte	0
 11418 1d45 37       		.uleb128 0x37
 11419 1d46 32100000 		.4byte	.LVL373
 11420 1d4a 3A0E0000 		.4byte	0xe3a
 11421 1d4e 591D0000 		.4byte	0x1d59
 11422 1d52 2B       		.uleb128 0x2b
 11423 1d53 01       		.byte	0x1
 11424 1d54 50       		.byte	0x50
 11425 1d55 02       		.byte	0x2
 11426 1d56 70       		.byte	0x70
 11427 1d57 00       		.sleb128 0
 11428 1d58 00       		.byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 343


 11429 1d59 2A       		.uleb128 0x2a
 11430 1d5a 3A100000 		.4byte	.LVL375
 11431 1d5e CF0D0000 		.4byte	0xdcf
 11432 1d62 2B       		.uleb128 0x2b
 11433 1d63 01       		.byte	0x1
 11434 1d64 50       		.byte	0x50
 11435 1d65 02       		.byte	0x2
 11436 1d66 70       		.byte	0x70
 11437 1d67 00       		.sleb128 0
 11438 1d68 00       		.byte	0
 11439 1d69 00       		.byte	0
 11440 1d6a 1D       		.uleb128 0x1d
 11441 1d6b 01       		.byte	0x1
 11442 1d6c 0E040000 		.4byte	.LASF235
 11443 1d70 01       		.byte	0x1
 11444 1d71 5E0C     		.2byte	0xc5e
 11445 1d73 01       		.byte	0x1
 11446 1d74 DE0B0000 		.4byte	.LFB123
 11447 1d78 220D0000 		.4byte	.LFE123
 11448 1d7c 511A0000 		.4byte	.LLST211
 11449 1d80 01       		.byte	0x1
 11450 1d81 A81E0000 		.4byte	0x1ea8
 11451 1d85 1F       		.uleb128 0x1f
 11452 1d86 0F090000 		.4byte	.LASF169
 11453 1d8a 01       		.byte	0x1
 11454 1d8b 5E0C     		.2byte	0xc5e
 11455 1d8d C30D0000 		.4byte	0xdc3
 11456 1d91 891A0000 		.4byte	.LLST212
 11457 1d95 37       		.uleb128 0x37
 11458 1d96 040C0000 		.4byte	.LVL265
 11459 1d9a 93130000 		.4byte	0x1393
 11460 1d9e A91D0000 		.4byte	0x1da9
 11461 1da2 2B       		.uleb128 0x2b
 11462 1da3 01       		.byte	0x1
 11463 1da4 50       		.byte	0x50
 11464 1da5 02       		.byte	0x2
 11465 1da6 74       		.byte	0x74
 11466 1da7 00       		.sleb128 0
 11467 1da8 00       		.byte	0
 11468 1da9 37       		.uleb128 0x37
 11469 1daa 2E0C0000 		.4byte	.LVL267
 11470 1dae 93130000 		.4byte	0x1393
 11471 1db2 BD1D0000 		.4byte	0x1dbd
 11472 1db6 2B       		.uleb128 0x2b
 11473 1db7 01       		.byte	0x1
 11474 1db8 50       		.byte	0x50
 11475 1db9 02       		.byte	0x2
 11476 1dba 74       		.byte	0x74
 11477 1dbb 00       		.sleb128 0
 11478 1dbc 00       		.byte	0
 11479 1dbd 37       		.uleb128 0x37
 11480 1dbe 560C0000 		.4byte	.LVL269
 11481 1dc2 93130000 		.4byte	0x1393
 11482 1dc6 D11D0000 		.4byte	0x1dd1
 11483 1dca 2B       		.uleb128 0x2b
 11484 1dcb 01       		.byte	0x1
 11485 1dcc 50       		.byte	0x50
ARM GAS  /tmp/ccTsJCXT.s 			page 344


 11486 1dcd 02       		.byte	0x2
 11487 1dce 74       		.byte	0x74
 11488 1dcf 00       		.sleb128 0
 11489 1dd0 00       		.byte	0
 11490 1dd1 37       		.uleb128 0x37
 11491 1dd2 800C0000 		.4byte	.LVL271
 11492 1dd6 93130000 		.4byte	0x1393
 11493 1dda E51D0000 		.4byte	0x1de5
 11494 1dde 2B       		.uleb128 0x2b
 11495 1ddf 01       		.byte	0x1
 11496 1de0 50       		.byte	0x50
 11497 1de1 02       		.byte	0x2
 11498 1de2 74       		.byte	0x74
 11499 1de3 00       		.sleb128 0
 11500 1de4 00       		.byte	0
 11501 1de5 37       		.uleb128 0x37
 11502 1de6 9E0C0000 		.4byte	.LVL272
 11503 1dea E4130000 		.4byte	0x13e4
 11504 1dee F91D0000 		.4byte	0x1df9
 11505 1df2 2B       		.uleb128 0x2b
 11506 1df3 01       		.byte	0x1
 11507 1df4 50       		.byte	0x50
 11508 1df5 02       		.byte	0x2
 11509 1df6 74       		.byte	0x74
 11510 1df7 00       		.sleb128 0
 11511 1df8 00       		.byte	0
 11512 1df9 37       		.uleb128 0x37
 11513 1dfa B80C0000 		.4byte	.LVL273
 11514 1dfe 3A370000 		.4byte	0x373a
 11515 1e02 0D1E0000 		.4byte	0x1e0d
 11516 1e06 2B       		.uleb128 0x2b
 11517 1e07 01       		.byte	0x1
 11518 1e08 50       		.byte	0x50
 11519 1e09 02       		.byte	0x2
 11520 1e0a 74       		.byte	0x74
 11521 1e0b 00       		.sleb128 0
 11522 1e0c 00       		.byte	0
 11523 1e0d 37       		.uleb128 0x37
 11524 1e0e D20C0000 		.4byte	.LVL274
 11525 1e12 27130000 		.4byte	0x1327
 11526 1e16 211E0000 		.4byte	0x1e21
 11527 1e1a 2B       		.uleb128 0x2b
 11528 1e1b 01       		.byte	0x1
 11529 1e1c 50       		.byte	0x50
 11530 1e1d 02       		.byte	0x2
 11531 1e1e 74       		.byte	0x74
 11532 1e1f 00       		.sleb128 0
 11533 1e20 00       		.byte	0
 11534 1e21 38       		.uleb128 0x38
 11535 1e22 F00C0000 		.4byte	.LVL276
 11536 1e26 01       		.byte	0x1
 11537 1e27 47370000 		.4byte	0x3747
 11538 1e2b 371E0000 		.4byte	0x1e37
 11539 1e2f 2B       		.uleb128 0x2b
 11540 1e30 01       		.byte	0x1
 11541 1e31 50       		.byte	0x50
 11542 1e32 03       		.byte	0x3
ARM GAS  /tmp/ccTsJCXT.s 			page 345


 11543 1e33 F3       		.byte	0xf3
 11544 1e34 01       		.uleb128 0x1
 11545 1e35 50       		.byte	0x50
 11546 1e36 00       		.byte	0
 11547 1e37 2E       		.uleb128 0x2e
 11548 1e38 F40C0000 		.4byte	.LVL277
 11549 1e3c AE130000 		.4byte	0x13ae
 11550 1e40 37       		.uleb128 0x37
 11551 1e41 FA0C0000 		.4byte	.LVL278
 11552 1e45 5D130000 		.4byte	0x135d
 11553 1e49 541E0000 		.4byte	0x1e54
 11554 1e4d 2B       		.uleb128 0x2b
 11555 1e4e 01       		.byte	0x1
 11556 1e4f 50       		.byte	0x50
 11557 1e50 02       		.byte	0x2
 11558 1e51 74       		.byte	0x74
 11559 1e52 00       		.sleb128 0
 11560 1e53 00       		.byte	0
 11561 1e54 2E       		.uleb128 0x2e
 11562 1e55 000D0000 		.4byte	.LVL280
 11563 1e59 AE130000 		.4byte	0x13ae
 11564 1e5d 37       		.uleb128 0x37
 11565 1e5e 060D0000 		.4byte	.LVL281
 11566 1e62 5D130000 		.4byte	0x135d
 11567 1e66 711E0000 		.4byte	0x1e71
 11568 1e6a 2B       		.uleb128 0x2b
 11569 1e6b 01       		.byte	0x1
 11570 1e6c 50       		.byte	0x50
 11571 1e6d 02       		.byte	0x2
 11572 1e6e 74       		.byte	0x74
 11573 1e6f 00       		.sleb128 0
 11574 1e70 00       		.byte	0
 11575 1e71 2E       		.uleb128 0x2e
 11576 1e72 0C0D0000 		.4byte	.LVL283
 11577 1e76 AE130000 		.4byte	0x13ae
 11578 1e7a 37       		.uleb128 0x37
 11579 1e7b 120D0000 		.4byte	.LVL284
 11580 1e7f 5D130000 		.4byte	0x135d
 11581 1e83 8E1E0000 		.4byte	0x1e8e
 11582 1e87 2B       		.uleb128 0x2b
 11583 1e88 01       		.byte	0x1
 11584 1e89 50       		.byte	0x50
 11585 1e8a 02       		.byte	0x2
 11586 1e8b 74       		.byte	0x74
 11587 1e8c 00       		.sleb128 0
 11588 1e8d 00       		.byte	0
 11589 1e8e 2E       		.uleb128 0x2e
 11590 1e8f 180D0000 		.4byte	.LVL286
 11591 1e93 AE130000 		.4byte	0x13ae
 11592 1e97 2A       		.uleb128 0x2a
 11593 1e98 1E0D0000 		.4byte	.LVL287
 11594 1e9c 5D130000 		.4byte	0x135d
 11595 1ea0 2B       		.uleb128 0x2b
 11596 1ea1 01       		.byte	0x1
 11597 1ea2 50       		.byte	0x50
 11598 1ea3 02       		.byte	0x2
 11599 1ea4 74       		.byte	0x74
ARM GAS  /tmp/ccTsJCXT.s 			page 346


 11600 1ea5 00       		.sleb128 0
 11601 1ea6 00       		.byte	0
 11602 1ea7 00       		.byte	0
 11603 1ea8 33       		.uleb128 0x33
 11604 1ea9 01       		.byte	0x1
 11605 1eaa 23080000 		.4byte	.LASF236
 11606 1eae 01       		.byte	0x1
 11607 1eaf 1C0C     		.2byte	0xc1c
 11608 1eb1 01       		.byte	0x1
 11609 1eb2 6B030000 		.4byte	0x36b
 11610 1eb6 AC070000 		.4byte	.LFB122
 11611 1eba 3E080000 		.4byte	.LFE122
 11612 1ebe 5A1B0000 		.4byte	.LLST156
 11613 1ec2 01       		.byte	0x1
 11614 1ec3 FE1F0000 		.4byte	0x1ffe
 11615 1ec7 1F       		.uleb128 0x1f
 11616 1ec8 0F090000 		.4byte	.LASF169
 11617 1ecc 01       		.byte	0x1
 11618 1ecd 1C0C     		.2byte	0xc1c
 11619 1ecf C30D0000 		.4byte	0xdc3
 11620 1ed3 7A1B0000 		.4byte	.LLST157
 11621 1ed7 1F       		.uleb128 0x1f
 11622 1ed8 AD030000 		.4byte	.LASF138
 11623 1edc 01       		.byte	0x1
 11624 1edd 1C0C     		.2byte	0xc1c
 11625 1edf C2000000 		.4byte	0xc2
 11626 1ee3 C41B0000 		.4byte	.LLST158
 11627 1ee7 24       		.uleb128 0x24
 11628 1ee8 C0090000 		.4byte	0x9c0
 11629 1eec B0070000 		.4byte	.LBB126
 11630 1ef0 60000000 		.4byte	.Ldebug_ranges0+0x60
 11631 1ef4 01       		.byte	0x1
 11632 1ef5 250C     		.2byte	0xc25
 11633 1ef7 261F0000 		.4byte	0x1f26
 11634 1efb 25       		.uleb128 0x25
 11635 1efc E7090000 		.4byte	0x9e7
 11636 1f00 171C0000 		.4byte	.LLST159
 11637 1f04 25       		.uleb128 0x25
 11638 1f05 DB090000 		.4byte	0x9db
 11639 1f09 171C0000 		.4byte	.LLST159
 11640 1f0d 25       		.uleb128 0x25
 11641 1f0e CF090000 		.4byte	0x9cf
 11642 1f12 2B1C0000 		.4byte	.LLST161
 11643 1f16 26       		.uleb128 0x26
 11644 1f17 60000000 		.4byte	.Ldebug_ranges0+0x60
 11645 1f1b 27       		.uleb128 0x27
 11646 1f1c F3090000 		.4byte	0x9f3
 11647 1f20 3E1C0000 		.4byte	.LLST162
 11648 1f24 00       		.byte	0
 11649 1f25 00       		.byte	0
 11650 1f26 28       		.uleb128 0x28
 11651 1f27 C0090000 		.4byte	0x9c0
 11652 1f2b FA070000 		.4byte	.LBB132
 11653 1f2f 04080000 		.4byte	.LBE132
 11654 1f33 01       		.byte	0x1
 11655 1f34 2D0C     		.2byte	0xc2d
 11656 1f36 691F0000 		.4byte	0x1f69
ARM GAS  /tmp/ccTsJCXT.s 			page 347


 11657 1f3a 25       		.uleb128 0x25
 11658 1f3b E7090000 		.4byte	0x9e7
 11659 1f3f 521C0000 		.4byte	.LLST163
 11660 1f43 25       		.uleb128 0x25
 11661 1f44 DB090000 		.4byte	0x9db
 11662 1f48 661C0000 		.4byte	.LLST164
 11663 1f4c 25       		.uleb128 0x25
 11664 1f4d CF090000 		.4byte	0x9cf
 11665 1f51 7A1C0000 		.4byte	.LLST165
 11666 1f55 29       		.uleb128 0x29
 11667 1f56 FA070000 		.4byte	.LBB133
 11668 1f5a 04080000 		.4byte	.LBE133
 11669 1f5e 27       		.uleb128 0x27
 11670 1f5f F3090000 		.4byte	0x9f3
 11671 1f63 8D1C0000 		.4byte	.LLST166
 11672 1f67 00       		.byte	0
 11673 1f68 00       		.byte	0
 11674 1f69 24       		.uleb128 0x24
 11675 1f6a C0090000 		.4byte	0x9c0
 11676 1f6e 10080000 		.4byte	.LBB134
 11677 1f72 80000000 		.4byte	.Ldebug_ranges0+0x80
 11678 1f76 01       		.byte	0x1
 11679 1f77 350C     		.2byte	0xc35
 11680 1f79 A81F0000 		.4byte	0x1fa8
 11681 1f7d 25       		.uleb128 0x25
 11682 1f7e E7090000 		.4byte	0x9e7
 11683 1f82 A11C0000 		.4byte	.LLST167
 11684 1f86 25       		.uleb128 0x25
 11685 1f87 DB090000 		.4byte	0x9db
 11686 1f8b A11C0000 		.4byte	.LLST167
 11687 1f8f 25       		.uleb128 0x25
 11688 1f90 CF090000 		.4byte	0x9cf
 11689 1f94 B51C0000 		.4byte	.LLST169
 11690 1f98 26       		.uleb128 0x26
 11691 1f99 80000000 		.4byte	.Ldebug_ranges0+0x80
 11692 1f9d 27       		.uleb128 0x27
 11693 1f9e F3090000 		.4byte	0x9f3
 11694 1fa2 C81C0000 		.4byte	.LLST170
 11695 1fa6 00       		.byte	0
 11696 1fa7 00       		.byte	0
 11697 1fa8 28       		.uleb128 0x28
 11698 1fa9 C0090000 		.4byte	0x9c0
 11699 1fad 1C080000 		.4byte	.LBB138
 11700 1fb1 28080000 		.4byte	.LBE138
 11701 1fb5 01       		.byte	0x1
 11702 1fb6 360C     		.2byte	0xc36
 11703 1fb8 EB1F0000 		.4byte	0x1feb
 11704 1fbc 25       		.uleb128 0x25
 11705 1fbd E7090000 		.4byte	0x9e7
 11706 1fc1 DC1C0000 		.4byte	.LLST171
 11707 1fc5 25       		.uleb128 0x25
 11708 1fc6 DB090000 		.4byte	0x9db
 11709 1fca F01C0000 		.4byte	.LLST172
 11710 1fce 25       		.uleb128 0x25
 11711 1fcf CF090000 		.4byte	0x9cf
 11712 1fd3 041D0000 		.4byte	.LLST173
 11713 1fd7 29       		.uleb128 0x29
ARM GAS  /tmp/ccTsJCXT.s 			page 348


 11714 1fd8 1C080000 		.4byte	.LBB139
 11715 1fdc 28080000 		.4byte	.LBE139
 11716 1fe0 27       		.uleb128 0x27
 11717 1fe1 F3090000 		.4byte	0x9f3
 11718 1fe5 171D0000 		.4byte	.LLST174
 11719 1fe9 00       		.byte	0
 11720 1fea 00       		.byte	0
 11721 1feb 2E       		.uleb128 0x2e
 11722 1fec CE070000 		.4byte	.LVL173
 11723 1ff0 1E370000 		.4byte	0x371e
 11724 1ff4 2E       		.uleb128 0x2e
 11725 1ff5 3C080000 		.4byte	.LVL182
 11726 1ff9 1E370000 		.4byte	0x371e
 11727 1ffd 00       		.byte	0
 11728 1ffe 33       		.uleb128 0x33
 11729 1fff 01       		.byte	0x1
 11730 2000 7E0A0000 		.4byte	.LASF237
 11731 2004 01       		.byte	0x1
 11732 2005 950B     		.2byte	0xb95
 11733 2007 01       		.byte	0x1
 11734 2008 6B030000 		.4byte	0x36b
 11735 200c 5C060000 		.4byte	.LFB121
 11736 2010 AC070000 		.4byte	.LFE121
 11737 2014 2B1D0000 		.4byte	.LLST134
 11738 2018 01       		.byte	0x1
 11739 2019 CE210000 		.4byte	0x21ce
 11740 201d 1F       		.uleb128 0x1f
 11741 201e 0F090000 		.4byte	.LASF169
 11742 2022 01       		.byte	0x1
 11743 2023 950B     		.2byte	0xb95
 11744 2025 C30D0000 		.4byte	0xdc3
 11745 2029 4B1D0000 		.4byte	.LLST135
 11746 202d 1F       		.uleb128 0x1f
 11747 202e AD030000 		.4byte	.LASF138
 11748 2032 01       		.byte	0x1
 11749 2033 950B     		.2byte	0xb95
 11750 2035 C2000000 		.4byte	0xc2
 11751 2039 771D0000 		.4byte	.LLST136
 11752 203d 1F       		.uleb128 0x1f
 11753 203e 16000000 		.4byte	.LASF238
 11754 2042 01       		.byte	0x1
 11755 2043 950B     		.2byte	0xb95
 11756 2045 04190000 		.4byte	0x1904
 11757 2049 EE1D0000 		.4byte	.LLST137
 11758 204d 1F       		.uleb128 0x1f
 11759 204e 1D000000 		.4byte	.LASF239
 11760 2052 01       		.byte	0x1
 11761 2053 960B     		.2byte	0xb96
 11762 2055 04190000 		.4byte	0x1904
 11763 2059 651E0000 		.4byte	.LLST138
 11764 205d 1F       		.uleb128 0x1f
 11765 205e 6F0F0000 		.4byte	.LASF240
 11766 2062 01       		.byte	0x1
 11767 2063 960B     		.2byte	0xb96
 11768 2065 A7000000 		.4byte	0xa7
 11769 2069 911E0000 		.4byte	.LLST139
 11770 206d 28       		.uleb128 0x28
ARM GAS  /tmp/ccTsJCXT.s 			page 349


 11771 206e C0090000 		.4byte	0x9c0
 11772 2072 C8060000 		.4byte	.LBB116
 11773 2076 D6060000 		.4byte	.LBE116
 11774 207a 01       		.byte	0x1
 11775 207b C60B     		.2byte	0xbc6
 11776 207d B0200000 		.4byte	0x20b0
 11777 2081 25       		.uleb128 0x25
 11778 2082 E7090000 		.4byte	0x9e7
 11779 2086 BD1E0000 		.4byte	.LLST140
 11780 208a 25       		.uleb128 0x25
 11781 208b DB090000 		.4byte	0x9db
 11782 208f D11E0000 		.4byte	.LLST141
 11783 2093 25       		.uleb128 0x25
 11784 2094 CF090000 		.4byte	0x9cf
 11785 2098 E51E0000 		.4byte	.LLST142
 11786 209c 29       		.uleb128 0x29
 11787 209d C8060000 		.4byte	.LBB117
 11788 20a1 D6060000 		.4byte	.LBE117
 11789 20a5 27       		.uleb128 0x27
 11790 20a6 F3090000 		.4byte	0x9f3
 11791 20aa BD1E0000 		.4byte	.LLST140
 11792 20ae 00       		.byte	0
 11793 20af 00       		.byte	0
 11794 20b0 24       		.uleb128 0x24
 11795 20b1 C0090000 		.4byte	0x9c0
 11796 20b5 D6060000 		.4byte	.LBB118
 11797 20b9 48000000 		.4byte	.Ldebug_ranges0+0x48
 11798 20bd 01       		.byte	0x1
 11799 20be DE0B     		.2byte	0xbde
 11800 20c0 EF200000 		.4byte	0x20ef
 11801 20c4 25       		.uleb128 0x25
 11802 20c5 E7090000 		.4byte	0x9e7
 11803 20c9 F81E0000 		.4byte	.LLST144
 11804 20cd 25       		.uleb128 0x25
 11805 20ce DB090000 		.4byte	0x9db
 11806 20d2 0C1F0000 		.4byte	.LLST145
 11807 20d6 25       		.uleb128 0x25
 11808 20d7 CF090000 		.4byte	0x9cf
 11809 20db 201F0000 		.4byte	.LLST146
 11810 20df 26       		.uleb128 0x26
 11811 20e0 48000000 		.4byte	.Ldebug_ranges0+0x48
 11812 20e4 27       		.uleb128 0x27
 11813 20e5 F3090000 		.4byte	0x9f3
 11814 20e9 331F0000 		.4byte	.LLST147
 11815 20ed 00       		.byte	0
 11816 20ee 00       		.byte	0
 11817 20ef 28       		.uleb128 0x28
 11818 20f0 C0090000 		.4byte	0x9c0
 11819 20f4 66070000 		.4byte	.LBB122
 11820 20f8 76070000 		.4byte	.LBE122
 11821 20fc 01       		.byte	0x1
 11822 20fd 010C     		.2byte	0xc01
 11823 20ff 32210000 		.4byte	0x2132
 11824 2103 25       		.uleb128 0x25
 11825 2104 E7090000 		.4byte	0x9e7
 11826 2108 471F0000 		.4byte	.LLST148
 11827 210c 25       		.uleb128 0x25
ARM GAS  /tmp/ccTsJCXT.s 			page 350


 11828 210d DB090000 		.4byte	0x9db
 11829 2111 5B1F0000 		.4byte	.LLST149
 11830 2115 25       		.uleb128 0x25
 11831 2116 CF090000 		.4byte	0x9cf
 11832 211a 6F1F0000 		.4byte	.LLST150
 11833 211e 29       		.uleb128 0x29
 11834 211f 66070000 		.4byte	.LBB123
 11835 2123 76070000 		.4byte	.LBE123
 11836 2127 27       		.uleb128 0x27
 11837 2128 F3090000 		.4byte	0x9f3
 11838 212c 471F0000 		.4byte	.LLST148
 11839 2130 00       		.byte	0
 11840 2131 00       		.byte	0
 11841 2132 28       		.uleb128 0x28
 11842 2133 C0090000 		.4byte	0x9c0
 11843 2137 76070000 		.4byte	.LBB124
 11844 213b 86070000 		.4byte	.LBE124
 11845 213f 01       		.byte	0x1
 11846 2140 020C     		.2byte	0xc02
 11847 2142 75210000 		.4byte	0x2175
 11848 2146 25       		.uleb128 0x25
 11849 2147 E7090000 		.4byte	0x9e7
 11850 214b 821F0000 		.4byte	.LLST152
 11851 214f 25       		.uleb128 0x25
 11852 2150 DB090000 		.4byte	0x9db
 11853 2154 961F0000 		.4byte	.LLST153
 11854 2158 25       		.uleb128 0x25
 11855 2159 CF090000 		.4byte	0x9cf
 11856 215d AA1F0000 		.4byte	.LLST154
 11857 2161 29       		.uleb128 0x29
 11858 2162 76070000 		.4byte	.LBB125
 11859 2166 86070000 		.4byte	.LBE125
 11860 216a 27       		.uleb128 0x27
 11861 216b F3090000 		.4byte	0x9f3
 11862 216f BD1F0000 		.4byte	.LLST155
 11863 2173 00       		.byte	0
 11864 2174 00       		.byte	0
 11865 2175 37       		.uleb128 0x37
 11866 2176 B2060000 		.4byte	.LVL151
 11867 217a 2C370000 		.4byte	0x372c
 11868 217e 89210000 		.4byte	0x2189
 11869 2182 2B       		.uleb128 0x2b
 11870 2183 01       		.byte	0x1
 11871 2184 53       		.byte	0x53
 11872 2185 02       		.byte	0x2
 11873 2186 74       		.byte	0x74
 11874 2187 00       		.sleb128 0
 11875 2188 00       		.byte	0
 11876 2189 37       		.uleb128 0x37
 11877 218a F6060000 		.4byte	.LVL157
 11878 218e 2C370000 		.4byte	0x372c
 11879 2192 A3210000 		.4byte	0x21a3
 11880 2196 2B       		.uleb128 0x2b
 11881 2197 01       		.byte	0x1
 11882 2198 52       		.byte	0x52
 11883 2199 02       		.byte	0x2
 11884 219a 76       		.byte	0x76
ARM GAS  /tmp/ccTsJCXT.s 			page 351


 11885 219b 00       		.sleb128 0
 11886 219c 2B       		.uleb128 0x2b
 11887 219d 01       		.byte	0x1
 11888 219e 53       		.byte	0x53
 11889 219f 02       		.byte	0x2
 11890 21a0 74       		.byte	0x74
 11891 21a1 00       		.sleb128 0
 11892 21a2 00       		.byte	0
 11893 21a3 37       		.uleb128 0x37
 11894 21a4 3C070000 		.4byte	.LVL161
 11895 21a8 2C370000 		.4byte	0x372c
 11896 21ac B7210000 		.4byte	0x21b7
 11897 21b0 2B       		.uleb128 0x2b
 11898 21b1 01       		.byte	0x1
 11899 21b2 53       		.byte	0x53
 11900 21b3 02       		.byte	0x2
 11901 21b4 74       		.byte	0x74
 11902 21b5 00       		.sleb128 0
 11903 21b6 00       		.byte	0
 11904 21b7 2A       		.uleb128 0x2a
 11905 21b8 58070000 		.4byte	.LVL162
 11906 21bc 2C370000 		.4byte	0x372c
 11907 21c0 2B       		.uleb128 0x2b
 11908 21c1 01       		.byte	0x1
 11909 21c2 52       		.byte	0x52
 11910 21c3 02       		.byte	0x2
 11911 21c4 76       		.byte	0x76
 11912 21c5 00       		.sleb128 0
 11913 21c6 2B       		.uleb128 0x2b
 11914 21c7 01       		.byte	0x1
 11915 21c8 53       		.byte	0x53
 11916 21c9 02       		.byte	0x2
 11917 21ca 74       		.byte	0x74
 11918 21cb 00       		.sleb128 0
 11919 21cc 00       		.byte	0
 11920 21cd 00       		.byte	0
 11921 21ce 32       		.uleb128 0x32
 11922 21cf 01       		.byte	0x1
 11923 21d0 A1130000 		.4byte	.LASF241
 11924 21d4 01       		.byte	0x1
 11925 21d5 5F0B     		.2byte	0xb5f
 11926 21d7 01       		.byte	0x1
 11927 21d8 6B030000 		.4byte	0x36b
 11928 21dc E8050000 		.4byte	.LFB120
 11929 21e0 5C060000 		.4byte	.LFE120
 11930 21e4 02       		.byte	0x2
 11931 21e5 7D       		.byte	0x7d
 11932 21e6 00       		.sleb128 0
 11933 21e7 01       		.byte	0x1
 11934 21e8 11230000 		.4byte	0x2311
 11935 21ec 1F       		.uleb128 0x1f
 11936 21ed 0F090000 		.4byte	.LASF169
 11937 21f1 01       		.byte	0x1
 11938 21f2 5F0B     		.2byte	0xb5f
 11939 21f4 C30D0000 		.4byte	0xdc3
 11940 21f8 D11F0000 		.4byte	.LLST116
 11941 21fc 1F       		.uleb128 0x1f
ARM GAS  /tmp/ccTsJCXT.s 			page 352


 11942 21fd AD030000 		.4byte	.LASF138
 11943 2201 01       		.byte	0x1
 11944 2202 5F0B     		.2byte	0xb5f
 11945 2204 C2000000 		.4byte	0xc2
 11946 2208 FD1F0000 		.4byte	.LLST117
 11947 220c 24       		.uleb128 0x24
 11948 220d C0090000 		.4byte	0x9c0
 11949 2211 EA050000 		.4byte	.LBB106
 11950 2215 30000000 		.4byte	.Ldebug_ranges0+0x30
 11951 2219 01       		.byte	0x1
 11952 221a 680B     		.2byte	0xb68
 11953 221c 4B220000 		.4byte	0x224b
 11954 2220 25       		.uleb128 0x25
 11955 2221 E7090000 		.4byte	0x9e7
 11956 2225 29200000 		.4byte	.LLST118
 11957 2229 25       		.uleb128 0x25
 11958 222a DB090000 		.4byte	0x9db
 11959 222e 29200000 		.4byte	.LLST118
 11960 2232 25       		.uleb128 0x25
 11961 2233 CF090000 		.4byte	0x9cf
 11962 2237 3D200000 		.4byte	.LLST120
 11963 223b 26       		.uleb128 0x26
 11964 223c 30000000 		.4byte	.Ldebug_ranges0+0x30
 11965 2240 27       		.uleb128 0x27
 11966 2241 F3090000 		.4byte	0x9f3
 11967 2245 50200000 		.4byte	.LLST121
 11968 2249 00       		.byte	0
 11969 224a 00       		.byte	0
 11970 224b 28       		.uleb128 0x28
 11971 224c C0090000 		.4byte	0x9c0
 11972 2250 2A060000 		.4byte	.LBB110
 11973 2254 34060000 		.4byte	.LBE110
 11974 2258 01       		.byte	0x1
 11975 2259 6F0B     		.2byte	0xb6f
 11976 225b 8E220000 		.4byte	0x228e
 11977 225f 25       		.uleb128 0x25
 11978 2260 E7090000 		.4byte	0x9e7
 11979 2264 64200000 		.4byte	.LLST122
 11980 2268 25       		.uleb128 0x25
 11981 2269 DB090000 		.4byte	0x9db
 11982 226d 78200000 		.4byte	.LLST123
 11983 2271 25       		.uleb128 0x25
 11984 2272 CF090000 		.4byte	0x9cf
 11985 2276 8C200000 		.4byte	.LLST124
 11986 227a 29       		.uleb128 0x29
 11987 227b 2A060000 		.4byte	.LBB111
 11988 227f 34060000 		.4byte	.LBE111
 11989 2283 27       		.uleb128 0x27
 11990 2284 F3090000 		.4byte	0x9f3
 11991 2288 9F200000 		.4byte	.LLST125
 11992 228c 00       		.byte	0
 11993 228d 00       		.byte	0
 11994 228e 28       		.uleb128 0x28
 11995 228f C0090000 		.4byte	0x9c0
 11996 2293 3C060000 		.4byte	.LBB112
 11997 2297 46060000 		.4byte	.LBE112
 11998 229b 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 353


 11999 229c 760B     		.2byte	0xb76
 12000 229e D1220000 		.4byte	0x22d1
 12001 22a2 25       		.uleb128 0x25
 12002 22a3 E7090000 		.4byte	0x9e7
 12003 22a7 B3200000 		.4byte	.LLST126
 12004 22ab 25       		.uleb128 0x25
 12005 22ac DB090000 		.4byte	0x9db
 12006 22b0 B3200000 		.4byte	.LLST126
 12007 22b4 25       		.uleb128 0x25
 12008 22b5 CF090000 		.4byte	0x9cf
 12009 22b9 C7200000 		.4byte	.LLST128
 12010 22bd 29       		.uleb128 0x29
 12011 22be 3C060000 		.4byte	.LBB113
 12012 22c2 46060000 		.4byte	.LBE113
 12013 22c6 27       		.uleb128 0x27
 12014 22c7 F3090000 		.4byte	0x9f3
 12015 22cb DA200000 		.4byte	.LLST129
 12016 22cf 00       		.byte	0
 12017 22d0 00       		.byte	0
 12018 22d1 39       		.uleb128 0x39
 12019 22d2 C0090000 		.4byte	0x9c0
 12020 22d6 46060000 		.4byte	.LBB114
 12021 22da 52060000 		.4byte	.LBE114
 12022 22de 01       		.byte	0x1
 12023 22df 770B     		.2byte	0xb77
 12024 22e1 25       		.uleb128 0x25
 12025 22e2 E7090000 		.4byte	0x9e7
 12026 22e6 EE200000 		.4byte	.LLST130
 12027 22ea 25       		.uleb128 0x25
 12028 22eb DB090000 		.4byte	0x9db
 12029 22ef 02210000 		.4byte	.LLST131
 12030 22f3 25       		.uleb128 0x25
 12031 22f4 CF090000 		.4byte	0x9cf
 12032 22f8 16210000 		.4byte	.LLST132
 12033 22fc 29       		.uleb128 0x29
 12034 22fd 46060000 		.4byte	.LBB115
 12035 2301 52060000 		.4byte	.LBE115
 12036 2305 27       		.uleb128 0x27
 12037 2306 F3090000 		.4byte	0x9f3
 12038 230a 29210000 		.4byte	.LLST133
 12039 230e 00       		.byte	0
 12040 230f 00       		.byte	0
 12041 2310 00       		.byte	0
 12042 2311 32       		.uleb128 0x32
 12043 2312 01       		.byte	0x1
 12044 2313 37020000 		.4byte	.LASF242
 12045 2317 01       		.byte	0x1
 12046 2318 2D0B     		.2byte	0xb2d
 12047 231a 01       		.byte	0x1
 12048 231b 6B030000 		.4byte	0x36b
 12049 231f 7A050000 		.4byte	.LFB119
 12050 2323 E8050000 		.4byte	.LFE119
 12051 2327 02       		.byte	0x2
 12052 2328 7D       		.byte	0x7d
 12053 2329 00       		.sleb128 0
 12054 232a 01       		.byte	0x1
 12055 232b 56240000 		.4byte	0x2456
ARM GAS  /tmp/ccTsJCXT.s 			page 354


 12056 232f 1F       		.uleb128 0x1f
 12057 2330 0F090000 		.4byte	.LASF169
 12058 2334 01       		.byte	0x1
 12059 2335 2D0B     		.2byte	0xb2d
 12060 2337 C30D0000 		.4byte	0xdc3
 12061 233b 3D210000 		.4byte	.LLST99
 12062 233f 1E       		.uleb128 0x1e
 12063 2340 AD030000 		.4byte	.LASF138
 12064 2344 01       		.byte	0x1
 12065 2345 2D0B     		.2byte	0xb2d
 12066 2347 C2000000 		.4byte	0xc2
 12067 234b 01       		.byte	0x1
 12068 234c 51       		.byte	0x51
 12069 234d 28       		.uleb128 0x28
 12070 234e C0090000 		.4byte	0x9c0
 12071 2352 82050000 		.4byte	.LBB98
 12072 2356 92050000 		.4byte	.LBE98
 12073 235a 01       		.byte	0x1
 12074 235b 460B     		.2byte	0xb46
 12075 235d 90230000 		.4byte	0x2390
 12076 2361 25       		.uleb128 0x25
 12077 2362 E7090000 		.4byte	0x9e7
 12078 2366 69210000 		.4byte	.LLST100
 12079 236a 25       		.uleb128 0x25
 12080 236b DB090000 		.4byte	0x9db
 12081 236f 7D210000 		.4byte	.LLST101
 12082 2373 25       		.uleb128 0x25
 12083 2374 CF090000 		.4byte	0x9cf
 12084 2378 91210000 		.4byte	.LLST102
 12085 237c 29       		.uleb128 0x29
 12086 237d 82050000 		.4byte	.LBB99
 12087 2381 92050000 		.4byte	.LBE99
 12088 2385 27       		.uleb128 0x27
 12089 2386 F3090000 		.4byte	0x9f3
 12090 238a 69210000 		.4byte	.LLST100
 12091 238e 00       		.byte	0
 12092 238f 00       		.byte	0
 12093 2390 28       		.uleb128 0x28
 12094 2391 C0090000 		.4byte	0x9c0
 12095 2395 92050000 		.4byte	.LBB100
 12096 2399 A2050000 		.4byte	.LBE100
 12097 239d 01       		.byte	0x1
 12098 239e 470B     		.2byte	0xb47
 12099 23a0 D3230000 		.4byte	0x23d3
 12100 23a4 25       		.uleb128 0x25
 12101 23a5 E7090000 		.4byte	0x9e7
 12102 23a9 A4210000 		.4byte	.LLST104
 12103 23ad 25       		.uleb128 0x25
 12104 23ae DB090000 		.4byte	0x9db
 12105 23b2 B8210000 		.4byte	.LLST105
 12106 23b6 25       		.uleb128 0x25
 12107 23b7 CF090000 		.4byte	0x9cf
 12108 23bb CC210000 		.4byte	.LLST106
 12109 23bf 29       		.uleb128 0x29
 12110 23c0 92050000 		.4byte	.LBB101
 12111 23c4 A2050000 		.4byte	.LBE101
 12112 23c8 27       		.uleb128 0x27
ARM GAS  /tmp/ccTsJCXT.s 			page 355


 12113 23c9 F3090000 		.4byte	0x9f3
 12114 23cd DF210000 		.4byte	.LLST107
 12115 23d1 00       		.byte	0
 12116 23d2 00       		.byte	0
 12117 23d3 28       		.uleb128 0x28
 12118 23d4 C0090000 		.4byte	0x9c0
 12119 23d8 AC050000 		.4byte	.LBB102
 12120 23dc BC050000 		.4byte	.LBE102
 12121 23e0 01       		.byte	0x1
 12122 23e1 380B     		.2byte	0xb38
 12123 23e3 16240000 		.4byte	0x2416
 12124 23e7 25       		.uleb128 0x25
 12125 23e8 E7090000 		.4byte	0x9e7
 12126 23ec F3210000 		.4byte	.LLST108
 12127 23f0 25       		.uleb128 0x25
 12128 23f1 DB090000 		.4byte	0x9db
 12129 23f5 07220000 		.4byte	.LLST109
 12130 23f9 25       		.uleb128 0x25
 12131 23fa CF090000 		.4byte	0x9cf
 12132 23fe 1B220000 		.4byte	.LLST110
 12133 2402 29       		.uleb128 0x29
 12134 2403 AC050000 		.4byte	.LBB103
 12135 2407 BC050000 		.4byte	.LBE103
 12136 240b 27       		.uleb128 0x27
 12137 240c F3090000 		.4byte	0x9f3
 12138 2410 F3210000 		.4byte	.LLST108
 12139 2414 00       		.byte	0
 12140 2415 00       		.byte	0
 12141 2416 39       		.uleb128 0x39
 12142 2417 C0090000 		.4byte	0x9c0
 12143 241b D0050000 		.4byte	.LBB104
 12144 241f E0050000 		.4byte	.LBE104
 12145 2423 01       		.byte	0x1
 12146 2424 3F0B     		.2byte	0xb3f
 12147 2426 25       		.uleb128 0x25
 12148 2427 E7090000 		.4byte	0x9e7
 12149 242b 2E220000 		.4byte	.LLST112
 12150 242f 25       		.uleb128 0x25
 12151 2430 DB090000 		.4byte	0x9db
 12152 2434 42220000 		.4byte	.LLST113
 12153 2438 25       		.uleb128 0x25
 12154 2439 CF090000 		.4byte	0x9cf
 12155 243d 56220000 		.4byte	.LLST114
 12156 2441 29       		.uleb128 0x29
 12157 2442 D0050000 		.4byte	.LBB105
 12158 2446 E0050000 		.4byte	.LBE105
 12159 244a 27       		.uleb128 0x27
 12160 244b F3090000 		.4byte	0x9f3
 12161 244f 69220000 		.4byte	.LLST115
 12162 2453 00       		.byte	0
 12163 2454 00       		.byte	0
 12164 2455 00       		.byte	0
 12165 2456 32       		.uleb128 0x32
 12166 2457 01       		.byte	0x1
 12167 2458 38040000 		.4byte	.LASF243
 12168 245c 01       		.byte	0x1
 12169 245d FF0A     		.2byte	0xaff
ARM GAS  /tmp/ccTsJCXT.s 			page 356


 12170 245f 01       		.byte	0x1
 12171 2460 6B030000 		.4byte	0x36b
 12172 2464 32050000 		.4byte	.LFB118
 12173 2468 7A050000 		.4byte	.LFE118
 12174 246c 02       		.byte	0x2
 12175 246d 7D       		.byte	0x7d
 12176 246e 00       		.sleb128 0
 12177 246f 01       		.byte	0x1
 12178 2470 56250000 		.4byte	0x2556
 12179 2474 1F       		.uleb128 0x1f
 12180 2475 0F090000 		.4byte	.LASF169
 12181 2479 01       		.byte	0x1
 12182 247a FF0A     		.2byte	0xaff
 12183 247c C30D0000 		.4byte	0xdc3
 12184 2480 7D220000 		.4byte	.LLST85
 12185 2484 1F       		.uleb128 0x1f
 12186 2485 AD030000 		.4byte	.LASF138
 12187 2489 01       		.byte	0x1
 12188 248a FF0A     		.2byte	0xaff
 12189 248c C2000000 		.4byte	0xc2
 12190 2490 9E220000 		.4byte	.LLST86
 12191 2494 28       		.uleb128 0x28
 12192 2495 C0090000 		.4byte	0x9c0
 12193 2499 3A050000 		.4byte	.LBB90
 12194 249d 46050000 		.4byte	.LBE90
 12195 24a1 01       		.byte	0x1
 12196 24a2 160B     		.2byte	0xb16
 12197 24a4 D7240000 		.4byte	0x24d7
 12198 24a8 25       		.uleb128 0x25
 12199 24a9 E7090000 		.4byte	0x9e7
 12200 24ad BF220000 		.4byte	.LLST87
 12201 24b1 25       		.uleb128 0x25
 12202 24b2 DB090000 		.4byte	0x9db
 12203 24b6 BF220000 		.4byte	.LLST87
 12204 24ba 25       		.uleb128 0x25
 12205 24bb CF090000 		.4byte	0x9cf
 12206 24bf D3220000 		.4byte	.LLST89
 12207 24c3 29       		.uleb128 0x29
 12208 24c4 3A050000 		.4byte	.LBB91
 12209 24c8 46050000 		.4byte	.LBE91
 12210 24cc 27       		.uleb128 0x27
 12211 24cd F3090000 		.4byte	0x9f3
 12212 24d1 E6220000 		.4byte	.LLST90
 12213 24d5 00       		.byte	0
 12214 24d6 00       		.byte	0
 12215 24d7 24       		.uleb128 0x24
 12216 24d8 C0090000 		.4byte	0x9c0
 12217 24dc 46050000 		.4byte	.LBB92
 12218 24e0 18000000 		.4byte	.Ldebug_ranges0+0x18
 12219 24e4 01       		.byte	0x1
 12220 24e5 170B     		.2byte	0xb17
 12221 24e7 16250000 		.4byte	0x2516
 12222 24eb 25       		.uleb128 0x25
 12223 24ec E7090000 		.4byte	0x9e7
 12224 24f0 FA220000 		.4byte	.LLST91
 12225 24f4 25       		.uleb128 0x25
 12226 24f5 DB090000 		.4byte	0x9db
ARM GAS  /tmp/ccTsJCXT.s 			page 357


 12227 24f9 0E230000 		.4byte	.LLST92
 12228 24fd 25       		.uleb128 0x25
 12229 24fe CF090000 		.4byte	0x9cf
 12230 2502 22230000 		.4byte	.LLST93
 12231 2506 26       		.uleb128 0x26
 12232 2507 18000000 		.4byte	.Ldebug_ranges0+0x18
 12233 250b 27       		.uleb128 0x27
 12234 250c F3090000 		.4byte	0x9f3
 12235 2510 35230000 		.4byte	.LLST94
 12236 2514 00       		.byte	0
 12237 2515 00       		.byte	0
 12238 2516 39       		.uleb128 0x39
 12239 2517 C0090000 		.4byte	0x9c0
 12240 251b 4E050000 		.4byte	.LBB95
 12241 251f 54050000 		.4byte	.LBE95
 12242 2523 01       		.byte	0x1
 12243 2524 0A0B     		.2byte	0xb0a
 12244 2526 25       		.uleb128 0x25
 12245 2527 E7090000 		.4byte	0x9e7
 12246 252b 49230000 		.4byte	.LLST95
 12247 252f 25       		.uleb128 0x25
 12248 2530 DB090000 		.4byte	0x9db
 12249 2534 49230000 		.4byte	.LLST95
 12250 2538 25       		.uleb128 0x25
 12251 2539 CF090000 		.4byte	0x9cf
 12252 253d 5D230000 		.4byte	.LLST97
 12253 2541 29       		.uleb128 0x29
 12254 2542 4E050000 		.4byte	.LBB96
 12255 2546 54050000 		.4byte	.LBE96
 12256 254a 27       		.uleb128 0x27
 12257 254b F3090000 		.4byte	0x9f3
 12258 254f 70230000 		.4byte	.LLST98
 12259 2553 00       		.byte	0
 12260 2554 00       		.byte	0
 12261 2555 00       		.byte	0
 12262 2556 32       		.uleb128 0x32
 12263 2557 01       		.byte	0x1
 12264 2558 CC040000 		.4byte	.LASF244
 12265 255c 01       		.byte	0x1
 12266 255d D30A     		.2byte	0xad3
 12267 255f 01       		.byte	0x1
 12268 2560 6B030000 		.4byte	0x36b
 12269 2564 EE040000 		.4byte	.LFB117
 12270 2568 32050000 		.4byte	.LFE117
 12271 256c 02       		.byte	0x2
 12272 256d 7D       		.byte	0x7d
 12273 256e 00       		.sleb128 0
 12274 256f 01       		.byte	0x1
 12275 2570 54260000 		.4byte	0x2654
 12276 2574 1F       		.uleb128 0x1f
 12277 2575 0F090000 		.4byte	.LASF169
 12278 2579 01       		.byte	0x1
 12279 257a D30A     		.2byte	0xad3
 12280 257c C30D0000 		.4byte	0xdc3
 12281 2580 84230000 		.4byte	.LLST72
 12282 2584 1E       		.uleb128 0x1e
 12283 2585 AD030000 		.4byte	.LASF138
ARM GAS  /tmp/ccTsJCXT.s 			page 358


 12284 2589 01       		.byte	0x1
 12285 258a D30A     		.2byte	0xad3
 12286 258c C2000000 		.4byte	0xc2
 12287 2590 01       		.byte	0x1
 12288 2591 51       		.byte	0x51
 12289 2592 28       		.uleb128 0x28
 12290 2593 C0090000 		.4byte	0x9c0
 12291 2597 F6040000 		.4byte	.LBB82
 12292 259b 06050000 		.4byte	.LBE82
 12293 259f 01       		.byte	0x1
 12294 25a0 E90A     		.2byte	0xae9
 12295 25a2 D5250000 		.4byte	0x25d5
 12296 25a6 25       		.uleb128 0x25
 12297 25a7 E7090000 		.4byte	0x9e7
 12298 25ab A5230000 		.4byte	.LLST73
 12299 25af 25       		.uleb128 0x25
 12300 25b0 DB090000 		.4byte	0x9db
 12301 25b4 B9230000 		.4byte	.LLST74
 12302 25b8 25       		.uleb128 0x25
 12303 25b9 CF090000 		.4byte	0x9cf
 12304 25bd CD230000 		.4byte	.LLST75
 12305 25c1 29       		.uleb128 0x29
 12306 25c2 F6040000 		.4byte	.LBB83
 12307 25c6 06050000 		.4byte	.LBE83
 12308 25ca 27       		.uleb128 0x27
 12309 25cb F3090000 		.4byte	0x9f3
 12310 25cf A5230000 		.4byte	.LLST73
 12311 25d3 00       		.byte	0
 12312 25d4 00       		.byte	0
 12313 25d5 24       		.uleb128 0x24
 12314 25d6 C0090000 		.4byte	0x9c0
 12315 25da 06050000 		.4byte	.LBB84
 12316 25de 00000000 		.4byte	.Ldebug_ranges0+0
 12317 25e2 01       		.byte	0x1
 12318 25e3 EA0A     		.2byte	0xaea
 12319 25e5 14260000 		.4byte	0x2614
 12320 25e9 25       		.uleb128 0x25
 12321 25ea E7090000 		.4byte	0x9e7
 12322 25ee E0230000 		.4byte	.LLST77
 12323 25f2 25       		.uleb128 0x25
 12324 25f3 DB090000 		.4byte	0x9db
 12325 25f7 F4230000 		.4byte	.LLST78
 12326 25fb 25       		.uleb128 0x25
 12327 25fc CF090000 		.4byte	0x9cf
 12328 2600 08240000 		.4byte	.LLST79
 12329 2604 26       		.uleb128 0x26
 12330 2605 00000000 		.4byte	.Ldebug_ranges0+0
 12331 2609 27       		.uleb128 0x27
 12332 260a F3090000 		.4byte	0x9f3
 12333 260e 1B240000 		.4byte	.LLST80
 12334 2612 00       		.byte	0
 12335 2613 00       		.byte	0
 12336 2614 39       		.uleb128 0x39
 12337 2615 C0090000 		.4byte	0x9c0
 12338 2619 16050000 		.4byte	.LBB87
 12339 261d 24050000 		.4byte	.LBE87
 12340 2621 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 359


 12341 2622 DD0A     		.2byte	0xadd
 12342 2624 25       		.uleb128 0x25
 12343 2625 E7090000 		.4byte	0x9e7
 12344 2629 2F240000 		.4byte	.LLST81
 12345 262d 25       		.uleb128 0x25
 12346 262e DB090000 		.4byte	0x9db
 12347 2632 43240000 		.4byte	.LLST82
 12348 2636 25       		.uleb128 0x25
 12349 2637 CF090000 		.4byte	0x9cf
 12350 263b 57240000 		.4byte	.LLST83
 12351 263f 29       		.uleb128 0x29
 12352 2640 16050000 		.4byte	.LBB88
 12353 2644 24050000 		.4byte	.LBE88
 12354 2648 27       		.uleb128 0x27
 12355 2649 F3090000 		.4byte	0x9f3
 12356 264d 2F240000 		.4byte	.LLST81
 12357 2651 00       		.byte	0
 12358 2652 00       		.byte	0
 12359 2653 00       		.byte	0
 12360 2654 31       		.uleb128 0x31
 12361 2655 01       		.byte	0x1
 12362 2656 E1010000 		.4byte	.LASF245
 12363 265a 01       		.byte	0x1
 12364 265b BF0A     		.2byte	0xabf
 12365 265d 01       		.byte	0x1
 12366 265e 6F260000 		.4byte	0x266f
 12367 2662 1B       		.uleb128 0x1b
 12368 2663 0F090000 		.4byte	.LASF169
 12369 2667 01       		.byte	0x1
 12370 2668 BF0A     		.2byte	0xabf
 12371 266a C30D0000 		.4byte	0xdc3
 12372 266e 00       		.byte	0
 12373 266f 31       		.uleb128 0x31
 12374 2670 01       		.byte	0x1
 12375 2671 74130000 		.4byte	.LASF246
 12376 2675 01       		.byte	0x1
 12377 2676 B00A     		.2byte	0xab0
 12378 2678 01       		.byte	0x1
 12379 2679 8A260000 		.4byte	0x268a
 12380 267d 1B       		.uleb128 0x1b
 12381 267e 0F090000 		.4byte	.LASF169
 12382 2682 01       		.byte	0x1
 12383 2683 B00A     		.2byte	0xab0
 12384 2685 C30D0000 		.4byte	0xdc3
 12385 2689 00       		.byte	0
 12386 268a 33       		.uleb128 0x33
 12387 268b 01       		.byte	0x1
 12388 268c B8020000 		.4byte	.LASF247
 12389 2690 01       		.byte	0x1
 12390 2691 8C0A     		.2byte	0xa8c
 12391 2693 01       		.byte	0x1
 12392 2694 6B030000 		.4byte	0x36b
 12393 2698 B4040000 		.4byte	.LFB114
 12394 269c EE040000 		.4byte	.LFE114
 12395 26a0 6A240000 		.4byte	.LLST70
 12396 26a4 01       		.byte	0x1
 12397 26a5 CA260000 		.4byte	0x26ca
ARM GAS  /tmp/ccTsJCXT.s 			page 360


 12398 26a9 1F       		.uleb128 0x1f
 12399 26aa 0F090000 		.4byte	.LASF169
 12400 26ae 01       		.byte	0x1
 12401 26af 8C0A     		.2byte	0xa8c
 12402 26b1 C30D0000 		.4byte	0xdc3
 12403 26b5 8A240000 		.4byte	.LLST71
 12404 26b9 2A       		.uleb128 0x2a
 12405 26ba E2040000 		.4byte	.LVL111
 12406 26be 54260000 		.4byte	0x2654
 12407 26c2 2B       		.uleb128 0x2b
 12408 26c3 01       		.byte	0x1
 12409 26c4 50       		.byte	0x50
 12410 26c5 02       		.byte	0x2
 12411 26c6 74       		.byte	0x74
 12412 26c7 00       		.sleb128 0
 12413 26c8 00       		.byte	0
 12414 26c9 00       		.byte	0
 12415 26ca 33       		.uleb128 0x33
 12416 26cb 01       		.byte	0x1
 12417 26cc 14090000 		.4byte	.LASF248
 12418 26d0 01       		.byte	0x1
 12419 26d1 240A     		.2byte	0xa24
 12420 26d3 01       		.byte	0x1
 12421 26d4 6B030000 		.4byte	0x36b
 12422 26d8 F20E0000 		.4byte	.LFB113
 12423 26dc 880F0000 		.4byte	.LFE113
 12424 26e0 A8240000 		.4byte	.LLST236
 12425 26e4 01       		.byte	0x1
 12426 26e5 64270000 		.4byte	0x2764
 12427 26e9 1F       		.uleb128 0x1f
 12428 26ea 0F090000 		.4byte	.LASF169
 12429 26ee 01       		.byte	0x1
 12430 26ef 240A     		.2byte	0xa24
 12431 26f1 C30D0000 		.4byte	0xdc3
 12432 26f5 C8240000 		.4byte	.LLST237
 12433 26f9 1F       		.uleb128 0x1f
 12434 26fa 73040000 		.4byte	.LASF228
 12435 26fe 01       		.byte	0x1
 12436 26ff 240A     		.2byte	0xa24
 12437 2701 64270000 		.4byte	0x2764
 12438 2705 FC240000 		.4byte	.LLST238
 12439 2709 20       		.uleb128 0x20
 12440 270a F9120000 		.4byte	.LASF154
 12441 270e 01       		.byte	0x1
 12442 270f 260A     		.2byte	0xa26
 12443 2711 C2000000 		.4byte	0xc2
 12444 2715 25250000 		.4byte	.LLST239
 12445 2719 20       		.uleb128 0x20
 12446 271a 58010000 		.4byte	.LASF164
 12447 271e 01       		.byte	0x1
 12448 271f 270A     		.2byte	0xa27
 12449 2721 C2000000 		.4byte	0xc2
 12450 2725 43250000 		.4byte	.LLST240
 12451 2729 20       		.uleb128 0x20
 12452 272a 1A120000 		.4byte	.LASF161
 12453 272e 01       		.byte	0x1
 12454 272f 280A     		.2byte	0xa28
ARM GAS  /tmp/ccTsJCXT.s 			page 361


 12455 2731 C2000000 		.4byte	0xc2
 12456 2735 84250000 		.4byte	.LLST241
 12457 2739 37       		.uleb128 0x37
 12458 273a 0E0F0000 		.4byte	.LVL336
 12459 273e 6F260000 		.4byte	0x266f
 12460 2742 4D270000 		.4byte	0x274d
 12461 2746 2B       		.uleb128 0x2b
 12462 2747 01       		.byte	0x1
 12463 2748 50       		.byte	0x50
 12464 2749 02       		.byte	0x2
 12465 274a 75       		.byte	0x75
 12466 274b 00       		.sleb128 0
 12467 274c 00       		.byte	0
 12468 274d 2A       		.uleb128 0x2a
 12469 274e 2A0F0000 		.4byte	.LVL337
 12470 2752 6A0F0000 		.4byte	0xf6a
 12471 2756 2B       		.uleb128 0x2b
 12472 2757 01       		.byte	0x1
 12473 2758 50       		.byte	0x50
 12474 2759 02       		.byte	0x2
 12475 275a 70       		.byte	0x70
 12476 275b 00       		.sleb128 0
 12477 275c 2B       		.uleb128 0x2b
 12478 275d 01       		.byte	0x1
 12479 275e 51       		.byte	0x51
 12480 275f 02       		.byte	0x2
 12481 2760 71       		.byte	0x71
 12482 2761 00       		.sleb128 0
 12483 2762 00       		.byte	0
 12484 2763 00       		.byte	0
 12485 2764 15       		.uleb128 0x15
 12486 2765 04       		.byte	0x4
 12487 2766 6F070000 		.4byte	0x76f
 12488 276a 32       		.uleb128 0x32
 12489 276b 01       		.byte	0x1
 12490 276c 89080000 		.4byte	.LASF249
 12491 2770 01       		.byte	0x1
 12492 2771 DE09     		.2byte	0x9de
 12493 2773 01       		.byte	0x1
 12494 2774 6B030000 		.4byte	0x36b
 12495 2778 40040000 		.4byte	.LFB112
 12496 277c B0040000 		.4byte	.LFE112
 12497 2780 02       		.byte	0x2
 12498 2781 7D       		.byte	0x7d
 12499 2782 00       		.sleb128 0
 12500 2783 01       		.byte	0x1
 12501 2784 2B280000 		.4byte	0x282b
 12502 2788 1F       		.uleb128 0x1f
 12503 2789 0F090000 		.4byte	.LASF169
 12504 278d 01       		.byte	0x1
 12505 278e DE09     		.2byte	0x9de
 12506 2790 C30D0000 		.4byte	0xdc3
 12507 2794 AD250000 		.4byte	.LLST60
 12508 2798 1F       		.uleb128 0x1f
 12509 2799 CB0E0000 		.4byte	.LASF229
 12510 279d 01       		.byte	0x1
 12511 279e DE09     		.2byte	0x9de
ARM GAS  /tmp/ccTsJCXT.s 			page 362


 12512 27a0 C2000000 		.4byte	0xc2
 12513 27a4 CE250000 		.4byte	.LLST61
 12514 27a8 28       		.uleb128 0x28
 12515 27a9 C0090000 		.4byte	0x9c0
 12516 27ad 52040000 		.4byte	.LBB78
 12517 27b1 5E040000 		.4byte	.LBE78
 12518 27b5 01       		.byte	0x1
 12519 27b6 EE09     		.2byte	0x9ee
 12520 27b8 EB270000 		.4byte	0x27eb
 12521 27bc 25       		.uleb128 0x25
 12522 27bd E7090000 		.4byte	0x9e7
 12523 27c1 EF250000 		.4byte	.LLST62
 12524 27c5 25       		.uleb128 0x25
 12525 27c6 DB090000 		.4byte	0x9db
 12526 27ca EF250000 		.4byte	.LLST62
 12527 27ce 25       		.uleb128 0x25
 12528 27cf CF090000 		.4byte	0x9cf
 12529 27d3 03260000 		.4byte	.LLST64
 12530 27d7 29       		.uleb128 0x29
 12531 27d8 52040000 		.4byte	.LBB79
 12532 27dc 5E040000 		.4byte	.LBE79
 12533 27e0 27       		.uleb128 0x27
 12534 27e1 F3090000 		.4byte	0x9f3
 12535 27e5 16260000 		.4byte	.LLST65
 12536 27e9 00       		.byte	0
 12537 27ea 00       		.byte	0
 12538 27eb 39       		.uleb128 0x39
 12539 27ec C0090000 		.4byte	0x9c0
 12540 27f0 5E040000 		.4byte	.LBB80
 12541 27f4 6A040000 		.4byte	.LBE80
 12542 27f8 01       		.byte	0x1
 12543 27f9 EF09     		.2byte	0x9ef
 12544 27fb 25       		.uleb128 0x25
 12545 27fc E7090000 		.4byte	0x9e7
 12546 2800 2A260000 		.4byte	.LLST66
 12547 2804 25       		.uleb128 0x25
 12548 2805 DB090000 		.4byte	0x9db
 12549 2809 3E260000 		.4byte	.LLST67
 12550 280d 25       		.uleb128 0x25
 12551 280e CF090000 		.4byte	0x9cf
 12552 2812 52260000 		.4byte	.LLST68
 12553 2816 29       		.uleb128 0x29
 12554 2817 5E040000 		.4byte	.LBB81
 12555 281b 6A040000 		.4byte	.LBE81
 12556 281f 27       		.uleb128 0x27
 12557 2820 F3090000 		.4byte	0x9f3
 12558 2824 65260000 		.4byte	.LLST69
 12559 2828 00       		.byte	0
 12560 2829 00       		.byte	0
 12561 282a 00       		.byte	0
 12562 282b 32       		.uleb128 0x32
 12563 282c 01       		.byte	0x1
 12564 282d DF120000 		.4byte	.LASF250
 12565 2831 01       		.byte	0x1
 12566 2832 B409     		.2byte	0x9b4
 12567 2834 01       		.byte	0x1
 12568 2835 6B030000 		.4byte	0x36b
ARM GAS  /tmp/ccTsJCXT.s 			page 363


 12569 2839 F8030000 		.4byte	.LFB111
 12570 283d 40040000 		.4byte	.LFE111
 12571 2841 02       		.byte	0x2
 12572 2842 7D       		.byte	0x7d
 12573 2843 00       		.sleb128 0
 12574 2844 01       		.byte	0x1
 12575 2845 EA280000 		.4byte	0x28ea
 12576 2849 1F       		.uleb128 0x1f
 12577 284a 0F090000 		.4byte	.LASF169
 12578 284e 01       		.byte	0x1
 12579 284f B409     		.2byte	0x9b4
 12580 2851 C30D0000 		.4byte	0xdc3
 12581 2855 79260000 		.4byte	.LLST51
 12582 2859 1E       		.uleb128 0x1e
 12583 285a CB0E0000 		.4byte	.LASF229
 12584 285e 01       		.byte	0x1
 12585 285f B409     		.2byte	0x9b4
 12586 2861 C2000000 		.4byte	0xc2
 12587 2865 01       		.byte	0x1
 12588 2866 51       		.byte	0x51
 12589 2867 28       		.uleb128 0x28
 12590 2868 C0090000 		.4byte	0x9c0
 12591 286c 0C040000 		.4byte	.LBB74
 12592 2870 1C040000 		.4byte	.LBE74
 12593 2874 01       		.byte	0x1
 12594 2875 C809     		.2byte	0x9c8
 12595 2877 AA280000 		.4byte	0x28aa
 12596 287b 25       		.uleb128 0x25
 12597 287c E7090000 		.4byte	0x9e7
 12598 2880 9A260000 		.4byte	.LLST52
 12599 2884 25       		.uleb128 0x25
 12600 2885 DB090000 		.4byte	0x9db
 12601 2889 AE260000 		.4byte	.LLST53
 12602 288d 25       		.uleb128 0x25
 12603 288e CF090000 		.4byte	0x9cf
 12604 2892 C2260000 		.4byte	.LLST54
 12605 2896 29       		.uleb128 0x29
 12606 2897 0C040000 		.4byte	.LBB75
 12607 289b 1C040000 		.4byte	.LBE75
 12608 289f 27       		.uleb128 0x27
 12609 28a0 F3090000 		.4byte	0x9f3
 12610 28a4 9A260000 		.4byte	.LLST52
 12611 28a8 00       		.byte	0
 12612 28a9 00       		.byte	0
 12613 28aa 39       		.uleb128 0x39
 12614 28ab C0090000 		.4byte	0x9c0
 12615 28af 1C040000 		.4byte	.LBB76
 12616 28b3 2C040000 		.4byte	.LBE76
 12617 28b7 01       		.byte	0x1
 12618 28b8 C909     		.2byte	0x9c9
 12619 28ba 25       		.uleb128 0x25
 12620 28bb E7090000 		.4byte	0x9e7
 12621 28bf D5260000 		.4byte	.LLST56
 12622 28c3 25       		.uleb128 0x25
 12623 28c4 DB090000 		.4byte	0x9db
 12624 28c8 E9260000 		.4byte	.LLST57
 12625 28cc 25       		.uleb128 0x25
ARM GAS  /tmp/ccTsJCXT.s 			page 364


 12626 28cd CF090000 		.4byte	0x9cf
 12627 28d1 FD260000 		.4byte	.LLST58
 12628 28d5 29       		.uleb128 0x29
 12629 28d6 1C040000 		.4byte	.LBB77
 12630 28da 2C040000 		.4byte	.LBE77
 12631 28de 27       		.uleb128 0x27
 12632 28df F3090000 		.4byte	0x9f3
 12633 28e3 10270000 		.4byte	.LLST59
 12634 28e7 00       		.byte	0
 12635 28e8 00       		.byte	0
 12636 28e9 00       		.byte	0
 12637 28ea 32       		.uleb128 0x32
 12638 28eb 01       		.byte	0x1
 12639 28ec E9000000 		.4byte	.LASF251
 12640 28f0 01       		.byte	0x1
 12641 28f1 9009     		.2byte	0x990
 12642 28f3 01       		.byte	0x1
 12643 28f4 6B030000 		.4byte	0x36b
 12644 28f8 98030000 		.4byte	.LFB110
 12645 28fc F8030000 		.4byte	.LFE110
 12646 2900 02       		.byte	0x2
 12647 2901 7D       		.byte	0x7d
 12648 2902 00       		.sleb128 0
 12649 2903 01       		.byte	0x1
 12650 2904 AB290000 		.4byte	0x29ab
 12651 2908 1F       		.uleb128 0x1f
 12652 2909 0F090000 		.4byte	.LASF169
 12653 290d 01       		.byte	0x1
 12654 290e 9009     		.2byte	0x990
 12655 2910 C30D0000 		.4byte	0xdc3
 12656 2914 24270000 		.4byte	.LLST41
 12657 2918 1F       		.uleb128 0x1f
 12658 2919 CB0E0000 		.4byte	.LASF229
 12659 291d 01       		.byte	0x1
 12660 291e 9009     		.2byte	0x990
 12661 2920 C2000000 		.4byte	0xc2
 12662 2924 45270000 		.4byte	.LLST42
 12663 2928 28       		.uleb128 0x28
 12664 2929 C0090000 		.4byte	0x9c0
 12665 292d 9A030000 		.4byte	.LBB70
 12666 2931 A6030000 		.4byte	.LBE70
 12667 2935 01       		.byte	0x1
 12668 2936 9B09     		.2byte	0x99b
 12669 2938 6B290000 		.4byte	0x296b
 12670 293c 25       		.uleb128 0x25
 12671 293d E7090000 		.4byte	0x9e7
 12672 2941 66270000 		.4byte	.LLST43
 12673 2945 25       		.uleb128 0x25
 12674 2946 DB090000 		.4byte	0x9db
 12675 294a 66270000 		.4byte	.LLST43
 12676 294e 25       		.uleb128 0x25
 12677 294f CF090000 		.4byte	0x9cf
 12678 2953 7A270000 		.4byte	.LLST45
 12679 2957 29       		.uleb128 0x29
 12680 2958 9A030000 		.4byte	.LBB71
 12681 295c A6030000 		.4byte	.LBE71
 12682 2960 27       		.uleb128 0x27
ARM GAS  /tmp/ccTsJCXT.s 			page 365


 12683 2961 F3090000 		.4byte	0x9f3
 12684 2965 8D270000 		.4byte	.LLST46
 12685 2969 00       		.byte	0
 12686 296a 00       		.byte	0
 12687 296b 39       		.uleb128 0x39
 12688 296c C0090000 		.4byte	0x9c0
 12689 2970 A6030000 		.4byte	.LBB72
 12690 2974 B2030000 		.4byte	.LBE72
 12691 2978 01       		.byte	0x1
 12692 2979 9C09     		.2byte	0x99c
 12693 297b 25       		.uleb128 0x25
 12694 297c E7090000 		.4byte	0x9e7
 12695 2980 A1270000 		.4byte	.LLST47
 12696 2984 25       		.uleb128 0x25
 12697 2985 DB090000 		.4byte	0x9db
 12698 2989 B5270000 		.4byte	.LLST48
 12699 298d 25       		.uleb128 0x25
 12700 298e CF090000 		.4byte	0x9cf
 12701 2992 C9270000 		.4byte	.LLST49
 12702 2996 29       		.uleb128 0x29
 12703 2997 A6030000 		.4byte	.LBB73
 12704 299b B2030000 		.4byte	.LBE73
 12705 299f 27       		.uleb128 0x27
 12706 29a0 F3090000 		.4byte	0x9f3
 12707 29a4 DC270000 		.4byte	.LLST50
 12708 29a8 00       		.byte	0
 12709 29a9 00       		.byte	0
 12710 29aa 00       		.byte	0
 12711 29ab 32       		.uleb128 0x32
 12712 29ac 01       		.byte	0x1
 12713 29ad E4050000 		.4byte	.LASF252
 12714 29b1 01       		.byte	0x1
 12715 29b2 6C09     		.2byte	0x96c
 12716 29b4 01       		.byte	0x1
 12717 29b5 6B030000 		.4byte	0x36b
 12718 29b9 60030000 		.4byte	.LFB109
 12719 29bd 98030000 		.4byte	.LFE109
 12720 29c1 02       		.byte	0x2
 12721 29c2 7D       		.byte	0x7d
 12722 29c3 00       		.sleb128 0
 12723 29c4 01       		.byte	0x1
 12724 29c5 6A2A0000 		.4byte	0x2a6a
 12725 29c9 1F       		.uleb128 0x1f
 12726 29ca 0F090000 		.4byte	.LASF169
 12727 29ce 01       		.byte	0x1
 12728 29cf 6C09     		.2byte	0x96c
 12729 29d1 C30D0000 		.4byte	0xdc3
 12730 29d5 F0270000 		.4byte	.LLST32
 12731 29d9 1E       		.uleb128 0x1e
 12732 29da CB0E0000 		.4byte	.LASF229
 12733 29de 01       		.byte	0x1
 12734 29df 6C09     		.2byte	0x96c
 12735 29e1 C2000000 		.4byte	0xc2
 12736 29e5 01       		.byte	0x1
 12737 29e6 51       		.byte	0x51
 12738 29e7 28       		.uleb128 0x28
 12739 29e8 C0090000 		.4byte	0x9c0
ARM GAS  /tmp/ccTsJCXT.s 			page 366


 12740 29ec 64030000 		.4byte	.LBB66
 12741 29f0 74030000 		.4byte	.LBE66
 12742 29f4 01       		.byte	0x1
 12743 29f5 7A09     		.2byte	0x97a
 12744 29f7 2A2A0000 		.4byte	0x2a2a
 12745 29fb 25       		.uleb128 0x25
 12746 29fc E7090000 		.4byte	0x9e7
 12747 2a00 11280000 		.4byte	.LLST33
 12748 2a04 25       		.uleb128 0x25
 12749 2a05 DB090000 		.4byte	0x9db
 12750 2a09 25280000 		.4byte	.LLST34
 12751 2a0d 25       		.uleb128 0x25
 12752 2a0e CF090000 		.4byte	0x9cf
 12753 2a12 39280000 		.4byte	.LLST35
 12754 2a16 29       		.uleb128 0x29
 12755 2a17 64030000 		.4byte	.LBB67
 12756 2a1b 74030000 		.4byte	.LBE67
 12757 2a1f 27       		.uleb128 0x27
 12758 2a20 F3090000 		.4byte	0x9f3
 12759 2a24 11280000 		.4byte	.LLST33
 12760 2a28 00       		.byte	0
 12761 2a29 00       		.byte	0
 12762 2a2a 39       		.uleb128 0x39
 12763 2a2b C0090000 		.4byte	0x9c0
 12764 2a2f 74030000 		.4byte	.LBB68
 12765 2a33 84030000 		.4byte	.LBE68
 12766 2a37 01       		.byte	0x1
 12767 2a38 7B09     		.2byte	0x97b
 12768 2a3a 25       		.uleb128 0x25
 12769 2a3b E7090000 		.4byte	0x9e7
 12770 2a3f 4C280000 		.4byte	.LLST37
 12771 2a43 25       		.uleb128 0x25
 12772 2a44 DB090000 		.4byte	0x9db
 12773 2a48 60280000 		.4byte	.LLST38
 12774 2a4c 25       		.uleb128 0x25
 12775 2a4d CF090000 		.4byte	0x9cf
 12776 2a51 74280000 		.4byte	.LLST39
 12777 2a55 29       		.uleb128 0x29
 12778 2a56 74030000 		.4byte	.LBB69
 12779 2a5a 84030000 		.4byte	.LBE69
 12780 2a5e 27       		.uleb128 0x27
 12781 2a5f F3090000 		.4byte	0x9f3
 12782 2a63 87280000 		.4byte	.LLST40
 12783 2a67 00       		.byte	0
 12784 2a68 00       		.byte	0
 12785 2a69 00       		.byte	0
 12786 2a6a 31       		.uleb128 0x31
 12787 2a6b 01       		.byte	0x1
 12788 2a6c 89110000 		.4byte	.LASF253
 12789 2a70 01       		.byte	0x1
 12790 2a71 5909     		.2byte	0x959
 12791 2a73 01       		.byte	0x1
 12792 2a74 852A0000 		.4byte	0x2a85
 12793 2a78 1B       		.uleb128 0x1b
 12794 2a79 0F090000 		.4byte	.LASF169
 12795 2a7d 01       		.byte	0x1
 12796 2a7e 5909     		.2byte	0x959
ARM GAS  /tmp/ccTsJCXT.s 			page 367


 12797 2a80 C30D0000 		.4byte	0xdc3
 12798 2a84 00       		.byte	0
 12799 2a85 31       		.uleb128 0x31
 12800 2a86 01       		.byte	0x1
 12801 2a87 64080000 		.4byte	.LASF254
 12802 2a8b 01       		.byte	0x1
 12803 2a8c 4A09     		.2byte	0x94a
 12804 2a8e 01       		.byte	0x1
 12805 2a8f A02A0000 		.4byte	0x2aa0
 12806 2a93 1B       		.uleb128 0x1b
 12807 2a94 0F090000 		.4byte	.LASF169
 12808 2a98 01       		.byte	0x1
 12809 2a99 4A09     		.2byte	0x94a
 12810 2a9b C30D0000 		.4byte	0xdc3
 12811 2a9f 00       		.byte	0
 12812 2aa0 33       		.uleb128 0x33
 12813 2aa1 01       		.byte	0x1
 12814 2aa2 6B070000 		.4byte	.LASF255
 12815 2aa6 01       		.byte	0x1
 12816 2aa7 2609     		.2byte	0x926
 12817 2aa9 01       		.byte	0x1
 12818 2aaa 6B030000 		.4byte	0x36b
 12819 2aae 26030000 		.4byte	.LFB106
 12820 2ab2 60030000 		.4byte	.LFE106
 12821 2ab6 9B280000 		.4byte	.LLST30
 12822 2aba 01       		.byte	0x1
 12823 2abb E02A0000 		.4byte	0x2ae0
 12824 2abf 1F       		.uleb128 0x1f
 12825 2ac0 0F090000 		.4byte	.LASF169
 12826 2ac4 01       		.byte	0x1
 12827 2ac5 2609     		.2byte	0x926
 12828 2ac7 C30D0000 		.4byte	0xdc3
 12829 2acb BB280000 		.4byte	.LLST31
 12830 2acf 2A       		.uleb128 0x2a
 12831 2ad0 54030000 		.4byte	.LVL86
 12832 2ad4 6A2A0000 		.4byte	0x2a6a
 12833 2ad8 2B       		.uleb128 0x2b
 12834 2ad9 01       		.byte	0x1
 12835 2ada 50       		.byte	0x50
 12836 2adb 02       		.byte	0x2
 12837 2adc 74       		.byte	0x74
 12838 2add 00       		.sleb128 0
 12839 2ade 00       		.byte	0
 12840 2adf 00       		.byte	0
 12841 2ae0 33       		.uleb128 0x33
 12842 2ae1 01       		.byte	0x1
 12843 2ae2 FD0A0000 		.4byte	.LASF256
 12844 2ae6 01       		.byte	0x1
 12845 2ae7 EB08     		.2byte	0x8eb
 12846 2ae9 01       		.byte	0x1
 12847 2aea 6B030000 		.4byte	0x36b
 12848 2aee AC0E0000 		.4byte	.LFB105
 12849 2af2 F20E0000 		.4byte	.LFE105
 12850 2af6 D9280000 		.4byte	.LLST233
 12851 2afa 01       		.byte	0x1
 12852 2afb 4A2B0000 		.4byte	0x2b4a
 12853 2aff 1F       		.uleb128 0x1f
ARM GAS  /tmp/ccTsJCXT.s 			page 368


 12854 2b00 0F090000 		.4byte	.LASF169
 12855 2b04 01       		.byte	0x1
 12856 2b05 EB08     		.2byte	0x8eb
 12857 2b07 C30D0000 		.4byte	0xdc3
 12858 2b0b F9280000 		.4byte	.LLST234
 12859 2b0f 1F       		.uleb128 0x1f
 12860 2b10 A4110000 		.4byte	.LASF257
 12861 2b14 01       		.byte	0x1
 12862 2b15 EB08     		.2byte	0x8eb
 12863 2b17 C2000000 		.4byte	0xc2
 12864 2b1b 2D290000 		.4byte	.LLST235
 12865 2b1f 37       		.uleb128 0x37
 12866 2b20 C60E0000 		.4byte	.LVL331
 12867 2b24 852A0000 		.4byte	0x2a85
 12868 2b28 332B0000 		.4byte	0x2b33
 12869 2b2c 2B       		.uleb128 0x2b
 12870 2b2d 01       		.byte	0x1
 12871 2b2e 50       		.byte	0x50
 12872 2b2f 02       		.byte	0x2
 12873 2b30 74       		.byte	0x74
 12874 2b31 00       		.sleb128 0
 12875 2b32 00       		.byte	0
 12876 2b33 2A       		.uleb128 0x2a
 12877 2b34 D40E0000 		.4byte	.LVL332
 12878 2b38 6A0F0000 		.4byte	0xf6a
 12879 2b3c 2B       		.uleb128 0x2b
 12880 2b3d 01       		.byte	0x1
 12881 2b3e 50       		.byte	0x50
 12882 2b3f 02       		.byte	0x2
 12883 2b40 70       		.byte	0x70
 12884 2b41 00       		.sleb128 0
 12885 2b42 2B       		.uleb128 0x2b
 12886 2b43 01       		.byte	0x1
 12887 2b44 51       		.byte	0x51
 12888 2b45 02       		.byte	0x2
 12889 2b46 71       		.byte	0x71
 12890 2b47 00       		.sleb128 0
 12891 2b48 00       		.byte	0
 12892 2b49 00       		.byte	0
 12893 2b4a 33       		.uleb128 0x33
 12894 2b4b 01       		.byte	0x1
 12895 2b4c 260A0000 		.4byte	.LASF258
 12896 2b50 01       		.byte	0x1
 12897 2b51 8C08     		.2byte	0x88c
 12898 2b53 01       		.byte	0x1
 12899 2b54 6B030000 		.4byte	0x36b
 12900 2b58 941C0000 		.4byte	.LFB104
 12901 2b5c 1C1D0000 		.4byte	.LFE104
 12902 2b60 56290000 		.4byte	.LLST399
 12903 2b64 01       		.byte	0x1
 12904 2b65 AE2B0000 		.4byte	0x2bae
 12905 2b69 1F       		.uleb128 0x1f
 12906 2b6a 0F090000 		.4byte	.LASF169
 12907 2b6e 01       		.byte	0x1
 12908 2b6f 8C08     		.2byte	0x88c
 12909 2b71 C30D0000 		.4byte	0xdc3
 12910 2b75 76290000 		.4byte	.LLST400
ARM GAS  /tmp/ccTsJCXT.s 			page 369


 12911 2b79 1F       		.uleb128 0x1f
 12912 2b7a AD030000 		.4byte	.LASF138
 12913 2b7e 01       		.byte	0x1
 12914 2b7f 8C08     		.2byte	0x88c
 12915 2b81 C2000000 		.4byte	0xc2
 12916 2b85 D6290000 		.4byte	.LLST401
 12917 2b89 2E       		.uleb128 0x2e
 12918 2b8a C01C0000 		.4byte	.LVL697
 12919 2b8e 1E370000 		.4byte	0x371e
 12920 2b92 2A       		.uleb128 0x2a
 12921 2b93 CA1C0000 		.4byte	.LVL698
 12922 2b97 C0090000 		.4byte	0x9c0
 12923 2b9b 2B       		.uleb128 0x2b
 12924 2b9c 01       		.byte	0x1
 12925 2b9d 50       		.byte	0x50
 12926 2b9e 02       		.byte	0x2
 12927 2b9f 70       		.byte	0x70
 12928 2ba0 00       		.sleb128 0
 12929 2ba1 2B       		.uleb128 0x2b
 12930 2ba2 01       		.byte	0x1
 12931 2ba3 51       		.byte	0x51
 12932 2ba4 02       		.byte	0x2
 12933 2ba5 75       		.byte	0x75
 12934 2ba6 00       		.sleb128 0
 12935 2ba7 2B       		.uleb128 0x2b
 12936 2ba8 01       		.byte	0x1
 12937 2ba9 52       		.byte	0x52
 12938 2baa 01       		.byte	0x1
 12939 2bab 30       		.byte	0x30
 12940 2bac 00       		.byte	0
 12941 2bad 00       		.byte	0
 12942 2bae 33       		.uleb128 0x33
 12943 2baf 01       		.byte	0x1
 12944 2bb0 CF020000 		.4byte	.LASF259
 12945 2bb4 01       		.byte	0x1
 12946 2bb5 0508     		.2byte	0x805
 12947 2bb7 01       		.byte	0x1
 12948 2bb8 6B030000 		.4byte	0x36b
 12949 2bbc 981B0000 		.4byte	.LFB103
 12950 2bc0 941C0000 		.4byte	.LFE103
 12951 2bc4 FF290000 		.4byte	.LLST393
 12952 2bc8 01       		.byte	0x1
 12953 2bc9 612C0000 		.4byte	0x2c61
 12954 2bcd 1F       		.uleb128 0x1f
 12955 2bce 0F090000 		.4byte	.LASF169
 12956 2bd2 01       		.byte	0x1
 12957 2bd3 0508     		.2byte	0x805
 12958 2bd5 C30D0000 		.4byte	0xdc3
 12959 2bd9 1F2A0000 		.4byte	.LLST394
 12960 2bdd 1F       		.uleb128 0x1f
 12961 2bde AD030000 		.4byte	.LASF138
 12962 2be2 01       		.byte	0x1
 12963 2be3 0508     		.2byte	0x805
 12964 2be5 C2000000 		.4byte	0xc2
 12965 2be9 3D2A0000 		.4byte	.LLST395
 12966 2bed 1F       		.uleb128 0x1f
 12967 2bee 59130000 		.4byte	.LASF260
ARM GAS  /tmp/ccTsJCXT.s 			page 370


 12968 2bf2 01       		.byte	0x1
 12969 2bf3 0508     		.2byte	0x805
 12970 2bf5 04190000 		.4byte	0x1904
 12971 2bf9 5B2A0000 		.4byte	.LLST396
 12972 2bfd 1F       		.uleb128 0x1f
 12973 2bfe 6F0F0000 		.4byte	.LASF240
 12974 2c02 01       		.byte	0x1
 12975 2c03 0508     		.2byte	0x805
 12976 2c05 A7000000 		.4byte	0xa7
 12977 2c09 E02A0000 		.4byte	.LLST397
 12978 2c0d 20       		.uleb128 0x20
 12979 2c0e F9120000 		.4byte	.LASF154
 12980 2c12 01       		.byte	0x1
 12981 2c13 0708     		.2byte	0x807
 12982 2c15 C2000000 		.4byte	0xc2
 12983 2c19 652B0000 		.4byte	.LLST398
 12984 2c1d 2E       		.uleb128 0x2e
 12985 2c1e EA1B0000 		.4byte	.LVL684
 12986 2c22 2C370000 		.4byte	0x372c
 12987 2c26 37       		.uleb128 0x37
 12988 2c27 021C0000 		.4byte	.LVL685
 12989 2c2b C0090000 		.4byte	0x9c0
 12990 2c2f 452C0000 		.4byte	0x2c45
 12991 2c33 2B       		.uleb128 0x2b
 12992 2c34 01       		.byte	0x1
 12993 2c35 50       		.byte	0x50
 12994 2c36 02       		.byte	0x2
 12995 2c37 70       		.byte	0x70
 12996 2c38 00       		.sleb128 0
 12997 2c39 2B       		.uleb128 0x2b
 12998 2c3a 01       		.byte	0x1
 12999 2c3b 51       		.byte	0x51
 13000 2c3c 02       		.byte	0x2
 13001 2c3d 75       		.byte	0x75
 13002 2c3e 00       		.sleb128 0
 13003 2c3f 2B       		.uleb128 0x2b
 13004 2c40 01       		.byte	0x1
 13005 2c41 52       		.byte	0x52
 13006 2c42 01       		.byte	0x1
 13007 2c43 31       		.byte	0x31
 13008 2c44 00       		.byte	0
 13009 2c45 2E       		.uleb128 0x2e
 13010 2c46 301C0000 		.4byte	.LVL690
 13011 2c4a 2C370000 		.4byte	0x372c
 13012 2c4e 2E       		.uleb128 0x2e
 13013 2c4f 541C0000 		.4byte	.LVL692
 13014 2c53 2C370000 		.4byte	0x372c
 13015 2c57 2E       		.uleb128 0x2e
 13016 2c58 781C0000 		.4byte	.LVL694
 13017 2c5c 2C370000 		.4byte	0x372c
 13018 2c60 00       		.byte	0
 13019 2c61 33       		.uleb128 0x33
 13020 2c62 01       		.byte	0x1
 13021 2c63 19140000 		.4byte	.LASF261
 13022 2c67 01       		.byte	0x1
 13023 2c68 C707     		.2byte	0x7c7
 13024 2c6a 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 371


 13025 2c6b 6B030000 		.4byte	0x36b
 13026 2c6f 2C1B0000 		.4byte	.LFB102
 13027 2c73 981B0000 		.4byte	.LFE102
 13028 2c77 872B0000 		.4byte	.LLST390
 13029 2c7b 01       		.byte	0x1
 13030 2c7c B62C0000 		.4byte	0x2cb6
 13031 2c80 1F       		.uleb128 0x1f
 13032 2c81 0F090000 		.4byte	.LASF169
 13033 2c85 01       		.byte	0x1
 13034 2c86 C707     		.2byte	0x7c7
 13035 2c88 C30D0000 		.4byte	0xdc3
 13036 2c8c A72B0000 		.4byte	.LLST391
 13037 2c90 1F       		.uleb128 0x1f
 13038 2c91 AD030000 		.4byte	.LASF138
 13039 2c95 01       		.byte	0x1
 13040 2c96 C707     		.2byte	0x7c7
 13041 2c98 C2000000 		.4byte	0xc2
 13042 2c9c D02B0000 		.4byte	.LLST392
 13043 2ca0 2A       		.uleb128 0x2a
 13044 2ca1 581B0000 		.4byte	.LVL677
 13045 2ca5 C0090000 		.4byte	0x9c0
 13046 2ca9 2B       		.uleb128 0x2b
 13047 2caa 01       		.byte	0x1
 13048 2cab 50       		.byte	0x50
 13049 2cac 02       		.byte	0x2
 13050 2cad 70       		.byte	0x70
 13051 2cae 00       		.sleb128 0
 13052 2caf 2B       		.uleb128 0x2b
 13053 2cb0 01       		.byte	0x1
 13054 2cb1 52       		.byte	0x52
 13055 2cb2 01       		.byte	0x1
 13056 2cb3 30       		.byte	0x30
 13057 2cb4 00       		.byte	0
 13058 2cb5 00       		.byte	0
 13059 2cb6 33       		.uleb128 0x33
 13060 2cb7 01       		.byte	0x1
 13061 2cb8 FD040000 		.4byte	.LASF262
 13062 2cbc 01       		.byte	0x1
 13063 2cbd 8607     		.2byte	0x786
 13064 2cbf 01       		.byte	0x1
 13065 2cc0 6B030000 		.4byte	0x36b
 13066 2cc4 CA1A0000 		.4byte	.LFB101
 13067 2cc8 2C1B0000 		.4byte	.LFE101
 13068 2ccc FC2B0000 		.4byte	.LLST386
 13069 2cd0 01       		.byte	0x1
 13070 2cd1 1B2D0000 		.4byte	0x2d1b
 13071 2cd5 1F       		.uleb128 0x1f
 13072 2cd6 0F090000 		.4byte	.LASF169
 13073 2cda 01       		.byte	0x1
 13074 2cdb 8607     		.2byte	0x786
 13075 2cdd C30D0000 		.4byte	0xdc3
 13076 2ce1 1C2C0000 		.4byte	.LLST387
 13077 2ce5 1F       		.uleb128 0x1f
 13078 2ce6 AD030000 		.4byte	.LASF138
 13079 2cea 01       		.byte	0x1
 13080 2ceb 8607     		.2byte	0x786
 13081 2ced C2000000 		.4byte	0xc2
ARM GAS  /tmp/ccTsJCXT.s 			page 372


 13082 2cf1 452C0000 		.4byte	.LLST388
 13083 2cf5 20       		.uleb128 0x20
 13084 2cf6 F9120000 		.4byte	.LASF154
 13085 2cfa 01       		.byte	0x1
 13086 2cfb 8807     		.2byte	0x788
 13087 2cfd C2000000 		.4byte	0xc2
 13088 2d01 712C0000 		.4byte	.LLST389
 13089 2d05 2A       		.uleb128 0x2a
 13090 2d06 F61A0000 		.4byte	.LVL670
 13091 2d0a C0090000 		.4byte	0x9c0
 13092 2d0e 2B       		.uleb128 0x2b
 13093 2d0f 01       		.byte	0x1
 13094 2d10 50       		.byte	0x50
 13095 2d11 02       		.byte	0x2
 13096 2d12 70       		.byte	0x70
 13097 2d13 00       		.sleb128 0
 13098 2d14 2B       		.uleb128 0x2b
 13099 2d15 01       		.byte	0x1
 13100 2d16 52       		.byte	0x52
 13101 2d17 01       		.byte	0x1
 13102 2d18 31       		.byte	0x31
 13103 2d19 00       		.byte	0
 13104 2d1a 00       		.byte	0
 13105 2d1b 33       		.uleb128 0x33
 13106 2d1c 01       		.byte	0x1
 13107 2d1d DB0A0000 		.4byte	.LASF263
 13108 2d21 01       		.byte	0x1
 13109 2d22 6C07     		.2byte	0x76c
 13110 2d24 01       		.byte	0x1
 13111 2d25 6B030000 		.4byte	0x36b
 13112 2d29 9C1A0000 		.4byte	.LFB100
 13113 2d2d CA1A0000 		.4byte	.LFE100
 13114 2d31 932C0000 		.4byte	.LLST383
 13115 2d35 01       		.byte	0x1
 13116 2d36 772D0000 		.4byte	0x2d77
 13117 2d3a 1F       		.uleb128 0x1f
 13118 2d3b 0F090000 		.4byte	.LASF169
 13119 2d3f 01       		.byte	0x1
 13120 2d40 6C07     		.2byte	0x76c
 13121 2d42 C30D0000 		.4byte	0xdc3
 13122 2d46 B32C0000 		.4byte	.LLST384
 13123 2d4a 1F       		.uleb128 0x1f
 13124 2d4b AD030000 		.4byte	.LASF138
 13125 2d4f 01       		.byte	0x1
 13126 2d50 6C07     		.2byte	0x76c
 13127 2d52 C2000000 		.4byte	0xc2
 13128 2d56 D12C0000 		.4byte	.LLST385
 13129 2d5a 2A       		.uleb128 0x2a
 13130 2d5b A81A0000 		.4byte	.LVL667
 13131 2d5f C0090000 		.4byte	0x9c0
 13132 2d63 2B       		.uleb128 0x2b
 13133 2d64 01       		.byte	0x1
 13134 2d65 50       		.byte	0x50
 13135 2d66 02       		.byte	0x2
 13136 2d67 70       		.byte	0x70
 13137 2d68 00       		.sleb128 0
 13138 2d69 2B       		.uleb128 0x2b
ARM GAS  /tmp/ccTsJCXT.s 			page 373


 13139 2d6a 01       		.byte	0x1
 13140 2d6b 51       		.byte	0x51
 13141 2d6c 03       		.byte	0x3
 13142 2d6d F3       		.byte	0xf3
 13143 2d6e 01       		.uleb128 0x1
 13144 2d6f 51       		.byte	0x51
 13145 2d70 2B       		.uleb128 0x2b
 13146 2d71 01       		.byte	0x1
 13147 2d72 52       		.byte	0x52
 13148 2d73 01       		.byte	0x1
 13149 2d74 30       		.byte	0x30
 13150 2d75 00       		.byte	0
 13151 2d76 00       		.byte	0
 13152 2d77 33       		.uleb128 0x33
 13153 2d78 01       		.byte	0x1
 13154 2d79 180D0000 		.4byte	.LASF264
 13155 2d7d 01       		.byte	0x1
 13156 2d7e 4C07     		.2byte	0x74c
 13157 2d80 01       		.byte	0x1
 13158 2d81 6B030000 		.4byte	0x36b
 13159 2d85 781A0000 		.4byte	.LFB99
 13160 2d89 9C1A0000 		.4byte	.LFE99
 13161 2d8d F22C0000 		.4byte	.LLST379
 13162 2d91 01       		.byte	0x1
 13163 2d92 E32D0000 		.4byte	0x2de3
 13164 2d96 1F       		.uleb128 0x1f
 13165 2d97 0F090000 		.4byte	.LASF169
 13166 2d9b 01       		.byte	0x1
 13167 2d9c 4C07     		.2byte	0x74c
 13168 2d9e C30D0000 		.4byte	0xdc3
 13169 2da2 122D0000 		.4byte	.LLST380
 13170 2da6 1F       		.uleb128 0x1f
 13171 2da7 AD030000 		.4byte	.LASF138
 13172 2dab 01       		.byte	0x1
 13173 2dac 4C07     		.2byte	0x74c
 13174 2dae C2000000 		.4byte	0xc2
 13175 2db2 302D0000 		.4byte	.LLST381
 13176 2db6 20       		.uleb128 0x20
 13177 2db7 F9120000 		.4byte	.LASF154
 13178 2dbb 01       		.byte	0x1
 13179 2dbc 4E07     		.2byte	0x74e
 13180 2dbe C2000000 		.4byte	0xc2
 13181 2dc2 512D0000 		.4byte	.LLST382
 13182 2dc6 2A       		.uleb128 0x2a
 13183 2dc7 841A0000 		.4byte	.LVL661
 13184 2dcb C0090000 		.4byte	0x9c0
 13185 2dcf 2B       		.uleb128 0x2b
 13186 2dd0 01       		.byte	0x1
 13187 2dd1 50       		.byte	0x50
 13188 2dd2 02       		.byte	0x2
 13189 2dd3 70       		.byte	0x70
 13190 2dd4 00       		.sleb128 0
 13191 2dd5 2B       		.uleb128 0x2b
 13192 2dd6 01       		.byte	0x1
 13193 2dd7 51       		.byte	0x51
 13194 2dd8 03       		.byte	0x3
 13195 2dd9 F3       		.byte	0xf3
ARM GAS  /tmp/ccTsJCXT.s 			page 374


 13196 2dda 01       		.uleb128 0x1
 13197 2ddb 51       		.byte	0x51
 13198 2ddc 2B       		.uleb128 0x2b
 13199 2ddd 01       		.byte	0x1
 13200 2dde 52       		.byte	0x52
 13201 2ddf 01       		.byte	0x1
 13202 2de0 31       		.byte	0x31
 13203 2de1 00       		.byte	0
 13204 2de2 00       		.byte	0
 13205 2de3 31       		.uleb128 0x31
 13206 2de4 01       		.byte	0x1
 13207 2de5 90000000 		.4byte	.LASF265
 13208 2de9 01       		.byte	0x1
 13209 2dea 3707     		.2byte	0x737
 13210 2dec 01       		.byte	0x1
 13211 2ded FE2D0000 		.4byte	0x2dfe
 13212 2df1 1B       		.uleb128 0x1b
 13213 2df2 0F090000 		.4byte	.LASF169
 13214 2df6 01       		.byte	0x1
 13215 2df7 3707     		.2byte	0x737
 13216 2df9 C30D0000 		.4byte	0xdc3
 13217 2dfd 00       		.byte	0
 13218 2dfe 31       		.uleb128 0x31
 13219 2dff 01       		.byte	0x1
 13220 2e00 06140000 		.4byte	.LASF266
 13221 2e04 01       		.byte	0x1
 13222 2e05 2807     		.2byte	0x728
 13223 2e07 01       		.byte	0x1
 13224 2e08 192E0000 		.4byte	0x2e19
 13225 2e0c 1B       		.uleb128 0x1b
 13226 2e0d 0F090000 		.4byte	.LASF169
 13227 2e11 01       		.byte	0x1
 13228 2e12 2807     		.2byte	0x728
 13229 2e14 C30D0000 		.4byte	0xdc3
 13230 2e18 00       		.byte	0
 13231 2e19 33       		.uleb128 0x33
 13232 2e1a 01       		.byte	0x1
 13233 2e1b E8060000 		.4byte	.LASF267
 13234 2e1f 01       		.byte	0x1
 13235 2e20 0407     		.2byte	0x704
 13236 2e22 01       		.byte	0x1
 13237 2e23 6B030000 		.4byte	0x36b
 13238 2e27 E8020000 		.4byte	.LFB96
 13239 2e2b 22030000 		.4byte	.LFE96
 13240 2e2f 732D0000 		.4byte	.LLST28
 13241 2e33 01       		.byte	0x1
 13242 2e34 592E0000 		.4byte	0x2e59
 13243 2e38 1F       		.uleb128 0x1f
 13244 2e39 0F090000 		.4byte	.LASF169
 13245 2e3d 01       		.byte	0x1
 13246 2e3e 0407     		.2byte	0x704
 13247 2e40 C30D0000 		.4byte	0xdc3
 13248 2e44 932D0000 		.4byte	.LLST29
 13249 2e48 2A       		.uleb128 0x2a
 13250 2e49 16030000 		.4byte	.LVL83
 13251 2e4d E32D0000 		.4byte	0x2de3
 13252 2e51 2B       		.uleb128 0x2b
ARM GAS  /tmp/ccTsJCXT.s 			page 375


 13253 2e52 01       		.byte	0x1
 13254 2e53 50       		.byte	0x50
 13255 2e54 02       		.byte	0x2
 13256 2e55 74       		.byte	0x74
 13257 2e56 00       		.sleb128 0
 13258 2e57 00       		.byte	0
 13259 2e58 00       		.byte	0
 13260 2e59 33       		.uleb128 0x33
 13261 2e5a 01       		.byte	0x1
 13262 2e5b 68020000 		.4byte	.LASF268
 13263 2e5f 01       		.byte	0x1
 13264 2e60 D006     		.2byte	0x6d0
 13265 2e62 01       		.byte	0x1
 13266 2e63 6B030000 		.4byte	0x36b
 13267 2e67 780E0000 		.4byte	.LFB95
 13268 2e6b AC0E0000 		.4byte	.LFE95
 13269 2e6f B12D0000 		.4byte	.LLST231
 13270 2e73 01       		.byte	0x1
 13271 2e74 B32E0000 		.4byte	0x2eb3
 13272 2e78 1F       		.uleb128 0x1f
 13273 2e79 0F090000 		.4byte	.LASF169
 13274 2e7d 01       		.byte	0x1
 13275 2e7e D006     		.2byte	0x6d0
 13276 2e80 C30D0000 		.4byte	0xdc3
 13277 2e84 D12D0000 		.4byte	.LLST232
 13278 2e88 37       		.uleb128 0x37
 13279 2e89 900E0000 		.4byte	.LVL326
 13280 2e8d FE2D0000 		.4byte	0x2dfe
 13281 2e91 9C2E0000 		.4byte	0x2e9c
 13282 2e95 2B       		.uleb128 0x2b
 13283 2e96 01       		.byte	0x1
 13284 2e97 50       		.byte	0x50
 13285 2e98 02       		.byte	0x2
 13286 2e99 74       		.byte	0x74
 13287 2e9a 00       		.sleb128 0
 13288 2e9b 00       		.byte	0
 13289 2e9c 2A       		.uleb128 0x2a
 13290 2e9d 9E0E0000 		.4byte	.LVL327
 13291 2ea1 6A0F0000 		.4byte	0xf6a
 13292 2ea5 2B       		.uleb128 0x2b
 13293 2ea6 01       		.byte	0x1
 13294 2ea7 50       		.byte	0x50
 13295 2ea8 02       		.byte	0x2
 13296 2ea9 70       		.byte	0x70
 13297 2eaa 00       		.sleb128 0
 13298 2eab 2B       		.uleb128 0x2b
 13299 2eac 01       		.byte	0x1
 13300 2ead 51       		.byte	0x51
 13301 2eae 02       		.byte	0x2
 13302 2eaf 71       		.byte	0x71
 13303 2eb0 00       		.sleb128 0
 13304 2eb1 00       		.byte	0
 13305 2eb2 00       		.byte	0
 13306 2eb3 33       		.uleb128 0x33
 13307 2eb4 01       		.byte	0x1
 13308 2eb5 FA060000 		.4byte	.LASF269
 13309 2eb9 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 376


 13310 2eba 6F06     		.2byte	0x66f
 13311 2ebc 01       		.byte	0x1
 13312 2ebd 6B030000 		.4byte	0x36b
 13313 2ec1 C4190000 		.4byte	.LFB94
 13314 2ec5 741A0000 		.4byte	.LFE94
 13315 2ec9 052E0000 		.4byte	.LLST376
 13316 2ecd 01       		.byte	0x1
 13317 2ece 172F0000 		.4byte	0x2f17
 13318 2ed2 1F       		.uleb128 0x1f
 13319 2ed3 0F090000 		.4byte	.LASF169
 13320 2ed7 01       		.byte	0x1
 13321 2ed8 6F06     		.2byte	0x66f
 13322 2eda C30D0000 		.4byte	0xdc3
 13323 2ede 252E0000 		.4byte	.LLST377
 13324 2ee2 1F       		.uleb128 0x1f
 13325 2ee3 AD030000 		.4byte	.LASF138
 13326 2ee7 01       		.byte	0x1
 13327 2ee8 6F06     		.2byte	0x66f
 13328 2eea C2000000 		.4byte	0xc2
 13329 2eee 852E0000 		.4byte	.LLST378
 13330 2ef2 2E       		.uleb128 0x2e
 13331 2ef3 F0190000 		.4byte	.LVL651
 13332 2ef7 1E370000 		.4byte	0x371e
 13333 2efb 2A       		.uleb128 0x2a
 13334 2efc FA190000 		.4byte	.LVL652
 13335 2f00 C0090000 		.4byte	0x9c0
 13336 2f04 2B       		.uleb128 0x2b
 13337 2f05 01       		.byte	0x1
 13338 2f06 50       		.byte	0x50
 13339 2f07 02       		.byte	0x2
 13340 2f08 70       		.byte	0x70
 13341 2f09 00       		.sleb128 0
 13342 2f0a 2B       		.uleb128 0x2b
 13343 2f0b 01       		.byte	0x1
 13344 2f0c 51       		.byte	0x51
 13345 2f0d 02       		.byte	0x2
 13346 2f0e 75       		.byte	0x75
 13347 2f0f 00       		.sleb128 0
 13348 2f10 2B       		.uleb128 0x2b
 13349 2f11 01       		.byte	0x1
 13350 2f12 52       		.byte	0x52
 13351 2f13 01       		.byte	0x1
 13352 2f14 30       		.byte	0x30
 13353 2f15 00       		.byte	0
 13354 2f16 00       		.byte	0
 13355 2f17 33       		.uleb128 0x33
 13356 2f18 01       		.byte	0x1
 13357 2f19 14060000 		.4byte	.LASF270
 13358 2f1d 01       		.byte	0x1
 13359 2f1e E205     		.2byte	0x5e2
 13360 2f20 01       		.byte	0x1
 13361 2f21 6B030000 		.4byte	0x36b
 13362 2f25 B0180000 		.4byte	.LFB93
 13363 2f29 C0190000 		.4byte	.LFE93
 13364 2f2d AE2E0000 		.4byte	.LLST370
 13365 2f31 01       		.byte	0x1
 13366 2f32 CA2F0000 		.4byte	0x2fca
ARM GAS  /tmp/ccTsJCXT.s 			page 377


 13367 2f36 1F       		.uleb128 0x1f
 13368 2f37 0F090000 		.4byte	.LASF169
 13369 2f3b 01       		.byte	0x1
 13370 2f3c E205     		.2byte	0x5e2
 13371 2f3e C30D0000 		.4byte	0xdc3
 13372 2f42 CE2E0000 		.4byte	.LLST371
 13373 2f46 1F       		.uleb128 0x1f
 13374 2f47 AD030000 		.4byte	.LASF138
 13375 2f4b 01       		.byte	0x1
 13376 2f4c E205     		.2byte	0x5e2
 13377 2f4e C2000000 		.4byte	0xc2
 13378 2f52 EC2E0000 		.4byte	.LLST372
 13379 2f56 1F       		.uleb128 0x1f
 13380 2f57 59130000 		.4byte	.LASF260
 13381 2f5b 01       		.byte	0x1
 13382 2f5c E205     		.2byte	0x5e2
 13383 2f5e 04190000 		.4byte	0x1904
 13384 2f62 0A2F0000 		.4byte	.LLST373
 13385 2f66 1F       		.uleb128 0x1f
 13386 2f67 6F0F0000 		.4byte	.LASF240
 13387 2f6b 01       		.byte	0x1
 13388 2f6c E205     		.2byte	0x5e2
 13389 2f6e A7000000 		.4byte	0xa7
 13390 2f72 9A2F0000 		.4byte	.LLST374
 13391 2f76 20       		.uleb128 0x20
 13392 2f77 F9120000 		.4byte	.LASF154
 13393 2f7b 01       		.byte	0x1
 13394 2f7c E405     		.2byte	0x5e4
 13395 2f7e C2000000 		.4byte	0xc2
 13396 2f82 1F300000 		.4byte	.LLST375
 13397 2f86 2E       		.uleb128 0x2e
 13398 2f87 04190000 		.4byte	.LVL638
 13399 2f8b 2C370000 		.4byte	0x372c
 13400 2f8f 37       		.uleb128 0x37
 13401 2f90 1C190000 		.4byte	.LVL639
 13402 2f94 C0090000 		.4byte	0x9c0
 13403 2f98 AE2F0000 		.4byte	0x2fae
 13404 2f9c 2B       		.uleb128 0x2b
 13405 2f9d 01       		.byte	0x1
 13406 2f9e 50       		.byte	0x50
 13407 2f9f 02       		.byte	0x2
 13408 2fa0 70       		.byte	0x70
 13409 2fa1 00       		.sleb128 0
 13410 2fa2 2B       		.uleb128 0x2b
 13411 2fa3 01       		.byte	0x1
 13412 2fa4 51       		.byte	0x51
 13413 2fa5 02       		.byte	0x2
 13414 2fa6 75       		.byte	0x75
 13415 2fa7 00       		.sleb128 0
 13416 2fa8 2B       		.uleb128 0x2b
 13417 2fa9 01       		.byte	0x1
 13418 2faa 52       		.byte	0x52
 13419 2fab 01       		.byte	0x1
 13420 2fac 31       		.byte	0x31
 13421 2fad 00       		.byte	0
 13422 2fae 2E       		.uleb128 0x2e
 13423 2faf 58190000 		.4byte	.LVL644
ARM GAS  /tmp/ccTsJCXT.s 			page 378


 13424 2fb3 2C370000 		.4byte	0x372c
 13425 2fb7 2E       		.uleb128 0x2e
 13426 2fb8 7C190000 		.4byte	.LVL646
 13427 2fbc 2C370000 		.4byte	0x372c
 13428 2fc0 2E       		.uleb128 0x2e
 13429 2fc1 A0190000 		.4byte	.LVL648
 13430 2fc5 2C370000 		.4byte	0x372c
 13431 2fc9 00       		.byte	0
 13432 2fca 33       		.uleb128 0x33
 13433 2fcb 01       		.byte	0x1
 13434 2fcc AF050000 		.4byte	.LASF271
 13435 2fd0 01       		.byte	0x1
 13436 2fd1 9E05     		.2byte	0x59e
 13437 2fd3 01       		.byte	0x1
 13438 2fd4 6B030000 		.4byte	0x36b
 13439 2fd8 18180000 		.4byte	.LFB92
 13440 2fdc AC180000 		.4byte	.LFE92
 13441 2fe0 41300000 		.4byte	.LLST367
 13442 2fe4 01       		.byte	0x1
 13443 2fe5 1F300000 		.4byte	0x301f
 13444 2fe9 1F       		.uleb128 0x1f
 13445 2fea 0F090000 		.4byte	.LASF169
 13446 2fee 01       		.byte	0x1
 13447 2fef 9E05     		.2byte	0x59e
 13448 2ff1 C30D0000 		.4byte	0xdc3
 13449 2ff5 61300000 		.4byte	.LLST368
 13450 2ff9 1F       		.uleb128 0x1f
 13451 2ffa AD030000 		.4byte	.LASF138
 13452 2ffe 01       		.byte	0x1
 13453 2fff 9E05     		.2byte	0x59e
 13454 3001 C2000000 		.4byte	0xc2
 13455 3005 8A300000 		.4byte	.LLST369
 13456 3009 2A       		.uleb128 0x2a
 13457 300a 44180000 		.4byte	.LVL630
 13458 300e C0090000 		.4byte	0x9c0
 13459 3012 2B       		.uleb128 0x2b
 13460 3013 01       		.byte	0x1
 13461 3014 50       		.byte	0x50
 13462 3015 02       		.byte	0x2
 13463 3016 70       		.byte	0x70
 13464 3017 00       		.sleb128 0
 13465 3018 2B       		.uleb128 0x2b
 13466 3019 01       		.byte	0x1
 13467 301a 52       		.byte	0x52
 13468 301b 01       		.byte	0x1
 13469 301c 30       		.byte	0x30
 13470 301d 00       		.byte	0
 13471 301e 00       		.byte	0
 13472 301f 33       		.uleb128 0x33
 13473 3020 01       		.byte	0x1
 13474 3021 2E130000 		.4byte	.LASF272
 13475 3025 01       		.byte	0x1
 13476 3026 5705     		.2byte	0x557
 13477 3028 01       		.byte	0x1
 13478 3029 6B030000 		.4byte	0x36b
 13479 302d A0170000 		.4byte	.LFB91
 13480 3031 14180000 		.4byte	.LFE91
ARM GAS  /tmp/ccTsJCXT.s 			page 379


 13481 3035 B6300000 		.4byte	.LLST363
 13482 3039 01       		.byte	0x1
 13483 303a 84300000 		.4byte	0x3084
 13484 303e 1F       		.uleb128 0x1f
 13485 303f 0F090000 		.4byte	.LASF169
 13486 3043 01       		.byte	0x1
 13487 3044 5705     		.2byte	0x557
 13488 3046 C30D0000 		.4byte	0xdc3
 13489 304a D6300000 		.4byte	.LLST364
 13490 304e 1F       		.uleb128 0x1f
 13491 304f AD030000 		.4byte	.LASF138
 13492 3053 01       		.byte	0x1
 13493 3054 5705     		.2byte	0x557
 13494 3056 C2000000 		.4byte	0xc2
 13495 305a FF300000 		.4byte	.LLST365
 13496 305e 20       		.uleb128 0x20
 13497 305f F9120000 		.4byte	.LASF154
 13498 3063 01       		.byte	0x1
 13499 3064 5905     		.2byte	0x559
 13500 3066 C2000000 		.4byte	0xc2
 13501 306a 2B310000 		.4byte	.LLST366
 13502 306e 2A       		.uleb128 0x2a
 13503 306f CC170000 		.4byte	.LVL623
 13504 3073 C0090000 		.4byte	0x9c0
 13505 3077 2B       		.uleb128 0x2b
 13506 3078 01       		.byte	0x1
 13507 3079 50       		.byte	0x50
 13508 307a 02       		.byte	0x2
 13509 307b 70       		.byte	0x70
 13510 307c 00       		.sleb128 0
 13511 307d 2B       		.uleb128 0x2b
 13512 307e 01       		.byte	0x1
 13513 307f 52       		.byte	0x52
 13514 3080 01       		.byte	0x1
 13515 3081 31       		.byte	0x31
 13516 3082 00       		.byte	0
 13517 3083 00       		.byte	0
 13518 3084 33       		.uleb128 0x33
 13519 3085 01       		.byte	0x1
 13520 3086 8E050000 		.4byte	.LASF273
 13521 308a 01       		.byte	0x1
 13522 308b 3405     		.2byte	0x534
 13523 308d 01       		.byte	0x1
 13524 308e 6B030000 		.4byte	0x36b
 13525 3092 44170000 		.4byte	.LFB90
 13526 3096 A0170000 		.4byte	.LFE90
 13527 309a 4D310000 		.4byte	.LLST360
 13528 309e 01       		.byte	0x1
 13529 309f E0300000 		.4byte	0x30e0
 13530 30a3 1F       		.uleb128 0x1f
 13531 30a4 0F090000 		.4byte	.LASF169
 13532 30a8 01       		.byte	0x1
 13533 30a9 3405     		.2byte	0x534
 13534 30ab C30D0000 		.4byte	0xdc3
 13535 30af 6D310000 		.4byte	.LLST361
 13536 30b3 1F       		.uleb128 0x1f
 13537 30b4 AD030000 		.4byte	.LASF138
ARM GAS  /tmp/ccTsJCXT.s 			page 380


 13538 30b8 01       		.byte	0x1
 13539 30b9 3405     		.2byte	0x534
 13540 30bb C2000000 		.4byte	0xc2
 13541 30bf 99310000 		.4byte	.LLST362
 13542 30c3 2A       		.uleb128 0x2a
 13543 30c4 50170000 		.4byte	.LVL619
 13544 30c8 C0090000 		.4byte	0x9c0
 13545 30cc 2B       		.uleb128 0x2b
 13546 30cd 01       		.byte	0x1
 13547 30ce 50       		.byte	0x50
 13548 30cf 02       		.byte	0x2
 13549 30d0 70       		.byte	0x70
 13550 30d1 00       		.sleb128 0
 13551 30d2 2B       		.uleb128 0x2b
 13552 30d3 01       		.byte	0x1
 13553 30d4 51       		.byte	0x51
 13554 30d5 03       		.byte	0x3
 13555 30d6 F3       		.byte	0xf3
 13556 30d7 01       		.uleb128 0x1
 13557 30d8 51       		.byte	0x51
 13558 30d9 2B       		.uleb128 0x2b
 13559 30da 01       		.byte	0x1
 13560 30db 52       		.byte	0x52
 13561 30dc 01       		.byte	0x1
 13562 30dd 30       		.byte	0x30
 13563 30de 00       		.byte	0
 13564 30df 00       		.byte	0
 13565 30e0 33       		.uleb128 0x33
 13566 30e1 01       		.byte	0x1
 13567 30e2 BE0F0000 		.4byte	.LASF274
 13568 30e6 01       		.byte	0x1
 13569 30e7 0E05     		.2byte	0x50e
 13570 30e9 01       		.byte	0x1
 13571 30ea 6B030000 		.4byte	0x36b
 13572 30ee 08170000 		.4byte	.LFB89
 13573 30f2 40170000 		.4byte	.LFE89
 13574 30f6 BA310000 		.4byte	.LLST356
 13575 30fa 01       		.byte	0x1
 13576 30fb 4C310000 		.4byte	0x314c
 13577 30ff 1F       		.uleb128 0x1f
 13578 3100 0F090000 		.4byte	.LASF169
 13579 3104 01       		.byte	0x1
 13580 3105 0E05     		.2byte	0x50e
 13581 3107 C30D0000 		.4byte	0xdc3
 13582 310b DA310000 		.4byte	.LLST357
 13583 310f 1F       		.uleb128 0x1f
 13584 3110 AD030000 		.4byte	.LASF138
 13585 3114 01       		.byte	0x1
 13586 3115 0E05     		.2byte	0x50e
 13587 3117 C2000000 		.4byte	0xc2
 13588 311b 06320000 		.4byte	.LLST358
 13589 311f 20       		.uleb128 0x20
 13590 3120 F9120000 		.4byte	.LASF154
 13591 3124 01       		.byte	0x1
 13592 3125 1005     		.2byte	0x510
 13593 3127 C2000000 		.4byte	0xc2
 13594 312b 27320000 		.4byte	.LLST359
ARM GAS  /tmp/ccTsJCXT.s 			page 381


 13595 312f 2A       		.uleb128 0x2a
 13596 3130 14170000 		.4byte	.LVL612
 13597 3134 C0090000 		.4byte	0x9c0
 13598 3138 2B       		.uleb128 0x2b
 13599 3139 01       		.byte	0x1
 13600 313a 50       		.byte	0x50
 13601 313b 02       		.byte	0x2
 13602 313c 70       		.byte	0x70
 13603 313d 00       		.sleb128 0
 13604 313e 2B       		.uleb128 0x2b
 13605 313f 01       		.byte	0x1
 13606 3140 51       		.byte	0x51
 13607 3141 03       		.byte	0x3
 13608 3142 F3       		.byte	0xf3
 13609 3143 01       		.uleb128 0x1
 13610 3144 51       		.byte	0x51
 13611 3145 2B       		.uleb128 0x2b
 13612 3146 01       		.byte	0x1
 13613 3147 52       		.byte	0x52
 13614 3148 01       		.byte	0x1
 13615 3149 31       		.byte	0x31
 13616 314a 00       		.byte	0
 13617 314b 00       		.byte	0
 13618 314c 31       		.uleb128 0x31
 13619 314d 01       		.byte	0x1
 13620 314e 6D110000 		.4byte	.LASF275
 13621 3152 01       		.byte	0x1
 13622 3153 F904     		.2byte	0x4f9
 13623 3155 01       		.byte	0x1
 13624 3156 67310000 		.4byte	0x3167
 13625 315a 1B       		.uleb128 0x1b
 13626 315b 0F090000 		.4byte	.LASF169
 13627 315f 01       		.byte	0x1
 13628 3160 F904     		.2byte	0x4f9
 13629 3162 C30D0000 		.4byte	0xdc3
 13630 3166 00       		.byte	0
 13631 3167 31       		.uleb128 0x31
 13632 3168 01       		.byte	0x1
 13633 3169 270B0000 		.4byte	.LASF276
 13634 316d 01       		.byte	0x1
 13635 316e EA04     		.2byte	0x4ea
 13636 3170 01       		.byte	0x1
 13637 3171 82310000 		.4byte	0x3182
 13638 3175 1B       		.uleb128 0x1b
 13639 3176 0F090000 		.4byte	.LASF169
 13640 317a 01       		.byte	0x1
 13641 317b EA04     		.2byte	0x4ea
 13642 317d C30D0000 		.4byte	0xdc3
 13643 3181 00       		.byte	0
 13644 3182 33       		.uleb128 0x33
 13645 3183 01       		.byte	0x1
 13646 3184 54030000 		.4byte	.LASF277
 13647 3188 01       		.byte	0x1
 13648 3189 C604     		.2byte	0x4c6
 13649 318b 01       		.byte	0x1
 13650 318c 6B030000 		.4byte	0x36b
 13651 3190 AA020000 		.4byte	.LFB86
ARM GAS  /tmp/ccTsJCXT.s 			page 382


 13652 3194 E4020000 		.4byte	.LFE86
 13653 3198 49320000 		.4byte	.LLST26
 13654 319c 01       		.byte	0x1
 13655 319d C2310000 		.4byte	0x31c2
 13656 31a1 1F       		.uleb128 0x1f
 13657 31a2 0F090000 		.4byte	.LASF169
 13658 31a6 01       		.byte	0x1
 13659 31a7 C604     		.2byte	0x4c6
 13660 31a9 C30D0000 		.4byte	0xdc3
 13661 31ad 69320000 		.4byte	.LLST27
 13662 31b1 2A       		.uleb128 0x2a
 13663 31b2 D8020000 		.4byte	.LVL80
 13664 31b6 4C310000 		.4byte	0x314c
 13665 31ba 2B       		.uleb128 0x2b
 13666 31bb 01       		.byte	0x1
 13667 31bc 50       		.byte	0x50
 13668 31bd 02       		.byte	0x2
 13669 31be 74       		.byte	0x74
 13670 31bf 00       		.sleb128 0
 13671 31c0 00       		.byte	0
 13672 31c1 00       		.byte	0
 13673 31c2 33       		.uleb128 0x33
 13674 31c3 01       		.byte	0x1
 13675 31c4 BF100000 		.4byte	.LASF278
 13676 31c8 01       		.byte	0x1
 13677 31c9 9204     		.2byte	0x492
 13678 31cb 01       		.byte	0x1
 13679 31cc 6B030000 		.4byte	0x36b
 13680 31d0 440E0000 		.4byte	.LFB85
 13681 31d4 780E0000 		.4byte	.LFE85
 13682 31d8 87320000 		.4byte	.LLST229
 13683 31dc 01       		.byte	0x1
 13684 31dd 1C320000 		.4byte	0x321c
 13685 31e1 1F       		.uleb128 0x1f
 13686 31e2 0F090000 		.4byte	.LASF169
 13687 31e6 01       		.byte	0x1
 13688 31e7 9204     		.2byte	0x492
 13689 31e9 C30D0000 		.4byte	0xdc3
 13690 31ed A7320000 		.4byte	.LLST230
 13691 31f1 37       		.uleb128 0x37
 13692 31f2 5C0E0000 		.4byte	.LVL321
 13693 31f6 67310000 		.4byte	0x3167
 13694 31fa 05320000 		.4byte	0x3205
 13695 31fe 2B       		.uleb128 0x2b
 13696 31ff 01       		.byte	0x1
 13697 3200 50       		.byte	0x50
 13698 3201 02       		.byte	0x2
 13699 3202 74       		.byte	0x74
 13700 3203 00       		.sleb128 0
 13701 3204 00       		.byte	0
 13702 3205 2A       		.uleb128 0x2a
 13703 3206 6A0E0000 		.4byte	.LVL322
 13704 320a 6A0F0000 		.4byte	0xf6a
 13705 320e 2B       		.uleb128 0x2b
 13706 320f 01       		.byte	0x1
 13707 3210 50       		.byte	0x50
 13708 3211 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 383


 13709 3212 70       		.byte	0x70
 13710 3213 00       		.sleb128 0
 13711 3214 2B       		.uleb128 0x2b
 13712 3215 01       		.byte	0x1
 13713 3216 51       		.byte	0x51
 13714 3217 02       		.byte	0x2
 13715 3218 71       		.byte	0x71
 13716 3219 00       		.sleb128 0
 13717 321a 00       		.byte	0
 13718 321b 00       		.byte	0
 13719 321c 30       		.uleb128 0x30
 13720 321d 01       		.byte	0x1
 13721 321e 83010000 		.4byte	.LASF279
 13722 3222 01       		.byte	0x1
 13723 3223 3104     		.2byte	0x431
 13724 3225 01       		.byte	0x1
 13725 3226 6B030000 		.4byte	0x36b
 13726 322a 47320000 		.4byte	0x3247
 13727 322e 1B       		.uleb128 0x1b
 13728 322f 0F090000 		.4byte	.LASF169
 13729 3233 01       		.byte	0x1
 13730 3234 3104     		.2byte	0x431
 13731 3236 C30D0000 		.4byte	0xdc3
 13732 323a 1B       		.uleb128 0x1b
 13733 323b AD030000 		.4byte	.LASF138
 13734 323f 01       		.byte	0x1
 13735 3240 3104     		.2byte	0x431
 13736 3242 C2000000 		.4byte	0xc2
 13737 3246 00       		.byte	0
 13738 3247 30       		.uleb128 0x30
 13739 3248 01       		.byte	0x1
 13740 3249 E7070000 		.4byte	.LASF280
 13741 324d 01       		.byte	0x1
 13742 324e A303     		.2byte	0x3a3
 13743 3250 01       		.byte	0x1
 13744 3251 6B030000 		.4byte	0x36b
 13745 3255 96320000 		.4byte	0x3296
 13746 3259 1B       		.uleb128 0x1b
 13747 325a 0F090000 		.4byte	.LASF169
 13748 325e 01       		.byte	0x1
 13749 325f A303     		.2byte	0x3a3
 13750 3261 C30D0000 		.4byte	0xdc3
 13751 3265 1B       		.uleb128 0x1b
 13752 3266 AD030000 		.4byte	.LASF138
 13753 326a 01       		.byte	0x1
 13754 326b A303     		.2byte	0x3a3
 13755 326d C2000000 		.4byte	0xc2
 13756 3271 1B       		.uleb128 0x1b
 13757 3272 59130000 		.4byte	.LASF260
 13758 3276 01       		.byte	0x1
 13759 3277 A303     		.2byte	0x3a3
 13760 3279 04190000 		.4byte	0x1904
 13761 327d 1B       		.uleb128 0x1b
 13762 327e 6F0F0000 		.4byte	.LASF240
 13763 3282 01       		.byte	0x1
 13764 3283 A303     		.2byte	0x3a3
 13765 3285 A7000000 		.4byte	0xa7
ARM GAS  /tmp/ccTsJCXT.s 			page 384


 13766 3289 22       		.uleb128 0x22
 13767 328a F9120000 		.4byte	.LASF154
 13768 328e 01       		.byte	0x1
 13769 328f A503     		.2byte	0x3a5
 13770 3291 C2000000 		.4byte	0xc2
 13771 3295 00       		.byte	0
 13772 3296 30       		.uleb128 0x30
 13773 3297 01       		.byte	0x1
 13774 3298 A70A0000 		.4byte	.LASF281
 13775 329c 01       		.byte	0x1
 13776 329d 5F03     		.2byte	0x35f
 13777 329f 01       		.byte	0x1
 13778 32a0 6B030000 		.4byte	0x36b
 13779 32a4 C1320000 		.4byte	0x32c1
 13780 32a8 1B       		.uleb128 0x1b
 13781 32a9 0F090000 		.4byte	.LASF169
 13782 32ad 01       		.byte	0x1
 13783 32ae 5F03     		.2byte	0x35f
 13784 32b0 C30D0000 		.4byte	0xdc3
 13785 32b4 1B       		.uleb128 0x1b
 13786 32b5 AD030000 		.4byte	.LASF138
 13787 32b9 01       		.byte	0x1
 13788 32ba 5F03     		.2byte	0x35f
 13789 32bc C2000000 		.4byte	0xc2
 13790 32c0 00       		.byte	0
 13791 32c1 30       		.uleb128 0x30
 13792 32c2 01       		.byte	0x1
 13793 32c3 D1080000 		.4byte	.LASF282
 13794 32c7 01       		.byte	0x1
 13795 32c8 1703     		.2byte	0x317
 13796 32ca 01       		.byte	0x1
 13797 32cb 6B030000 		.4byte	0x36b
 13798 32cf F8320000 		.4byte	0x32f8
 13799 32d3 1B       		.uleb128 0x1b
 13800 32d4 0F090000 		.4byte	.LASF169
 13801 32d8 01       		.byte	0x1
 13802 32d9 1703     		.2byte	0x317
 13803 32db C30D0000 		.4byte	0xdc3
 13804 32df 1B       		.uleb128 0x1b
 13805 32e0 AD030000 		.4byte	.LASF138
 13806 32e4 01       		.byte	0x1
 13807 32e5 1703     		.2byte	0x317
 13808 32e7 C2000000 		.4byte	0xc2
 13809 32eb 22       		.uleb128 0x22
 13810 32ec F9120000 		.4byte	.LASF154
 13811 32f0 01       		.byte	0x1
 13812 32f1 1903     		.2byte	0x319
 13813 32f3 C2000000 		.4byte	0xc2
 13814 32f7 00       		.byte	0
 13815 32f8 33       		.uleb128 0x33
 13816 32f9 01       		.byte	0x1
 13817 32fa 28040000 		.4byte	.LASF283
 13818 32fe 01       		.byte	0x1
 13819 32ff F702     		.2byte	0x2f7
 13820 3301 01       		.byte	0x1
 13821 3302 6B030000 		.4byte	0x36b
 13822 3306 B4160000 		.4byte	.LFB80
ARM GAS  /tmp/ccTsJCXT.s 			page 385


 13823 330a 08170000 		.4byte	.LFE80
 13824 330e DB320000 		.4byte	.LLST353
 13825 3312 01       		.byte	0x1
 13826 3313 54330000 		.4byte	0x3354
 13827 3317 1F       		.uleb128 0x1f
 13828 3318 0F090000 		.4byte	.LASF169
 13829 331c 01       		.byte	0x1
 13830 331d F702     		.2byte	0x2f7
 13831 331f C30D0000 		.4byte	0xdc3
 13832 3323 FB320000 		.4byte	.LLST354
 13833 3327 1F       		.uleb128 0x1f
 13834 3328 AD030000 		.4byte	.LASF138
 13835 332c 01       		.byte	0x1
 13836 332d F702     		.2byte	0x2f7
 13837 332f C2000000 		.4byte	0xc2
 13838 3333 27330000 		.4byte	.LLST355
 13839 3337 2A       		.uleb128 0x2a
 13840 3338 C0160000 		.4byte	.LVL608
 13841 333c C0090000 		.4byte	0x9c0
 13842 3340 2B       		.uleb128 0x2b
 13843 3341 01       		.byte	0x1
 13844 3342 50       		.byte	0x50
 13845 3343 02       		.byte	0x2
 13846 3344 70       		.byte	0x70
 13847 3345 00       		.sleb128 0
 13848 3346 2B       		.uleb128 0x2b
 13849 3347 01       		.byte	0x1
 13850 3348 51       		.byte	0x51
 13851 3349 03       		.byte	0x3
 13852 334a F3       		.byte	0xf3
 13853 334b 01       		.uleb128 0x1
 13854 334c 51       		.byte	0x51
 13855 334d 2B       		.uleb128 0x2b
 13856 334e 01       		.byte	0x1
 13857 334f 52       		.byte	0x52
 13858 3350 01       		.byte	0x1
 13859 3351 30       		.byte	0x30
 13860 3352 00       		.byte	0
 13861 3353 00       		.byte	0
 13862 3354 30       		.uleb128 0x30
 13863 3355 01       		.byte	0x1
 13864 3356 D0100000 		.4byte	.LASF284
 13865 335a 01       		.byte	0x1
 13866 335b D102     		.2byte	0x2d1
 13867 335d 01       		.byte	0x1
 13868 335e 6B030000 		.4byte	0x36b
 13869 3362 8B330000 		.4byte	0x338b
 13870 3366 1B       		.uleb128 0x1b
 13871 3367 0F090000 		.4byte	.LASF169
 13872 336b 01       		.byte	0x1
 13873 336c D102     		.2byte	0x2d1
 13874 336e C30D0000 		.4byte	0xdc3
 13875 3372 1B       		.uleb128 0x1b
 13876 3373 AD030000 		.4byte	.LASF138
 13877 3377 01       		.byte	0x1
 13878 3378 D102     		.2byte	0x2d1
 13879 337a C2000000 		.4byte	0xc2
ARM GAS  /tmp/ccTsJCXT.s 			page 386


 13880 337e 22       		.uleb128 0x22
 13881 337f F9120000 		.4byte	.LASF154
 13882 3383 01       		.byte	0x1
 13883 3384 D302     		.2byte	0x2d3
 13884 3386 C2000000 		.4byte	0xc2
 13885 338a 00       		.byte	0
 13886 338b 31       		.uleb128 0x31
 13887 338c 01       		.byte	0x1
 13888 338d 5F130000 		.4byte	.LASF285
 13889 3391 01       		.byte	0x1
 13890 3392 BC02     		.2byte	0x2bc
 13891 3394 01       		.byte	0x1
 13892 3395 A6330000 		.4byte	0x33a6
 13893 3399 1B       		.uleb128 0x1b
 13894 339a 0F090000 		.4byte	.LASF169
 13895 339e 01       		.byte	0x1
 13896 339f BC02     		.2byte	0x2bc
 13897 33a1 C30D0000 		.4byte	0xdc3
 13898 33a5 00       		.byte	0
 13899 33a6 31       		.uleb128 0x31
 13900 33a7 01       		.byte	0x1
 13901 33a8 EB110000 		.4byte	.LASF286
 13902 33ac 01       		.byte	0x1
 13903 33ad AD02     		.2byte	0x2ad
 13904 33af 01       		.byte	0x1
 13905 33b0 C1330000 		.4byte	0x33c1
 13906 33b4 1B       		.uleb128 0x1b
 13907 33b5 0F090000 		.4byte	.LASF169
 13908 33b9 01       		.byte	0x1
 13909 33ba AD02     		.2byte	0x2ad
 13910 33bc C30D0000 		.4byte	0xdc3
 13911 33c0 00       		.byte	0
 13912 33c1 33       		.uleb128 0x33
 13913 33c2 01       		.byte	0x1
 13914 33c3 520D0000 		.4byte	.LASF287
 13915 33c7 01       		.byte	0x1
 13916 33c8 8902     		.2byte	0x289
 13917 33ca 01       		.byte	0x1
 13918 33cb 6B030000 		.4byte	0x36b
 13919 33cf 6C020000 		.4byte	.LFB76
 13920 33d3 A6020000 		.4byte	.LFE76
 13921 33d7 48330000 		.4byte	.LLST24
 13922 33db 01       		.byte	0x1
 13923 33dc 01340000 		.4byte	0x3401
 13924 33e0 1F       		.uleb128 0x1f
 13925 33e1 0F090000 		.4byte	.LASF169
 13926 33e5 01       		.byte	0x1
 13927 33e6 8902     		.2byte	0x289
 13928 33e8 C30D0000 		.4byte	0xdc3
 13929 33ec 68330000 		.4byte	.LLST25
 13930 33f0 2A       		.uleb128 0x2a
 13931 33f1 9A020000 		.4byte	.LVL77
 13932 33f5 8B330000 		.4byte	0x338b
 13933 33f9 2B       		.uleb128 0x2b
 13934 33fa 01       		.byte	0x1
 13935 33fb 50       		.byte	0x50
 13936 33fc 02       		.byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 387


 13937 33fd 74       		.byte	0x74
 13938 33fe 00       		.sleb128 0
 13939 33ff 00       		.byte	0
 13940 3400 00       		.byte	0
 13941 3401 33       		.uleb128 0x33
 13942 3402 01       		.byte	0x1
 13943 3403 5F0F0000 		.4byte	.LASF288
 13944 3407 01       		.byte	0x1
 13945 3408 5502     		.2byte	0x255
 13946 340a 01       		.byte	0x1
 13947 340b 6B030000 		.4byte	0x36b
 13948 340f 100E0000 		.4byte	.LFB75
 13949 3413 440E0000 		.4byte	.LFE75
 13950 3417 86330000 		.4byte	.LLST227
 13951 341b 01       		.byte	0x1
 13952 341c 5B340000 		.4byte	0x345b
 13953 3420 1F       		.uleb128 0x1f
 13954 3421 0F090000 		.4byte	.LASF169
 13955 3425 01       		.byte	0x1
 13956 3426 5502     		.2byte	0x255
 13957 3428 C30D0000 		.4byte	0xdc3
 13958 342c A6330000 		.4byte	.LLST228
 13959 3430 37       		.uleb128 0x37
 13960 3431 280E0000 		.4byte	.LVL316
 13961 3435 A6330000 		.4byte	0x33a6
 13962 3439 44340000 		.4byte	0x3444
 13963 343d 2B       		.uleb128 0x2b
 13964 343e 01       		.byte	0x1
 13965 343f 50       		.byte	0x50
 13966 3440 02       		.byte	0x2
 13967 3441 74       		.byte	0x74
 13968 3442 00       		.sleb128 0
 13969 3443 00       		.byte	0
 13970 3444 2A       		.uleb128 0x2a
 13971 3445 360E0000 		.4byte	.LVL317
 13972 3449 6A0F0000 		.4byte	0xf6a
 13973 344d 2B       		.uleb128 0x2b
 13974 344e 01       		.byte	0x1
 13975 344f 50       		.byte	0x50
 13976 3450 02       		.byte	0x2
 13977 3451 70       		.byte	0x70
 13978 3452 00       		.sleb128 0
 13979 3453 2B       		.uleb128 0x2b
 13980 3454 01       		.byte	0x1
 13981 3455 51       		.byte	0x51
 13982 3456 02       		.byte	0x2
 13983 3457 71       		.byte	0x71
 13984 3458 00       		.sleb128 0
 13985 3459 00       		.byte	0
 13986 345a 00       		.byte	0
 13987 345b 33       		.uleb128 0x33
 13988 345c 01       		.byte	0x1
 13989 345d CE050000 		.4byte	.LASF289
 13990 3461 01       		.byte	0x1
 13991 3462 1E02     		.2byte	0x21e
 13992 3464 01       		.byte	0x1
 13993 3465 6B030000 		.4byte	0x36b
ARM GAS  /tmp/ccTsJCXT.s 			page 388


 13994 3469 2C020000 		.4byte	.LFB74
 13995 346d 68020000 		.4byte	.LFE74
 13996 3471 DA330000 		.4byte	.LLST22
 13997 3475 01       		.byte	0x1
 13998 3476 94340000 		.4byte	0x3494
 13999 347a 1F       		.uleb128 0x1f
 14000 347b 0F090000 		.4byte	.LASF169
 14001 347f 01       		.byte	0x1
 14002 3480 1E02     		.2byte	0x21e
 14003 3482 C30D0000 		.4byte	0xdc3
 14004 3486 FA330000 		.4byte	.LLST23
 14005 348a 2E       		.uleb128 0x2e
 14006 348b 40020000 		.4byte	.LVL74
 14007 348f 1E370000 		.4byte	0x371e
 14008 3493 00       		.byte	0
 14009 3494 33       		.uleb128 0x33
 14010 3495 01       		.byte	0x1
 14011 3496 FB010000 		.4byte	.LASF290
 14012 349a 01       		.byte	0x1
 14013 349b E301     		.2byte	0x1e3
 14014 349d 01       		.byte	0x1
 14015 349e 6B030000 		.4byte	0x36b
 14016 34a2 C2010000 		.4byte	.LFB73
 14017 34a6 2C020000 		.4byte	.LFE73
 14018 34aa 18340000 		.4byte	.LLST17
 14019 34ae 01       		.byte	0x1
 14020 34af FD340000 		.4byte	0x34fd
 14021 34b3 1F       		.uleb128 0x1f
 14022 34b4 0F090000 		.4byte	.LASF169
 14023 34b8 01       		.byte	0x1
 14024 34b9 E301     		.2byte	0x1e3
 14025 34bb C30D0000 		.4byte	0xdc3
 14026 34bf 38340000 		.4byte	.LLST18
 14027 34c3 1F       		.uleb128 0x1f
 14028 34c4 59130000 		.4byte	.LASF260
 14029 34c8 01       		.byte	0x1
 14030 34c9 E301     		.2byte	0x1e3
 14031 34cb 04190000 		.4byte	0x1904
 14032 34cf 64340000 		.4byte	.LLST19
 14033 34d3 1F       		.uleb128 0x1f
 14034 34d4 6F0F0000 		.4byte	.LASF240
 14035 34d8 01       		.byte	0x1
 14036 34d9 E301     		.2byte	0x1e3
 14037 34db A7000000 		.4byte	0xa7
 14038 34df 9E340000 		.4byte	.LLST20
 14039 34e3 20       		.uleb128 0x20
 14040 34e4 F9120000 		.4byte	.LASF154
 14041 34e8 01       		.byte	0x1
 14042 34e9 E501     		.2byte	0x1e5
 14043 34eb C2000000 		.4byte	0xc2
 14044 34ef BF340000 		.4byte	.LLST21
 14045 34f3 2E       		.uleb128 0x2e
 14046 34f4 FE010000 		.4byte	.LVL67
 14047 34f8 2C370000 		.4byte	0x372c
 14048 34fc 00       		.byte	0
 14049 34fd 32       		.uleb128 0x32
 14050 34fe 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 389


 14051 34ff 2E000000 		.4byte	.LASF291
 14052 3503 01       		.byte	0x1
 14053 3504 CE01     		.2byte	0x1ce
 14054 3506 01       		.byte	0x1
 14055 3507 6B030000 		.4byte	0x36b
 14056 350b 98010000 		.4byte	.LFB72
 14057 350f C2010000 		.4byte	.LFE72
 14058 3513 02       		.byte	0x2
 14059 3514 7D       		.byte	0x7d
 14060 3515 00       		.sleb128 0
 14061 3516 01       		.byte	0x1
 14062 3517 2C350000 		.4byte	0x352c
 14063 351b 1F       		.uleb128 0x1f
 14064 351c 0F090000 		.4byte	.LASF169
 14065 3520 01       		.byte	0x1
 14066 3521 CE01     		.2byte	0x1ce
 14067 3523 C30D0000 		.4byte	0xdc3
 14068 3527 E1340000 		.4byte	.LLST16
 14069 352b 00       		.byte	0
 14070 352c 32       		.uleb128 0x32
 14071 352d 01       		.byte	0x1
 14072 352e 00000000 		.4byte	.LASF292
 14073 3532 01       		.byte	0x1
 14074 3533 B401     		.2byte	0x1b4
 14075 3535 01       		.byte	0x1
 14076 3536 6B030000 		.4byte	0x36b
 14077 353a 78010000 		.4byte	.LFB71
 14078 353e 98010000 		.4byte	.LFE71
 14079 3542 02       		.byte	0x2
 14080 3543 7D       		.byte	0x7d
 14081 3544 00       		.sleb128 0
 14082 3545 01       		.byte	0x1
 14083 3546 6B350000 		.4byte	0x356b
 14084 354a 1F       		.uleb128 0x1f
 14085 354b 0F090000 		.4byte	.LASF169
 14086 354f 01       		.byte	0x1
 14087 3550 B401     		.2byte	0x1b4
 14088 3552 C30D0000 		.4byte	0xdc3
 14089 3556 02350000 		.4byte	.LLST14
 14090 355a 20       		.uleb128 0x20
 14091 355b F9120000 		.4byte	.LASF154
 14092 355f 01       		.byte	0x1
 14093 3560 B601     		.2byte	0x1b6
 14094 3562 C2000000 		.4byte	0xc2
 14095 3566 23350000 		.4byte	.LLST15
 14096 356a 00       		.byte	0
 14097 356b 32       		.uleb128 0x32
 14098 356c 01       		.byte	0x1
 14099 356d BF080000 		.4byte	.LASF293
 14100 3571 01       		.byte	0x1
 14101 3572 9D01     		.2byte	0x19d
 14102 3574 01       		.byte	0x1
 14103 3575 6B030000 		.4byte	0x36b
 14104 3579 4A010000 		.4byte	.LFB70
 14105 357d 78010000 		.4byte	.LFE70
 14106 3581 02       		.byte	0x2
 14107 3582 7D       		.byte	0x7d
ARM GAS  /tmp/ccTsJCXT.s 			page 390


 14108 3583 00       		.sleb128 0
 14109 3584 01       		.byte	0x1
 14110 3585 9A350000 		.4byte	0x359a
 14111 3589 1F       		.uleb128 0x1f
 14112 358a 0F090000 		.4byte	.LASF169
 14113 358e 01       		.byte	0x1
 14114 358f 9D01     		.2byte	0x19d
 14115 3591 C30D0000 		.4byte	0xdc3
 14116 3595 45350000 		.4byte	.LLST13
 14117 3599 00       		.byte	0
 14118 359a 32       		.uleb128 0x32
 14119 359b 01       		.byte	0x1
 14120 359c 45010000 		.4byte	.LASF294
 14121 35a0 01       		.byte	0x1
 14122 35a1 8001     		.2byte	0x180
 14123 35a3 01       		.byte	0x1
 14124 35a4 6B030000 		.4byte	0x36b
 14125 35a8 26010000 		.4byte	.LFB69
 14126 35ac 4A010000 		.4byte	.LFE69
 14127 35b0 02       		.byte	0x2
 14128 35b1 7D       		.byte	0x7d
 14129 35b2 00       		.sleb128 0
 14130 35b3 01       		.byte	0x1
 14131 35b4 D9350000 		.4byte	0x35d9
 14132 35b8 1F       		.uleb128 0x1f
 14133 35b9 0F090000 		.4byte	.LASF169
 14134 35bd 01       		.byte	0x1
 14135 35be 8001     		.2byte	0x180
 14136 35c0 C30D0000 		.4byte	0xdc3
 14137 35c4 66350000 		.4byte	.LLST11
 14138 35c8 20       		.uleb128 0x20
 14139 35c9 F9120000 		.4byte	.LASF154
 14140 35cd 01       		.byte	0x1
 14141 35ce 8201     		.2byte	0x182
 14142 35d0 C2000000 		.4byte	0xc2
 14143 35d4 87350000 		.4byte	.LLST12
 14144 35d8 00       		.byte	0
 14145 35d9 31       		.uleb128 0x31
 14146 35da 01       		.byte	0x1
 14147 35db 290D0000 		.4byte	.LASF295
 14148 35df 01       		.byte	0x1
 14149 35e0 7001     		.2byte	0x170
 14150 35e2 01       		.byte	0x1
 14151 35e3 F4350000 		.4byte	0x35f4
 14152 35e7 1B       		.uleb128 0x1b
 14153 35e8 0F090000 		.4byte	.LASF169
 14154 35ec 01       		.byte	0x1
 14155 35ed 7001     		.2byte	0x170
 14156 35ef C30D0000 		.4byte	0xdc3
 14157 35f3 00       		.byte	0
 14158 35f4 31       		.uleb128 0x31
 14159 35f5 01       		.byte	0x1
 14160 35f6 78020000 		.4byte	.LASF296
 14161 35fa 01       		.byte	0x1
 14162 35fb 6101     		.2byte	0x161
 14163 35fd 01       		.byte	0x1
 14164 35fe 0F360000 		.4byte	0x360f
ARM GAS  /tmp/ccTsJCXT.s 			page 391


 14165 3602 1B       		.uleb128 0x1b
 14166 3603 0F090000 		.4byte	.LASF169
 14167 3607 01       		.byte	0x1
 14168 3608 6101     		.2byte	0x161
 14169 360a C30D0000 		.4byte	0xdc3
 14170 360e 00       		.byte	0
 14171 360f 33       		.uleb128 0x33
 14172 3610 01       		.byte	0x1
 14173 3611 F4100000 		.4byte	.LASF297
 14174 3615 01       		.byte	0x1
 14175 3616 3D01     		.2byte	0x13d
 14176 3618 01       		.byte	0x1
 14177 3619 6B030000 		.4byte	0x36b
 14178 361d EC000000 		.4byte	.LFB66
 14179 3621 26010000 		.4byte	.LFE66
 14180 3625 A9350000 		.4byte	.LLST9
 14181 3629 01       		.byte	0x1
 14182 362a 4F360000 		.4byte	0x364f
 14183 362e 1F       		.uleb128 0x1f
 14184 362f 0F090000 		.4byte	.LASF169
 14185 3633 01       		.byte	0x1
 14186 3634 3D01     		.2byte	0x13d
 14187 3636 C30D0000 		.4byte	0xdc3
 14188 363a C9350000 		.4byte	.LLST10
 14189 363e 2A       		.uleb128 0x2a
 14190 363f 1A010000 		.4byte	.LVL47
 14191 3643 D9350000 		.4byte	0x35d9
 14192 3647 2B       		.uleb128 0x2b
 14193 3648 01       		.byte	0x1
 14194 3649 50       		.byte	0x50
 14195 364a 02       		.byte	0x2
 14196 364b 74       		.byte	0x74
 14197 364c 00       		.sleb128 0
 14198 364d 00       		.byte	0
 14199 364e 00       		.byte	0
 14200 364f 33       		.uleb128 0x33
 14201 3650 01       		.byte	0x1
 14202 3651 85140000 		.4byte	.LASF298
 14203 3655 01       		.byte	0x1
 14204 3656 0901     		.2byte	0x109
 14205 3658 01       		.byte	0x1
 14206 3659 6B030000 		.4byte	0x36b
 14207 365d DC0D0000 		.4byte	.LFB65
 14208 3661 100E0000 		.4byte	.LFE65
 14209 3665 E7350000 		.4byte	.LLST225
 14210 3669 01       		.byte	0x1
 14211 366a A9360000 		.4byte	0x36a9
 14212 366e 1F       		.uleb128 0x1f
 14213 366f 0F090000 		.4byte	.LASF169
 14214 3673 01       		.byte	0x1
 14215 3674 0901     		.2byte	0x109
 14216 3676 C30D0000 		.4byte	0xdc3
 14217 367a 07360000 		.4byte	.LLST226
 14218 367e 37       		.uleb128 0x37
 14219 367f F40D0000 		.4byte	.LVL311
 14220 3683 F4350000 		.4byte	0x35f4
 14221 3687 92360000 		.4byte	0x3692
ARM GAS  /tmp/ccTsJCXT.s 			page 392


 14222 368b 2B       		.uleb128 0x2b
 14223 368c 01       		.byte	0x1
 14224 368d 50       		.byte	0x50
 14225 368e 02       		.byte	0x2
 14226 368f 74       		.byte	0x74
 14227 3690 00       		.sleb128 0
 14228 3691 00       		.byte	0
 14229 3692 2A       		.uleb128 0x2a
 14230 3693 020E0000 		.4byte	.LVL312
 14231 3697 6A0F0000 		.4byte	0xf6a
 14232 369b 2B       		.uleb128 0x2b
 14233 369c 01       		.byte	0x1
 14234 369d 50       		.byte	0x50
 14235 369e 02       		.byte	0x2
 14236 369f 70       		.byte	0x70
 14237 36a0 00       		.sleb128 0
 14238 36a1 2B       		.uleb128 0x2b
 14239 36a2 01       		.byte	0x1
 14240 36a3 51       		.byte	0x51
 14241 36a4 02       		.byte	0x2
 14242 36a5 71       		.byte	0x71
 14243 36a6 00       		.sleb128 0
 14244 36a7 00       		.byte	0
 14245 36a8 00       		.byte	0
 14246 36a9 3A       		.uleb128 0x3a
 14247 36aa F0120000 		.4byte	0x12f0
 14248 36ae 440D0000 		.4byte	.LFB148
 14249 36b2 460D0000 		.4byte	.LFE148
 14250 36b6 02       		.byte	0x2
 14251 36b7 7D       		.byte	0x7d
 14252 36b8 00       		.sleb128 0
 14253 36b9 01       		.byte	0x1
 14254 36ba C6360000 		.4byte	0x36c6
 14255 36be 35       		.uleb128 0x35
 14256 36bf FF120000 		.4byte	0x12ff
 14257 36c3 01       		.byte	0x1
 14258 36c4 50       		.byte	0x50
 14259 36c5 00       		.byte	0
 14260 36c6 3A       		.uleb128 0x3a
 14261 36c7 35120000 		.4byte	0x1235
 14262 36cb 740D0000 		.4byte	.LFB154
 14263 36cf 7A0D0000 		.4byte	.LFE154
 14264 36d3 02       		.byte	0x2
 14265 36d4 7D       		.byte	0x7d
 14266 36d5 00       		.sleb128 0
 14267 36d6 01       		.byte	0x1
 14268 36d7 E5360000 		.4byte	0x36e5
 14269 36db 25       		.uleb128 0x25
 14270 36dc 48120000 		.4byte	0x1248
 14271 36e0 3B360000 		.4byte	.LLST222
 14272 36e4 00       		.byte	0
 14273 36e5 3B       		.uleb128 0x3b
 14274 36e6 C0090000 		.4byte	0x9c0
 14275 36ea 98160000 		.4byte	.LFB178
 14276 36ee B4160000 		.4byte	.LFE178
 14277 36f2 5C360000 		.4byte	.LLST349
 14278 36f6 01       		.byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 393


 14279 36f7 1E370000 		.4byte	0x371e
 14280 36fb 35       		.uleb128 0x35
 14281 36fc CF090000 		.4byte	0x9cf
 14282 3700 01       		.byte	0x1
 14283 3701 50       		.byte	0x50
 14284 3702 25       		.uleb128 0x25
 14285 3703 DB090000 		.4byte	0x9db
 14286 3707 7C360000 		.4byte	.LLST350
 14287 370b 25       		.uleb128 0x25
 14288 370c E7090000 		.4byte	0x9e7
 14289 3710 9D360000 		.4byte	.LLST351
 14290 3714 27       		.uleb128 0x27
 14291 3715 F3090000 		.4byte	0x9f3
 14292 3719 BE360000 		.4byte	.LLST352
 14293 371d 00       		.byte	0
 14294 371e 3C       		.uleb128 0x3c
 14295 371f 01       		.byte	0x1
 14296 3720 01       		.byte	0x1
 14297 3721 E5080000 		.4byte	.LASF299
 14298 3725 E5080000 		.4byte	.LASF299
 14299 3729 09       		.byte	0x9
 14300 372a 7C01     		.2byte	0x17c
 14301 372c 3C       		.uleb128 0x3c
 14302 372d 01       		.byte	0x1
 14303 372e 01       		.byte	0x1
 14304 372f E4020000 		.4byte	.LASF300
 14305 3733 E4020000 		.4byte	.LASF300
 14306 3737 09       		.byte	0x9
 14307 3738 7A01     		.2byte	0x17a
 14308 373a 3D       		.uleb128 0x3d
 14309 373b 01       		.byte	0x1
 14310 373c 01       		.byte	0x1
 14311 373d 230F0000 		.4byte	.LASF301
 14312 3741 230F0000 		.4byte	.LASF301
 14313 3745 0C       		.byte	0xc
 14314 3746 D7       		.byte	0xd7
 14315 3747 3D       		.uleb128 0x3d
 14316 3748 01       		.byte	0x1
 14317 3749 01       		.byte	0x1
 14318 374a FB050000 		.4byte	.LASF302
 14319 374e FB050000 		.4byte	.LASF302
 14320 3752 0C       		.byte	0xc
 14321 3753 D5       		.byte	0xd5
 14322 3754 00       		.byte	0
 14323              		.section	.debug_abbrev,"",%progbits
 14324              	.Ldebug_abbrev0:
 14325 0000 01       		.uleb128 0x1
 14326 0001 11       		.uleb128 0x11
 14327 0002 01       		.byte	0x1
 14328 0003 25       		.uleb128 0x25
 14329 0004 0E       		.uleb128 0xe
 14330 0005 13       		.uleb128 0x13
 14331 0006 0B       		.uleb128 0xb
 14332 0007 03       		.uleb128 0x3
 14333 0008 0E       		.uleb128 0xe
 14334 0009 1B       		.uleb128 0x1b
 14335 000a 0E       		.uleb128 0xe
ARM GAS  /tmp/ccTsJCXT.s 			page 394


 14336 000b 11       		.uleb128 0x11
 14337 000c 01       		.uleb128 0x1
 14338 000d 12       		.uleb128 0x12
 14339 000e 01       		.uleb128 0x1
 14340 000f 10       		.uleb128 0x10
 14341 0010 06       		.uleb128 0x6
 14342 0011 00       		.byte	0
 14343 0012 00       		.byte	0
 14344 0013 02       		.uleb128 0x2
 14345 0014 24       		.uleb128 0x24
 14346 0015 00       		.byte	0
 14347 0016 0B       		.uleb128 0xb
 14348 0017 0B       		.uleb128 0xb
 14349 0018 3E       		.uleb128 0x3e
 14350 0019 0B       		.uleb128 0xb
 14351 001a 03       		.uleb128 0x3
 14352 001b 0E       		.uleb128 0xe
 14353 001c 00       		.byte	0
 14354 001d 00       		.byte	0
 14355 001e 03       		.uleb128 0x3
 14356 001f 16       		.uleb128 0x16
 14357 0020 00       		.byte	0
 14358 0021 03       		.uleb128 0x3
 14359 0022 0E       		.uleb128 0xe
 14360 0023 3A       		.uleb128 0x3a
 14361 0024 0B       		.uleb128 0xb
 14362 0025 3B       		.uleb128 0x3b
 14363 0026 0B       		.uleb128 0xb
 14364 0027 49       		.uleb128 0x49
 14365 0028 13       		.uleb128 0x13
 14366 0029 00       		.byte	0
 14367 002a 00       		.byte	0
 14368 002b 04       		.uleb128 0x4
 14369 002c 24       		.uleb128 0x24
 14370 002d 00       		.byte	0
 14371 002e 0B       		.uleb128 0xb
 14372 002f 0B       		.uleb128 0xb
 14373 0030 3E       		.uleb128 0x3e
 14374 0031 0B       		.uleb128 0xb
 14375 0032 03       		.uleb128 0x3
 14376 0033 08       		.uleb128 0x8
 14377 0034 00       		.byte	0
 14378 0035 00       		.byte	0
 14379 0036 05       		.uleb128 0x5
 14380 0037 26       		.uleb128 0x26
 14381 0038 00       		.byte	0
 14382 0039 49       		.uleb128 0x49
 14383 003a 13       		.uleb128 0x13
 14384 003b 00       		.byte	0
 14385 003c 00       		.byte	0
 14386 003d 06       		.uleb128 0x6
 14387 003e 35       		.uleb128 0x35
 14388 003f 00       		.byte	0
 14389 0040 49       		.uleb128 0x49
 14390 0041 13       		.uleb128 0x13
 14391 0042 00       		.byte	0
 14392 0043 00       		.byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 395


 14393 0044 07       		.uleb128 0x7
 14394 0045 34       		.uleb128 0x34
 14395 0046 00       		.byte	0
 14396 0047 03       		.uleb128 0x3
 14397 0048 0E       		.uleb128 0xe
 14398 0049 3A       		.uleb128 0x3a
 14399 004a 0B       		.uleb128 0xb
 14400 004b 3B       		.uleb128 0x3b
 14401 004c 05       		.uleb128 0x5
 14402 004d 49       		.uleb128 0x49
 14403 004e 13       		.uleb128 0x13
 14404 004f 3F       		.uleb128 0x3f
 14405 0050 0C       		.uleb128 0xc
 14406 0051 3C       		.uleb128 0x3c
 14407 0052 0C       		.uleb128 0xc
 14408 0053 00       		.byte	0
 14409 0054 00       		.byte	0
 14410 0055 08       		.uleb128 0x8
 14411 0056 34       		.uleb128 0x34
 14412 0057 00       		.byte	0
 14413 0058 03       		.uleb128 0x3
 14414 0059 0E       		.uleb128 0xe
 14415 005a 3A       		.uleb128 0x3a
 14416 005b 0B       		.uleb128 0xb
 14417 005c 3B       		.uleb128 0x3b
 14418 005d 0B       		.uleb128 0xb
 14419 005e 49       		.uleb128 0x49
 14420 005f 13       		.uleb128 0x13
 14421 0060 3F       		.uleb128 0x3f
 14422 0061 0C       		.uleb128 0xc
 14423 0062 3C       		.uleb128 0x3c
 14424 0063 0C       		.uleb128 0xc
 14425 0064 00       		.byte	0
 14426 0065 00       		.byte	0
 14427 0066 09       		.uleb128 0x9
 14428 0067 01       		.uleb128 0x1
 14429 0068 01       		.byte	0x1
 14430 0069 49       		.uleb128 0x49
 14431 006a 13       		.uleb128 0x13
 14432 006b 01       		.uleb128 0x1
 14433 006c 13       		.uleb128 0x13
 14434 006d 00       		.byte	0
 14435 006e 00       		.byte	0
 14436 006f 0A       		.uleb128 0xa
 14437 0070 21       		.uleb128 0x21
 14438 0071 00       		.byte	0
 14439 0072 49       		.uleb128 0x49
 14440 0073 13       		.uleb128 0x13
 14441 0074 2F       		.uleb128 0x2f
 14442 0075 0B       		.uleb128 0xb
 14443 0076 00       		.byte	0
 14444 0077 00       		.byte	0
 14445 0078 0B       		.uleb128 0xb
 14446 0079 13       		.uleb128 0x13
 14447 007a 01       		.byte	0x1
 14448 007b 0B       		.uleb128 0xb
 14449 007c 0B       		.uleb128 0xb
ARM GAS  /tmp/ccTsJCXT.s 			page 396


 14450 007d 3A       		.uleb128 0x3a
 14451 007e 0B       		.uleb128 0xb
 14452 007f 3B       		.uleb128 0x3b
 14453 0080 05       		.uleb128 0x5
 14454 0081 01       		.uleb128 0x1
 14455 0082 13       		.uleb128 0x13
 14456 0083 00       		.byte	0
 14457 0084 00       		.byte	0
 14458 0085 0C       		.uleb128 0xc
 14459 0086 0D       		.uleb128 0xd
 14460 0087 00       		.byte	0
 14461 0088 03       		.uleb128 0x3
 14462 0089 08       		.uleb128 0x8
 14463 008a 3A       		.uleb128 0x3a
 14464 008b 0B       		.uleb128 0xb
 14465 008c 3B       		.uleb128 0x3b
 14466 008d 05       		.uleb128 0x5
 14467 008e 49       		.uleb128 0x49
 14468 008f 13       		.uleb128 0x13
 14469 0090 38       		.uleb128 0x38
 14470 0091 0A       		.uleb128 0xa
 14471 0092 00       		.byte	0
 14472 0093 00       		.byte	0
 14473 0094 0D       		.uleb128 0xd
 14474 0095 0D       		.uleb128 0xd
 14475 0096 00       		.byte	0
 14476 0097 03       		.uleb128 0x3
 14477 0098 0E       		.uleb128 0xe
 14478 0099 3A       		.uleb128 0x3a
 14479 009a 0B       		.uleb128 0xb
 14480 009b 3B       		.uleb128 0x3b
 14481 009c 05       		.uleb128 0x5
 14482 009d 49       		.uleb128 0x49
 14483 009e 13       		.uleb128 0x13
 14484 009f 38       		.uleb128 0x38
 14485 00a0 0A       		.uleb128 0xa
 14486 00a1 00       		.byte	0
 14487 00a2 00       		.byte	0
 14488 00a3 0E       		.uleb128 0xe
 14489 00a4 16       		.uleb128 0x16
 14490 00a5 00       		.byte	0
 14491 00a6 03       		.uleb128 0x3
 14492 00a7 0E       		.uleb128 0xe
 14493 00a8 3A       		.uleb128 0x3a
 14494 00a9 0B       		.uleb128 0xb
 14495 00aa 3B       		.uleb128 0x3b
 14496 00ab 05       		.uleb128 0x5
 14497 00ac 49       		.uleb128 0x49
 14498 00ad 13       		.uleb128 0x13
 14499 00ae 00       		.byte	0
 14500 00af 00       		.byte	0
 14501 00b0 0F       		.uleb128 0xf
 14502 00b1 04       		.uleb128 0x4
 14503 00b2 01       		.byte	0x1
 14504 00b3 0B       		.uleb128 0xb
 14505 00b4 0B       		.uleb128 0xb
 14506 00b5 49       		.uleb128 0x49
ARM GAS  /tmp/ccTsJCXT.s 			page 397


 14507 00b6 13       		.uleb128 0x13
 14508 00b7 3A       		.uleb128 0x3a
 14509 00b8 0B       		.uleb128 0xb
 14510 00b9 3B       		.uleb128 0x3b
 14511 00ba 0B       		.uleb128 0xb
 14512 00bb 01       		.uleb128 0x1
 14513 00bc 13       		.uleb128 0x13
 14514 00bd 00       		.byte	0
 14515 00be 00       		.byte	0
 14516 00bf 10       		.uleb128 0x10
 14517 00c0 28       		.uleb128 0x28
 14518 00c1 00       		.byte	0
 14519 00c2 03       		.uleb128 0x3
 14520 00c3 0E       		.uleb128 0xe
 14521 00c4 1C       		.uleb128 0x1c
 14522 00c5 0B       		.uleb128 0xb
 14523 00c6 00       		.byte	0
 14524 00c7 00       		.byte	0
 14525 00c8 11       		.uleb128 0x11
 14526 00c9 28       		.uleb128 0x28
 14527 00ca 00       		.byte	0
 14528 00cb 03       		.uleb128 0x3
 14529 00cc 08       		.uleb128 0x8
 14530 00cd 1C       		.uleb128 0x1c
 14531 00ce 0B       		.uleb128 0xb
 14532 00cf 00       		.byte	0
 14533 00d0 00       		.byte	0
 14534 00d1 12       		.uleb128 0x12
 14535 00d2 13       		.uleb128 0x13
 14536 00d3 01       		.byte	0x1
 14537 00d4 0B       		.uleb128 0xb
 14538 00d5 0B       		.uleb128 0xb
 14539 00d6 3A       		.uleb128 0x3a
 14540 00d7 0B       		.uleb128 0xb
 14541 00d8 3B       		.uleb128 0x3b
 14542 00d9 0B       		.uleb128 0xb
 14543 00da 01       		.uleb128 0x1
 14544 00db 13       		.uleb128 0x13
 14545 00dc 00       		.byte	0
 14546 00dd 00       		.byte	0
 14547 00de 13       		.uleb128 0x13
 14548 00df 0D       		.uleb128 0xd
 14549 00e0 00       		.byte	0
 14550 00e1 03       		.uleb128 0x3
 14551 00e2 0E       		.uleb128 0xe
 14552 00e3 3A       		.uleb128 0x3a
 14553 00e4 0B       		.uleb128 0xb
 14554 00e5 3B       		.uleb128 0x3b
 14555 00e6 0B       		.uleb128 0xb
 14556 00e7 49       		.uleb128 0x49
 14557 00e8 13       		.uleb128 0x13
 14558 00e9 38       		.uleb128 0x38
 14559 00ea 0A       		.uleb128 0xa
 14560 00eb 00       		.byte	0
 14561 00ec 00       		.byte	0
 14562 00ed 14       		.uleb128 0x14
 14563 00ee 13       		.uleb128 0x13
ARM GAS  /tmp/ccTsJCXT.s 			page 398


 14564 00ef 01       		.byte	0x1
 14565 00f0 03       		.uleb128 0x3
 14566 00f1 0E       		.uleb128 0xe
 14567 00f2 0B       		.uleb128 0xb
 14568 00f3 0B       		.uleb128 0xb
 14569 00f4 3A       		.uleb128 0x3a
 14570 00f5 0B       		.uleb128 0xb
 14571 00f6 3B       		.uleb128 0x3b
 14572 00f7 0B       		.uleb128 0xb
 14573 00f8 01       		.uleb128 0x1
 14574 00f9 13       		.uleb128 0x13
 14575 00fa 00       		.byte	0
 14576 00fb 00       		.byte	0
 14577 00fc 15       		.uleb128 0x15
 14578 00fd 0F       		.uleb128 0xf
 14579 00fe 00       		.byte	0
 14580 00ff 0B       		.uleb128 0xb
 14581 0100 0B       		.uleb128 0xb
 14582 0101 49       		.uleb128 0x49
 14583 0102 13       		.uleb128 0x13
 14584 0103 00       		.byte	0
 14585 0104 00       		.byte	0
 14586 0105 16       		.uleb128 0x16
 14587 0106 0F       		.uleb128 0xf
 14588 0107 00       		.byte	0
 14589 0108 0B       		.uleb128 0xb
 14590 0109 0B       		.uleb128 0xb
 14591 010a 00       		.byte	0
 14592 010b 00       		.byte	0
 14593 010c 17       		.uleb128 0x17
 14594 010d 15       		.uleb128 0x15
 14595 010e 01       		.byte	0x1
 14596 010f 27       		.uleb128 0x27
 14597 0110 0C       		.uleb128 0xc
 14598 0111 01       		.uleb128 0x1
 14599 0112 13       		.uleb128 0x13
 14600 0113 00       		.byte	0
 14601 0114 00       		.byte	0
 14602 0115 18       		.uleb128 0x18
 14603 0116 05       		.uleb128 0x5
 14604 0117 00       		.byte	0
 14605 0118 49       		.uleb128 0x49
 14606 0119 13       		.uleb128 0x13
 14607 011a 00       		.byte	0
 14608 011b 00       		.byte	0
 14609 011c 19       		.uleb128 0x19
 14610 011d 04       		.uleb128 0x4
 14611 011e 01       		.byte	0x1
 14612 011f 0B       		.uleb128 0xb
 14613 0120 0B       		.uleb128 0xb
 14614 0121 49       		.uleb128 0x49
 14615 0122 13       		.uleb128 0x13
 14616 0123 3A       		.uleb128 0x3a
 14617 0124 0B       		.uleb128 0xb
 14618 0125 3B       		.uleb128 0x3b
 14619 0126 05       		.uleb128 0x5
 14620 0127 01       		.uleb128 0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 399


 14621 0128 13       		.uleb128 0x13
 14622 0129 00       		.byte	0
 14623 012a 00       		.byte	0
 14624 012b 1A       		.uleb128 0x1a
 14625 012c 2E       		.uleb128 0x2e
 14626 012d 01       		.byte	0x1
 14627 012e 3F       		.uleb128 0x3f
 14628 012f 0C       		.uleb128 0xc
 14629 0130 03       		.uleb128 0x3
 14630 0131 0E       		.uleb128 0xe
 14631 0132 3A       		.uleb128 0x3a
 14632 0133 0B       		.uleb128 0xb
 14633 0134 3B       		.uleb128 0x3b
 14634 0135 05       		.uleb128 0x5
 14635 0136 27       		.uleb128 0x27
 14636 0137 0C       		.uleb128 0xc
 14637 0138 20       		.uleb128 0x20
 14638 0139 0B       		.uleb128 0xb
 14639 013a 01       		.uleb128 0x1
 14640 013b 13       		.uleb128 0x13
 14641 013c 00       		.byte	0
 14642 013d 00       		.byte	0
 14643 013e 1B       		.uleb128 0x1b
 14644 013f 05       		.uleb128 0x5
 14645 0140 00       		.byte	0
 14646 0141 03       		.uleb128 0x3
 14647 0142 0E       		.uleb128 0xe
 14648 0143 3A       		.uleb128 0x3a
 14649 0144 0B       		.uleb128 0xb
 14650 0145 3B       		.uleb128 0x3b
 14651 0146 05       		.uleb128 0x5
 14652 0147 49       		.uleb128 0x49
 14653 0148 13       		.uleb128 0x13
 14654 0149 00       		.byte	0
 14655 014a 00       		.byte	0
 14656 014b 1C       		.uleb128 0x1c
 14657 014c 34       		.uleb128 0x34
 14658 014d 00       		.byte	0
 14659 014e 03       		.uleb128 0x3
 14660 014f 08       		.uleb128 0x8
 14661 0150 3A       		.uleb128 0x3a
 14662 0151 0B       		.uleb128 0xb
 14663 0152 3B       		.uleb128 0x3b
 14664 0153 05       		.uleb128 0x5
 14665 0154 49       		.uleb128 0x49
 14666 0155 13       		.uleb128 0x13
 14667 0156 00       		.byte	0
 14668 0157 00       		.byte	0
 14669 0158 1D       		.uleb128 0x1d
 14670 0159 2E       		.uleb128 0x2e
 14671 015a 01       		.byte	0x1
 14672 015b 3F       		.uleb128 0x3f
 14673 015c 0C       		.uleb128 0xc
 14674 015d 03       		.uleb128 0x3
 14675 015e 0E       		.uleb128 0xe
 14676 015f 3A       		.uleb128 0x3a
 14677 0160 0B       		.uleb128 0xb
ARM GAS  /tmp/ccTsJCXT.s 			page 400


 14678 0161 3B       		.uleb128 0x3b
 14679 0162 05       		.uleb128 0x5
 14680 0163 27       		.uleb128 0x27
 14681 0164 0C       		.uleb128 0xc
 14682 0165 11       		.uleb128 0x11
 14683 0166 01       		.uleb128 0x1
 14684 0167 12       		.uleb128 0x12
 14685 0168 01       		.uleb128 0x1
 14686 0169 40       		.uleb128 0x40
 14687 016a 06       		.uleb128 0x6
 14688 016b 9742     		.uleb128 0x2117
 14689 016d 0C       		.uleb128 0xc
 14690 016e 01       		.uleb128 0x1
 14691 016f 13       		.uleb128 0x13
 14692 0170 00       		.byte	0
 14693 0171 00       		.byte	0
 14694 0172 1E       		.uleb128 0x1e
 14695 0173 05       		.uleb128 0x5
 14696 0174 00       		.byte	0
 14697 0175 03       		.uleb128 0x3
 14698 0176 0E       		.uleb128 0xe
 14699 0177 3A       		.uleb128 0x3a
 14700 0178 0B       		.uleb128 0xb
 14701 0179 3B       		.uleb128 0x3b
 14702 017a 05       		.uleb128 0x5
 14703 017b 49       		.uleb128 0x49
 14704 017c 13       		.uleb128 0x13
 14705 017d 02       		.uleb128 0x2
 14706 017e 0A       		.uleb128 0xa
 14707 017f 00       		.byte	0
 14708 0180 00       		.byte	0
 14709 0181 1F       		.uleb128 0x1f
 14710 0182 05       		.uleb128 0x5
 14711 0183 00       		.byte	0
 14712 0184 03       		.uleb128 0x3
 14713 0185 0E       		.uleb128 0xe
 14714 0186 3A       		.uleb128 0x3a
 14715 0187 0B       		.uleb128 0xb
 14716 0188 3B       		.uleb128 0x3b
 14717 0189 05       		.uleb128 0x5
 14718 018a 49       		.uleb128 0x49
 14719 018b 13       		.uleb128 0x13
 14720 018c 02       		.uleb128 0x2
 14721 018d 06       		.uleb128 0x6
 14722 018e 00       		.byte	0
 14723 018f 00       		.byte	0
 14724 0190 20       		.uleb128 0x20
 14725 0191 34       		.uleb128 0x34
 14726 0192 00       		.byte	0
 14727 0193 03       		.uleb128 0x3
 14728 0194 0E       		.uleb128 0xe
 14729 0195 3A       		.uleb128 0x3a
 14730 0196 0B       		.uleb128 0xb
 14731 0197 3B       		.uleb128 0x3b
 14732 0198 05       		.uleb128 0x5
 14733 0199 49       		.uleb128 0x49
 14734 019a 13       		.uleb128 0x13
ARM GAS  /tmp/ccTsJCXT.s 			page 401


 14735 019b 02       		.uleb128 0x2
 14736 019c 06       		.uleb128 0x6
 14737 019d 00       		.byte	0
 14738 019e 00       		.byte	0
 14739 019f 21       		.uleb128 0x21
 14740 01a0 2E       		.uleb128 0x2e
 14741 01a1 01       		.byte	0x1
 14742 01a2 03       		.uleb128 0x3
 14743 01a3 0E       		.uleb128 0xe
 14744 01a4 3A       		.uleb128 0x3a
 14745 01a5 0B       		.uleb128 0xb
 14746 01a6 3B       		.uleb128 0x3b
 14747 01a7 05       		.uleb128 0x5
 14748 01a8 27       		.uleb128 0x27
 14749 01a9 0C       		.uleb128 0xc
 14750 01aa 20       		.uleb128 0x20
 14751 01ab 0B       		.uleb128 0xb
 14752 01ac 01       		.uleb128 0x1
 14753 01ad 13       		.uleb128 0x13
 14754 01ae 00       		.byte	0
 14755 01af 00       		.byte	0
 14756 01b0 22       		.uleb128 0x22
 14757 01b1 34       		.uleb128 0x34
 14758 01b2 00       		.byte	0
 14759 01b3 03       		.uleb128 0x3
 14760 01b4 0E       		.uleb128 0xe
 14761 01b5 3A       		.uleb128 0x3a
 14762 01b6 0B       		.uleb128 0xb
 14763 01b7 3B       		.uleb128 0x3b
 14764 01b8 05       		.uleb128 0x5
 14765 01b9 49       		.uleb128 0x49
 14766 01ba 13       		.uleb128 0x13
 14767 01bb 00       		.byte	0
 14768 01bc 00       		.byte	0
 14769 01bd 23       		.uleb128 0x23
 14770 01be 2E       		.uleb128 0x2e
 14771 01bf 01       		.byte	0x1
 14772 01c0 03       		.uleb128 0x3
 14773 01c1 0E       		.uleb128 0xe
 14774 01c2 3A       		.uleb128 0x3a
 14775 01c3 0B       		.uleb128 0xb
 14776 01c4 3B       		.uleb128 0x3b
 14777 01c5 05       		.uleb128 0x5
 14778 01c6 27       		.uleb128 0x27
 14779 01c7 0C       		.uleb128 0xc
 14780 01c8 49       		.uleb128 0x49
 14781 01c9 13       		.uleb128 0x13
 14782 01ca 11       		.uleb128 0x11
 14783 01cb 01       		.uleb128 0x1
 14784 01cc 12       		.uleb128 0x12
 14785 01cd 01       		.uleb128 0x1
 14786 01ce 40       		.uleb128 0x40
 14787 01cf 06       		.uleb128 0x6
 14788 01d0 9742     		.uleb128 0x2117
 14789 01d2 0C       		.uleb128 0xc
 14790 01d3 01       		.uleb128 0x1
 14791 01d4 13       		.uleb128 0x13
ARM GAS  /tmp/ccTsJCXT.s 			page 402


 14792 01d5 00       		.byte	0
 14793 01d6 00       		.byte	0
 14794 01d7 24       		.uleb128 0x24
 14795 01d8 1D       		.uleb128 0x1d
 14796 01d9 01       		.byte	0x1
 14797 01da 31       		.uleb128 0x31
 14798 01db 13       		.uleb128 0x13
 14799 01dc 52       		.uleb128 0x52
 14800 01dd 01       		.uleb128 0x1
 14801 01de 55       		.uleb128 0x55
 14802 01df 06       		.uleb128 0x6
 14803 01e0 58       		.uleb128 0x58
 14804 01e1 0B       		.uleb128 0xb
 14805 01e2 59       		.uleb128 0x59
 14806 01e3 05       		.uleb128 0x5
 14807 01e4 01       		.uleb128 0x1
 14808 01e5 13       		.uleb128 0x13
 14809 01e6 00       		.byte	0
 14810 01e7 00       		.byte	0
 14811 01e8 25       		.uleb128 0x25
 14812 01e9 05       		.uleb128 0x5
 14813 01ea 00       		.byte	0
 14814 01eb 31       		.uleb128 0x31
 14815 01ec 13       		.uleb128 0x13
 14816 01ed 02       		.uleb128 0x2
 14817 01ee 06       		.uleb128 0x6
 14818 01ef 00       		.byte	0
 14819 01f0 00       		.byte	0
 14820 01f1 26       		.uleb128 0x26
 14821 01f2 0B       		.uleb128 0xb
 14822 01f3 01       		.byte	0x1
 14823 01f4 55       		.uleb128 0x55
 14824 01f5 06       		.uleb128 0x6
 14825 01f6 00       		.byte	0
 14826 01f7 00       		.byte	0
 14827 01f8 27       		.uleb128 0x27
 14828 01f9 34       		.uleb128 0x34
 14829 01fa 00       		.byte	0
 14830 01fb 31       		.uleb128 0x31
 14831 01fc 13       		.uleb128 0x13
 14832 01fd 02       		.uleb128 0x2
 14833 01fe 06       		.uleb128 0x6
 14834 01ff 00       		.byte	0
 14835 0200 00       		.byte	0
 14836 0201 28       		.uleb128 0x28
 14837 0202 1D       		.uleb128 0x1d
 14838 0203 01       		.byte	0x1
 14839 0204 31       		.uleb128 0x31
 14840 0205 13       		.uleb128 0x13
 14841 0206 11       		.uleb128 0x11
 14842 0207 01       		.uleb128 0x1
 14843 0208 12       		.uleb128 0x12
 14844 0209 01       		.uleb128 0x1
 14845 020a 58       		.uleb128 0x58
 14846 020b 0B       		.uleb128 0xb
 14847 020c 59       		.uleb128 0x59
 14848 020d 05       		.uleb128 0x5
ARM GAS  /tmp/ccTsJCXT.s 			page 403


 14849 020e 01       		.uleb128 0x1
 14850 020f 13       		.uleb128 0x13
 14851 0210 00       		.byte	0
 14852 0211 00       		.byte	0
 14853 0212 29       		.uleb128 0x29
 14854 0213 0B       		.uleb128 0xb
 14855 0214 01       		.byte	0x1
 14856 0215 11       		.uleb128 0x11
 14857 0216 01       		.uleb128 0x1
 14858 0217 12       		.uleb128 0x12
 14859 0218 01       		.uleb128 0x1
 14860 0219 00       		.byte	0
 14861 021a 00       		.byte	0
 14862 021b 2A       		.uleb128 0x2a
 14863 021c 898201   		.uleb128 0x4109
 14864 021f 01       		.byte	0x1
 14865 0220 11       		.uleb128 0x11
 14866 0221 01       		.uleb128 0x1
 14867 0222 31       		.uleb128 0x31
 14868 0223 13       		.uleb128 0x13
 14869 0224 00       		.byte	0
 14870 0225 00       		.byte	0
 14871 0226 2B       		.uleb128 0x2b
 14872 0227 8A8201   		.uleb128 0x410a
 14873 022a 00       		.byte	0
 14874 022b 02       		.uleb128 0x2
 14875 022c 0A       		.uleb128 0xa
 14876 022d 9142     		.uleb128 0x2111
 14877 022f 0A       		.uleb128 0xa
 14878 0230 00       		.byte	0
 14879 0231 00       		.byte	0
 14880 0232 2C       		.uleb128 0x2c
 14881 0233 2E       		.uleb128 0x2e
 14882 0234 01       		.byte	0x1
 14883 0235 03       		.uleb128 0x3
 14884 0236 0E       		.uleb128 0xe
 14885 0237 3A       		.uleb128 0x3a
 14886 0238 0B       		.uleb128 0xb
 14887 0239 3B       		.uleb128 0x3b
 14888 023a 05       		.uleb128 0x5
 14889 023b 27       		.uleb128 0x27
 14890 023c 0C       		.uleb128 0xc
 14891 023d 11       		.uleb128 0x11
 14892 023e 01       		.uleb128 0x1
 14893 023f 12       		.uleb128 0x12
 14894 0240 01       		.uleb128 0x1
 14895 0241 40       		.uleb128 0x40
 14896 0242 06       		.uleb128 0x6
 14897 0243 9742     		.uleb128 0x2117
 14898 0245 0C       		.uleb128 0xc
 14899 0246 01       		.uleb128 0x1
 14900 0247 13       		.uleb128 0x13
 14901 0248 00       		.byte	0
 14902 0249 00       		.byte	0
 14903 024a 2D       		.uleb128 0x2d
 14904 024b 34       		.uleb128 0x34
 14905 024c 00       		.byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 404


 14906 024d 03       		.uleb128 0x3
 14907 024e 0E       		.uleb128 0xe
 14908 024f 3A       		.uleb128 0x3a
 14909 0250 0B       		.uleb128 0xb
 14910 0251 3B       		.uleb128 0x3b
 14911 0252 05       		.uleb128 0x5
 14912 0253 49       		.uleb128 0x49
 14913 0254 13       		.uleb128 0x13
 14914 0255 02       		.uleb128 0x2
 14915 0256 0A       		.uleb128 0xa
 14916 0257 00       		.byte	0
 14917 0258 00       		.byte	0
 14918 0259 2E       		.uleb128 0x2e
 14919 025a 898201   		.uleb128 0x4109
 14920 025d 00       		.byte	0
 14921 025e 11       		.uleb128 0x11
 14922 025f 01       		.uleb128 0x1
 14923 0260 31       		.uleb128 0x31
 14924 0261 13       		.uleb128 0x13
 14925 0262 00       		.byte	0
 14926 0263 00       		.byte	0
 14927 0264 2F       		.uleb128 0x2f
 14928 0265 2E       		.uleb128 0x2e
 14929 0266 01       		.byte	0x1
 14930 0267 3F       		.uleb128 0x3f
 14931 0268 0C       		.uleb128 0xc
 14932 0269 03       		.uleb128 0x3
 14933 026a 0E       		.uleb128 0xe
 14934 026b 3A       		.uleb128 0x3a
 14935 026c 0B       		.uleb128 0xb
 14936 026d 3B       		.uleb128 0x3b
 14937 026e 05       		.uleb128 0x5
 14938 026f 27       		.uleb128 0x27
 14939 0270 0C       		.uleb128 0xc
 14940 0271 49       		.uleb128 0x49
 14941 0272 13       		.uleb128 0x13
 14942 0273 20       		.uleb128 0x20
 14943 0274 0B       		.uleb128 0xb
 14944 0275 01       		.uleb128 0x1
 14945 0276 13       		.uleb128 0x13
 14946 0277 00       		.byte	0
 14947 0278 00       		.byte	0
 14948 0279 30       		.uleb128 0x30
 14949 027a 2E       		.uleb128 0x2e
 14950 027b 01       		.byte	0x1
 14951 027c 3F       		.uleb128 0x3f
 14952 027d 0C       		.uleb128 0xc
 14953 027e 03       		.uleb128 0x3
 14954 027f 0E       		.uleb128 0xe
 14955 0280 3A       		.uleb128 0x3a
 14956 0281 0B       		.uleb128 0xb
 14957 0282 3B       		.uleb128 0x3b
 14958 0283 05       		.uleb128 0x5
 14959 0284 27       		.uleb128 0x27
 14960 0285 0C       		.uleb128 0xc
 14961 0286 49       		.uleb128 0x49
 14962 0287 13       		.uleb128 0x13
ARM GAS  /tmp/ccTsJCXT.s 			page 405


 14963 0288 01       		.uleb128 0x1
 14964 0289 13       		.uleb128 0x13
 14965 028a 00       		.byte	0
 14966 028b 00       		.byte	0
 14967 028c 31       		.uleb128 0x31
 14968 028d 2E       		.uleb128 0x2e
 14969 028e 01       		.byte	0x1
 14970 028f 3F       		.uleb128 0x3f
 14971 0290 0C       		.uleb128 0xc
 14972 0291 03       		.uleb128 0x3
 14973 0292 0E       		.uleb128 0xe
 14974 0293 3A       		.uleb128 0x3a
 14975 0294 0B       		.uleb128 0xb
 14976 0295 3B       		.uleb128 0x3b
 14977 0296 05       		.uleb128 0x5
 14978 0297 27       		.uleb128 0x27
 14979 0298 0C       		.uleb128 0xc
 14980 0299 01       		.uleb128 0x1
 14981 029a 13       		.uleb128 0x13
 14982 029b 00       		.byte	0
 14983 029c 00       		.byte	0
 14984 029d 32       		.uleb128 0x32
 14985 029e 2E       		.uleb128 0x2e
 14986 029f 01       		.byte	0x1
 14987 02a0 3F       		.uleb128 0x3f
 14988 02a1 0C       		.uleb128 0xc
 14989 02a2 03       		.uleb128 0x3
 14990 02a3 0E       		.uleb128 0xe
 14991 02a4 3A       		.uleb128 0x3a
 14992 02a5 0B       		.uleb128 0xb
 14993 02a6 3B       		.uleb128 0x3b
 14994 02a7 05       		.uleb128 0x5
 14995 02a8 27       		.uleb128 0x27
 14996 02a9 0C       		.uleb128 0xc
 14997 02aa 49       		.uleb128 0x49
 14998 02ab 13       		.uleb128 0x13
 14999 02ac 11       		.uleb128 0x11
 15000 02ad 01       		.uleb128 0x1
 15001 02ae 12       		.uleb128 0x12
 15002 02af 01       		.uleb128 0x1
 15003 02b0 40       		.uleb128 0x40
 15004 02b1 0A       		.uleb128 0xa
 15005 02b2 9742     		.uleb128 0x2117
 15006 02b4 0C       		.uleb128 0xc
 15007 02b5 01       		.uleb128 0x1
 15008 02b6 13       		.uleb128 0x13
 15009 02b7 00       		.byte	0
 15010 02b8 00       		.byte	0
 15011 02b9 33       		.uleb128 0x33
 15012 02ba 2E       		.uleb128 0x2e
 15013 02bb 01       		.byte	0x1
 15014 02bc 3F       		.uleb128 0x3f
 15015 02bd 0C       		.uleb128 0xc
 15016 02be 03       		.uleb128 0x3
 15017 02bf 0E       		.uleb128 0xe
 15018 02c0 3A       		.uleb128 0x3a
 15019 02c1 0B       		.uleb128 0xb
ARM GAS  /tmp/ccTsJCXT.s 			page 406


 15020 02c2 3B       		.uleb128 0x3b
 15021 02c3 05       		.uleb128 0x5
 15022 02c4 27       		.uleb128 0x27
 15023 02c5 0C       		.uleb128 0xc
 15024 02c6 49       		.uleb128 0x49
 15025 02c7 13       		.uleb128 0x13
 15026 02c8 11       		.uleb128 0x11
 15027 02c9 01       		.uleb128 0x1
 15028 02ca 12       		.uleb128 0x12
 15029 02cb 01       		.uleb128 0x1
 15030 02cc 40       		.uleb128 0x40
 15031 02cd 06       		.uleb128 0x6
 15032 02ce 9742     		.uleb128 0x2117
 15033 02d0 0C       		.uleb128 0xc
 15034 02d1 01       		.uleb128 0x1
 15035 02d2 13       		.uleb128 0x13
 15036 02d3 00       		.byte	0
 15037 02d4 00       		.byte	0
 15038 02d5 34       		.uleb128 0x34
 15039 02d6 05       		.uleb128 0x5
 15040 02d7 00       		.byte	0
 15041 02d8 31       		.uleb128 0x31
 15042 02d9 13       		.uleb128 0x13
 15043 02da 1C       		.uleb128 0x1c
 15044 02db 0B       		.uleb128 0xb
 15045 02dc 00       		.byte	0
 15046 02dd 00       		.byte	0
 15047 02de 35       		.uleb128 0x35
 15048 02df 05       		.uleb128 0x5
 15049 02e0 00       		.byte	0
 15050 02e1 31       		.uleb128 0x31
 15051 02e2 13       		.uleb128 0x13
 15052 02e3 02       		.uleb128 0x2
 15053 02e4 0A       		.uleb128 0xa
 15054 02e5 00       		.byte	0
 15055 02e6 00       		.byte	0
 15056 02e7 36       		.uleb128 0x36
 15057 02e8 34       		.uleb128 0x34
 15058 02e9 00       		.byte	0
 15059 02ea 31       		.uleb128 0x31
 15060 02eb 13       		.uleb128 0x13
 15061 02ec 02       		.uleb128 0x2
 15062 02ed 0A       		.uleb128 0xa
 15063 02ee 00       		.byte	0
 15064 02ef 00       		.byte	0
 15065 02f0 37       		.uleb128 0x37
 15066 02f1 898201   		.uleb128 0x4109
 15067 02f4 01       		.byte	0x1
 15068 02f5 11       		.uleb128 0x11
 15069 02f6 01       		.uleb128 0x1
 15070 02f7 31       		.uleb128 0x31
 15071 02f8 13       		.uleb128 0x13
 15072 02f9 01       		.uleb128 0x1
 15073 02fa 13       		.uleb128 0x13
 15074 02fb 00       		.byte	0
 15075 02fc 00       		.byte	0
 15076 02fd 38       		.uleb128 0x38
ARM GAS  /tmp/ccTsJCXT.s 			page 407


 15077 02fe 898201   		.uleb128 0x4109
 15078 0301 01       		.byte	0x1
 15079 0302 11       		.uleb128 0x11
 15080 0303 01       		.uleb128 0x1
 15081 0304 9542     		.uleb128 0x2115
 15082 0306 0C       		.uleb128 0xc
 15083 0307 31       		.uleb128 0x31
 15084 0308 13       		.uleb128 0x13
 15085 0309 01       		.uleb128 0x1
 15086 030a 13       		.uleb128 0x13
 15087 030b 00       		.byte	0
 15088 030c 00       		.byte	0
 15089 030d 39       		.uleb128 0x39
 15090 030e 1D       		.uleb128 0x1d
 15091 030f 01       		.byte	0x1
 15092 0310 31       		.uleb128 0x31
 15093 0311 13       		.uleb128 0x13
 15094 0312 11       		.uleb128 0x11
 15095 0313 01       		.uleb128 0x1
 15096 0314 12       		.uleb128 0x12
 15097 0315 01       		.uleb128 0x1
 15098 0316 58       		.uleb128 0x58
 15099 0317 0B       		.uleb128 0xb
 15100 0318 59       		.uleb128 0x59
 15101 0319 05       		.uleb128 0x5
 15102 031a 00       		.byte	0
 15103 031b 00       		.byte	0
 15104 031c 3A       		.uleb128 0x3a
 15105 031d 2E       		.uleb128 0x2e
 15106 031e 01       		.byte	0x1
 15107 031f 31       		.uleb128 0x31
 15108 0320 13       		.uleb128 0x13
 15109 0321 11       		.uleb128 0x11
 15110 0322 01       		.uleb128 0x1
 15111 0323 12       		.uleb128 0x12
 15112 0324 01       		.uleb128 0x1
 15113 0325 40       		.uleb128 0x40
 15114 0326 0A       		.uleb128 0xa
 15115 0327 9742     		.uleb128 0x2117
 15116 0329 0C       		.uleb128 0xc
 15117 032a 01       		.uleb128 0x1
 15118 032b 13       		.uleb128 0x13
 15119 032c 00       		.byte	0
 15120 032d 00       		.byte	0
 15121 032e 3B       		.uleb128 0x3b
 15122 032f 2E       		.uleb128 0x2e
 15123 0330 01       		.byte	0x1
 15124 0331 31       		.uleb128 0x31
 15125 0332 13       		.uleb128 0x13
 15126 0333 11       		.uleb128 0x11
 15127 0334 01       		.uleb128 0x1
 15128 0335 12       		.uleb128 0x12
 15129 0336 01       		.uleb128 0x1
 15130 0337 40       		.uleb128 0x40
 15131 0338 06       		.uleb128 0x6
 15132 0339 9742     		.uleb128 0x2117
 15133 033b 0C       		.uleb128 0xc
ARM GAS  /tmp/ccTsJCXT.s 			page 408


 15134 033c 01       		.uleb128 0x1
 15135 033d 13       		.uleb128 0x13
 15136 033e 00       		.byte	0
 15137 033f 00       		.byte	0
 15138 0340 3C       		.uleb128 0x3c
 15139 0341 2E       		.uleb128 0x2e
 15140 0342 00       		.byte	0
 15141 0343 3F       		.uleb128 0x3f
 15142 0344 0C       		.uleb128 0xc
 15143 0345 3C       		.uleb128 0x3c
 15144 0346 0C       		.uleb128 0xc
 15145 0347 8740     		.uleb128 0x2007
 15146 0349 0E       		.uleb128 0xe
 15147 034a 03       		.uleb128 0x3
 15148 034b 0E       		.uleb128 0xe
 15149 034c 3A       		.uleb128 0x3a
 15150 034d 0B       		.uleb128 0xb
 15151 034e 3B       		.uleb128 0x3b
 15152 034f 05       		.uleb128 0x5
 15153 0350 00       		.byte	0
 15154 0351 00       		.byte	0
 15155 0352 3D       		.uleb128 0x3d
 15156 0353 2E       		.uleb128 0x2e
 15157 0354 00       		.byte	0
 15158 0355 3F       		.uleb128 0x3f
 15159 0356 0C       		.uleb128 0xc
 15160 0357 3C       		.uleb128 0x3c
 15161 0358 0C       		.uleb128 0xc
 15162 0359 8740     		.uleb128 0x2007
 15163 035b 0E       		.uleb128 0xe
 15164 035c 03       		.uleb128 0x3
 15165 035d 0E       		.uleb128 0xe
 15166 035e 3A       		.uleb128 0x3a
 15167 035f 0B       		.uleb128 0xb
 15168 0360 3B       		.uleb128 0x3b
 15169 0361 0B       		.uleb128 0xb
 15170 0362 00       		.byte	0
 15171 0363 00       		.byte	0
 15172 0364 00       		.byte	0
 15173              		.section	.debug_loc,"",%progbits
 15174              	.Ldebug_loc0:
 15175              	.LLST291:
 15176 0000 50130000 		.4byte	.LFB177-.Ltext0
 15177 0004 52130000 		.4byte	.LCFI44-.Ltext0
 15178 0008 0200     		.2byte	0x2
 15179 000a 7D       		.byte	0x7d
 15180 000b 00       		.sleb128 0
 15181 000c 52130000 		.4byte	.LCFI44-.Ltext0
 15182 0010 64130000 		.4byte	.LFE177-.Ltext0
 15183 0014 0200     		.2byte	0x2
 15184 0016 7D       		.byte	0x7d
 15185 0017 08       		.sleb128 8
 15186 0018 00000000 		.4byte	0
 15187 001c 00000000 		.4byte	0
 15188              	.LLST292:
 15189 0020 50130000 		.4byte	.LVL478-.Ltext0
 15190 0024 56130000 		.4byte	.LVL480-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 409


 15191 0028 0100     		.2byte	0x1
 15192 002a 52       		.byte	0x52
 15193 002b 56130000 		.4byte	.LVL480-.Ltext0
 15194 002f 64130000 		.4byte	.LFE177-.Ltext0
 15195 0033 0400     		.2byte	0x4
 15196 0035 F3       		.byte	0xf3
 15197 0036 01       		.uleb128 0x1
 15198 0037 52       		.byte	0x52
 15199 0038 9F       		.byte	0x9f
 15200 0039 00000000 		.4byte	0
 15201 003d 00000000 		.4byte	0
 15202              	.LLST293:
 15203 0041 50130000 		.4byte	.LVL478-.Ltext0
 15204 0045 5E130000 		.4byte	.LVL482-.Ltext0
 15205 0049 0100     		.2byte	0x1
 15206 004b 53       		.byte	0x53
 15207 004c 5E130000 		.4byte	.LVL482-.Ltext0
 15208 0050 64130000 		.4byte	.LFE177-.Ltext0
 15209 0054 0400     		.2byte	0x4
 15210 0056 F3       		.byte	0xf3
 15211 0057 01       		.uleb128 0x1
 15212 0058 53       		.byte	0x53
 15213 0059 9F       		.byte	0x9f
 15214 005a 00000000 		.4byte	0
 15215 005e 00000000 		.4byte	0
 15216              	.LLST294:
 15217 0062 54130000 		.4byte	.LVL479-.Ltext0
 15218 0066 60130000 		.4byte	.LVL483-.Ltext0
 15219 006a 0100     		.2byte	0x1
 15220 006c 54       		.byte	0x54
 15221 006d 60130000 		.4byte	.LVL483-.Ltext0
 15222 0071 64130000 		.4byte	.LFE177-.Ltext0
 15223 0075 0100     		.2byte	0x1
 15224 0077 53       		.byte	0x53
 15225 0078 00000000 		.4byte	0
 15226 007c 00000000 		.4byte	0
 15227              	.LLST252:
 15228 0080 00110000 		.4byte	.LFB170-.Ltext0
 15229 0084 02110000 		.4byte	.LCFI38-.Ltext0
 15230 0088 0200     		.2byte	0x2
 15231 008a 7D       		.byte	0x7d
 15232 008b 00       		.sleb128 0
 15233 008c 02110000 		.4byte	.LCFI38-.Ltext0
 15234 0090 4C110000 		.4byte	.LFE170-.Ltext0
 15235 0094 0200     		.2byte	0x2
 15236 0096 7D       		.byte	0x7d
 15237 0097 10       		.sleb128 16
 15238 0098 00000000 		.4byte	0
 15239 009c 00000000 		.4byte	0
 15240              	.LLST253:
 15241 00a0 00110000 		.4byte	.LVL389-.Ltext0
 15242 00a4 38110000 		.4byte	.LVL397-.Ltext0
 15243 00a8 0100     		.2byte	0x1
 15244 00aa 51       		.byte	0x51
 15245 00ab 38110000 		.4byte	.LVL397-.Ltext0
 15246 00af 42110000 		.4byte	.LVL400-.Ltext0
 15247 00b3 0400     		.2byte	0x4
ARM GAS  /tmp/ccTsJCXT.s 			page 410


 15248 00b5 F3       		.byte	0xf3
 15249 00b6 01       		.uleb128 0x1
 15250 00b7 51       		.byte	0x51
 15251 00b8 9F       		.byte	0x9f
 15252 00b9 42110000 		.4byte	.LVL400-.Ltext0
 15253 00bd 4C110000 		.4byte	.LFE170-.Ltext0
 15254 00c1 0100     		.2byte	0x1
 15255 00c3 51       		.byte	0x51
 15256 00c4 00000000 		.4byte	0
 15257 00c8 00000000 		.4byte	0
 15258              	.LLST254:
 15259 00cc 00110000 		.4byte	.LVL389-.Ltext0
 15260 00d0 28110000 		.4byte	.LVL393-.Ltext0
 15261 00d4 0100     		.2byte	0x1
 15262 00d6 52       		.byte	0x52
 15263 00d7 28110000 		.4byte	.LVL393-.Ltext0
 15264 00db 42110000 		.4byte	.LVL400-.Ltext0
 15265 00df 0400     		.2byte	0x4
 15266 00e1 F3       		.byte	0xf3
 15267 00e2 01       		.uleb128 0x1
 15268 00e3 52       		.byte	0x52
 15269 00e4 9F       		.byte	0x9f
 15270 00e5 42110000 		.4byte	.LVL400-.Ltext0
 15271 00e9 46110000 		.4byte	.LVL401-.Ltext0
 15272 00ed 0100     		.2byte	0x1
 15273 00ef 52       		.byte	0x52
 15274 00f0 46110000 		.4byte	.LVL401-.Ltext0
 15275 00f4 4C110000 		.4byte	.LFE170-.Ltext0
 15276 00f8 0400     		.2byte	0x4
 15277 00fa F3       		.byte	0xf3
 15278 00fb 01       		.uleb128 0x1
 15279 00fc 52       		.byte	0x52
 15280 00fd 9F       		.byte	0x9f
 15281 00fe 00000000 		.4byte	0
 15282 0102 00000000 		.4byte	0
 15283              	.LLST255:
 15284 0106 00110000 		.4byte	.LVL389-.Ltext0
 15285 010a 2A110000 		.4byte	.LVL394-.Ltext0
 15286 010e 0100     		.2byte	0x1
 15287 0110 53       		.byte	0x53
 15288 0111 2A110000 		.4byte	.LVL394-.Ltext0
 15289 0115 42110000 		.4byte	.LVL400-.Ltext0
 15290 0119 0400     		.2byte	0x4
 15291 011b F3       		.byte	0xf3
 15292 011c 01       		.uleb128 0x1
 15293 011d 53       		.byte	0x53
 15294 011e 9F       		.byte	0x9f
 15295 011f 42110000 		.4byte	.LVL400-.Ltext0
 15296 0123 4C110000 		.4byte	.LFE170-.Ltext0
 15297 0127 0100     		.2byte	0x1
 15298 0129 53       		.byte	0x53
 15299 012a 00000000 		.4byte	0
 15300 012e 00000000 		.4byte	0
 15301              	.LLST256:
 15302 0132 10110000 		.4byte	.LVL390-.Ltext0
 15303 0136 28110000 		.4byte	.LVL393-.Ltext0
 15304 013a 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 411


 15305 013c 54       		.byte	0x54
 15306 013d 28110000 		.4byte	.LVL393-.Ltext0
 15307 0141 42110000 		.4byte	.LVL400-.Ltext0
 15308 0145 0100     		.2byte	0x1
 15309 0147 52       		.byte	0x52
 15310 0148 42110000 		.4byte	.LVL400-.Ltext0
 15311 014c 46110000 		.4byte	.LVL401-.Ltext0
 15312 0150 0100     		.2byte	0x1
 15313 0152 54       		.byte	0x54
 15314 0153 46110000 		.4byte	.LVL401-.Ltext0
 15315 0157 4C110000 		.4byte	.LFE170-.Ltext0
 15316 015b 0100     		.2byte	0x1
 15317 015d 52       		.byte	0x52
 15318 015e 00000000 		.4byte	0
 15319 0162 00000000 		.4byte	0
 15320              	.LLST257:
 15321 0166 12110000 		.4byte	.LVL391-.Ltext0
 15322 016a 34110000 		.4byte	.LVL396-.Ltext0
 15323 016e 0100     		.2byte	0x1
 15324 0170 55       		.byte	0x55
 15325 0171 3A110000 		.4byte	.LVL398-.Ltext0
 15326 0175 4C110000 		.4byte	.LFE170-.Ltext0
 15327 0179 0100     		.2byte	0x1
 15328 017b 55       		.byte	0x55
 15329 017c 00000000 		.4byte	0
 15330 0180 00000000 		.4byte	0
 15331              	.LLST327:
 15332 0184 58150000 		.4byte	.LFB169-.Ltext0
 15333 0188 5C150000 		.4byte	.LCFI47-.Ltext0
 15334 018c 0200     		.2byte	0x2
 15335 018e 7D       		.byte	0x7d
 15336 018f 00       		.sleb128 0
 15337 0190 5C150000 		.4byte	.LCFI47-.Ltext0
 15338 0194 FC150000 		.4byte	.LFE169-.Ltext0
 15339 0198 0200     		.2byte	0x2
 15340 019a 7D       		.byte	0x7d
 15341 019b 10       		.sleb128 16
 15342 019c 00000000 		.4byte	0
 15343 01a0 00000000 		.4byte	0
 15344              	.LLST328:
 15345 01a4 58150000 		.4byte	.LVL554-.Ltext0
 15346 01a8 5A150000 		.4byte	.LVL555-.Ltext0
 15347 01ac 0100     		.2byte	0x1
 15348 01ae 50       		.byte	0x50
 15349 01af 5A150000 		.4byte	.LVL555-.Ltext0
 15350 01b3 FC150000 		.4byte	.LFE169-.Ltext0
 15351 01b7 0400     		.2byte	0x4
 15352 01b9 F3       		.byte	0xf3
 15353 01ba 01       		.uleb128 0x1
 15354 01bb 50       		.byte	0x50
 15355 01bc 9F       		.byte	0x9f
 15356 01bd 00000000 		.4byte	0
 15357 01c1 00000000 		.4byte	0
 15358              	.LLST329:
 15359 01c5 58150000 		.4byte	.LVL554-.Ltext0
 15360 01c9 7A150000 		.4byte	.LVL561-.Ltext0
 15361 01cd 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 412


 15362 01cf 51       		.byte	0x51
 15363 01d0 7A150000 		.4byte	.LVL561-.Ltext0
 15364 01d4 7E150000 		.4byte	.LVL562-.Ltext0
 15365 01d8 0400     		.2byte	0x4
 15366 01da F3       		.byte	0xf3
 15367 01db 01       		.uleb128 0x1
 15368 01dc 51       		.byte	0x51
 15369 01dd 9F       		.byte	0x9f
 15370 01de 7E150000 		.4byte	.LVL562-.Ltext0
 15371 01e2 8C150000 		.4byte	.LVL564-.Ltext0
 15372 01e6 0100     		.2byte	0x1
 15373 01e8 51       		.byte	0x51
 15374 01e9 8C150000 		.4byte	.LVL564-.Ltext0
 15375 01ed 92150000 		.4byte	.LVL566-.Ltext0
 15376 01f1 0400     		.2byte	0x4
 15377 01f3 F3       		.byte	0xf3
 15378 01f4 01       		.uleb128 0x1
 15379 01f5 51       		.byte	0x51
 15380 01f6 9F       		.byte	0x9f
 15381 01f7 92150000 		.4byte	.LVL566-.Ltext0
 15382 01fb 9C150000 		.4byte	.LVL569-.Ltext0
 15383 01ff 0100     		.2byte	0x1
 15384 0201 51       		.byte	0x51
 15385 0202 9C150000 		.4byte	.LVL569-.Ltext0
 15386 0206 B2150000 		.4byte	.LVL574-.Ltext0
 15387 020a 0400     		.2byte	0x4
 15388 020c F3       		.byte	0xf3
 15389 020d 01       		.uleb128 0x1
 15390 020e 51       		.byte	0x51
 15391 020f 9F       		.byte	0x9f
 15392 0210 B2150000 		.4byte	.LVL574-.Ltext0
 15393 0214 B8150000 		.4byte	.LVL576-.Ltext0
 15394 0218 0100     		.2byte	0x1
 15395 021a 51       		.byte	0x51
 15396 021b B8150000 		.4byte	.LVL576-.Ltext0
 15397 021f D2150000 		.4byte	.LVL582-.Ltext0
 15398 0223 0400     		.2byte	0x4
 15399 0225 F3       		.byte	0xf3
 15400 0226 01       		.uleb128 0x1
 15401 0227 51       		.byte	0x51
 15402 0228 9F       		.byte	0x9f
 15403 0229 D2150000 		.4byte	.LVL582-.Ltext0
 15404 022d D8150000 		.4byte	.LVL584-.Ltext0
 15405 0231 0100     		.2byte	0x1
 15406 0233 51       		.byte	0x51
 15407 0234 D8150000 		.4byte	.LVL584-.Ltext0
 15408 0238 F8150000 		.4byte	.LVL591-.Ltext0
 15409 023c 0400     		.2byte	0x4
 15410 023e F3       		.byte	0xf3
 15411 023f 01       		.uleb128 0x1
 15412 0240 51       		.byte	0x51
 15413 0241 9F       		.byte	0x9f
 15414 0242 F8150000 		.4byte	.LVL591-.Ltext0
 15415 0246 FC150000 		.4byte	.LFE169-.Ltext0
 15416 024a 0100     		.2byte	0x1
 15417 024c 51       		.byte	0x51
 15418 024d 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 413


 15419 0251 00000000 		.4byte	0
 15420              	.LLST330:
 15421 0255 5E150000 		.4byte	.LVL556-.Ltext0
 15422 0259 7A150000 		.4byte	.LVL561-.Ltext0
 15423 025d 0100     		.2byte	0x1
 15424 025f 53       		.byte	0x53
 15425 0260 7E150000 		.4byte	.LVL562-.Ltext0
 15426 0264 88150000 		.4byte	.LVL563-.Ltext0
 15427 0268 0100     		.2byte	0x1
 15428 026a 53       		.byte	0x53
 15429 026b 88150000 		.4byte	.LVL563-.Ltext0
 15430 026f 8F150000 		.4byte	.LVL565-1-.Ltext0
 15431 0273 0200     		.2byte	0x2
 15432 0275 70       		.byte	0x70
 15433 0276 08       		.sleb128 8
 15434 0277 92150000 		.4byte	.LVL566-.Ltext0
 15435 027b 9A150000 		.4byte	.LVL568-.Ltext0
 15436 027f 0100     		.2byte	0x1
 15437 0281 53       		.byte	0x53
 15438 0282 9A150000 		.4byte	.LVL568-.Ltext0
 15439 0286 A2150000 		.4byte	.LVL570-.Ltext0
 15440 028a 0200     		.2byte	0x2
 15441 028c 70       		.byte	0x70
 15442 028d 08       		.sleb128 8
 15443 028e B2150000 		.4byte	.LVL574-.Ltext0
 15444 0292 C6150000 		.4byte	.LVL578-.Ltext0
 15445 0296 0100     		.2byte	0x1
 15446 0298 53       		.byte	0x53
 15447 0299 D2150000 		.4byte	.LVL582-.Ltext0
 15448 029d E2150000 		.4byte	.LVL586-.Ltext0
 15449 02a1 0100     		.2byte	0x1
 15450 02a3 53       		.byte	0x53
 15451 02a4 F8150000 		.4byte	.LVL591-.Ltext0
 15452 02a8 FC150000 		.4byte	.LFE169-.Ltext0
 15453 02ac 0100     		.2byte	0x1
 15454 02ae 53       		.byte	0x53
 15455 02af 00000000 		.4byte	0
 15456 02b3 00000000 		.4byte	0
 15457              	.LLST331:
 15458 02b7 A4150000 		.4byte	.LVL571-.Ltext0
 15459 02bb AC150000 		.4byte	.LVL573-.Ltext0
 15460 02bf 0100     		.2byte	0x1
 15461 02c1 53       		.byte	0x53
 15462 02c2 00000000 		.4byte	0
 15463 02c6 00000000 		.4byte	0
 15464              	.LLST332:
 15465 02ca 98150000 		.4byte	.LVL567-.Ltext0
 15466 02ce AC150000 		.4byte	.LVL573-.Ltext0
 15467 02d2 0100     		.2byte	0x1
 15468 02d4 52       		.byte	0x52
 15469 02d5 00000000 		.4byte	0
 15470 02d9 00000000 		.4byte	0
 15471              	.LLST333:
 15472 02dd B6150000 		.4byte	.LVL575-.Ltext0
 15473 02e1 D2150000 		.4byte	.LVL582-.Ltext0
 15474 02e5 0100     		.2byte	0x1
 15475 02e7 55       		.byte	0x55
ARM GAS  /tmp/ccTsJCXT.s 			page 414


 15476 02e8 00000000 		.4byte	0
 15477 02ec 00000000 		.4byte	0
 15478              	.LLST334:
 15479 02f0 B6150000 		.4byte	.LVL575-.Ltext0
 15480 02f4 C8150000 		.4byte	.LVL579-.Ltext0
 15481 02f8 0100     		.2byte	0x1
 15482 02fa 52       		.byte	0x52
 15483 02fb C8150000 		.4byte	.LVL579-.Ltext0
 15484 02ff D2150000 		.4byte	.LVL582-.Ltext0
 15485 0303 0500     		.2byte	0x5
 15486 0305 F3       		.byte	0xf3
 15487 0306 01       		.uleb128 0x1
 15488 0307 51       		.byte	0x51
 15489 0308 23       		.byte	0x23
 15490 0309 08       		.uleb128 0x8
 15491 030a 00000000 		.4byte	0
 15492 030e 00000000 		.4byte	0
 15493              	.LLST335:
 15494 0312 B6150000 		.4byte	.LVL575-.Ltext0
 15495 0316 D2150000 		.4byte	.LVL582-.Ltext0
 15496 031a 0100     		.2byte	0x1
 15497 031c 50       		.byte	0x50
 15498 031d 00000000 		.4byte	0
 15499 0321 00000000 		.4byte	0
 15500              	.LLST336:
 15501 0325 C6150000 		.4byte	.LVL578-.Ltext0
 15502 0329 D2150000 		.4byte	.LVL582-.Ltext0
 15503 032d 0100     		.2byte	0x1
 15504 032f 53       		.byte	0x53
 15505 0330 00000000 		.4byte	0
 15506 0334 00000000 		.4byte	0
 15507              	.LLST337:
 15508 0338 AC150000 		.4byte	.LVL573-.Ltext0
 15509 033c B2150000 		.4byte	.LVL574-.Ltext0
 15510 0340 0100     		.2byte	0x1
 15511 0342 52       		.byte	0x52
 15512 0343 B8150000 		.4byte	.LVL576-.Ltext0
 15513 0347 BE150000 		.4byte	.LVL577-.Ltext0
 15514 034b 0100     		.2byte	0x1
 15515 034d 51       		.byte	0x51
 15516 034e D0150000 		.4byte	.LVL581-.Ltext0
 15517 0352 D2150000 		.4byte	.LVL582-.Ltext0
 15518 0356 0100     		.2byte	0x1
 15519 0358 51       		.byte	0x51
 15520 0359 00000000 		.4byte	0
 15521 035d 00000000 		.4byte	0
 15522              	.LLST338:
 15523 0361 D6150000 		.4byte	.LVL583-.Ltext0
 15524 0365 F8150000 		.4byte	.LVL591-.Ltext0
 15525 0369 0100     		.2byte	0x1
 15526 036b 55       		.byte	0x55
 15527 036c 00000000 		.4byte	0
 15528 0370 00000000 		.4byte	0
 15529              	.LLST339:
 15530 0374 D6150000 		.4byte	.LVL583-.Ltext0
 15531 0378 F8150000 		.4byte	.LVL591-.Ltext0
 15532 037c 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 415


 15533 037e 54       		.byte	0x54
 15534 037f 00000000 		.4byte	0
 15535 0383 00000000 		.4byte	0
 15536              	.LLST340:
 15537 0387 D6150000 		.4byte	.LVL583-.Ltext0
 15538 038b F8150000 		.4byte	.LVL591-.Ltext0
 15539 038f 0100     		.2byte	0x1
 15540 0391 50       		.byte	0x50
 15541 0392 00000000 		.4byte	0
 15542 0396 00000000 		.4byte	0
 15543              	.LLST341:
 15544 039a E0150000 		.4byte	.LVL585-.Ltext0
 15545 039e F8150000 		.4byte	.LVL591-.Ltext0
 15546 03a2 0100     		.2byte	0x1
 15547 03a4 52       		.byte	0x52
 15548 03a5 00000000 		.4byte	0
 15549 03a9 00000000 		.4byte	0
 15550              	.LLST342:
 15551 03ad E2150000 		.4byte	.LVL586-.Ltext0
 15552 03b1 EA150000 		.4byte	.LVL588-.Ltext0
 15553 03b5 0100     		.2byte	0x1
 15554 03b7 53       		.byte	0x53
 15555 03b8 EE150000 		.4byte	.LVL589-.Ltext0
 15556 03bc F8150000 		.4byte	.LVL591-.Ltext0
 15557 03c0 0100     		.2byte	0x1
 15558 03c2 53       		.byte	0x53
 15559 03c3 00000000 		.4byte	0
 15560 03c7 00000000 		.4byte	0
 15561              	.LLST6:
 15562 03cb A4000000 		.4byte	.LFB168-.Ltext0
 15563 03cf A8000000 		.4byte	.LCFI2-.Ltext0
 15564 03d3 0200     		.2byte	0x2
 15565 03d5 7D       		.byte	0x7d
 15566 03d6 00       		.sleb128 0
 15567 03d7 A8000000 		.4byte	.LCFI2-.Ltext0
 15568 03db E8000000 		.4byte	.LFE168-.Ltext0
 15569 03df 0200     		.2byte	0x2
 15570 03e1 7D       		.byte	0x7d
 15571 03e2 0C       		.sleb128 12
 15572 03e3 00000000 		.4byte	0
 15573 03e7 00000000 		.4byte	0
 15574              	.LLST7:
 15575 03eb B4000000 		.4byte	.LVL35-.Ltext0
 15576 03ef BA000000 		.4byte	.LVL36-.Ltext0
 15577 03f3 0700     		.2byte	0x7
 15578 03f5 72       		.byte	0x72
 15579 03f6 00       		.sleb128 0
 15580 03f7 0B       		.byte	0xb
 15581 03f8 FF8F     		.2byte	0x8fff
 15582 03fa 1A       		.byte	0x1a
 15583 03fb 9F       		.byte	0x9f
 15584 03fc BA000000 		.4byte	.LVL36-.Ltext0
 15585 0400 DE000000 		.4byte	.LVL42-.Ltext0
 15586 0404 0100     		.2byte	0x1
 15587 0406 52       		.byte	0x52
 15588 0407 DE000000 		.4byte	.LVL42-.Ltext0
 15589 040b E0000000 		.4byte	.LVL43-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 416


 15590 040f 0200     		.2byte	0x2
 15591 0411 70       		.byte	0x70
 15592 0412 1C       		.sleb128 28
 15593 0413 00000000 		.4byte	0
 15594 0417 00000000 		.4byte	0
 15595              	.LLST8:
 15596 041b B2000000 		.4byte	.LVL34-.Ltext0
 15597 041f E4000000 		.4byte	.LVL44-.Ltext0
 15598 0423 0100     		.2byte	0x1
 15599 0425 54       		.byte	0x54
 15600 0426 00000000 		.4byte	0
 15601 042a 00000000 		.4byte	0
 15602              	.LLST3:
 15603 042e 50000000 		.4byte	.LFB167-.Ltext0
 15604 0432 54000000 		.4byte	.LCFI1-.Ltext0
 15605 0436 0200     		.2byte	0x2
 15606 0438 7D       		.byte	0x7d
 15607 0439 00       		.sleb128 0
 15608 043a 54000000 		.4byte	.LCFI1-.Ltext0
 15609 043e A4000000 		.4byte	.LFE167-.Ltext0
 15610 0442 0200     		.2byte	0x2
 15611 0444 7D       		.byte	0x7d
 15612 0445 10       		.sleb128 16
 15613 0446 00000000 		.4byte	0
 15614 044a 00000000 		.4byte	0
 15615              	.LLST4:
 15616 044e 60000000 		.4byte	.LVL19-.Ltext0
 15617 0452 66000000 		.4byte	.LVL20-.Ltext0
 15618 0456 0600     		.2byte	0x6
 15619 0458 72       		.byte	0x72
 15620 0459 00       		.sleb128 0
 15621 045a 09       		.byte	0x9
 15622 045b 8F       		.byte	0x8f
 15623 045c 1A       		.byte	0x1a
 15624 045d 9F       		.byte	0x9f
 15625 045e 66000000 		.4byte	.LVL20-.Ltext0
 15626 0462 9A000000 		.4byte	.LVL29-.Ltext0
 15627 0466 0100     		.2byte	0x1
 15628 0468 52       		.byte	0x52
 15629 0469 9A000000 		.4byte	.LVL29-.Ltext0
 15630 046d 9C000000 		.4byte	.LVL30-.Ltext0
 15631 0471 0200     		.2byte	0x2
 15632 0473 70       		.byte	0x70
 15633 0474 1C       		.sleb128 28
 15634 0475 00000000 		.4byte	0
 15635 0479 00000000 		.4byte	0
 15636              	.LLST5:
 15637 047d 5E000000 		.4byte	.LVL18-.Ltext0
 15638 0481 8A000000 		.4byte	.LVL26-.Ltext0
 15639 0485 0100     		.2byte	0x1
 15640 0487 54       		.byte	0x54
 15641 0488 90000000 		.4byte	.LVL27-.Ltext0
 15642 048c 94000000 		.4byte	.LVL28-.Ltext0
 15643 0490 0900     		.2byte	0x9
 15644 0492 71       		.byte	0x71
 15645 0493 14       		.sleb128 20
 15646 0494 06       		.byte	0x6
ARM GAS  /tmp/ccTsJCXT.s 			page 417


 15647 0495 34       		.byte	0x34
 15648 0496 24       		.byte	0x24
 15649 0497 74       		.byte	0x74
 15650 0498 00       		.sleb128 0
 15651 0499 21       		.byte	0x21
 15652 049a 9F       		.byte	0x9f
 15653 049b 94000000 		.4byte	.LVL28-.Ltext0
 15654 049f A0000000 		.4byte	.LVL31-.Ltext0
 15655 04a3 0100     		.2byte	0x1
 15656 04a5 54       		.byte	0x54
 15657 04a6 00000000 		.4byte	0
 15658 04aa 00000000 		.4byte	0
 15659              	.LLST242:
 15660 04ae 880F0000 		.4byte	.LFB166-.Ltext0
 15661 04b2 8C0F0000 		.4byte	.LCFI35-.Ltext0
 15662 04b6 0200     		.2byte	0x2
 15663 04b8 7D       		.byte	0x7d
 15664 04b9 00       		.sleb128 0
 15665 04ba 8C0F0000 		.4byte	.LCFI35-.Ltext0
 15666 04be E00F0000 		.4byte	.LFE166-.Ltext0
 15667 04c2 0200     		.2byte	0x2
 15668 04c4 7D       		.byte	0x7d
 15669 04c5 10       		.sleb128 16
 15670 04c6 00000000 		.4byte	0
 15671 04ca 00000000 		.4byte	0
 15672              	.LLST243:
 15673 04ce 980F0000 		.4byte	.LVL354-.Ltext0
 15674 04d2 9E0F0000 		.4byte	.LVL355-.Ltext0
 15675 04d6 0700     		.2byte	0x7
 15676 04d8 72       		.byte	0x72
 15677 04d9 00       		.sleb128 0
 15678 04da 0B       		.byte	0xb
 15679 04db FF8F     		.2byte	0x8fff
 15680 04dd 1A       		.byte	0x1a
 15681 04de 9F       		.byte	0x9f
 15682 04df 9E0F0000 		.4byte	.LVL355-.Ltext0
 15683 04e3 D40F0000 		.4byte	.LVL364-.Ltext0
 15684 04e7 0100     		.2byte	0x1
 15685 04e9 52       		.byte	0x52
 15686 04ea D40F0000 		.4byte	.LVL364-.Ltext0
 15687 04ee D60F0000 		.4byte	.LVL365-.Ltext0
 15688 04f2 0200     		.2byte	0x2
 15689 04f4 70       		.byte	0x70
 15690 04f5 18       		.sleb128 24
 15691 04f6 00000000 		.4byte	0
 15692 04fa 00000000 		.4byte	0
 15693              	.LLST244:
 15694 04fe 960F0000 		.4byte	.LVL353-.Ltext0
 15695 0502 C40F0000 		.4byte	.LVL361-.Ltext0
 15696 0506 0100     		.2byte	0x1
 15697 0508 54       		.byte	0x54
 15698 0509 CA0F0000 		.4byte	.LVL362-.Ltext0
 15699 050d CE0F0000 		.4byte	.LVL363-.Ltext0
 15700 0511 0900     		.2byte	0x9
 15701 0513 71       		.byte	0x71
 15702 0514 14       		.sleb128 20
 15703 0515 06       		.byte	0x6
ARM GAS  /tmp/ccTsJCXT.s 			page 418


 15704 0516 32       		.byte	0x32
 15705 0517 24       		.byte	0x24
 15706 0518 74       		.byte	0x74
 15707 0519 00       		.sleb128 0
 15708 051a 21       		.byte	0x21
 15709 051b 9F       		.byte	0x9f
 15710 051c CE0F0000 		.4byte	.LVL363-.Ltext0
 15711 0520 DA0F0000 		.4byte	.LVL366-.Ltext0
 15712 0524 0100     		.2byte	0x1
 15713 0526 54       		.byte	0x54
 15714 0527 00000000 		.4byte	0
 15715 052b 00000000 		.4byte	0
 15716              	.LLST0:
 15717 052f 00000000 		.4byte	.LFB165-.Ltext0
 15718 0533 04000000 		.4byte	.LCFI0-.Ltext0
 15719 0537 0200     		.2byte	0x2
 15720 0539 7D       		.byte	0x7d
 15721 053a 00       		.sleb128 0
 15722 053b 04000000 		.4byte	.LCFI0-.Ltext0
 15723 053f 50000000 		.4byte	.LFE165-.Ltext0
 15724 0543 0200     		.2byte	0x2
 15725 0545 7D       		.byte	0x7d
 15726 0546 10       		.sleb128 16
 15727 0547 00000000 		.4byte	0
 15728 054b 00000000 		.4byte	0
 15729              	.LLST1:
 15730 054f 10000000 		.4byte	.LVL3-.Ltext0
 15731 0553 16000000 		.4byte	.LVL4-.Ltext0
 15732 0557 0600     		.2byte	0x6
 15733 0559 72       		.byte	0x72
 15734 055a 00       		.sleb128 0
 15735 055b 09       		.byte	0x9
 15736 055c 8F       		.byte	0x8f
 15737 055d 1A       		.byte	0x1a
 15738 055e 9F       		.byte	0x9f
 15739 055f 16000000 		.4byte	.LVL4-.Ltext0
 15740 0563 44000000 		.4byte	.LVL13-.Ltext0
 15741 0567 0100     		.2byte	0x1
 15742 0569 52       		.byte	0x52
 15743 056a 44000000 		.4byte	.LVL13-.Ltext0
 15744 056e 46000000 		.4byte	.LVL14-.Ltext0
 15745 0572 0200     		.2byte	0x2
 15746 0574 70       		.byte	0x70
 15747 0575 18       		.sleb128 24
 15748 0576 00000000 		.4byte	0
 15749 057a 00000000 		.4byte	0
 15750              	.LLST2:
 15751 057e 0E000000 		.4byte	.LVL2-.Ltext0
 15752 0582 36000000 		.4byte	.LVL10-.Ltext0
 15753 0586 0100     		.2byte	0x1
 15754 0588 54       		.byte	0x54
 15755 0589 3C000000 		.4byte	.LVL11-.Ltext0
 15756 058d 3E000000 		.4byte	.LVL12-.Ltext0
 15757 0591 0700     		.2byte	0x7
 15758 0593 74       		.byte	0x74
 15759 0594 00       		.sleb128 0
 15760 0595 71       		.byte	0x71
ARM GAS  /tmp/ccTsJCXT.s 			page 419


 15761 0596 14       		.sleb128 20
 15762 0597 06       		.byte	0x6
 15763 0598 21       		.byte	0x21
 15764 0599 9F       		.byte	0x9f
 15765 059a 3E000000 		.4byte	.LVL12-.Ltext0
 15766 059e 4A000000 		.4byte	.LVL15-.Ltext0
 15767 05a2 0100     		.2byte	0x1
 15768 05a4 54       		.byte	0x54
 15769 05a5 00000000 		.4byte	0
 15770 05a9 00000000 		.4byte	0
 15771              	.LLST223:
 15772 05ad 7A0D0000 		.4byte	.LFB164-.Ltext0
 15773 05b1 7E0D0000 		.4byte	.LCFI28-.Ltext0
 15774 05b5 0200     		.2byte	0x2
 15775 05b7 7D       		.byte	0x7d
 15776 05b8 00       		.sleb128 0
 15777 05b9 7E0D0000 		.4byte	.LCFI28-.Ltext0
 15778 05bd DC0D0000 		.4byte	.LFE164-.Ltext0
 15779 05c1 0200     		.2byte	0x2
 15780 05c3 7D       		.byte	0x7d
 15781 05c4 08       		.sleb128 8
 15782 05c5 00000000 		.4byte	0
 15783 05c9 00000000 		.4byte	0
 15784              	.LLST224:
 15785 05cd 820D0000 		.4byte	.LVL301-.Ltext0
 15786 05d1 B80D0000 		.4byte	.LVL306-.Ltext0
 15787 05d5 0100     		.2byte	0x1
 15788 05d7 53       		.byte	0x53
 15789 05d8 BA0D0000 		.4byte	.LVL307-.Ltext0
 15790 05dc BE0D0000 		.4byte	.LVL308-.Ltext0
 15791 05e0 0100     		.2byte	0x1
 15792 05e2 53       		.byte	0x53
 15793 05e3 BE0D0000 		.4byte	.LVL308-.Ltext0
 15794 05e7 C00D0000 		.4byte	.LVL309-.Ltext0
 15795 05eb 0200     		.2byte	0x2
 15796 05ed 70       		.byte	0x70
 15797 05ee 00       		.sleb128 0
 15798 05ef 00000000 		.4byte	0
 15799 05f3 00000000 		.4byte	0
 15800              	.LLST216:
 15801 05f7 340D0000 		.4byte	.LFB163-.Ltext0
 15802 05fb 360D0000 		.4byte	.LCFI26-.Ltext0
 15803 05ff 0200     		.2byte	0x2
 15804 0601 7D       		.byte	0x7d
 15805 0602 00       		.sleb128 0
 15806 0603 360D0000 		.4byte	.LCFI26-.Ltext0
 15807 0607 440D0000 		.4byte	.LFE163-.Ltext0
 15808 060b 0200     		.2byte	0x2
 15809 060d 7D       		.byte	0x7d
 15810 060e 08       		.sleb128 8
 15811 060f 00000000 		.4byte	0
 15812 0613 00000000 		.4byte	0
 15813              	.LLST217:
 15814 0617 340D0000 		.4byte	.LVL291-.Ltext0
 15815 061b 3A0D0000 		.4byte	.LVL292-.Ltext0
 15816 061f 0100     		.2byte	0x1
 15817 0621 50       		.byte	0x50
ARM GAS  /tmp/ccTsJCXT.s 			page 420


 15818 0622 3A0D0000 		.4byte	.LVL292-.Ltext0
 15819 0626 440D0000 		.4byte	.LFE163-.Ltext0
 15820 062a 0400     		.2byte	0x4
 15821 062c F3       		.byte	0xf3
 15822 062d 01       		.uleb128 0x1
 15823 062e 50       		.byte	0x50
 15824 062f 9F       		.byte	0x9f
 15825 0630 00000000 		.4byte	0
 15826 0634 00000000 		.4byte	0
 15827              	.LLST218:
 15828 0638 3A0D0000 		.4byte	.LVL292-.Ltext0
 15829 063c 410D0000 		.4byte	.LVL293-1-.Ltext0
 15830 0640 0100     		.2byte	0x1
 15831 0642 50       		.byte	0x50
 15832 0643 00000000 		.4byte	0
 15833 0647 00000000 		.4byte	0
 15834              	.LLST213:
 15835 064b 220D0000 		.4byte	.LFB162-.Ltext0
 15836 064f 240D0000 		.4byte	.LCFI25-.Ltext0
 15837 0653 0200     		.2byte	0x2
 15838 0655 7D       		.byte	0x7d
 15839 0656 00       		.sleb128 0
 15840 0657 240D0000 		.4byte	.LCFI25-.Ltext0
 15841 065b 320D0000 		.4byte	.LFE162-.Ltext0
 15842 065f 0200     		.2byte	0x2
 15843 0661 7D       		.byte	0x7d
 15844 0662 08       		.sleb128 8
 15845 0663 00000000 		.4byte	0
 15846 0667 00000000 		.4byte	0
 15847              	.LLST214:
 15848 066b 220D0000 		.4byte	.LVL288-.Ltext0
 15849 066f 280D0000 		.4byte	.LVL289-.Ltext0
 15850 0673 0100     		.2byte	0x1
 15851 0675 50       		.byte	0x50
 15852 0676 280D0000 		.4byte	.LVL289-.Ltext0
 15853 067a 320D0000 		.4byte	.LFE162-.Ltext0
 15854 067e 0400     		.2byte	0x4
 15855 0680 F3       		.byte	0xf3
 15856 0681 01       		.uleb128 0x1
 15857 0682 50       		.byte	0x50
 15858 0683 9F       		.byte	0x9f
 15859 0684 00000000 		.4byte	0
 15860 0688 00000000 		.4byte	0
 15861              	.LLST215:
 15862 068c 280D0000 		.4byte	.LVL289-.Ltext0
 15863 0690 2F0D0000 		.4byte	.LVL290-1-.Ltext0
 15864 0694 0100     		.2byte	0x1
 15865 0696 50       		.byte	0x50
 15866 0697 00000000 		.4byte	0
 15867 069b 00000000 		.4byte	0
 15868              	.LLST200:
 15869 069f D20A0000 		.4byte	.LFB161-.Ltext0
 15870 06a3 D40A0000 		.4byte	.LCFI17-.Ltext0
 15871 06a7 0200     		.2byte	0x2
 15872 06a9 7D       		.byte	0x7d
 15873 06aa 00       		.sleb128 0
 15874 06ab D40A0000 		.4byte	.LCFI17-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 421


 15875 06af E20A0000 		.4byte	.LFE161-.Ltext0
 15876 06b3 0200     		.2byte	0x2
 15877 06b5 7D       		.byte	0x7d
 15878 06b6 08       		.sleb128 8
 15879 06b7 00000000 		.4byte	0
 15880 06bb 00000000 		.4byte	0
 15881              	.LLST201:
 15882 06bf D20A0000 		.4byte	.LVL241-.Ltext0
 15883 06c3 D80A0000 		.4byte	.LVL242-.Ltext0
 15884 06c7 0100     		.2byte	0x1
 15885 06c9 50       		.byte	0x50
 15886 06ca D80A0000 		.4byte	.LVL242-.Ltext0
 15887 06ce E20A0000 		.4byte	.LFE161-.Ltext0
 15888 06d2 0400     		.2byte	0x4
 15889 06d4 F3       		.byte	0xf3
 15890 06d5 01       		.uleb128 0x1
 15891 06d6 50       		.byte	0x50
 15892 06d7 9F       		.byte	0x9f
 15893 06d8 00000000 		.4byte	0
 15894 06dc 00000000 		.4byte	0
 15895              	.LLST202:
 15896 06e0 D80A0000 		.4byte	.LVL242-.Ltext0
 15897 06e4 DF0A0000 		.4byte	.LVL243-1-.Ltext0
 15898 06e8 0100     		.2byte	0x1
 15899 06ea 50       		.byte	0x50
 15900 06eb 00000000 		.4byte	0
 15901 06ef 00000000 		.4byte	0
 15902              	.LLST197:
 15903 06f3 C00A0000 		.4byte	.LFB160-.Ltext0
 15904 06f7 C20A0000 		.4byte	.LCFI16-.Ltext0
 15905 06fb 0200     		.2byte	0x2
 15906 06fd 7D       		.byte	0x7d
 15907 06fe 00       		.sleb128 0
 15908 06ff C20A0000 		.4byte	.LCFI16-.Ltext0
 15909 0703 D00A0000 		.4byte	.LFE160-.Ltext0
 15910 0707 0200     		.2byte	0x2
 15911 0709 7D       		.byte	0x7d
 15912 070a 08       		.sleb128 8
 15913 070b 00000000 		.4byte	0
 15914 070f 00000000 		.4byte	0
 15915              	.LLST198:
 15916 0713 C00A0000 		.4byte	.LVL238-.Ltext0
 15917 0717 C60A0000 		.4byte	.LVL239-.Ltext0
 15918 071b 0100     		.2byte	0x1
 15919 071d 50       		.byte	0x50
 15920 071e C60A0000 		.4byte	.LVL239-.Ltext0
 15921 0722 D00A0000 		.4byte	.LFE160-.Ltext0
 15922 0726 0400     		.2byte	0x4
 15923 0728 F3       		.byte	0xf3
 15924 0729 01       		.uleb128 0x1
 15925 072a 50       		.byte	0x50
 15926 072b 9F       		.byte	0x9f
 15927 072c 00000000 		.4byte	0
 15928 0730 00000000 		.4byte	0
 15929              	.LLST199:
 15930 0734 C60A0000 		.4byte	.LVL239-.Ltext0
 15931 0738 CD0A0000 		.4byte	.LVL240-1-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 422


 15932 073c 0100     		.2byte	0x1
 15933 073e 50       		.byte	0x50
 15934 073f 00000000 		.4byte	0
 15935 0743 00000000 		.4byte	0
 15936              	.LLST205:
 15937 0747 240B0000 		.4byte	.LFB159-.Ltext0
 15938 074b 280B0000 		.4byte	.LCFI19-.Ltext0
 15939 074f 0200     		.2byte	0x2
 15940 0751 7D       		.byte	0x7d
 15941 0752 00       		.sleb128 0
 15942 0753 280B0000 		.4byte	.LCFI19-.Ltext0
 15943 0757 600B0000 		.4byte	.LFE159-.Ltext0
 15944 075b 0200     		.2byte	0x2
 15945 075d 7D       		.byte	0x7d
 15946 075e 08       		.sleb128 8
 15947 075f 00000000 		.4byte	0
 15948 0763 00000000 		.4byte	0
 15949              	.LLST206:
 15950 0767 240B0000 		.4byte	.LVL249-.Ltext0
 15951 076b 380B0000 		.4byte	.LVL251-.Ltext0
 15952 076f 0100     		.2byte	0x1
 15953 0771 50       		.byte	0x50
 15954 0772 380B0000 		.4byte	.LVL251-.Ltext0
 15955 0776 420B0000 		.4byte	.LVL253-.Ltext0
 15956 077a 0400     		.2byte	0x4
 15957 077c F3       		.byte	0xf3
 15958 077d 01       		.uleb128 0x1
 15959 077e 50       		.byte	0x50
 15960 077f 9F       		.byte	0x9f
 15961 0780 420B0000 		.4byte	.LVL253-.Ltext0
 15962 0784 600B0000 		.4byte	.LFE159-.Ltext0
 15963 0788 0100     		.2byte	0x1
 15964 078a 50       		.byte	0x50
 15965 078b 00000000 		.4byte	0
 15966 078f 00000000 		.4byte	0
 15967              	.LLST203:
 15968 0793 E60A0000 		.4byte	.LFB158-.Ltext0
 15969 0797 EA0A0000 		.4byte	.LCFI18-.Ltext0
 15970 079b 0200     		.2byte	0x2
 15971 079d 7D       		.byte	0x7d
 15972 079e 00       		.sleb128 0
 15973 079f EA0A0000 		.4byte	.LCFI18-.Ltext0
 15974 07a3 220B0000 		.4byte	.LFE158-.Ltext0
 15975 07a7 0200     		.2byte	0x2
 15976 07a9 7D       		.byte	0x7d
 15977 07aa 08       		.sleb128 8
 15978 07ab 00000000 		.4byte	0
 15979 07af 00000000 		.4byte	0
 15980              	.LLST204:
 15981 07b3 E60A0000 		.4byte	.LVL244-.Ltext0
 15982 07b7 FA0A0000 		.4byte	.LVL246-.Ltext0
 15983 07bb 0100     		.2byte	0x1
 15984 07bd 50       		.byte	0x50
 15985 07be FA0A0000 		.4byte	.LVL246-.Ltext0
 15986 07c2 040B0000 		.4byte	.LVL248-.Ltext0
 15987 07c6 0400     		.2byte	0x4
 15988 07c8 F3       		.byte	0xf3
ARM GAS  /tmp/ccTsJCXT.s 			page 423


 15989 07c9 01       		.uleb128 0x1
 15990 07ca 50       		.byte	0x50
 15991 07cb 9F       		.byte	0x9f
 15992 07cc 040B0000 		.4byte	.LVL248-.Ltext0
 15993 07d0 220B0000 		.4byte	.LFE158-.Ltext0
 15994 07d4 0100     		.2byte	0x1
 15995 07d6 50       		.byte	0x50
 15996 07d7 00000000 		.4byte	0
 15997 07db 00000000 		.4byte	0
 15998              	.LLST209:
 15999 07df A00B0000 		.4byte	.LFB157-.Ltext0
 16000 07e3 A40B0000 		.4byte	.LCFI21-.Ltext0
 16001 07e7 0200     		.2byte	0x2
 16002 07e9 7D       		.byte	0x7d
 16003 07ea 00       		.sleb128 0
 16004 07eb A40B0000 		.4byte	.LCFI21-.Ltext0
 16005 07ef DC0B0000 		.4byte	.LFE157-.Ltext0
 16006 07f3 0200     		.2byte	0x2
 16007 07f5 7D       		.byte	0x7d
 16008 07f6 08       		.sleb128 8
 16009 07f7 00000000 		.4byte	0
 16010 07fb 00000000 		.4byte	0
 16011              	.LLST210:
 16012 07ff A00B0000 		.4byte	.LVL259-.Ltext0
 16013 0803 B40B0000 		.4byte	.LVL261-.Ltext0
 16014 0807 0100     		.2byte	0x1
 16015 0809 50       		.byte	0x50
 16016 080a B40B0000 		.4byte	.LVL261-.Ltext0
 16017 080e BE0B0000 		.4byte	.LVL263-.Ltext0
 16018 0812 0400     		.2byte	0x4
 16019 0814 F3       		.byte	0xf3
 16020 0815 01       		.uleb128 0x1
 16021 0816 50       		.byte	0x50
 16022 0817 9F       		.byte	0x9f
 16023 0818 BE0B0000 		.4byte	.LVL263-.Ltext0
 16024 081c DC0B0000 		.4byte	.LFE157-.Ltext0
 16025 0820 0100     		.2byte	0x1
 16026 0822 50       		.byte	0x50
 16027 0823 00000000 		.4byte	0
 16028 0827 00000000 		.4byte	0
 16029              	.LLST207:
 16030 082b 620B0000 		.4byte	.LFB156-.Ltext0
 16031 082f 660B0000 		.4byte	.LCFI20-.Ltext0
 16032 0833 0200     		.2byte	0x2
 16033 0835 7D       		.byte	0x7d
 16034 0836 00       		.sleb128 0
 16035 0837 660B0000 		.4byte	.LCFI20-.Ltext0
 16036 083b 9E0B0000 		.4byte	.LFE156-.Ltext0
 16037 083f 0200     		.2byte	0x2
 16038 0841 7D       		.byte	0x7d
 16039 0842 08       		.sleb128 8
 16040 0843 00000000 		.4byte	0
 16041 0847 00000000 		.4byte	0
 16042              	.LLST208:
 16043 084b 620B0000 		.4byte	.LVL254-.Ltext0
 16044 084f 760B0000 		.4byte	.LVL256-.Ltext0
 16045 0853 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 424


 16046 0855 50       		.byte	0x50
 16047 0856 760B0000 		.4byte	.LVL256-.Ltext0
 16048 085a 800B0000 		.4byte	.LVL258-.Ltext0
 16049 085e 0400     		.2byte	0x4
 16050 0860 F3       		.byte	0xf3
 16051 0861 01       		.uleb128 0x1
 16052 0862 50       		.byte	0x50
 16053 0863 9F       		.byte	0x9f
 16054 0864 800B0000 		.4byte	.LVL258-.Ltext0
 16055 0868 9E0B0000 		.4byte	.LFE156-.Ltext0
 16056 086c 0100     		.2byte	0x1
 16057 086e 50       		.byte	0x50
 16058 086f 00000000 		.4byte	0
 16059 0873 00000000 		.4byte	0
 16060              	.LLST219:
 16061 0877 460D0000 		.4byte	.LFB155-.Ltext0
 16062 087b 480D0000 		.4byte	.LCFI27-.Ltext0
 16063 087f 0200     		.2byte	0x2
 16064 0881 7D       		.byte	0x7d
 16065 0882 00       		.sleb128 0
 16066 0883 480D0000 		.4byte	.LCFI27-.Ltext0
 16067 0887 560D0000 		.4byte	.LFE155-.Ltext0
 16068 088b 0200     		.2byte	0x2
 16069 088d 7D       		.byte	0x7d
 16070 088e 08       		.sleb128 8
 16071 088f 00000000 		.4byte	0
 16072 0893 00000000 		.4byte	0
 16073              	.LLST220:
 16074 0897 460D0000 		.4byte	.LVL295-.Ltext0
 16075 089b 4C0D0000 		.4byte	.LVL296-.Ltext0
 16076 089f 0100     		.2byte	0x1
 16077 08a1 50       		.byte	0x50
 16078 08a2 4C0D0000 		.4byte	.LVL296-.Ltext0
 16079 08a6 560D0000 		.4byte	.LFE155-.Ltext0
 16080 08aa 0400     		.2byte	0x4
 16081 08ac F3       		.byte	0xf3
 16082 08ad 01       		.uleb128 0x1
 16083 08ae 50       		.byte	0x50
 16084 08af 9F       		.byte	0x9f
 16085 08b0 00000000 		.4byte	0
 16086 08b4 00000000 		.4byte	0
 16087              	.LLST221:
 16088 08b8 4C0D0000 		.4byte	.LVL296-.Ltext0
 16089 08bc 530D0000 		.4byte	.LVL297-1-.Ltext0
 16090 08c0 0100     		.2byte	0x1
 16091 08c2 50       		.byte	0x50
 16092 08c3 00000000 		.4byte	0
 16093 08c7 00000000 		.4byte	0
 16094              	.LLST195:
 16095 08cb 8C0A0000 		.4byte	.LVL228-.Ltext0
 16096 08cf A60A0000 		.4byte	.LVL229-.Ltext0
 16097 08d3 0100     		.2byte	0x1
 16098 08d5 50       		.byte	0x50
 16099 08d6 A60A0000 		.4byte	.LVL229-.Ltext0
 16100 08da A80A0000 		.4byte	.LVL230-.Ltext0
 16101 08de 0400     		.2byte	0x4
 16102 08e0 F3       		.byte	0xf3
ARM GAS  /tmp/ccTsJCXT.s 			page 425


 16103 08e1 01       		.uleb128 0x1
 16104 08e2 50       		.byte	0x50
 16105 08e3 9F       		.byte	0x9f
 16106 08e4 A80A0000 		.4byte	.LVL230-.Ltext0
 16107 08e8 AC0A0000 		.4byte	.LVL231-.Ltext0
 16108 08ec 0100     		.2byte	0x1
 16109 08ee 50       		.byte	0x50
 16110 08ef AC0A0000 		.4byte	.LVL231-.Ltext0
 16111 08f3 AE0A0000 		.4byte	.LVL232-.Ltext0
 16112 08f7 0400     		.2byte	0x4
 16113 08f9 F3       		.byte	0xf3
 16114 08fa 01       		.uleb128 0x1
 16115 08fb 50       		.byte	0x50
 16116 08fc 9F       		.byte	0x9f
 16117 08fd AE0A0000 		.4byte	.LVL232-.Ltext0
 16118 0901 B20A0000 		.4byte	.LVL233-.Ltext0
 16119 0905 0100     		.2byte	0x1
 16120 0907 50       		.byte	0x50
 16121 0908 B20A0000 		.4byte	.LVL233-.Ltext0
 16122 090c B40A0000 		.4byte	.LVL234-.Ltext0
 16123 0910 0400     		.2byte	0x4
 16124 0912 F3       		.byte	0xf3
 16125 0913 01       		.uleb128 0x1
 16126 0914 50       		.byte	0x50
 16127 0915 9F       		.byte	0x9f
 16128 0916 B40A0000 		.4byte	.LVL234-.Ltext0
 16129 091a B80A0000 		.4byte	.LVL235-.Ltext0
 16130 091e 0100     		.2byte	0x1
 16131 0920 50       		.byte	0x50
 16132 0921 B80A0000 		.4byte	.LVL235-.Ltext0
 16133 0925 BA0A0000 		.4byte	.LVL236-.Ltext0
 16134 0929 0400     		.2byte	0x4
 16135 092b F3       		.byte	0xf3
 16136 092c 01       		.uleb128 0x1
 16137 092d 50       		.byte	0x50
 16138 092e 9F       		.byte	0x9f
 16139 092f BA0A0000 		.4byte	.LVL236-.Ltext0
 16140 0933 BC0A0000 		.4byte	.LVL237-.Ltext0
 16141 0937 0100     		.2byte	0x1
 16142 0939 50       		.byte	0x50
 16143 093a BC0A0000 		.4byte	.LVL237-.Ltext0
 16144 093e BE0A0000 		.4byte	.LFE138-.Ltext0
 16145 0942 0400     		.2byte	0x4
 16146 0944 F3       		.byte	0xf3
 16147 0945 01       		.uleb128 0x1
 16148 0946 50       		.byte	0x50
 16149 0947 9F       		.byte	0x9f
 16150 0948 00000000 		.4byte	0
 16151 094c 00000000 		.4byte	0
 16152              	.LLST196:
 16153 0950 8C0A0000 		.4byte	.LVL228-.Ltext0
 16154 0954 A60A0000 		.4byte	.LVL229-.Ltext0
 16155 0958 0200     		.2byte	0x2
 16156 095a 30       		.byte	0x30
 16157 095b 9F       		.byte	0x9f
 16158 095c A60A0000 		.4byte	.LVL229-.Ltext0
 16159 0960 A80A0000 		.4byte	.LVL230-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 426


 16160 0964 0100     		.2byte	0x1
 16161 0966 50       		.byte	0x50
 16162 0967 A80A0000 		.4byte	.LVL230-.Ltext0
 16163 096b AC0A0000 		.4byte	.LVL231-.Ltext0
 16164 096f 0200     		.2byte	0x2
 16165 0971 30       		.byte	0x30
 16166 0972 9F       		.byte	0x9f
 16167 0973 AC0A0000 		.4byte	.LVL231-.Ltext0
 16168 0977 AE0A0000 		.4byte	.LVL232-.Ltext0
 16169 097b 0100     		.2byte	0x1
 16170 097d 50       		.byte	0x50
 16171 097e AE0A0000 		.4byte	.LVL232-.Ltext0
 16172 0982 B20A0000 		.4byte	.LVL233-.Ltext0
 16173 0986 0200     		.2byte	0x2
 16174 0988 30       		.byte	0x30
 16175 0989 9F       		.byte	0x9f
 16176 098a B20A0000 		.4byte	.LVL233-.Ltext0
 16177 098e B40A0000 		.4byte	.LVL234-.Ltext0
 16178 0992 0100     		.2byte	0x1
 16179 0994 50       		.byte	0x50
 16180 0995 B40A0000 		.4byte	.LVL234-.Ltext0
 16181 0999 B80A0000 		.4byte	.LVL235-.Ltext0
 16182 099d 0200     		.2byte	0x2
 16183 099f 30       		.byte	0x30
 16184 09a0 9F       		.byte	0x9f
 16185 09a1 B80A0000 		.4byte	.LVL235-.Ltext0
 16186 09a5 BA0A0000 		.4byte	.LVL236-.Ltext0
 16187 09a9 0100     		.2byte	0x1
 16188 09ab 50       		.byte	0x50
 16189 09ac BA0A0000 		.4byte	.LVL236-.Ltext0
 16190 09b0 BE0A0000 		.4byte	.LFE138-.Ltext0
 16191 09b4 0200     		.2byte	0x2
 16192 09b6 30       		.byte	0x30
 16193 09b7 9F       		.byte	0x9f
 16194 09b8 00000000 		.4byte	0
 16195 09bc 00000000 		.4byte	0
 16196              	.LLST346:
 16197 09c0 4A160000 		.4byte	.LFB137-.Ltext0
 16198 09c4 4C160000 		.4byte	.LCFI49-.Ltext0
 16199 09c8 0200     		.2byte	0x2
 16200 09ca 7D       		.byte	0x7d
 16201 09cb 00       		.sleb128 0
 16202 09cc 4C160000 		.4byte	.LCFI49-.Ltext0
 16203 09d0 98160000 		.4byte	.LFE137-.Ltext0
 16204 09d4 0200     		.2byte	0x2
 16205 09d6 7D       		.byte	0x7d
 16206 09d7 10       		.sleb128 16
 16207 09d8 00000000 		.4byte	0
 16208 09dc 00000000 		.4byte	0
 16209              	.LLST347:
 16210 09e0 4A160000 		.4byte	.LVL597-.Ltext0
 16211 09e4 67160000 		.4byte	.LVL598-1-.Ltext0
 16212 09e8 0100     		.2byte	0x1
 16213 09ea 50       		.byte	0x50
 16214 09eb 67160000 		.4byte	.LVL598-1-.Ltext0
 16215 09ef 94160000 		.4byte	.LVL600-.Ltext0
 16216 09f3 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 427


 16217 09f5 54       		.byte	0x54
 16218 09f6 94160000 		.4byte	.LVL600-.Ltext0
 16219 09fa 96160000 		.4byte	.LVL601-.Ltext0
 16220 09fe 0100     		.2byte	0x1
 16221 0a00 50       		.byte	0x50
 16222 0a01 96160000 		.4byte	.LVL601-.Ltext0
 16223 0a05 98160000 		.4byte	.LFE137-.Ltext0
 16224 0a09 0100     		.2byte	0x1
 16225 0a0b 54       		.byte	0x54
 16226 0a0c 00000000 		.4byte	0
 16227 0a10 00000000 		.4byte	0
 16228              	.LLST348:
 16229 0a14 4A160000 		.4byte	.LVL597-.Ltext0
 16230 0a18 67160000 		.4byte	.LVL598-1-.Ltext0
 16231 0a1c 0100     		.2byte	0x1
 16232 0a1e 51       		.byte	0x51
 16233 0a1f 67160000 		.4byte	.LVL598-1-.Ltext0
 16234 0a23 94160000 		.4byte	.LVL600-.Ltext0
 16235 0a27 0400     		.2byte	0x4
 16236 0a29 F3       		.byte	0xf3
 16237 0a2a 01       		.uleb128 0x1
 16238 0a2b 51       		.byte	0x51
 16239 0a2c 9F       		.byte	0x9f
 16240 0a2d 94160000 		.4byte	.LVL600-.Ltext0
 16241 0a31 98160000 		.4byte	.LFE137-.Ltext0
 16242 0a35 0100     		.2byte	0x1
 16243 0a37 51       		.byte	0x51
 16244 0a38 00000000 		.4byte	0
 16245 0a3c 00000000 		.4byte	0
 16246              	.LLST343:
 16247 0a40 FC150000 		.4byte	.LFB136-.Ltext0
 16248 0a44 FE150000 		.4byte	.LCFI48-.Ltext0
 16249 0a48 0200     		.2byte	0x2
 16250 0a4a 7D       		.byte	0x7d
 16251 0a4b 00       		.sleb128 0
 16252 0a4c FE150000 		.4byte	.LCFI48-.Ltext0
 16253 0a50 4A160000 		.4byte	.LFE136-.Ltext0
 16254 0a54 0200     		.2byte	0x2
 16255 0a56 7D       		.byte	0x7d
 16256 0a57 10       		.sleb128 16
 16257 0a58 00000000 		.4byte	0
 16258 0a5c 00000000 		.4byte	0
 16259              	.LLST344:
 16260 0a60 FC150000 		.4byte	.LVL592-.Ltext0
 16261 0a64 19160000 		.4byte	.LVL593-1-.Ltext0
 16262 0a68 0100     		.2byte	0x1
 16263 0a6a 50       		.byte	0x50
 16264 0a6b 19160000 		.4byte	.LVL593-1-.Ltext0
 16265 0a6f 46160000 		.4byte	.LVL595-.Ltext0
 16266 0a73 0100     		.2byte	0x1
 16267 0a75 54       		.byte	0x54
 16268 0a76 46160000 		.4byte	.LVL595-.Ltext0
 16269 0a7a 48160000 		.4byte	.LVL596-.Ltext0
 16270 0a7e 0100     		.2byte	0x1
 16271 0a80 50       		.byte	0x50
 16272 0a81 48160000 		.4byte	.LVL596-.Ltext0
 16273 0a85 4A160000 		.4byte	.LFE136-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 428


 16274 0a89 0100     		.2byte	0x1
 16275 0a8b 54       		.byte	0x54
 16276 0a8c 00000000 		.4byte	0
 16277 0a90 00000000 		.4byte	0
 16278              	.LLST345:
 16279 0a94 FC150000 		.4byte	.LVL592-.Ltext0
 16280 0a98 19160000 		.4byte	.LVL593-1-.Ltext0
 16281 0a9c 0100     		.2byte	0x1
 16282 0a9e 51       		.byte	0x51
 16283 0a9f 19160000 		.4byte	.LVL593-1-.Ltext0
 16284 0aa3 46160000 		.4byte	.LVL595-.Ltext0
 16285 0aa7 0400     		.2byte	0x4
 16286 0aa9 F3       		.byte	0xf3
 16287 0aaa 01       		.uleb128 0x1
 16288 0aab 51       		.byte	0x51
 16289 0aac 9F       		.byte	0x9f
 16290 0aad 46160000 		.4byte	.LVL595-.Ltext0
 16291 0ab1 4A160000 		.4byte	.LFE136-.Ltext0
 16292 0ab5 0100     		.2byte	0x1
 16293 0ab7 51       		.byte	0x51
 16294 0ab8 00000000 		.4byte	0
 16295 0abc 00000000 		.4byte	0
 16296              	.LLST192:
 16297 0ac0 7C0A0000 		.4byte	.LVL223-.Ltext0
 16298 0ac4 800A0000 		.4byte	.LVL224-.Ltext0
 16299 0ac8 0100     		.2byte	0x1
 16300 0aca 50       		.byte	0x50
 16301 0acb 800A0000 		.4byte	.LVL224-.Ltext0
 16302 0acf 8C0A0000 		.4byte	.LFE135-.Ltext0
 16303 0ad3 0400     		.2byte	0x4
 16304 0ad5 F3       		.byte	0xf3
 16305 0ad6 01       		.uleb128 0x1
 16306 0ad7 50       		.byte	0x50
 16307 0ad8 9F       		.byte	0x9f
 16308 0ad9 00000000 		.4byte	0
 16309 0add 00000000 		.4byte	0
 16310              	.LLST193:
 16311 0ae1 7C0A0000 		.4byte	.LVL223-.Ltext0
 16312 0ae5 880A0000 		.4byte	.LVL227-.Ltext0
 16313 0ae9 0100     		.2byte	0x1
 16314 0aeb 51       		.byte	0x51
 16315 0aec 880A0000 		.4byte	.LVL227-.Ltext0
 16316 0af0 8C0A0000 		.4byte	.LFE135-.Ltext0
 16317 0af4 0400     		.2byte	0x4
 16318 0af6 F3       		.byte	0xf3
 16319 0af7 01       		.uleb128 0x1
 16320 0af8 51       		.byte	0x51
 16321 0af9 9F       		.byte	0x9f
 16322 0afa 00000000 		.4byte	0
 16323 0afe 00000000 		.4byte	0
 16324              	.LLST194:
 16325 0b02 820A0000 		.4byte	.LVL225-.Ltext0
 16326 0b06 880A0000 		.4byte	.LVL227-.Ltext0
 16327 0b0a 0100     		.2byte	0x1
 16328 0b0c 53       		.byte	0x53
 16329 0b0d 880A0000 		.4byte	.LVL227-.Ltext0
 16330 0b11 8C0A0000 		.4byte	.LFE135-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 429


 16331 0b15 0100     		.2byte	0x1
 16332 0b17 51       		.byte	0x51
 16333 0b18 00000000 		.4byte	0
 16334 0b1c 00000000 		.4byte	0
 16335              	.LLST299:
 16336 0b20 30140000 		.4byte	.LFB134-.Ltext0
 16337 0b24 36140000 		.4byte	.LCFI46-.Ltext0
 16338 0b28 0200     		.2byte	0x2
 16339 0b2a 7D       		.byte	0x7d
 16340 0b2b 00       		.sleb128 0
 16341 0b2c 36140000 		.4byte	.LCFI46-.Ltext0
 16342 0b30 58150000 		.4byte	.LFE134-.Ltext0
 16343 0b34 0200     		.2byte	0x2
 16344 0b36 7D       		.byte	0x7d
 16345 0b37 10       		.sleb128 16
 16346 0b38 00000000 		.4byte	0
 16347 0b3c 00000000 		.4byte	0
 16348              	.LLST300:
 16349 0b40 30140000 		.4byte	.LVL495-.Ltext0
 16350 0b44 3E140000 		.4byte	.LVL496-.Ltext0
 16351 0b48 0100     		.2byte	0x1
 16352 0b4a 50       		.byte	0x50
 16353 0b4b 3E140000 		.4byte	.LVL496-.Ltext0
 16354 0b4f 58150000 		.4byte	.LFE134-.Ltext0
 16355 0b53 0100     		.2byte	0x1
 16356 0b55 54       		.byte	0x54
 16357 0b56 00000000 		.4byte	0
 16358 0b5a 00000000 		.4byte	0
 16359              	.LLST301:
 16360 0b5e 30140000 		.4byte	.LVL495-.Ltext0
 16361 0b62 68140000 		.4byte	.LVL501-.Ltext0
 16362 0b66 0100     		.2byte	0x1
 16363 0b68 51       		.byte	0x51
 16364 0b69 68140000 		.4byte	.LVL501-.Ltext0
 16365 0b6d 76140000 		.4byte	.LVL502-.Ltext0
 16366 0b71 0400     		.2byte	0x4
 16367 0b73 F3       		.byte	0xf3
 16368 0b74 01       		.uleb128 0x1
 16369 0b75 51       		.byte	0x51
 16370 0b76 9F       		.byte	0x9f
 16371 0b77 76140000 		.4byte	.LVL502-.Ltext0
 16372 0b7b 9C140000 		.4byte	.LVL509-.Ltext0
 16373 0b7f 0100     		.2byte	0x1
 16374 0b81 51       		.byte	0x51
 16375 0b82 9C140000 		.4byte	.LVL509-.Ltext0
 16376 0b86 C6140000 		.4byte	.LVL520-.Ltext0
 16377 0b8a 0400     		.2byte	0x4
 16378 0b8c F3       		.byte	0xf3
 16379 0b8d 01       		.uleb128 0x1
 16380 0b8e 51       		.byte	0x51
 16381 0b8f 9F       		.byte	0x9f
 16382 0b90 C6140000 		.4byte	.LVL520-.Ltext0
 16383 0b94 D6140000 		.4byte	.LVL521-.Ltext0
 16384 0b98 0100     		.2byte	0x1
 16385 0b9a 51       		.byte	0x51
 16386 0b9b D6140000 		.4byte	.LVL521-.Ltext0
 16387 0b9f E4140000 		.4byte	.LVL523-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 430


 16388 0ba3 0400     		.2byte	0x4
 16389 0ba5 F3       		.byte	0xf3
 16390 0ba6 01       		.uleb128 0x1
 16391 0ba7 51       		.byte	0x51
 16392 0ba8 9F       		.byte	0x9f
 16393 0ba9 E4140000 		.4byte	.LVL523-.Ltext0
 16394 0bad EA140000 		.4byte	.LVL524-.Ltext0
 16395 0bb1 0100     		.2byte	0x1
 16396 0bb3 51       		.byte	0x51
 16397 0bb4 EA140000 		.4byte	.LVL524-.Ltext0
 16398 0bb8 FA140000 		.4byte	.LVL528-.Ltext0
 16399 0bbc 0400     		.2byte	0x4
 16400 0bbe F3       		.byte	0xf3
 16401 0bbf 01       		.uleb128 0x1
 16402 0bc0 51       		.byte	0x51
 16403 0bc1 9F       		.byte	0x9f
 16404 0bc2 FA140000 		.4byte	.LVL528-.Ltext0
 16405 0bc6 00150000 		.4byte	.LVL530-.Ltext0
 16406 0bca 0100     		.2byte	0x1
 16407 0bcc 51       		.byte	0x51
 16408 0bcd 00150000 		.4byte	.LVL530-.Ltext0
 16409 0bd1 2A150000 		.4byte	.LVL541-.Ltext0
 16410 0bd5 0400     		.2byte	0x4
 16411 0bd7 F3       		.byte	0xf3
 16412 0bd8 01       		.uleb128 0x1
 16413 0bd9 51       		.byte	0x51
 16414 0bda 9F       		.byte	0x9f
 16415 0bdb 2A150000 		.4byte	.LVL541-.Ltext0
 16416 0bdf 30150000 		.4byte	.LVL543-.Ltext0
 16417 0be3 0100     		.2byte	0x1
 16418 0be5 51       		.byte	0x51
 16419 0be6 30150000 		.4byte	.LVL543-.Ltext0
 16420 0bea 58150000 		.4byte	.LFE134-.Ltext0
 16421 0bee 0400     		.2byte	0x4
 16422 0bf0 F3       		.byte	0xf3
 16423 0bf1 01       		.uleb128 0x1
 16424 0bf2 51       		.byte	0x51
 16425 0bf3 9F       		.byte	0x9f
 16426 0bf4 00000000 		.4byte	0
 16427 0bf8 00000000 		.4byte	0
 16428              	.LLST302:
 16429 0bfc 4E140000 		.4byte	.LVL497-.Ltext0
 16430 0c00 52140000 		.4byte	.LVL498-.Ltext0
 16431 0c04 0600     		.2byte	0x6
 16432 0c06 73       		.byte	0x73
 16433 0c07 00       		.sleb128 0
 16434 0c08 09       		.byte	0x9
 16435 0c09 88       		.byte	0x88
 16436 0c0a 1A       		.byte	0x1a
 16437 0c0b 9F       		.byte	0x9f
 16438 0c0c 56140000 		.4byte	.LVL499-.Ltext0
 16439 0c10 5A140000 		.4byte	.LVL500-.Ltext0
 16440 0c14 0100     		.2byte	0x1
 16441 0c16 53       		.byte	0x53
 16442 0c17 5A140000 		.4byte	.LVL500-.Ltext0
 16443 0c1b 68140000 		.4byte	.LVL501-.Ltext0
 16444 0c1f 0200     		.2byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 431


 16445 0c21 70       		.byte	0x70
 16446 0c22 08       		.sleb128 8
 16447 0c23 76140000 		.4byte	.LVL502-.Ltext0
 16448 0c27 A8140000 		.4byte	.LVL511-.Ltext0
 16449 0c2b 0200     		.2byte	0x2
 16450 0c2d 70       		.byte	0x70
 16451 0c2e 08       		.sleb128 8
 16452 0c2f C6140000 		.4byte	.LVL520-.Ltext0
 16453 0c33 D9140000 		.4byte	.LVL522-1-.Ltext0
 16454 0c37 0200     		.2byte	0x2
 16455 0c39 70       		.byte	0x70
 16456 0c3a 08       		.sleb128 8
 16457 0c3b E4140000 		.4byte	.LVL523-.Ltext0
 16458 0c3f ED140000 		.4byte	.LVL525-1-.Ltext0
 16459 0c43 0200     		.2byte	0x2
 16460 0c45 70       		.byte	0x70
 16461 0c46 08       		.sleb128 8
 16462 0c47 F2140000 		.4byte	.LVL526-.Ltext0
 16463 0c4b F6140000 		.4byte	.LVL527-.Ltext0
 16464 0c4f 0100     		.2byte	0x1
 16465 0c51 53       		.byte	0x53
 16466 0c52 FA140000 		.4byte	.LVL528-.Ltext0
 16467 0c56 06150000 		.4byte	.LVL531-.Ltext0
 16468 0c5a 0200     		.2byte	0x2
 16469 0c5c 70       		.byte	0x70
 16470 0c5d 08       		.sleb128 8
 16471 0c5e 2A150000 		.4byte	.LVL541-.Ltext0
 16472 0c62 3C150000 		.4byte	.LVL545-.Ltext0
 16473 0c66 0200     		.2byte	0x2
 16474 0c68 70       		.byte	0x70
 16475 0c69 08       		.sleb128 8
 16476 0c6a 00000000 		.4byte	0
 16477 0c6e 00000000 		.4byte	0
 16478              	.LLST303:
 16479 0c72 7E140000 		.4byte	.LVL503-.Ltext0
 16480 0c76 84140000 		.4byte	.LVL505-.Ltext0
 16481 0c7a 0100     		.2byte	0x1
 16482 0c7c 53       		.byte	0x53
 16483 0c7d 84140000 		.4byte	.LVL505-.Ltext0
 16484 0c81 8C140000 		.4byte	.LVL507-.Ltext0
 16485 0c85 0200     		.2byte	0x2
 16486 0c87 71       		.byte	0x71
 16487 0c88 00       		.sleb128 0
 16488 0c89 00000000 		.4byte	0
 16489 0c8d 00000000 		.4byte	0
 16490              	.LLST304:
 16491 0c91 7E140000 		.4byte	.LVL503-.Ltext0
 16492 0c95 8C140000 		.4byte	.LVL507-.Ltext0
 16493 0c99 0100     		.2byte	0x1
 16494 0c9b 50       		.byte	0x50
 16495 0c9c 00000000 		.4byte	0
 16496 0ca0 00000000 		.4byte	0
 16497              	.LLST305:
 16498 0ca4 80140000 		.4byte	.LVL504-.Ltext0
 16499 0ca8 8C140000 		.4byte	.LVL507-.Ltext0
 16500 0cac 0100     		.2byte	0x1
 16501 0cae 52       		.byte	0x52
ARM GAS  /tmp/ccTsJCXT.s 			page 432


 16502 0caf C2140000 		.4byte	.LVL519-.Ltext0
 16503 0cb3 C6140000 		.4byte	.LVL520-.Ltext0
 16504 0cb7 0100     		.2byte	0x1
 16505 0cb9 53       		.byte	0x53
 16506 0cba 00000000 		.4byte	0
 16507 0cbe 00000000 		.4byte	0
 16508              	.LLST306:
 16509 0cc2 9A140000 		.4byte	.LVL508-.Ltext0
 16510 0cc6 B8140000 		.4byte	.LVL516-.Ltext0
 16511 0cca 0100     		.2byte	0x1
 16512 0ccc 56       		.byte	0x56
 16513 0ccd 00000000 		.4byte	0
 16514 0cd1 00000000 		.4byte	0
 16515              	.LLST307:
 16516 0cd5 9A140000 		.4byte	.LVL508-.Ltext0
 16517 0cd9 AC140000 		.4byte	.LVL513-.Ltext0
 16518 0cdd 0100     		.2byte	0x1
 16519 0cdf 52       		.byte	0x52
 16520 0ce0 AC140000 		.4byte	.LVL513-.Ltext0
 16521 0ce4 B8140000 		.4byte	.LVL516-.Ltext0
 16522 0ce8 0500     		.2byte	0x5
 16523 0cea F3       		.byte	0xf3
 16524 0ceb 01       		.uleb128 0x1
 16525 0cec 51       		.byte	0x51
 16526 0ced 23       		.byte	0x23
 16527 0cee 04       		.uleb128 0x4
 16528 0cef 00000000 		.4byte	0
 16529 0cf3 00000000 		.4byte	0
 16530              	.LLST308:
 16531 0cf7 9A140000 		.4byte	.LVL508-.Ltext0
 16532 0cfb B8140000 		.4byte	.LVL516-.Ltext0
 16533 0cff 0100     		.2byte	0x1
 16534 0d01 50       		.byte	0x50
 16535 0d02 00000000 		.4byte	0
 16536 0d06 00000000 		.4byte	0
 16537              	.LLST309:
 16538 0d0a AA140000 		.4byte	.LVL512-.Ltext0
 16539 0d0e B8140000 		.4byte	.LVL516-.Ltext0
 16540 0d12 0100     		.2byte	0x1
 16541 0d14 53       		.byte	0x53
 16542 0d15 00000000 		.4byte	0
 16543 0d19 00000000 		.4byte	0
 16544              	.LLST310:
 16545 0d1d 9C140000 		.4byte	.LVL509-.Ltext0
 16546 0d21 A2140000 		.4byte	.LVL510-.Ltext0
 16547 0d25 0100     		.2byte	0x1
 16548 0d27 51       		.byte	0x51
 16549 0d28 B4140000 		.4byte	.LVL515-.Ltext0
 16550 0d2c B8140000 		.4byte	.LVL516-.Ltext0
 16551 0d30 0100     		.2byte	0x1
 16552 0d32 52       		.byte	0x52
 16553 0d33 00000000 		.4byte	0
 16554 0d37 00000000 		.4byte	0
 16555              	.LLST311:
 16556 0d3b B8140000 		.4byte	.LVL516-.Ltext0
 16557 0d3f C2140000 		.4byte	.LVL519-.Ltext0
 16558 0d43 0300     		.2byte	0x3
ARM GAS  /tmp/ccTsJCXT.s 			page 433


 16559 0d45 08       		.byte	0x8
 16560 0d46 50       		.byte	0x50
 16561 0d47 9F       		.byte	0x9f
 16562 0d48 00000000 		.4byte	0
 16563 0d4c 00000000 		.4byte	0
 16564              	.LLST312:
 16565 0d50 B8140000 		.4byte	.LVL516-.Ltext0
 16566 0d54 C2140000 		.4byte	.LVL519-.Ltext0
 16567 0d58 0100     		.2byte	0x1
 16568 0d5a 50       		.byte	0x50
 16569 0d5b 00000000 		.4byte	0
 16570 0d5f 00000000 		.4byte	0
 16571              	.LLST313:
 16572 0d63 BA140000 		.4byte	.LVL517-.Ltext0
 16573 0d67 C2140000 		.4byte	.LVL519-.Ltext0
 16574 0d6b 0100     		.2byte	0x1
 16575 0d6d 53       		.byte	0x53
 16576 0d6e 00000000 		.4byte	0
 16577 0d72 00000000 		.4byte	0
 16578              	.LLST314:
 16579 0d76 FE140000 		.4byte	.LVL529-.Ltext0
 16580 0d7a 1E150000 		.4byte	.LVL537-.Ltext0
 16581 0d7e 0100     		.2byte	0x1
 16582 0d80 56       		.byte	0x56
 16583 0d81 00000000 		.4byte	0
 16584 0d85 00000000 		.4byte	0
 16585              	.LLST315:
 16586 0d89 FE140000 		.4byte	.LVL529-.Ltext0
 16587 0d8d 1E150000 		.4byte	.LVL537-.Ltext0
 16588 0d91 0100     		.2byte	0x1
 16589 0d93 55       		.byte	0x55
 16590 0d94 00000000 		.4byte	0
 16591 0d98 00000000 		.4byte	0
 16592              	.LLST316:
 16593 0d9c FE140000 		.4byte	.LVL529-.Ltext0
 16594 0da0 1E150000 		.4byte	.LVL537-.Ltext0
 16595 0da4 0100     		.2byte	0x1
 16596 0da6 50       		.byte	0x50
 16597 0da7 00000000 		.4byte	0
 16598 0dab 00000000 		.4byte	0
 16599              	.LLST317:
 16600 0daf 08150000 		.4byte	.LVL532-.Ltext0
 16601 0db3 1E150000 		.4byte	.LVL537-.Ltext0
 16602 0db7 0100     		.2byte	0x1
 16603 0db9 52       		.byte	0x52
 16604 0dba 00000000 		.4byte	0
 16605 0dbe 00000000 		.4byte	0
 16606              	.LLST318:
 16607 0dc2 0A150000 		.4byte	.LVL533-.Ltext0
 16608 0dc6 12150000 		.4byte	.LVL535-.Ltext0
 16609 0dca 0100     		.2byte	0x1
 16610 0dcc 53       		.byte	0x53
 16611 0dcd 1A150000 		.4byte	.LVL536-.Ltext0
 16612 0dd1 1E150000 		.4byte	.LVL537-.Ltext0
 16613 0dd5 0100     		.2byte	0x1
 16614 0dd7 53       		.byte	0x53
 16615 0dd8 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 434


 16616 0ddc 00000000 		.4byte	0
 16617              	.LLST319:
 16618 0de0 1E150000 		.4byte	.LVL537-.Ltext0
 16619 0de4 2A150000 		.4byte	.LVL541-.Ltext0
 16620 0de8 0300     		.2byte	0x3
 16621 0dea 08       		.byte	0x8
 16622 0deb 60       		.byte	0x60
 16623 0dec 9F       		.byte	0x9f
 16624 0ded 00000000 		.4byte	0
 16625 0df1 00000000 		.4byte	0
 16626              	.LLST320:
 16627 0df5 1E150000 		.4byte	.LVL537-.Ltext0
 16628 0df9 2A150000 		.4byte	.LVL541-.Ltext0
 16629 0dfd 0100     		.2byte	0x1
 16630 0dff 50       		.byte	0x50
 16631 0e00 00000000 		.4byte	0
 16632 0e04 00000000 		.4byte	0
 16633              	.LLST321:
 16634 0e08 20150000 		.4byte	.LVL538-.Ltext0
 16635 0e0c 2A150000 		.4byte	.LVL541-.Ltext0
 16636 0e10 0100     		.2byte	0x1
 16637 0e12 53       		.byte	0x53
 16638 0e13 00000000 		.4byte	0
 16639 0e17 00000000 		.4byte	0
 16640              	.LLST322:
 16641 0e1b 2E150000 		.4byte	.LVL542-.Ltext0
 16642 0e1f 4C150000 		.4byte	.LVL550-.Ltext0
 16643 0e23 0100     		.2byte	0x1
 16644 0e25 56       		.byte	0x56
 16645 0e26 00000000 		.4byte	0
 16646 0e2a 00000000 		.4byte	0
 16647              	.LLST323:
 16648 0e2e 2E150000 		.4byte	.LVL542-.Ltext0
 16649 0e32 40150000 		.4byte	.LVL547-.Ltext0
 16650 0e36 0100     		.2byte	0x1
 16651 0e38 52       		.byte	0x52
 16652 0e39 40150000 		.4byte	.LVL547-.Ltext0
 16653 0e3d 4C150000 		.4byte	.LVL550-.Ltext0
 16654 0e41 0500     		.2byte	0x5
 16655 0e43 F3       		.byte	0xf3
 16656 0e44 01       		.uleb128 0x1
 16657 0e45 51       		.byte	0x51
 16658 0e46 23       		.byte	0x23
 16659 0e47 04       		.uleb128 0x4
 16660 0e48 00000000 		.4byte	0
 16661 0e4c 00000000 		.4byte	0
 16662              	.LLST324:
 16663 0e50 2E150000 		.4byte	.LVL542-.Ltext0
 16664 0e54 4C150000 		.4byte	.LVL550-.Ltext0
 16665 0e58 0100     		.2byte	0x1
 16666 0e5a 50       		.byte	0x50
 16667 0e5b 00000000 		.4byte	0
 16668 0e5f 00000000 		.4byte	0
 16669              	.LLST325:
 16670 0e63 3E150000 		.4byte	.LVL546-.Ltext0
 16671 0e67 4C150000 		.4byte	.LVL550-.Ltext0
 16672 0e6b 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 435


 16673 0e6d 53       		.byte	0x53
 16674 0e6e 00000000 		.4byte	0
 16675 0e72 00000000 		.4byte	0
 16676              	.LLST326:
 16677 0e76 30150000 		.4byte	.LVL543-.Ltext0
 16678 0e7a 36150000 		.4byte	.LVL544-.Ltext0
 16679 0e7e 0100     		.2byte	0x1
 16680 0e80 51       		.byte	0x51
 16681 0e81 48150000 		.4byte	.LVL549-.Ltext0
 16682 0e85 4C150000 		.4byte	.LVL550-.Ltext0
 16683 0e89 0100     		.2byte	0x1
 16684 0e8b 52       		.byte	0x52
 16685 0e8c 00000000 		.4byte	0
 16686 0e90 00000000 		.4byte	0
 16687              	.LLST295:
 16688 0e94 64130000 		.4byte	.LFB133-.Ltext0
 16689 0e98 6A130000 		.4byte	.LCFI45-.Ltext0
 16690 0e9c 0200     		.2byte	0x2
 16691 0e9e 7D       		.byte	0x7d
 16692 0e9f 00       		.sleb128 0
 16693 0ea0 6A130000 		.4byte	.LCFI45-.Ltext0
 16694 0ea4 30140000 		.4byte	.LFE133-.Ltext0
 16695 0ea8 0200     		.2byte	0x2
 16696 0eaa 7D       		.byte	0x7d
 16697 0eab 10       		.sleb128 16
 16698 0eac 00000000 		.4byte	0
 16699 0eb0 00000000 		.4byte	0
 16700              	.LLST296:
 16701 0eb4 64130000 		.4byte	.LVL484-.Ltext0
 16702 0eb8 76130000 		.4byte	.LVL485-.Ltext0
 16703 0ebc 0100     		.2byte	0x1
 16704 0ebe 50       		.byte	0x50
 16705 0ebf 76130000 		.4byte	.LVL485-.Ltext0
 16706 0ec3 30140000 		.4byte	.LFE133-.Ltext0
 16707 0ec7 0100     		.2byte	0x1
 16708 0ec9 54       		.byte	0x54
 16709 0eca 00000000 		.4byte	0
 16710 0ece 00000000 		.4byte	0
 16711              	.LLST297:
 16712 0ed2 64130000 		.4byte	.LVL484-.Ltext0
 16713 0ed6 8A130000 		.4byte	.LVL486-.Ltext0
 16714 0eda 0100     		.2byte	0x1
 16715 0edc 51       		.byte	0x51
 16716 0edd 8A130000 		.4byte	.LVL486-.Ltext0
 16717 0ee1 9F130000 		.4byte	.LVL487-.Ltext0
 16718 0ee5 0100     		.2byte	0x1
 16719 0ee7 55       		.byte	0x55
 16720 0ee8 9F130000 		.4byte	.LVL487-.Ltext0
 16721 0eec AE130000 		.4byte	.LVL490-.Ltext0
 16722 0ef0 0100     		.2byte	0x1
 16723 0ef2 51       		.byte	0x51
 16724 0ef3 AE130000 		.4byte	.LVL490-.Ltext0
 16725 0ef7 30140000 		.4byte	.LFE133-.Ltext0
 16726 0efb 0100     		.2byte	0x1
 16727 0efd 55       		.byte	0x55
 16728 0efe 00000000 		.4byte	0
 16729 0f02 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 436


 16730              	.LLST298:
 16731 0f06 64130000 		.4byte	.LVL484-.Ltext0
 16732 0f0a 8A130000 		.4byte	.LVL486-.Ltext0
 16733 0f0e 0100     		.2byte	0x1
 16734 0f10 52       		.byte	0x52
 16735 0f11 8A130000 		.4byte	.LVL486-.Ltext0
 16736 0f15 9F130000 		.4byte	.LVL487-.Ltext0
 16737 0f19 0100     		.2byte	0x1
 16738 0f1b 56       		.byte	0x56
 16739 0f1c 9F130000 		.4byte	.LVL487-.Ltext0
 16740 0f20 A2130000 		.4byte	.LVL488-.Ltext0
 16741 0f24 0100     		.2byte	0x1
 16742 0f26 52       		.byte	0x52
 16743 0f27 A2130000 		.4byte	.LVL488-.Ltext0
 16744 0f2b AC130000 		.4byte	.LVL489-.Ltext0
 16745 0f2f 0100     		.2byte	0x1
 16746 0f31 56       		.byte	0x56
 16747 0f32 AC130000 		.4byte	.LVL489-.Ltext0
 16748 0f36 C0130000 		.4byte	.LVL492-.Ltext0
 16749 0f3a 0100     		.2byte	0x1
 16750 0f3c 52       		.byte	0x52
 16751 0f3d C0130000 		.4byte	.LVL492-.Ltext0
 16752 0f41 30140000 		.4byte	.LFE133-.Ltext0
 16753 0f45 0100     		.2byte	0x1
 16754 0f47 56       		.byte	0x56
 16755 0f48 00000000 		.4byte	0
 16756 0f4c 00000000 		.4byte	0
 16757              	.LLST191:
 16758 0f50 580A0000 		.4byte	.LVL221-.Ltext0
 16759 0f54 7A0A0000 		.4byte	.LVL222-.Ltext0
 16760 0f58 0100     		.2byte	0x1
 16761 0f5a 50       		.byte	0x50
 16762 0f5b 7A0A0000 		.4byte	.LVL222-.Ltext0
 16763 0f5f 7C0A0000 		.4byte	.LFE132-.Ltext0
 16764 0f63 0400     		.2byte	0x4
 16765 0f65 F3       		.byte	0xf3
 16766 0f66 01       		.uleb128 0x1
 16767 0f67 50       		.byte	0x50
 16768 0f68 9F       		.byte	0x9f
 16769 0f69 00000000 		.4byte	0
 16770 0f6d 00000000 		.4byte	0
 16771              	.LLST187:
 16772 0f71 F4090000 		.4byte	.LFB131-.Ltext0
 16773 0f75 FA090000 		.4byte	.LCFI15-.Ltext0
 16774 0f79 0200     		.2byte	0x2
 16775 0f7b 7D       		.byte	0x7d
 16776 0f7c 00       		.sleb128 0
 16777 0f7d FA090000 		.4byte	.LCFI15-.Ltext0
 16778 0f81 540A0000 		.4byte	.LFE131-.Ltext0
 16779 0f85 0200     		.2byte	0x2
 16780 0f87 7D       		.byte	0x7d
 16781 0f88 10       		.sleb128 16
 16782 0f89 00000000 		.4byte	0
 16783 0f8d 00000000 		.4byte	0
 16784              	.LLST188:
 16785 0f91 F4090000 		.4byte	.LVL203-.Ltext0
 16786 0f95 160A0000 		.4byte	.LVL204-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 437


 16787 0f99 0100     		.2byte	0x1
 16788 0f9b 50       		.byte	0x50
 16789 0f9c 160A0000 		.4byte	.LVL204-.Ltext0
 16790 0fa0 2A0A0000 		.4byte	.LVL209-.Ltext0
 16791 0fa4 0100     		.2byte	0x1
 16792 0fa6 55       		.byte	0x55
 16793 0fa7 2A0A0000 		.4byte	.LVL209-.Ltext0
 16794 0fab 3E0A0000 		.4byte	.LVL210-.Ltext0
 16795 0faf 0100     		.2byte	0x1
 16796 0fb1 50       		.byte	0x50
 16797 0fb2 3E0A0000 		.4byte	.LVL210-.Ltext0
 16798 0fb6 400A0000 		.4byte	.LVL211-.Ltext0
 16799 0fba 0100     		.2byte	0x1
 16800 0fbc 55       		.byte	0x55
 16801 0fbd 400A0000 		.4byte	.LVL211-.Ltext0
 16802 0fc1 420A0000 		.4byte	.LVL212-.Ltext0
 16803 0fc5 0100     		.2byte	0x1
 16804 0fc7 50       		.byte	0x50
 16805 0fc8 420A0000 		.4byte	.LVL212-.Ltext0
 16806 0fcc 440A0000 		.4byte	.LVL213-.Ltext0
 16807 0fd0 0100     		.2byte	0x1
 16808 0fd2 55       		.byte	0x55
 16809 0fd3 440A0000 		.4byte	.LVL213-.Ltext0
 16810 0fd7 460A0000 		.4byte	.LVL214-.Ltext0
 16811 0fdb 0100     		.2byte	0x1
 16812 0fdd 50       		.byte	0x50
 16813 0fde 460A0000 		.4byte	.LVL214-.Ltext0
 16814 0fe2 480A0000 		.4byte	.LVL215-.Ltext0
 16815 0fe6 0100     		.2byte	0x1
 16816 0fe8 55       		.byte	0x55
 16817 0fe9 480A0000 		.4byte	.LVL215-.Ltext0
 16818 0fed 4A0A0000 		.4byte	.LVL216-.Ltext0
 16819 0ff1 0100     		.2byte	0x1
 16820 0ff3 50       		.byte	0x50
 16821 0ff4 4A0A0000 		.4byte	.LVL216-.Ltext0
 16822 0ff8 4C0A0000 		.4byte	.LVL217-.Ltext0
 16823 0ffc 0100     		.2byte	0x1
 16824 0ffe 55       		.byte	0x55
 16825 0fff 4C0A0000 		.4byte	.LVL217-.Ltext0
 16826 1003 4E0A0000 		.4byte	.LVL218-.Ltext0
 16827 1007 0100     		.2byte	0x1
 16828 1009 50       		.byte	0x50
 16829 100a 4E0A0000 		.4byte	.LVL218-.Ltext0
 16830 100e 500A0000 		.4byte	.LVL219-.Ltext0
 16831 1012 0100     		.2byte	0x1
 16832 1014 55       		.byte	0x55
 16833 1015 500A0000 		.4byte	.LVL219-.Ltext0
 16834 1019 520A0000 		.4byte	.LVL220-.Ltext0
 16835 101d 0100     		.2byte	0x1
 16836 101f 50       		.byte	0x50
 16837 1020 520A0000 		.4byte	.LVL220-.Ltext0
 16838 1024 540A0000 		.4byte	.LFE131-.Ltext0
 16839 1028 0100     		.2byte	0x1
 16840 102a 55       		.byte	0x55
 16841 102b 00000000 		.4byte	0
 16842 102f 00000000 		.4byte	0
 16843              	.LLST189:
ARM GAS  /tmp/ccTsJCXT.s 			page 438


 16844 1033 F4090000 		.4byte	.LVL203-.Ltext0
 16845 1037 190A0000 		.4byte	.LVL205-1-.Ltext0
 16846 103b 0100     		.2byte	0x1
 16847 103d 51       		.byte	0x51
 16848 103e 190A0000 		.4byte	.LVL205-1-.Ltext0
 16849 1042 260A0000 		.4byte	.LVL207-.Ltext0
 16850 1046 0100     		.2byte	0x1
 16851 1048 54       		.byte	0x54
 16852 1049 260A0000 		.4byte	.LVL207-.Ltext0
 16853 104d 2A0A0000 		.4byte	.LVL209-.Ltext0
 16854 1051 0400     		.2byte	0x4
 16855 1053 F3       		.byte	0xf3
 16856 1054 01       		.uleb128 0x1
 16857 1055 51       		.byte	0x51
 16858 1056 9F       		.byte	0x9f
 16859 1057 2A0A0000 		.4byte	.LVL209-.Ltext0
 16860 105b 540A0000 		.4byte	.LFE131-.Ltext0
 16861 105f 0100     		.2byte	0x1
 16862 1061 51       		.byte	0x51
 16863 1062 00000000 		.4byte	0
 16864 1066 00000000 		.4byte	0
 16865              	.LLST190:
 16866 106a F4090000 		.4byte	.LVL203-.Ltext0
 16867 106e 1A0A0000 		.4byte	.LVL205-.Ltext0
 16868 1072 0200     		.2byte	0x2
 16869 1074 30       		.byte	0x30
 16870 1075 9F       		.byte	0x9f
 16871 1076 1A0A0000 		.4byte	.LVL205-.Ltext0
 16872 107a 1C0A0000 		.4byte	.LVL206-.Ltext0
 16873 107e 0100     		.2byte	0x1
 16874 1080 50       		.byte	0x50
 16875 1081 1C0A0000 		.4byte	.LVL206-.Ltext0
 16876 1085 280A0000 		.4byte	.LVL208-.Ltext0
 16877 1089 0200     		.2byte	0x2
 16878 108b 30       		.byte	0x30
 16879 108c 9F       		.byte	0x9f
 16880 108d 2A0A0000 		.4byte	.LVL209-.Ltext0
 16881 1091 540A0000 		.4byte	.LFE131-.Ltext0
 16882 1095 0200     		.2byte	0x2
 16883 1097 30       		.byte	0x30
 16884 1098 9F       		.byte	0x9f
 16885 1099 00000000 		.4byte	0
 16886 109d 00000000 		.4byte	0
 16887              	.LLST181:
 16888 10a1 18090000 		.4byte	.LFB130-.Ltext0
 16889 10a5 1A090000 		.4byte	.LCFI14-.Ltext0
 16890 10a9 0200     		.2byte	0x2
 16891 10ab 7D       		.byte	0x7d
 16892 10ac 00       		.sleb128 0
 16893 10ad 1A090000 		.4byte	.LCFI14-.Ltext0
 16894 10b1 F4090000 		.4byte	.LFE130-.Ltext0
 16895 10b5 0200     		.2byte	0x2
 16896 10b7 7D       		.byte	0x7d
 16897 10b8 18       		.sleb128 24
 16898 10b9 00000000 		.4byte	0
 16899 10bd 00000000 		.4byte	0
 16900              	.LLST182:
ARM GAS  /tmp/ccTsJCXT.s 			page 439


 16901 10c1 18090000 		.4byte	.LVL193-.Ltext0
 16902 10c5 20090000 		.4byte	.LVL194-.Ltext0
 16903 10c9 0100     		.2byte	0x1
 16904 10cb 50       		.byte	0x50
 16905 10cc 20090000 		.4byte	.LVL194-.Ltext0
 16906 10d0 F4090000 		.4byte	.LFE130-.Ltext0
 16907 10d4 0100     		.2byte	0x1
 16908 10d6 54       		.byte	0x54
 16909 10d7 00000000 		.4byte	0
 16910 10db 00000000 		.4byte	0
 16911              	.LLST183:
 16912 10df 18090000 		.4byte	.LVL193-.Ltext0
 16913 10e3 3A090000 		.4byte	.LVL197-.Ltext0
 16914 10e7 0100     		.2byte	0x1
 16915 10e9 51       		.byte	0x51
 16916 10ea 3A090000 		.4byte	.LVL197-.Ltext0
 16917 10ee 3E090000 		.4byte	.LVL198-.Ltext0
 16918 10f2 0100     		.2byte	0x1
 16919 10f4 57       		.byte	0x57
 16920 10f5 3E090000 		.4byte	.LVL198-.Ltext0
 16921 10f9 4A090000 		.4byte	.LVL199-.Ltext0
 16922 10fd 0100     		.2byte	0x1
 16923 10ff 51       		.byte	0x51
 16924 1100 4A090000 		.4byte	.LVL199-.Ltext0
 16925 1104 F4090000 		.4byte	.LFE130-.Ltext0
 16926 1108 0100     		.2byte	0x1
 16927 110a 57       		.byte	0x57
 16928 110b 00000000 		.4byte	0
 16929 110f 00000000 		.4byte	0
 16930              	.LLST184:
 16931 1113 18090000 		.4byte	.LVL193-.Ltext0
 16932 1117 2A090000 		.4byte	.LVL195-.Ltext0
 16933 111b 0100     		.2byte	0x1
 16934 111d 52       		.byte	0x52
 16935 111e 2A090000 		.4byte	.LVL195-.Ltext0
 16936 1122 88090000 		.4byte	.LVL201-.Ltext0
 16937 1126 0100     		.2byte	0x1
 16938 1128 56       		.byte	0x56
 16939 1129 88090000 		.4byte	.LVL201-.Ltext0
 16940 112d 92090000 		.4byte	.LVL202-.Ltext0
 16941 1131 0400     		.2byte	0x4
 16942 1133 F3       		.byte	0xf3
 16943 1134 01       		.uleb128 0x1
 16944 1135 52       		.byte	0x52
 16945 1136 9F       		.byte	0x9f
 16946 1137 92090000 		.4byte	.LVL202-.Ltext0
 16947 113b F4090000 		.4byte	.LFE130-.Ltext0
 16948 113f 0100     		.2byte	0x1
 16949 1141 56       		.byte	0x56
 16950 1142 00000000 		.4byte	0
 16951 1146 00000000 		.4byte	0
 16952              	.LLST185:
 16953 114a 18090000 		.4byte	.LVL193-.Ltext0
 16954 114e 32090000 		.4byte	.LVL196-.Ltext0
 16955 1152 0100     		.2byte	0x1
 16956 1154 53       		.byte	0x53
 16957 1155 32090000 		.4byte	.LVL196-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 440


 16958 1159 3A090000 		.4byte	.LVL197-.Ltext0
 16959 115d 0100     		.2byte	0x1
 16960 115f 52       		.byte	0x52
 16961 1160 3A090000 		.4byte	.LVL197-.Ltext0
 16962 1164 3E090000 		.4byte	.LVL198-.Ltext0
 16963 1168 0400     		.2byte	0x4
 16964 116a F3       		.byte	0xf3
 16965 116b 01       		.uleb128 0x1
 16966 116c 53       		.byte	0x53
 16967 116d 9F       		.byte	0x9f
 16968 116e 3E090000 		.4byte	.LVL198-.Ltext0
 16969 1172 77090000 		.4byte	.LVL200-1-.Ltext0
 16970 1176 0100     		.2byte	0x1
 16971 1178 52       		.byte	0x52
 16972 1179 77090000 		.4byte	.LVL200-1-.Ltext0
 16973 117d 92090000 		.4byte	.LVL202-.Ltext0
 16974 1181 0400     		.2byte	0x4
 16975 1183 F3       		.byte	0xf3
 16976 1184 01       		.uleb128 0x1
 16977 1185 53       		.byte	0x53
 16978 1186 9F       		.byte	0x9f
 16979 1187 92090000 		.4byte	.LVL202-.Ltext0
 16980 118b F4090000 		.4byte	.LFE130-.Ltext0
 16981 118f 0100     		.2byte	0x1
 16982 1191 52       		.byte	0x52
 16983 1192 00000000 		.4byte	0
 16984 1196 00000000 		.4byte	0
 16985              	.LLST186:
 16986 119a 18090000 		.4byte	.LVL193-.Ltext0
 16987 119e 3E090000 		.4byte	.LVL198-.Ltext0
 16988 11a2 0200     		.2byte	0x2
 16989 11a4 91       		.byte	0x91
 16990 11a5 00       		.sleb128 0
 16991 11a6 3E090000 		.4byte	.LVL198-.Ltext0
 16992 11aa F4090000 		.4byte	.LFE130-.Ltext0
 16993 11ae 0200     		.2byte	0x2
 16994 11b0 91       		.byte	0x91
 16995 11b1 00       		.sleb128 0
 16996 11b2 00000000 		.4byte	0
 16997 11b6 00000000 		.4byte	0
 16998              	.LLST175:
 16999 11ba 3E080000 		.4byte	.LFB128-.Ltext0
 17000 11be 40080000 		.4byte	.LCFI13-.Ltext0
 17001 11c2 0200     		.2byte	0x2
 17002 11c4 7D       		.byte	0x7d
 17003 11c5 00       		.sleb128 0
 17004 11c6 40080000 		.4byte	.LCFI13-.Ltext0
 17005 11ca 18090000 		.4byte	.LFE128-.Ltext0
 17006 11ce 0200     		.2byte	0x2
 17007 11d0 7D       		.byte	0x7d
 17008 11d1 18       		.sleb128 24
 17009 11d2 00000000 		.4byte	0
 17010 11d6 00000000 		.4byte	0
 17011              	.LLST176:
 17012 11da 3E080000 		.4byte	.LVL183-.Ltext0
 17013 11de 46080000 		.4byte	.LVL184-.Ltext0
 17014 11e2 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 441


 17015 11e4 50       		.byte	0x50
 17016 11e5 46080000 		.4byte	.LVL184-.Ltext0
 17017 11e9 18090000 		.4byte	.LFE128-.Ltext0
 17018 11ed 0100     		.2byte	0x1
 17019 11ef 54       		.byte	0x54
 17020 11f0 00000000 		.4byte	0
 17021 11f4 00000000 		.4byte	0
 17022              	.LLST177:
 17023 11f8 3E080000 		.4byte	.LVL183-.Ltext0
 17024 11fc 50080000 		.4byte	.LVL185-.Ltext0
 17025 1200 0100     		.2byte	0x1
 17026 1202 51       		.byte	0x51
 17027 1203 50080000 		.4byte	.LVL185-.Ltext0
 17028 1207 18090000 		.4byte	.LFE128-.Ltext0
 17029 120b 0100     		.2byte	0x1
 17030 120d 57       		.byte	0x57
 17031 120e 00000000 		.4byte	0
 17032 1212 00000000 		.4byte	0
 17033              	.LLST178:
 17034 1216 3E080000 		.4byte	.LVL183-.Ltext0
 17035 121a 60080000 		.4byte	.LVL187-.Ltext0
 17036 121e 0100     		.2byte	0x1
 17037 1220 52       		.byte	0x52
 17038 1221 60080000 		.4byte	.LVL187-.Ltext0
 17039 1225 64080000 		.4byte	.LVL188-.Ltext0
 17040 1229 0100     		.2byte	0x1
 17041 122b 56       		.byte	0x56
 17042 122c 64080000 		.4byte	.LVL188-.Ltext0
 17043 1230 70080000 		.4byte	.LVL189-.Ltext0
 17044 1234 0100     		.2byte	0x1
 17045 1236 52       		.byte	0x52
 17046 1237 70080000 		.4byte	.LVL189-.Ltext0
 17047 123b AE080000 		.4byte	.LVL191-.Ltext0
 17048 123f 0100     		.2byte	0x1
 17049 1241 56       		.byte	0x56
 17050 1242 AE080000 		.4byte	.LVL191-.Ltext0
 17051 1246 B8080000 		.4byte	.LVL192-.Ltext0
 17052 124a 0400     		.2byte	0x4
 17053 124c F3       		.byte	0xf3
 17054 124d 01       		.uleb128 0x1
 17055 124e 52       		.byte	0x52
 17056 124f 9F       		.byte	0x9f
 17057 1250 B8080000 		.4byte	.LVL192-.Ltext0
 17058 1254 18090000 		.4byte	.LFE128-.Ltext0
 17059 1258 0100     		.2byte	0x1
 17060 125a 56       		.byte	0x56
 17061 125b 00000000 		.4byte	0
 17062 125f 00000000 		.4byte	0
 17063              	.LLST179:
 17064 1263 3E080000 		.4byte	.LVL183-.Ltext0
 17065 1267 58080000 		.4byte	.LVL186-.Ltext0
 17066 126b 0100     		.2byte	0x1
 17067 126d 53       		.byte	0x53
 17068 126e 58080000 		.4byte	.LVL186-.Ltext0
 17069 1272 60080000 		.4byte	.LVL187-.Ltext0
 17070 1276 0100     		.2byte	0x1
 17071 1278 51       		.byte	0x51
ARM GAS  /tmp/ccTsJCXT.s 			page 442


 17072 1279 60080000 		.4byte	.LVL187-.Ltext0
 17073 127d 64080000 		.4byte	.LVL188-.Ltext0
 17074 1281 0400     		.2byte	0x4
 17075 1283 F3       		.byte	0xf3
 17076 1284 01       		.uleb128 0x1
 17077 1285 53       		.byte	0x53
 17078 1286 9F       		.byte	0x9f
 17079 1287 64080000 		.4byte	.LVL188-.Ltext0
 17080 128b 9D080000 		.4byte	.LVL190-1-.Ltext0
 17081 128f 0100     		.2byte	0x1
 17082 1291 51       		.byte	0x51
 17083 1292 9D080000 		.4byte	.LVL190-1-.Ltext0
 17084 1296 B8080000 		.4byte	.LVL192-.Ltext0
 17085 129a 0400     		.2byte	0x4
 17086 129c F3       		.byte	0xf3
 17087 129d 01       		.uleb128 0x1
 17088 129e 53       		.byte	0x53
 17089 129f 9F       		.byte	0x9f
 17090 12a0 B8080000 		.4byte	.LVL192-.Ltext0
 17091 12a4 18090000 		.4byte	.LFE128-.Ltext0
 17092 12a8 0100     		.2byte	0x1
 17093 12aa 51       		.byte	0x51
 17094 12ab 00000000 		.4byte	0
 17095 12af 00000000 		.4byte	0
 17096              	.LLST180:
 17097 12b3 3E080000 		.4byte	.LVL183-.Ltext0
 17098 12b7 64080000 		.4byte	.LVL188-.Ltext0
 17099 12bb 0200     		.2byte	0x2
 17100 12bd 91       		.byte	0x91
 17101 12be 00       		.sleb128 0
 17102 12bf 64080000 		.4byte	.LVL188-.Ltext0
 17103 12c3 18090000 		.4byte	.LFE128-.Ltext0
 17104 12c7 0200     		.2byte	0x2
 17105 12c9 91       		.byte	0x91
 17106 12ca 00       		.sleb128 0
 17107 12cb 00000000 		.4byte	0
 17108 12cf 00000000 		.4byte	0
 17109              	.LLST280:
 17110 12d3 5C120000 		.4byte	.LFB127-.Ltext0
 17111 12d7 5E120000 		.4byte	.LCFI40-.Ltext0
 17112 12db 0200     		.2byte	0x2
 17113 12dd 7D       		.byte	0x7d
 17114 12de 00       		.sleb128 0
 17115 12df 5E120000 		.4byte	.LCFI40-.Ltext0
 17116 12e3 62120000 		.4byte	.LCFI41-.Ltext0
 17117 12e7 0200     		.2byte	0x2
 17118 12e9 7D       		.byte	0x7d
 17119 12ea 10       		.sleb128 16
 17120 12eb 62120000 		.4byte	.LCFI41-.Ltext0
 17121 12ef B0120000 		.4byte	.LCFI42-.Ltext0
 17122 12f3 0200     		.2byte	0x2
 17123 12f5 7D       		.byte	0x7d
 17124 12f6 30       		.sleb128 48
 17125 12f7 B0120000 		.4byte	.LCFI42-.Ltext0
 17126 12fb B2120000 		.4byte	.LCFI43-.Ltext0
 17127 12ff 0200     		.2byte	0x2
 17128 1301 7D       		.byte	0x7d
ARM GAS  /tmp/ccTsJCXT.s 			page 443


 17129 1302 10       		.sleb128 16
 17130 1303 B2120000 		.4byte	.LCFI43-.Ltext0
 17131 1307 50130000 		.4byte	.LFE127-.Ltext0
 17132 130b 0200     		.2byte	0x2
 17133 130d 7D       		.byte	0x7d
 17134 130e 30       		.sleb128 48
 17135 130f 00000000 		.4byte	0
 17136 1313 00000000 		.4byte	0
 17137              	.LLST281:
 17138 1317 5C120000 		.4byte	.LVL448-.Ltext0
 17139 131b 70120000 		.4byte	.LVL450-.Ltext0
 17140 131f 0100     		.2byte	0x1
 17141 1321 50       		.byte	0x50
 17142 1322 70120000 		.4byte	.LVL450-.Ltext0
 17143 1326 4C130000 		.4byte	.LVL476-.Ltext0
 17144 132a 0100     		.2byte	0x1
 17145 132c 55       		.byte	0x55
 17146 132d 4C130000 		.4byte	.LVL476-.Ltext0
 17147 1331 4E130000 		.4byte	.LVL477-.Ltext0
 17148 1335 0100     		.2byte	0x1
 17149 1337 50       		.byte	0x50
 17150 1338 4E130000 		.4byte	.LVL477-.Ltext0
 17151 133c 50130000 		.4byte	.LFE127-.Ltext0
 17152 1340 0100     		.2byte	0x1
 17153 1342 55       		.byte	0x55
 17154 1343 00000000 		.4byte	0
 17155 1347 00000000 		.4byte	0
 17156              	.LLST282:
 17157 134b 5C120000 		.4byte	.LVL448-.Ltext0
 17158 134f 9C120000 		.4byte	.LVL451-.Ltext0
 17159 1353 0100     		.2byte	0x1
 17160 1355 51       		.byte	0x51
 17161 1356 9C120000 		.4byte	.LVL451-.Ltext0
 17162 135a A2120000 		.4byte	.LVL452-.Ltext0
 17163 135e 0100     		.2byte	0x1
 17164 1360 54       		.byte	0x54
 17165 1361 A2120000 		.4byte	.LVL452-.Ltext0
 17166 1365 B2120000 		.4byte	.LVL453-.Ltext0
 17167 1369 0400     		.2byte	0x4
 17168 136b F3       		.byte	0xf3
 17169 136c 01       		.uleb128 0x1
 17170 136d 51       		.byte	0x51
 17171 136e 9F       		.byte	0x9f
 17172 136f B2120000 		.4byte	.LVL453-.Ltext0
 17173 1373 B4120000 		.4byte	.LVL454-.Ltext0
 17174 1377 0100     		.2byte	0x1
 17175 1379 51       		.byte	0x51
 17176 137a B4120000 		.4byte	.LVL454-.Ltext0
 17177 137e BC120000 		.4byte	.LVL456-.Ltext0
 17178 1382 0100     		.2byte	0x1
 17179 1384 54       		.byte	0x54
 17180 1385 BC120000 		.4byte	.LVL456-.Ltext0
 17181 1389 BE120000 		.4byte	.LVL457-.Ltext0
 17182 138d 0100     		.2byte	0x1
 17183 138f 51       		.byte	0x51
 17184 1390 BE120000 		.4byte	.LVL457-.Ltext0
 17185 1394 EA120000 		.4byte	.LVL460-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 444


 17186 1398 0100     		.2byte	0x1
 17187 139a 54       		.byte	0x54
 17188 139b EA120000 		.4byte	.LVL460-.Ltext0
 17189 139f FE120000 		.4byte	.LVL461-.Ltext0
 17190 13a3 0400     		.2byte	0x4
 17191 13a5 F3       		.byte	0xf3
 17192 13a6 01       		.uleb128 0x1
 17193 13a7 51       		.byte	0x51
 17194 13a8 9F       		.byte	0x9f
 17195 13a9 FE120000 		.4byte	.LVL461-.Ltext0
 17196 13ad 08130000 		.4byte	.LVL464-.Ltext0
 17197 13b1 0100     		.2byte	0x1
 17198 13b3 54       		.byte	0x54
 17199 13b4 08130000 		.4byte	.LVL464-.Ltext0
 17200 13b8 4C130000 		.4byte	.LVL476-.Ltext0
 17201 13bc 0400     		.2byte	0x4
 17202 13be F3       		.byte	0xf3
 17203 13bf 01       		.uleb128 0x1
 17204 13c0 51       		.byte	0x51
 17205 13c1 9F       		.byte	0x9f
 17206 13c2 4C130000 		.4byte	.LVL476-.Ltext0
 17207 13c6 50130000 		.4byte	.LFE127-.Ltext0
 17208 13ca 0100     		.2byte	0x1
 17209 13cc 51       		.byte	0x51
 17210 13cd 00000000 		.4byte	0
 17211 13d1 00000000 		.4byte	0
 17212              	.LLST283:
 17213 13d5 5C120000 		.4byte	.LVL448-.Ltext0
 17214 13d9 9C120000 		.4byte	.LVL451-.Ltext0
 17215 13dd 0100     		.2byte	0x1
 17216 13df 52       		.byte	0x52
 17217 13e0 9C120000 		.4byte	.LVL451-.Ltext0
 17218 13e4 B2120000 		.4byte	.LVL453-.Ltext0
 17219 13e8 0400     		.2byte	0x4
 17220 13ea F3       		.byte	0xf3
 17221 13eb 01       		.uleb128 0x1
 17222 13ec 52       		.byte	0x52
 17223 13ed 9F       		.byte	0x9f
 17224 13ee B2120000 		.4byte	.LVL453-.Ltext0
 17225 13f2 B9120000 		.4byte	.LVL455-1-.Ltext0
 17226 13f6 0100     		.2byte	0x1
 17227 13f8 52       		.byte	0x52
 17228 13f9 B9120000 		.4byte	.LVL455-1-.Ltext0
 17229 13fd BC120000 		.4byte	.LVL456-.Ltext0
 17230 1401 0400     		.2byte	0x4
 17231 1403 F3       		.byte	0xf3
 17232 1404 01       		.uleb128 0x1
 17233 1405 52       		.byte	0x52
 17234 1406 9F       		.byte	0x9f
 17235 1407 BC120000 		.4byte	.LVL456-.Ltext0
 17236 140b C3120000 		.4byte	.LVL458-1-.Ltext0
 17237 140f 0100     		.2byte	0x1
 17238 1411 52       		.byte	0x52
 17239 1412 C3120000 		.4byte	.LVL458-1-.Ltext0
 17240 1416 4C130000 		.4byte	.LVL476-.Ltext0
 17241 141a 0400     		.2byte	0x4
 17242 141c F3       		.byte	0xf3
ARM GAS  /tmp/ccTsJCXT.s 			page 445


 17243 141d 01       		.uleb128 0x1
 17244 141e 52       		.byte	0x52
 17245 141f 9F       		.byte	0x9f
 17246 1420 4C130000 		.4byte	.LVL476-.Ltext0
 17247 1424 50130000 		.4byte	.LFE127-.Ltext0
 17248 1428 0100     		.2byte	0x1
 17249 142a 52       		.byte	0x52
 17250 142b 00000000 		.4byte	0
 17251 142f 00000000 		.4byte	0
 17252              	.LLST284:
 17253 1433 5C120000 		.4byte	.LVL448-.Ltext0
 17254 1437 6E120000 		.4byte	.LVL449-.Ltext0
 17255 143b 0100     		.2byte	0x1
 17256 143d 53       		.byte	0x53
 17257 143e 6E120000 		.4byte	.LVL449-.Ltext0
 17258 1442 A2120000 		.4byte	.LVL452-.Ltext0
 17259 1446 0100     		.2byte	0x1
 17260 1448 56       		.byte	0x56
 17261 1449 A2120000 		.4byte	.LVL452-.Ltext0
 17262 144d B2120000 		.4byte	.LVL453-.Ltext0
 17263 1451 0400     		.2byte	0x4
 17264 1453 F3       		.byte	0xf3
 17265 1454 01       		.uleb128 0x1
 17266 1455 53       		.byte	0x53
 17267 1456 9F       		.byte	0x9f
 17268 1457 B2120000 		.4byte	.LVL453-.Ltext0
 17269 145b EA120000 		.4byte	.LVL460-.Ltext0
 17270 145f 0100     		.2byte	0x1
 17271 1461 56       		.byte	0x56
 17272 1462 EA120000 		.4byte	.LVL460-.Ltext0
 17273 1466 FE120000 		.4byte	.LVL461-.Ltext0
 17274 146a 0400     		.2byte	0x4
 17275 146c F3       		.byte	0xf3
 17276 146d 01       		.uleb128 0x1
 17277 146e 53       		.byte	0x53
 17278 146f 9F       		.byte	0x9f
 17279 1470 FE120000 		.4byte	.LVL461-.Ltext0
 17280 1474 04130000 		.4byte	.LVL462-.Ltext0
 17281 1478 0100     		.2byte	0x1
 17282 147a 56       		.byte	0x56
 17283 147b 04130000 		.4byte	.LVL462-.Ltext0
 17284 147f 4C130000 		.4byte	.LVL476-.Ltext0
 17285 1483 0400     		.2byte	0x4
 17286 1485 F3       		.byte	0xf3
 17287 1486 01       		.uleb128 0x1
 17288 1487 53       		.byte	0x53
 17289 1488 9F       		.byte	0x9f
 17290 1489 4C130000 		.4byte	.LVL476-.Ltext0
 17291 148d 50130000 		.4byte	.LFE127-.Ltext0
 17292 1491 0100     		.2byte	0x1
 17293 1493 53       		.byte	0x53
 17294 1494 00000000 		.4byte	0
 17295 1498 00000000 		.4byte	0
 17296              	.LLST285:
 17297 149c 06130000 		.4byte	.LVL463-.Ltext0
 17298 14a0 0A130000 		.4byte	.LVL465-.Ltext0
 17299 14a4 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 446


 17300 14a6 51       		.byte	0x51
 17301 14a7 0A130000 		.4byte	.LVL465-.Ltext0
 17302 14ab 34130000 		.4byte	.LVL475-.Ltext0
 17303 14af 0500     		.2byte	0x5
 17304 14b1 F3       		.byte	0xf3
 17305 14b2 01       		.uleb128 0x1
 17306 14b3 51       		.byte	0x51
 17307 14b4 23       		.byte	0x23
 17308 14b5 20       		.uleb128 0x20
 17309 14b6 00000000 		.4byte	0
 17310 14ba 00000000 		.4byte	0
 17311              	.LLST286:
 17312 14be 06130000 		.4byte	.LVL463-.Ltext0
 17313 14c2 34130000 		.4byte	.LVL475-.Ltext0
 17314 14c6 0100     		.2byte	0x1
 17315 14c8 56       		.byte	0x56
 17316 14c9 00000000 		.4byte	0
 17317 14cd 00000000 		.4byte	0
 17318              	.LLST287:
 17319 14d1 06130000 		.4byte	.LVL463-.Ltext0
 17320 14d5 24130000 		.4byte	.LVL471-.Ltext0
 17321 14d9 0100     		.2byte	0x1
 17322 14db 52       		.byte	0x52
 17323 14dc 24130000 		.4byte	.LVL471-.Ltext0
 17324 14e0 34130000 		.4byte	.LVL475-.Ltext0
 17325 14e4 0500     		.2byte	0x5
 17326 14e6 F3       		.byte	0xf3
 17327 14e7 01       		.uleb128 0x1
 17328 14e8 51       		.byte	0x51
 17329 14e9 23       		.byte	0x23
 17330 14ea 18       		.uleb128 0x18
 17331 14eb 00000000 		.4byte	0
 17332 14ef 00000000 		.4byte	0
 17333              	.LLST288:
 17334 14f3 06130000 		.4byte	.LVL463-.Ltext0
 17335 14f7 34130000 		.4byte	.LVL475-.Ltext0
 17336 14fb 0100     		.2byte	0x1
 17337 14fd 53       		.byte	0x53
 17338 14fe 00000000 		.4byte	0
 17339 1502 00000000 		.4byte	0
 17340              	.LLST289:
 17341 1506 12130000 		.4byte	.LVL466-.Ltext0
 17342 150a 26130000 		.4byte	.LVL472-.Ltext0
 17343 150e 0100     		.2byte	0x1
 17344 1510 50       		.byte	0x50
 17345 1511 26130000 		.4byte	.LVL472-.Ltext0
 17346 1515 34130000 		.4byte	.LVL475-.Ltext0
 17347 1519 0100     		.2byte	0x1
 17348 151b 51       		.byte	0x51
 17349 151c 00000000 		.4byte	0
 17350 1520 00000000 		.4byte	0
 17351              	.LLST290:
 17352 1524 14130000 		.4byte	.LVL467-.Ltext0
 17353 1528 2E130000 		.4byte	.LVL473-.Ltext0
 17354 152c 0100     		.2byte	0x1
 17355 152e 54       		.byte	0x54
 17356 152f 2E130000 		.4byte	.LVL473-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 447


 17357 1533 30130000 		.4byte	.LVL474-.Ltext0
 17358 1537 0100     		.2byte	0x1
 17359 1539 50       		.byte	0x50
 17360 153a 30130000 		.4byte	.LVL474-.Ltext0
 17361 153e 34130000 		.4byte	.LVL475-.Ltext0
 17362 1542 0100     		.2byte	0x1
 17363 1544 52       		.byte	0x52
 17364 1545 00000000 		.4byte	0
 17365 1549 00000000 		.4byte	0
 17366              	.LLST248:
 17367 154d 3C100000 		.4byte	.LFB126-.Ltext0
 17368 1551 3E100000 		.4byte	.LCFI37-.Ltext0
 17369 1555 0200     		.2byte	0x2
 17370 1557 7D       		.byte	0x7d
 17371 1558 00       		.sleb128 0
 17372 1559 3E100000 		.4byte	.LCFI37-.Ltext0
 17373 155d 00110000 		.4byte	.LFE126-.Ltext0
 17374 1561 0200     		.2byte	0x2
 17375 1563 7D       		.byte	0x7d
 17376 1564 10       		.sleb128 16
 17377 1565 00000000 		.4byte	0
 17378 1569 00000000 		.4byte	0
 17379              	.LLST249:
 17380 156d 3C100000 		.4byte	.LVL376-.Ltext0
 17381 1571 4A100000 		.4byte	.LVL377-.Ltext0
 17382 1575 0100     		.2byte	0x1
 17383 1577 50       		.byte	0x50
 17384 1578 4A100000 		.4byte	.LVL377-.Ltext0
 17385 157c 00110000 		.4byte	.LFE126-.Ltext0
 17386 1580 0100     		.2byte	0x1
 17387 1582 54       		.byte	0x54
 17388 1583 00000000 		.4byte	0
 17389 1587 00000000 		.4byte	0
 17390              	.LLST250:
 17391 158b 3C100000 		.4byte	.LVL376-.Ltext0
 17392 158f 76100000 		.4byte	.LVL379-.Ltext0
 17393 1593 0100     		.2byte	0x1
 17394 1595 51       		.byte	0x51
 17395 1596 76100000 		.4byte	.LVL379-.Ltext0
 17396 159a 9A100000 		.4byte	.LVL380-.Ltext0
 17397 159e 0400     		.2byte	0x4
 17398 15a0 F3       		.byte	0xf3
 17399 15a1 01       		.uleb128 0x1
 17400 15a2 51       		.byte	0x51
 17401 15a3 9F       		.byte	0x9f
 17402 15a4 9A100000 		.4byte	.LVL380-.Ltext0
 17403 15a8 A4100000 		.4byte	.LVL382-.Ltext0
 17404 15ac 0100     		.2byte	0x1
 17405 15ae 51       		.byte	0x51
 17406 15af A4100000 		.4byte	.LVL382-.Ltext0
 17407 15b3 BC100000 		.4byte	.LVL383-.Ltext0
 17408 15b7 0400     		.2byte	0x4
 17409 15b9 F3       		.byte	0xf3
 17410 15ba 01       		.uleb128 0x1
 17411 15bb 51       		.byte	0x51
 17412 15bc 9F       		.byte	0x9f
 17413 15bd BC100000 		.4byte	.LVL383-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 448


 17414 15c1 C6100000 		.4byte	.LVL385-.Ltext0
 17415 15c5 0100     		.2byte	0x1
 17416 15c7 51       		.byte	0x51
 17417 15c8 C6100000 		.4byte	.LVL385-.Ltext0
 17418 15cc DE100000 		.4byte	.LVL386-.Ltext0
 17419 15d0 0400     		.2byte	0x4
 17420 15d2 F3       		.byte	0xf3
 17421 15d3 01       		.uleb128 0x1
 17422 15d4 51       		.byte	0x51
 17423 15d5 9F       		.byte	0x9f
 17424 15d6 DE100000 		.4byte	.LVL386-.Ltext0
 17425 15da E8100000 		.4byte	.LVL388-.Ltext0
 17426 15de 0100     		.2byte	0x1
 17427 15e0 51       		.byte	0x51
 17428 15e1 E8100000 		.4byte	.LVL388-.Ltext0
 17429 15e5 00110000 		.4byte	.LFE126-.Ltext0
 17430 15e9 0400     		.2byte	0x4
 17431 15eb F3       		.byte	0xf3
 17432 15ec 01       		.uleb128 0x1
 17433 15ed 51       		.byte	0x51
 17434 15ee 9F       		.byte	0x9f
 17435 15ef 00000000 		.4byte	0
 17436 15f3 00000000 		.4byte	0
 17437              	.LLST251:
 17438 15f7 3C100000 		.4byte	.LVL376-.Ltext0
 17439 15fb 71100000 		.4byte	.LVL378-1-.Ltext0
 17440 15ff 0100     		.2byte	0x1
 17441 1601 52       		.byte	0x52
 17442 1602 71100000 		.4byte	.LVL378-1-.Ltext0
 17443 1606 9A100000 		.4byte	.LVL380-.Ltext0
 17444 160a 0400     		.2byte	0x4
 17445 160c F3       		.byte	0xf3
 17446 160d 01       		.uleb128 0x1
 17447 160e 52       		.byte	0x52
 17448 160f 9F       		.byte	0x9f
 17449 1610 9A100000 		.4byte	.LVL380-.Ltext0
 17450 1614 9F100000 		.4byte	.LVL381-1-.Ltext0
 17451 1618 0100     		.2byte	0x1
 17452 161a 52       		.byte	0x52
 17453 161b 9F100000 		.4byte	.LVL381-1-.Ltext0
 17454 161f BC100000 		.4byte	.LVL383-.Ltext0
 17455 1623 0400     		.2byte	0x4
 17456 1625 F3       		.byte	0xf3
 17457 1626 01       		.uleb128 0x1
 17458 1627 52       		.byte	0x52
 17459 1628 9F       		.byte	0x9f
 17460 1629 BC100000 		.4byte	.LVL383-.Ltext0
 17461 162d C1100000 		.4byte	.LVL384-1-.Ltext0
 17462 1631 0100     		.2byte	0x1
 17463 1633 52       		.byte	0x52
 17464 1634 C1100000 		.4byte	.LVL384-1-.Ltext0
 17465 1638 DE100000 		.4byte	.LVL386-.Ltext0
 17466 163c 0400     		.2byte	0x4
 17467 163e F3       		.byte	0xf3
 17468 163f 01       		.uleb128 0x1
 17469 1640 52       		.byte	0x52
 17470 1641 9F       		.byte	0x9f
ARM GAS  /tmp/ccTsJCXT.s 			page 449


 17471 1642 DE100000 		.4byte	.LVL386-.Ltext0
 17472 1646 E3100000 		.4byte	.LVL387-1-.Ltext0
 17473 164a 0100     		.2byte	0x1
 17474 164c 52       		.byte	0x52
 17475 164d E3100000 		.4byte	.LVL387-1-.Ltext0
 17476 1651 00110000 		.4byte	.LFE126-.Ltext0
 17477 1655 0400     		.2byte	0x4
 17478 1657 F3       		.byte	0xf3
 17479 1658 01       		.uleb128 0x1
 17480 1659 52       		.byte	0x52
 17481 165a 9F       		.byte	0x9f
 17482 165b 00000000 		.4byte	0
 17483 165f 00000000 		.4byte	0
 17484              	.LLST258:
 17485 1663 4C110000 		.4byte	.LFB125-.Ltext0
 17486 1667 4E110000 		.4byte	.LCFI39-.Ltext0
 17487 166b 0200     		.2byte	0x2
 17488 166d 7D       		.byte	0x7d
 17489 166e 00       		.sleb128 0
 17490 166f 4E110000 		.4byte	.LCFI39-.Ltext0
 17491 1673 5C120000 		.4byte	.LFE125-.Ltext0
 17492 1677 0200     		.2byte	0x2
 17493 1679 7D       		.byte	0x7d
 17494 167a 18       		.sleb128 24
 17495 167b 00000000 		.4byte	0
 17496 167f 00000000 		.4byte	0
 17497              	.LLST259:
 17498 1683 4C110000 		.4byte	.LVL402-.Ltext0
 17499 1687 5C110000 		.4byte	.LVL403-.Ltext0
 17500 168b 0100     		.2byte	0x1
 17501 168d 50       		.byte	0x50
 17502 168e 5C110000 		.4byte	.LVL403-.Ltext0
 17503 1692 5C120000 		.4byte	.LFE125-.Ltext0
 17504 1696 0100     		.2byte	0x1
 17505 1698 54       		.byte	0x54
 17506 1699 00000000 		.4byte	0
 17507 169d 00000000 		.4byte	0
 17508              	.LLST260:
 17509 16a1 4C110000 		.4byte	.LVL402-.Ltext0
 17510 16a5 70110000 		.4byte	.LVL404-.Ltext0
 17511 16a9 0100     		.2byte	0x1
 17512 16ab 51       		.byte	0x51
 17513 16ac 70110000 		.4byte	.LVL404-.Ltext0
 17514 16b0 86110000 		.4byte	.LVL406-.Ltext0
 17515 16b4 0100     		.2byte	0x1
 17516 16b6 55       		.byte	0x55
 17517 16b7 86110000 		.4byte	.LVL406-.Ltext0
 17518 16bb 94110000 		.4byte	.LVL407-.Ltext0
 17519 16bf 0400     		.2byte	0x4
 17520 16c1 F3       		.byte	0xf3
 17521 16c2 01       		.uleb128 0x1
 17522 16c3 51       		.byte	0x51
 17523 16c4 9F       		.byte	0x9f
 17524 16c5 94110000 		.4byte	.LVL407-.Ltext0
 17525 16c9 9C110000 		.4byte	.LVL408-.Ltext0
 17526 16cd 0100     		.2byte	0x1
 17527 16cf 51       		.byte	0x51
ARM GAS  /tmp/ccTsJCXT.s 			page 450


 17528 16d0 9C110000 		.4byte	.LVL408-.Ltext0
 17529 16d4 AE110000 		.4byte	.LVL413-.Ltext0
 17530 16d8 0100     		.2byte	0x1
 17531 16da 55       		.byte	0x55
 17532 16db AE110000 		.4byte	.LVL413-.Ltext0
 17533 16df E0110000 		.4byte	.LVL422-.Ltext0
 17534 16e3 0400     		.2byte	0x4
 17535 16e5 F3       		.byte	0xf3
 17536 16e6 01       		.uleb128 0x1
 17537 16e7 51       		.byte	0x51
 17538 16e8 9F       		.byte	0x9f
 17539 16e9 E0110000 		.4byte	.LVL422-.Ltext0
 17540 16ed F6110000 		.4byte	.LVL428-.Ltext0
 17541 16f1 0100     		.2byte	0x1
 17542 16f3 55       		.byte	0x55
 17543 16f4 F6110000 		.4byte	.LVL428-.Ltext0
 17544 16f8 20120000 		.4byte	.LVL436-.Ltext0
 17545 16fc 0400     		.2byte	0x4
 17546 16fe F3       		.byte	0xf3
 17547 16ff 01       		.uleb128 0x1
 17548 1700 51       		.byte	0x51
 17549 1701 9F       		.byte	0x9f
 17550 1702 20120000 		.4byte	.LVL436-.Ltext0
 17551 1706 30120000 		.4byte	.LVL440-.Ltext0
 17552 170a 0100     		.2byte	0x1
 17553 170c 55       		.byte	0x55
 17554 170d 30120000 		.4byte	.LVL440-.Ltext0
 17555 1711 5C120000 		.4byte	.LFE125-.Ltext0
 17556 1715 0400     		.2byte	0x4
 17557 1717 F3       		.byte	0xf3
 17558 1718 01       		.uleb128 0x1
 17559 1719 51       		.byte	0x51
 17560 171a 9F       		.byte	0x9f
 17561 171b 00000000 		.4byte	0
 17562 171f 00000000 		.4byte	0
 17563              	.LLST261:
 17564 1723 4C110000 		.4byte	.LVL402-.Ltext0
 17565 1727 70110000 		.4byte	.LVL404-.Ltext0
 17566 172b 0100     		.2byte	0x1
 17567 172d 52       		.byte	0x52
 17568 172e 70110000 		.4byte	.LVL404-.Ltext0
 17569 1732 94110000 		.4byte	.LVL407-.Ltext0
 17570 1736 0400     		.2byte	0x4
 17571 1738 F3       		.byte	0xf3
 17572 1739 01       		.uleb128 0x1
 17573 173a 52       		.byte	0x52
 17574 173b 9F       		.byte	0x9f
 17575 173c 94110000 		.4byte	.LVL407-.Ltext0
 17576 1740 A2110000 		.4byte	.LVL410-.Ltext0
 17577 1744 0100     		.2byte	0x1
 17578 1746 52       		.byte	0x52
 17579 1747 A2110000 		.4byte	.LVL410-.Ltext0
 17580 174b E0110000 		.4byte	.LVL422-.Ltext0
 17581 174f 0400     		.2byte	0x4
 17582 1751 F3       		.byte	0xf3
 17583 1752 01       		.uleb128 0x1
 17584 1753 52       		.byte	0x52
ARM GAS  /tmp/ccTsJCXT.s 			page 451


 17585 1754 9F       		.byte	0x9f
 17586 1755 E0110000 		.4byte	.LVL422-.Ltext0
 17587 1759 E4110000 		.4byte	.LVL423-.Ltext0
 17588 175d 0100     		.2byte	0x1
 17589 175f 52       		.byte	0x52
 17590 1760 E4110000 		.4byte	.LVL423-.Ltext0
 17591 1764 5C120000 		.4byte	.LFE125-.Ltext0
 17592 1768 0400     		.2byte	0x4
 17593 176a F3       		.byte	0xf3
 17594 176b 01       		.uleb128 0x1
 17595 176c 52       		.byte	0x52
 17596 176d 9F       		.byte	0x9f
 17597 176e 00000000 		.4byte	0
 17598 1772 00000000 		.4byte	0
 17599              	.LLST262:
 17600 1776 A0110000 		.4byte	.LVL409-.Ltext0
 17601 177a A4110000 		.4byte	.LVL411-.Ltext0
 17602 177e 0100     		.2byte	0x1
 17603 1780 50       		.byte	0x50
 17604 1781 A4110000 		.4byte	.LVL411-.Ltext0
 17605 1785 AE110000 		.4byte	.LVL413-.Ltext0
 17606 1789 0200     		.2byte	0x2
 17607 178b 75       		.byte	0x75
 17608 178c 0C       		.sleb128 12
 17609 178d AE110000 		.4byte	.LVL413-.Ltext0
 17610 1791 CE110000 		.4byte	.LVL421-.Ltext0
 17611 1795 0500     		.2byte	0x5
 17612 1797 F3       		.byte	0xf3
 17613 1798 01       		.uleb128 0x1
 17614 1799 51       		.byte	0x51
 17615 179a 23       		.byte	0x23
 17616 179b 0C       		.uleb128 0xc
 17617 179c 00000000 		.4byte	0
 17618 17a0 00000000 		.4byte	0
 17619              	.LLST263:
 17620 17a4 A0110000 		.4byte	.LVL409-.Ltext0
 17621 17a8 CE110000 		.4byte	.LVL421-.Ltext0
 17622 17ac 0100     		.2byte	0x1
 17623 17ae 57       		.byte	0x57
 17624 17af 00000000 		.4byte	0
 17625 17b3 00000000 		.4byte	0
 17626              	.LLST264:
 17627 17b7 A0110000 		.4byte	.LVL409-.Ltext0
 17628 17bb BE110000 		.4byte	.LVL417-.Ltext0
 17629 17bf 0100     		.2byte	0x1
 17630 17c1 51       		.byte	0x51
 17631 17c2 BE110000 		.4byte	.LVL417-.Ltext0
 17632 17c6 CE110000 		.4byte	.LVL421-.Ltext0
 17633 17ca 0300     		.2byte	0x3
 17634 17cc F3       		.byte	0xf3
 17635 17cd 01       		.uleb128 0x1
 17636 17ce 51       		.byte	0x51
 17637 17cf 00000000 		.4byte	0
 17638 17d3 00000000 		.4byte	0
 17639              	.LLST265:
 17640 17d7 A0110000 		.4byte	.LVL409-.Ltext0
 17641 17db CE110000 		.4byte	.LVL421-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 452


 17642 17df 0100     		.2byte	0x1
 17643 17e1 53       		.byte	0x53
 17644 17e2 00000000 		.4byte	0
 17645 17e6 00000000 		.4byte	0
 17646              	.LLST266:
 17647 17ea AC110000 		.4byte	.LVL412-.Ltext0
 17648 17ee CE110000 		.4byte	.LVL421-.Ltext0
 17649 17f2 0100     		.2byte	0x1
 17650 17f4 52       		.byte	0x52
 17651 17f5 00000000 		.4byte	0
 17652 17f9 00000000 		.4byte	0
 17653              	.LLST267:
 17654 17fd AE110000 		.4byte	.LVL413-.Ltext0
 17655 1801 C8110000 		.4byte	.LVL419-.Ltext0
 17656 1805 0100     		.2byte	0x1
 17657 1807 55       		.byte	0x55
 17658 1808 C8110000 		.4byte	.LVL419-.Ltext0
 17659 180c CA110000 		.4byte	.LVL420-.Ltext0
 17660 1810 0100     		.2byte	0x1
 17661 1812 50       		.byte	0x50
 17662 1813 CA110000 		.4byte	.LVL420-.Ltext0
 17663 1817 CE110000 		.4byte	.LVL421-.Ltext0
 17664 181b 0100     		.2byte	0x1
 17665 181d 51       		.byte	0x51
 17666 181e 00000000 		.4byte	0
 17667 1822 00000000 		.4byte	0
 17668              	.LLST268:
 17669 1826 E6110000 		.4byte	.LVL424-.Ltext0
 17670 182a F0110000 		.4byte	.LVL426-.Ltext0
 17671 182e 0100     		.2byte	0x1
 17672 1830 50       		.byte	0x50
 17673 1831 F0110000 		.4byte	.LVL426-.Ltext0
 17674 1835 F6110000 		.4byte	.LVL428-.Ltext0
 17675 1839 0200     		.2byte	0x2
 17676 183b 75       		.byte	0x75
 17677 183c 0C       		.sleb128 12
 17678 183d F6110000 		.4byte	.LVL428-.Ltext0
 17679 1841 10120000 		.4byte	.LVL435-.Ltext0
 17680 1845 0500     		.2byte	0x5
 17681 1847 F3       		.byte	0xf3
 17682 1848 01       		.uleb128 0x1
 17683 1849 51       		.byte	0x51
 17684 184a 23       		.byte	0x23
 17685 184b 0C       		.uleb128 0xc
 17686 184c 00000000 		.4byte	0
 17687 1850 00000000 		.4byte	0
 17688              	.LLST269:
 17689 1854 E6110000 		.4byte	.LVL424-.Ltext0
 17690 1858 10120000 		.4byte	.LVL435-.Ltext0
 17691 185c 0100     		.2byte	0x1
 17692 185e 57       		.byte	0x57
 17693 185f 00000000 		.4byte	0
 17694 1863 00000000 		.4byte	0
 17695              	.LLST270:
 17696 1867 E6110000 		.4byte	.LVL424-.Ltext0
 17697 186b 00120000 		.4byte	.LVL431-.Ltext0
 17698 186f 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 453


 17699 1871 51       		.byte	0x51
 17700 1872 00120000 		.4byte	.LVL431-.Ltext0
 17701 1876 10120000 		.4byte	.LVL435-.Ltext0
 17702 187a 0300     		.2byte	0x3
 17703 187c F3       		.byte	0xf3
 17704 187d 01       		.uleb128 0x1
 17705 187e 51       		.byte	0x51
 17706 187f 00000000 		.4byte	0
 17707 1883 00000000 		.4byte	0
 17708              	.LLST271:
 17709 1887 E6110000 		.4byte	.LVL424-.Ltext0
 17710 188b 10120000 		.4byte	.LVL435-.Ltext0
 17711 188f 0100     		.2byte	0x1
 17712 1891 53       		.byte	0x53
 17713 1892 00000000 		.4byte	0
 17714 1896 00000000 		.4byte	0
 17715              	.LLST272:
 17716 189a EE110000 		.4byte	.LVL425-.Ltext0
 17717 189e F4110000 		.4byte	.LVL427-.Ltext0
 17718 18a2 0100     		.2byte	0x1
 17719 18a4 52       		.byte	0x52
 17720 18a5 F6110000 		.4byte	.LVL428-.Ltext0
 17721 18a9 10120000 		.4byte	.LVL435-.Ltext0
 17722 18ad 0100     		.2byte	0x1
 17723 18af 52       		.byte	0x52
 17724 18b0 00000000 		.4byte	0
 17725 18b4 00000000 		.4byte	0
 17726              	.LLST273:
 17727 18b8 F6110000 		.4byte	.LVL428-.Ltext0
 17728 18bc 0A120000 		.4byte	.LVL433-.Ltext0
 17729 18c0 0100     		.2byte	0x1
 17730 18c2 55       		.byte	0x55
 17731 18c3 0A120000 		.4byte	.LVL433-.Ltext0
 17732 18c7 0C120000 		.4byte	.LVL434-.Ltext0
 17733 18cb 0100     		.2byte	0x1
 17734 18cd 50       		.byte	0x50
 17735 18ce 0C120000 		.4byte	.LVL434-.Ltext0
 17736 18d2 10120000 		.4byte	.LVL435-.Ltext0
 17737 18d6 0100     		.2byte	0x1
 17738 18d8 51       		.byte	0x51
 17739 18d9 00000000 		.4byte	0
 17740 18dd 00000000 		.4byte	0
 17741              	.LLST274:
 17742 18e1 20120000 		.4byte	.LVL436-.Ltext0
 17743 18e5 2A120000 		.4byte	.LVL438-.Ltext0
 17744 18e9 0100     		.2byte	0x1
 17745 18eb 50       		.byte	0x50
 17746 18ec 2A120000 		.4byte	.LVL438-.Ltext0
 17747 18f0 30120000 		.4byte	.LVL440-.Ltext0
 17748 18f4 0200     		.2byte	0x2
 17749 18f6 75       		.byte	0x75
 17750 18f7 0C       		.sleb128 12
 17751 18f8 30120000 		.4byte	.LVL440-.Ltext0
 17752 18fc 4C120000 		.4byte	.LVL447-.Ltext0
 17753 1900 0500     		.2byte	0x5
 17754 1902 F3       		.byte	0xf3
 17755 1903 01       		.uleb128 0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 454


 17756 1904 51       		.byte	0x51
 17757 1905 23       		.byte	0x23
 17758 1906 0C       		.uleb128 0xc
 17759 1907 00000000 		.4byte	0
 17760 190b 00000000 		.4byte	0
 17761              	.LLST275:
 17762 190f 20120000 		.4byte	.LVL436-.Ltext0
 17763 1913 4C120000 		.4byte	.LVL447-.Ltext0
 17764 1917 0100     		.2byte	0x1
 17765 1919 57       		.byte	0x57
 17766 191a 00000000 		.4byte	0
 17767 191e 00000000 		.4byte	0
 17768              	.LLST276:
 17769 1922 20120000 		.4byte	.LVL436-.Ltext0
 17770 1926 3C120000 		.4byte	.LVL443-.Ltext0
 17771 192a 0100     		.2byte	0x1
 17772 192c 51       		.byte	0x51
 17773 192d 3C120000 		.4byte	.LVL443-.Ltext0
 17774 1931 4C120000 		.4byte	.LVL447-.Ltext0
 17775 1935 0300     		.2byte	0x3
 17776 1937 F3       		.byte	0xf3
 17777 1938 01       		.uleb128 0x1
 17778 1939 51       		.byte	0x51
 17779 193a 00000000 		.4byte	0
 17780 193e 00000000 		.4byte	0
 17781              	.LLST277:
 17782 1942 20120000 		.4byte	.LVL436-.Ltext0
 17783 1946 4C120000 		.4byte	.LVL447-.Ltext0
 17784 194a 0100     		.2byte	0x1
 17785 194c 53       		.byte	0x53
 17786 194d 00000000 		.4byte	0
 17787 1951 00000000 		.4byte	0
 17788              	.LLST278:
 17789 1955 28120000 		.4byte	.LVL437-.Ltext0
 17790 1959 2E120000 		.4byte	.LVL439-.Ltext0
 17791 195d 0100     		.2byte	0x1
 17792 195f 52       		.byte	0x52
 17793 1960 30120000 		.4byte	.LVL440-.Ltext0
 17794 1964 3E120000 		.4byte	.LVL444-.Ltext0
 17795 1968 0100     		.2byte	0x1
 17796 196a 52       		.byte	0x52
 17797 196b 3E120000 		.4byte	.LVL444-.Ltext0
 17798 196f 4C120000 		.4byte	.LVL447-.Ltext0
 17799 1973 0100     		.2byte	0x1
 17800 1975 50       		.byte	0x50
 17801 1976 00000000 		.4byte	0
 17802 197a 00000000 		.4byte	0
 17803              	.LLST279:
 17804 197e 30120000 		.4byte	.LVL440-.Ltext0
 17805 1982 46120000 		.4byte	.LVL445-.Ltext0
 17806 1986 0100     		.2byte	0x1
 17807 1988 55       		.byte	0x55
 17808 1989 46120000 		.4byte	.LVL445-.Ltext0
 17809 198d 48120000 		.4byte	.LVL446-.Ltext0
 17810 1991 0100     		.2byte	0x1
 17811 1993 52       		.byte	0x52
 17812 1994 48120000 		.4byte	.LVL446-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 455


 17813 1998 4C120000 		.4byte	.LVL447-.Ltext0
 17814 199c 0100     		.2byte	0x1
 17815 199e 51       		.byte	0x51
 17816 199f 00000000 		.4byte	0
 17817 19a3 00000000 		.4byte	0
 17818              	.LLST245:
 17819 19a7 E00F0000 		.4byte	.LFB124-.Ltext0
 17820 19ab E20F0000 		.4byte	.LCFI36-.Ltext0
 17821 19af 0200     		.2byte	0x2
 17822 19b1 7D       		.byte	0x7d
 17823 19b2 00       		.sleb128 0
 17824 19b3 E20F0000 		.4byte	.LCFI36-.Ltext0
 17825 19b7 3C100000 		.4byte	.LFE124-.Ltext0
 17826 19bb 0200     		.2byte	0x2
 17827 19bd 7D       		.byte	0x7d
 17828 19be 10       		.sleb128 16
 17829 19bf 00000000 		.4byte	0
 17830 19c3 00000000 		.4byte	0
 17831              	.LLST246:
 17832 19c7 E00F0000 		.4byte	.LVL367-.Ltext0
 17833 19cb EE0F0000 		.4byte	.LVL368-.Ltext0
 17834 19cf 0100     		.2byte	0x1
 17835 19d1 50       		.byte	0x50
 17836 19d2 EE0F0000 		.4byte	.LVL368-.Ltext0
 17837 19d6 3C100000 		.4byte	.LFE124-.Ltext0
 17838 19da 0100     		.2byte	0x1
 17839 19dc 54       		.byte	0x54
 17840 19dd 00000000 		.4byte	0
 17841 19e1 00000000 		.4byte	0
 17842              	.LLST247:
 17843 19e5 E00F0000 		.4byte	.LVL367-.Ltext0
 17844 19e9 17100000 		.4byte	.LVL369-1-.Ltext0
 17845 19ed 0100     		.2byte	0x1
 17846 19ef 52       		.byte	0x52
 17847 19f0 17100000 		.4byte	.LVL369-1-.Ltext0
 17848 19f4 24100000 		.4byte	.LVL370-.Ltext0
 17849 19f8 0400     		.2byte	0x4
 17850 19fa F3       		.byte	0xf3
 17851 19fb 01       		.uleb128 0x1
 17852 19fc 52       		.byte	0x52
 17853 19fd 9F       		.byte	0x9f
 17854 19fe 24100000 		.4byte	.LVL370-.Ltext0
 17855 1a02 29100000 		.4byte	.LVL371-1-.Ltext0
 17856 1a06 0100     		.2byte	0x1
 17857 1a08 52       		.byte	0x52
 17858 1a09 29100000 		.4byte	.LVL371-1-.Ltext0
 17859 1a0d 2C100000 		.4byte	.LVL372-.Ltext0
 17860 1a11 0400     		.2byte	0x4
 17861 1a13 F3       		.byte	0xf3
 17862 1a14 01       		.uleb128 0x1
 17863 1a15 52       		.byte	0x52
 17864 1a16 9F       		.byte	0x9f
 17865 1a17 2C100000 		.4byte	.LVL372-.Ltext0
 17866 1a1b 31100000 		.4byte	.LVL373-1-.Ltext0
 17867 1a1f 0100     		.2byte	0x1
 17868 1a21 52       		.byte	0x52
 17869 1a22 31100000 		.4byte	.LVL373-1-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 456


 17870 1a26 34100000 		.4byte	.LVL374-.Ltext0
 17871 1a2a 0400     		.2byte	0x4
 17872 1a2c F3       		.byte	0xf3
 17873 1a2d 01       		.uleb128 0x1
 17874 1a2e 52       		.byte	0x52
 17875 1a2f 9F       		.byte	0x9f
 17876 1a30 34100000 		.4byte	.LVL374-.Ltext0
 17877 1a34 39100000 		.4byte	.LVL375-1-.Ltext0
 17878 1a38 0100     		.2byte	0x1
 17879 1a3a 52       		.byte	0x52
 17880 1a3b 39100000 		.4byte	.LVL375-1-.Ltext0
 17881 1a3f 3C100000 		.4byte	.LFE124-.Ltext0
 17882 1a43 0400     		.2byte	0x4
 17883 1a45 F3       		.byte	0xf3
 17884 1a46 01       		.uleb128 0x1
 17885 1a47 52       		.byte	0x52
 17886 1a48 9F       		.byte	0x9f
 17887 1a49 00000000 		.4byte	0
 17888 1a4d 00000000 		.4byte	0
 17889              	.LLST211:
 17890 1a51 DE0B0000 		.4byte	.LFB123-.Ltext0
 17891 1a55 E20B0000 		.4byte	.LCFI22-.Ltext0
 17892 1a59 0200     		.2byte	0x2
 17893 1a5b 7D       		.byte	0x7d
 17894 1a5c 00       		.sleb128 0
 17895 1a5d E20B0000 		.4byte	.LCFI22-.Ltext0
 17896 1a61 EA0C0000 		.4byte	.LCFI23-.Ltext0
 17897 1a65 0200     		.2byte	0x2
 17898 1a67 7D       		.byte	0x7d
 17899 1a68 08       		.sleb128 8
 17900 1a69 EA0C0000 		.4byte	.LCFI23-.Ltext0
 17901 1a6d F00C0000 		.4byte	.LCFI24-.Ltext0
 17902 1a71 0200     		.2byte	0x2
 17903 1a73 7D       		.byte	0x7d
 17904 1a74 00       		.sleb128 0
 17905 1a75 F00C0000 		.4byte	.LCFI24-.Ltext0
 17906 1a79 220D0000 		.4byte	.LFE123-.Ltext0
 17907 1a7d 0200     		.2byte	0x2
 17908 1a7f 7D       		.byte	0x7d
 17909 1a80 08       		.sleb128 8
 17910 1a81 00000000 		.4byte	0
 17911 1a85 00000000 		.4byte	0
 17912              	.LLST212:
 17913 1a89 DE0B0000 		.4byte	.LVL264-.Ltext0
 17914 1a8d 030C0000 		.4byte	.LVL265-1-.Ltext0
 17915 1a91 0100     		.2byte	0x1
 17916 1a93 50       		.byte	0x50
 17917 1a94 030C0000 		.4byte	.LVL265-1-.Ltext0
 17918 1a98 2A0C0000 		.4byte	.LVL266-.Ltext0
 17919 1a9c 0100     		.2byte	0x1
 17920 1a9e 54       		.byte	0x54
 17921 1a9f 2A0C0000 		.4byte	.LVL266-.Ltext0
 17922 1aa3 2D0C0000 		.4byte	.LVL267-1-.Ltext0
 17923 1aa7 0100     		.2byte	0x1
 17924 1aa9 50       		.byte	0x50
 17925 1aaa 2D0C0000 		.4byte	.LVL267-1-.Ltext0
 17926 1aae 520C0000 		.4byte	.LVL268-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 457


 17927 1ab2 0100     		.2byte	0x1
 17928 1ab4 54       		.byte	0x54
 17929 1ab5 520C0000 		.4byte	.LVL268-.Ltext0
 17930 1ab9 550C0000 		.4byte	.LVL269-1-.Ltext0
 17931 1abd 0100     		.2byte	0x1
 17932 1abf 50       		.byte	0x50
 17933 1ac0 550C0000 		.4byte	.LVL269-1-.Ltext0
 17934 1ac4 7C0C0000 		.4byte	.LVL270-.Ltext0
 17935 1ac8 0100     		.2byte	0x1
 17936 1aca 54       		.byte	0x54
 17937 1acb 7C0C0000 		.4byte	.LVL270-.Ltext0
 17938 1acf 7F0C0000 		.4byte	.LVL271-1-.Ltext0
 17939 1ad3 0100     		.2byte	0x1
 17940 1ad5 50       		.byte	0x50
 17941 1ad6 7F0C0000 		.4byte	.LVL271-1-.Ltext0
 17942 1ada EA0C0000 		.4byte	.LVL275-.Ltext0
 17943 1ade 0100     		.2byte	0x1
 17944 1ae0 54       		.byte	0x54
 17945 1ae1 EA0C0000 		.4byte	.LVL275-.Ltext0
 17946 1ae5 EF0C0000 		.4byte	.LVL276-1-.Ltext0
 17947 1ae9 0100     		.2byte	0x1
 17948 1aeb 50       		.byte	0x50
 17949 1aec EF0C0000 		.4byte	.LVL276-1-.Ltext0
 17950 1af0 F00C0000 		.4byte	.LVL276-.Ltext0
 17951 1af4 0400     		.2byte	0x4
 17952 1af6 F3       		.byte	0xf3
 17953 1af7 01       		.uleb128 0x1
 17954 1af8 50       		.byte	0x50
 17955 1af9 9F       		.byte	0x9f
 17956 1afa F00C0000 		.4byte	.LVL276-.Ltext0
 17957 1afe F30C0000 		.4byte	.LVL277-1-.Ltext0
 17958 1b02 0100     		.2byte	0x1
 17959 1b04 50       		.byte	0x50
 17960 1b05 F30C0000 		.4byte	.LVL277-1-.Ltext0
 17961 1b09 FC0C0000 		.4byte	.LVL279-.Ltext0
 17962 1b0d 0100     		.2byte	0x1
 17963 1b0f 54       		.byte	0x54
 17964 1b10 FC0C0000 		.4byte	.LVL279-.Ltext0
 17965 1b14 FF0C0000 		.4byte	.LVL280-1-.Ltext0
 17966 1b18 0100     		.2byte	0x1
 17967 1b1a 50       		.byte	0x50
 17968 1b1b FF0C0000 		.4byte	.LVL280-1-.Ltext0
 17969 1b1f 080D0000 		.4byte	.LVL282-.Ltext0
 17970 1b23 0100     		.2byte	0x1
 17971 1b25 54       		.byte	0x54
 17972 1b26 080D0000 		.4byte	.LVL282-.Ltext0
 17973 1b2a 0B0D0000 		.4byte	.LVL283-1-.Ltext0
 17974 1b2e 0100     		.2byte	0x1
 17975 1b30 50       		.byte	0x50
 17976 1b31 0B0D0000 		.4byte	.LVL283-1-.Ltext0
 17977 1b35 140D0000 		.4byte	.LVL285-.Ltext0
 17978 1b39 0100     		.2byte	0x1
 17979 1b3b 54       		.byte	0x54
 17980 1b3c 140D0000 		.4byte	.LVL285-.Ltext0
 17981 1b40 170D0000 		.4byte	.LVL286-1-.Ltext0
 17982 1b44 0100     		.2byte	0x1
 17983 1b46 50       		.byte	0x50
ARM GAS  /tmp/ccTsJCXT.s 			page 458


 17984 1b47 170D0000 		.4byte	.LVL286-1-.Ltext0
 17985 1b4b 220D0000 		.4byte	.LFE123-.Ltext0
 17986 1b4f 0100     		.2byte	0x1
 17987 1b51 54       		.byte	0x54
 17988 1b52 00000000 		.4byte	0
 17989 1b56 00000000 		.4byte	0
 17990              	.LLST156:
 17991 1b5a AC070000 		.4byte	.LFB122-.Ltext0
 17992 1b5e B0070000 		.4byte	.LCFI12-.Ltext0
 17993 1b62 0200     		.2byte	0x2
 17994 1b64 7D       		.byte	0x7d
 17995 1b65 00       		.sleb128 0
 17996 1b66 B0070000 		.4byte	.LCFI12-.Ltext0
 17997 1b6a 3E080000 		.4byte	.LFE122-.Ltext0
 17998 1b6e 0200     		.2byte	0x2
 17999 1b70 7D       		.byte	0x7d
 18000 1b71 08       		.sleb128 8
 18001 1b72 00000000 		.4byte	0
 18002 1b76 00000000 		.4byte	0
 18003              	.LLST157:
 18004 1b7a AC070000 		.4byte	.LVL168-.Ltext0
 18005 1b7e C0070000 		.4byte	.LVL170-.Ltext0
 18006 1b82 0100     		.2byte	0x1
 18007 1b84 50       		.byte	0x50
 18008 1b85 C0070000 		.4byte	.LVL170-.Ltext0
 18009 1b89 F6070000 		.4byte	.LVL174-.Ltext0
 18010 1b8d 0100     		.2byte	0x1
 18011 1b8f 54       		.byte	0x54
 18012 1b90 F6070000 		.4byte	.LVL174-.Ltext0
 18013 1b94 0C080000 		.4byte	.LVL177-.Ltext0
 18014 1b98 0100     		.2byte	0x1
 18015 1b9a 50       		.byte	0x50
 18016 1b9b 0C080000 		.4byte	.LVL177-.Ltext0
 18017 1b9f 10080000 		.4byte	.LVL178-.Ltext0
 18018 1ba3 0100     		.2byte	0x1
 18019 1ba5 54       		.byte	0x54
 18020 1ba6 10080000 		.4byte	.LVL178-.Ltext0
 18021 1baa 1A080000 		.4byte	.LVL179-.Ltext0
 18022 1bae 0100     		.2byte	0x1
 18023 1bb0 50       		.byte	0x50
 18024 1bb1 1A080000 		.4byte	.LVL179-.Ltext0
 18025 1bb5 3E080000 		.4byte	.LFE122-.Ltext0
 18026 1bb9 0100     		.2byte	0x1
 18027 1bbb 54       		.byte	0x54
 18028 1bbc 00000000 		.4byte	0
 18029 1bc0 00000000 		.4byte	0
 18030              	.LLST158:
 18031 1bc4 AC070000 		.4byte	.LVL168-.Ltext0
 18032 1bc8 CA070000 		.4byte	.LVL172-.Ltext0
 18033 1bcc 0100     		.2byte	0x1
 18034 1bce 51       		.byte	0x51
 18035 1bcf CA070000 		.4byte	.LVL172-.Ltext0
 18036 1bd3 F6070000 		.4byte	.LVL174-.Ltext0
 18037 1bd7 0400     		.2byte	0x4
 18038 1bd9 F3       		.byte	0xf3
 18039 1bda 01       		.uleb128 0x1
 18040 1bdb 51       		.byte	0x51
ARM GAS  /tmp/ccTsJCXT.s 			page 459


 18041 1bdc 9F       		.byte	0x9f
 18042 1bdd F6070000 		.4byte	.LVL174-.Ltext0
 18043 1be1 0C080000 		.4byte	.LVL177-.Ltext0
 18044 1be5 0100     		.2byte	0x1
 18045 1be7 51       		.byte	0x51
 18046 1be8 0C080000 		.4byte	.LVL177-.Ltext0
 18047 1bec 10080000 		.4byte	.LVL178-.Ltext0
 18048 1bf0 0400     		.2byte	0x4
 18049 1bf2 F3       		.byte	0xf3
 18050 1bf3 01       		.uleb128 0x1
 18051 1bf4 51       		.byte	0x51
 18052 1bf5 9F       		.byte	0x9f
 18053 1bf6 10080000 		.4byte	.LVL178-.Ltext0
 18054 1bfa 3B080000 		.4byte	.LVL182-1-.Ltext0
 18055 1bfe 0100     		.2byte	0x1
 18056 1c00 51       		.byte	0x51
 18057 1c01 3B080000 		.4byte	.LVL182-1-.Ltext0
 18058 1c05 3E080000 		.4byte	.LFE122-.Ltext0
 18059 1c09 0400     		.2byte	0x4
 18060 1c0b F3       		.byte	0xf3
 18061 1c0c 01       		.uleb128 0x1
 18062 1c0d 51       		.byte	0x51
 18063 1c0e 9F       		.byte	0x9f
 18064 1c0f 00000000 		.4byte	0
 18065 1c13 00000000 		.4byte	0
 18066              	.LLST159:
 18067 1c17 B6070000 		.4byte	.LVL169-.Ltext0
 18068 1c1b C2070000 		.4byte	.LVL171-.Ltext0
 18069 1c1f 0200     		.2byte	0x2
 18070 1c21 30       		.byte	0x30
 18071 1c22 9F       		.byte	0x9f
 18072 1c23 00000000 		.4byte	0
 18073 1c27 00000000 		.4byte	0
 18074              	.LLST161:
 18075 1c2b B6070000 		.4byte	.LVL169-.Ltext0
 18076 1c2f C2070000 		.4byte	.LVL171-.Ltext0
 18077 1c33 0100     		.2byte	0x1
 18078 1c35 53       		.byte	0x53
 18079 1c36 00000000 		.4byte	0
 18080 1c3a 00000000 		.4byte	0
 18081              	.LLST162:
 18082 1c3e B6070000 		.4byte	.LVL169-.Ltext0
 18083 1c42 C2070000 		.4byte	.LVL171-.Ltext0
 18084 1c46 0200     		.2byte	0x2
 18085 1c48 31       		.byte	0x31
 18086 1c49 9F       		.byte	0x9f
 18087 1c4a 00000000 		.4byte	0
 18088 1c4e 00000000 		.4byte	0
 18089              	.LLST163:
 18090 1c52 FA070000 		.4byte	.LVL175-.Ltext0
 18091 1c56 04080000 		.4byte	.LVL176-.Ltext0
 18092 1c5a 0200     		.2byte	0x2
 18093 1c5c 30       		.byte	0x30
 18094 1c5d 9F       		.byte	0x9f
 18095 1c5e 00000000 		.4byte	0
 18096 1c62 00000000 		.4byte	0
 18097              	.LLST164:
ARM GAS  /tmp/ccTsJCXT.s 			page 460


 18098 1c66 FA070000 		.4byte	.LVL175-.Ltext0
 18099 1c6a 04080000 		.4byte	.LVL176-.Ltext0
 18100 1c6e 0200     		.2byte	0x2
 18101 1c70 34       		.byte	0x34
 18102 1c71 9F       		.byte	0x9f
 18103 1c72 00000000 		.4byte	0
 18104 1c76 00000000 		.4byte	0
 18105              	.LLST165:
 18106 1c7a FA070000 		.4byte	.LVL175-.Ltext0
 18107 1c7e 04080000 		.4byte	.LVL176-.Ltext0
 18108 1c82 0100     		.2byte	0x1
 18109 1c84 53       		.byte	0x53
 18110 1c85 00000000 		.4byte	0
 18111 1c89 00000000 		.4byte	0
 18112              	.LLST166:
 18113 1c8d FA070000 		.4byte	.LVL175-.Ltext0
 18114 1c91 04080000 		.4byte	.LVL176-.Ltext0
 18115 1c95 0200     		.2byte	0x2
 18116 1c97 40       		.byte	0x40
 18117 1c98 9F       		.byte	0x9f
 18118 1c99 00000000 		.4byte	0
 18119 1c9d 00000000 		.4byte	0
 18120              	.LLST167:
 18121 1ca1 10080000 		.4byte	.LVL178-.Ltext0
 18122 1ca5 1C080000 		.4byte	.LVL180-.Ltext0
 18123 1ca9 0200     		.2byte	0x2
 18124 1cab 30       		.byte	0x30
 18125 1cac 9F       		.byte	0x9f
 18126 1cad 00000000 		.4byte	0
 18127 1cb1 00000000 		.4byte	0
 18128              	.LLST169:
 18129 1cb5 10080000 		.4byte	.LVL178-.Ltext0
 18130 1cb9 1C080000 		.4byte	.LVL180-.Ltext0
 18131 1cbd 0100     		.2byte	0x1
 18132 1cbf 53       		.byte	0x53
 18133 1cc0 00000000 		.4byte	0
 18134 1cc4 00000000 		.4byte	0
 18135              	.LLST170:
 18136 1cc8 10080000 		.4byte	.LVL178-.Ltext0
 18137 1ccc 1C080000 		.4byte	.LVL180-.Ltext0
 18138 1cd0 0200     		.2byte	0x2
 18139 1cd2 31       		.byte	0x31
 18140 1cd3 9F       		.byte	0x9f
 18141 1cd4 00000000 		.4byte	0
 18142 1cd8 00000000 		.4byte	0
 18143              	.LLST171:
 18144 1cdc 1C080000 		.4byte	.LVL180-.Ltext0
 18145 1ce0 28080000 		.4byte	.LVL181-.Ltext0
 18146 1ce4 0200     		.2byte	0x2
 18147 1ce6 30       		.byte	0x30
 18148 1ce7 9F       		.byte	0x9f
 18149 1ce8 00000000 		.4byte	0
 18150 1cec 00000000 		.4byte	0
 18151              	.LLST172:
 18152 1cf0 1C080000 		.4byte	.LVL180-.Ltext0
 18153 1cf4 28080000 		.4byte	.LVL181-.Ltext0
 18154 1cf8 0200     		.2byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 461


 18155 1cfa 34       		.byte	0x34
 18156 1cfb 9F       		.byte	0x9f
 18157 1cfc 00000000 		.4byte	0
 18158 1d00 00000000 		.4byte	0
 18159              	.LLST173:
 18160 1d04 1C080000 		.4byte	.LVL180-.Ltext0
 18161 1d08 28080000 		.4byte	.LVL181-.Ltext0
 18162 1d0c 0100     		.2byte	0x1
 18163 1d0e 53       		.byte	0x53
 18164 1d0f 00000000 		.4byte	0
 18165 1d13 00000000 		.4byte	0
 18166              	.LLST174:
 18167 1d17 1C080000 		.4byte	.LVL180-.Ltext0
 18168 1d1b 28080000 		.4byte	.LVL181-.Ltext0
 18169 1d1f 0200     		.2byte	0x2
 18170 1d21 40       		.byte	0x40
 18171 1d22 9F       		.byte	0x9f
 18172 1d23 00000000 		.4byte	0
 18173 1d27 00000000 		.4byte	0
 18174              	.LLST134:
 18175 1d2b 5C060000 		.4byte	.LFB121-.Ltext0
 18176 1d2f 60060000 		.4byte	.LCFI11-.Ltext0
 18177 1d33 0200     		.2byte	0x2
 18178 1d35 7D       		.byte	0x7d
 18179 1d36 00       		.sleb128 0
 18180 1d37 60060000 		.4byte	.LCFI11-.Ltext0
 18181 1d3b AC070000 		.4byte	.LFE121-.Ltext0
 18182 1d3f 0200     		.2byte	0x2
 18183 1d41 7D       		.byte	0x7d
 18184 1d42 20       		.sleb128 32
 18185 1d43 00000000 		.4byte	0
 18186 1d47 00000000 		.4byte	0
 18187              	.LLST135:
 18188 1d4b 5C060000 		.4byte	.LVL145-.Ltext0
 18189 1d4f 66060000 		.4byte	.LVL146-.Ltext0
 18190 1d53 0100     		.2byte	0x1
 18191 1d55 50       		.byte	0x50
 18192 1d56 66060000 		.4byte	.LVL146-.Ltext0
 18193 1d5a A0070000 		.4byte	.LVL167-.Ltext0
 18194 1d5e 0100     		.2byte	0x1
 18195 1d60 55       		.byte	0x55
 18196 1d61 A0070000 		.4byte	.LVL167-.Ltext0
 18197 1d65 AC070000 		.4byte	.LFE121-.Ltext0
 18198 1d69 0400     		.2byte	0x4
 18199 1d6b F3       		.byte	0xf3
 18200 1d6c 01       		.uleb128 0x1
 18201 1d6d 50       		.byte	0x50
 18202 1d6e 9F       		.byte	0x9f
 18203 1d6f 00000000 		.4byte	0
 18204 1d73 00000000 		.4byte	0
 18205              	.LLST136:
 18206 1d77 5C060000 		.4byte	.LVL145-.Ltext0
 18207 1d7b 82060000 		.4byte	.LVL148-.Ltext0
 18208 1d7f 0100     		.2byte	0x1
 18209 1d81 51       		.byte	0x51
 18210 1d82 82060000 		.4byte	.LVL148-.Ltext0
 18211 1d86 88060000 		.4byte	.LVL149-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 462


 18212 1d8a 0400     		.2byte	0x4
 18213 1d8c F3       		.byte	0xf3
 18214 1d8d 01       		.uleb128 0x1
 18215 1d8e 51       		.byte	0x51
 18216 1d8f 9F       		.byte	0x9f
 18217 1d90 88060000 		.4byte	.LVL149-.Ltext0
 18218 1d94 A0060000 		.4byte	.LVL150-.Ltext0
 18219 1d98 0100     		.2byte	0x1
 18220 1d9a 51       		.byte	0x51
 18221 1d9b A0060000 		.4byte	.LVL150-.Ltext0
 18222 1d9f DC060000 		.4byte	.LVL154-.Ltext0
 18223 1da3 0400     		.2byte	0x4
 18224 1da5 F3       		.byte	0xf3
 18225 1da6 01       		.uleb128 0x1
 18226 1da7 51       		.byte	0x51
 18227 1da8 9F       		.byte	0x9f
 18228 1da9 DC060000 		.4byte	.LVL154-.Ltext0
 18229 1dad E2060000 		.4byte	.LVL155-.Ltext0
 18230 1db1 0100     		.2byte	0x1
 18231 1db3 51       		.byte	0x51
 18232 1db4 E2060000 		.4byte	.LVL155-.Ltext0
 18233 1db8 1C070000 		.4byte	.LVL159-.Ltext0
 18234 1dbc 0400     		.2byte	0x4
 18235 1dbe F3       		.byte	0xf3
 18236 1dbf 01       		.uleb128 0x1
 18237 1dc0 51       		.byte	0x51
 18238 1dc1 9F       		.byte	0x9f
 18239 1dc2 1C070000 		.4byte	.LVL159-.Ltext0
 18240 1dc6 2A070000 		.4byte	.LVL160-.Ltext0
 18241 1dca 0100     		.2byte	0x1
 18242 1dcc 51       		.byte	0x51
 18243 1dcd 2A070000 		.4byte	.LVL160-.Ltext0
 18244 1dd1 9A070000 		.4byte	.LVL166-.Ltext0
 18245 1dd5 0400     		.2byte	0x4
 18246 1dd7 F3       		.byte	0xf3
 18247 1dd8 01       		.uleb128 0x1
 18248 1dd9 51       		.byte	0x51
 18249 1dda 9F       		.byte	0x9f
 18250 1ddb 9A070000 		.4byte	.LVL166-.Ltext0
 18251 1ddf AC070000 		.4byte	.LFE121-.Ltext0
 18252 1de3 0100     		.2byte	0x1
 18253 1de5 51       		.byte	0x51
 18254 1de6 00000000 		.4byte	0
 18255 1dea 00000000 		.4byte	0
 18256              	.LLST137:
 18257 1dee 5C060000 		.4byte	.LVL145-.Ltext0
 18258 1df2 82060000 		.4byte	.LVL148-.Ltext0
 18259 1df6 0100     		.2byte	0x1
 18260 1df8 52       		.byte	0x52
 18261 1df9 82060000 		.4byte	.LVL148-.Ltext0
 18262 1dfd 88060000 		.4byte	.LVL149-.Ltext0
 18263 1e01 0400     		.2byte	0x4
 18264 1e03 F3       		.byte	0xf3
 18265 1e04 01       		.uleb128 0x1
 18266 1e05 52       		.byte	0x52
 18267 1e06 9F       		.byte	0x9f
 18268 1e07 88060000 		.4byte	.LVL149-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 463


 18269 1e0b B1060000 		.4byte	.LVL151-1-.Ltext0
 18270 1e0f 0100     		.2byte	0x1
 18271 1e11 52       		.byte	0x52
 18272 1e12 B1060000 		.4byte	.LVL151-1-.Ltext0
 18273 1e16 DC060000 		.4byte	.LVL154-.Ltext0
 18274 1e1a 0400     		.2byte	0x4
 18275 1e1c F3       		.byte	0xf3
 18276 1e1d 01       		.uleb128 0x1
 18277 1e1e 52       		.byte	0x52
 18278 1e1f 9F       		.byte	0x9f
 18279 1e20 DC060000 		.4byte	.LVL154-.Ltext0
 18280 1e24 E8060000 		.4byte	.LVL156-.Ltext0
 18281 1e28 0100     		.2byte	0x1
 18282 1e2a 52       		.byte	0x52
 18283 1e2b E8060000 		.4byte	.LVL156-.Ltext0
 18284 1e2f 1C070000 		.4byte	.LVL159-.Ltext0
 18285 1e33 0400     		.2byte	0x4
 18286 1e35 F3       		.byte	0xf3
 18287 1e36 01       		.uleb128 0x1
 18288 1e37 52       		.byte	0x52
 18289 1e38 9F       		.byte	0x9f
 18290 1e39 1C070000 		.4byte	.LVL159-.Ltext0
 18291 1e3d 3B070000 		.4byte	.LVL161-1-.Ltext0
 18292 1e41 0100     		.2byte	0x1
 18293 1e43 52       		.byte	0x52
 18294 1e44 3B070000 		.4byte	.LVL161-1-.Ltext0
 18295 1e48 9A070000 		.4byte	.LVL166-.Ltext0
 18296 1e4c 0400     		.2byte	0x4
 18297 1e4e F3       		.byte	0xf3
 18298 1e4f 01       		.uleb128 0x1
 18299 1e50 52       		.byte	0x52
 18300 1e51 9F       		.byte	0x9f
 18301 1e52 9A070000 		.4byte	.LVL166-.Ltext0
 18302 1e56 AC070000 		.4byte	.LFE121-.Ltext0
 18303 1e5a 0100     		.2byte	0x1
 18304 1e5c 52       		.byte	0x52
 18305 1e5d 00000000 		.4byte	0
 18306 1e61 00000000 		.4byte	0
 18307              	.LLST138:
 18308 1e65 5C060000 		.4byte	.LVL145-.Ltext0
 18309 1e69 78060000 		.4byte	.LVL147-.Ltext0
 18310 1e6d 0100     		.2byte	0x1
 18311 1e6f 53       		.byte	0x53
 18312 1e70 78060000 		.4byte	.LVL147-.Ltext0
 18313 1e74 A0070000 		.4byte	.LVL167-.Ltext0
 18314 1e78 0100     		.2byte	0x1
 18315 1e7a 56       		.byte	0x56
 18316 1e7b A0070000 		.4byte	.LVL167-.Ltext0
 18317 1e7f AC070000 		.4byte	.LFE121-.Ltext0
 18318 1e83 0400     		.2byte	0x4
 18319 1e85 F3       		.byte	0xf3
 18320 1e86 01       		.uleb128 0x1
 18321 1e87 53       		.byte	0x53
 18322 1e88 9F       		.byte	0x9f
 18323 1e89 00000000 		.4byte	0
 18324 1e8d 00000000 		.4byte	0
 18325              	.LLST139:
ARM GAS  /tmp/ccTsJCXT.s 			page 464


 18326 1e91 5C060000 		.4byte	.LVL145-.Ltext0
 18327 1e95 88060000 		.4byte	.LVL149-.Ltext0
 18328 1e99 0200     		.2byte	0x2
 18329 1e9b 91       		.byte	0x91
 18330 1e9c 00       		.sleb128 0
 18331 1e9d 88060000 		.4byte	.LVL149-.Ltext0
 18332 1ea1 A0070000 		.4byte	.LVL167-.Ltext0
 18333 1ea5 0200     		.2byte	0x2
 18334 1ea7 91       		.byte	0x91
 18335 1ea8 00       		.sleb128 0
 18336 1ea9 A0070000 		.4byte	.LVL167-.Ltext0
 18337 1ead AC070000 		.4byte	.LFE121-.Ltext0
 18338 1eb1 0200     		.2byte	0x2
 18339 1eb3 7D       		.byte	0x7d
 18340 1eb4 00       		.sleb128 0
 18341 1eb5 00000000 		.4byte	0
 18342 1eb9 00000000 		.4byte	0
 18343              	.LLST140:
 18344 1ebd C8060000 		.4byte	.LVL152-.Ltext0
 18345 1ec1 D6060000 		.4byte	.LVL153-.Ltext0
 18346 1ec5 0200     		.2byte	0x2
 18347 1ec7 31       		.byte	0x31
 18348 1ec8 9F       		.byte	0x9f
 18349 1ec9 00000000 		.4byte	0
 18350 1ecd 00000000 		.4byte	0
 18351              	.LLST141:
 18352 1ed1 C8060000 		.4byte	.LVL152-.Ltext0
 18353 1ed5 D6060000 		.4byte	.LVL153-.Ltext0
 18354 1ed9 0200     		.2byte	0x2
 18355 1edb 30       		.byte	0x30
 18356 1edc 9F       		.byte	0x9f
 18357 1edd 00000000 		.4byte	0
 18358 1ee1 00000000 		.4byte	0
 18359              	.LLST142:
 18360 1ee5 C8060000 		.4byte	.LVL152-.Ltext0
 18361 1ee9 D6060000 		.4byte	.LVL153-.Ltext0
 18362 1eed 0100     		.2byte	0x1
 18363 1eef 53       		.byte	0x53
 18364 1ef0 00000000 		.4byte	0
 18365 1ef4 00000000 		.4byte	0
 18366              	.LLST144:
 18367 1ef8 0C070000 		.4byte	.LVL158-.Ltext0
 18368 1efc 1C070000 		.4byte	.LVL159-.Ltext0
 18369 1f00 0200     		.2byte	0x2
 18370 1f02 31       		.byte	0x31
 18371 1f03 9F       		.byte	0x9f
 18372 1f04 00000000 		.4byte	0
 18373 1f08 00000000 		.4byte	0
 18374              	.LLST145:
 18375 1f0c 0C070000 		.4byte	.LVL158-.Ltext0
 18376 1f10 1C070000 		.4byte	.LVL159-.Ltext0
 18377 1f14 0200     		.2byte	0x2
 18378 1f16 34       		.byte	0x34
 18379 1f17 9F       		.byte	0x9f
 18380 1f18 00000000 		.4byte	0
 18381 1f1c 00000000 		.4byte	0
 18382              	.LLST146:
ARM GAS  /tmp/ccTsJCXT.s 			page 465


 18383 1f20 0C070000 		.4byte	.LVL158-.Ltext0
 18384 1f24 1C070000 		.4byte	.LVL159-.Ltext0
 18385 1f28 0100     		.2byte	0x1
 18386 1f2a 53       		.byte	0x53
 18387 1f2b 00000000 		.4byte	0
 18388 1f2f 00000000 		.4byte	0
 18389              	.LLST147:
 18390 1f33 0C070000 		.4byte	.LVL158-.Ltext0
 18391 1f37 1C070000 		.4byte	.LVL159-.Ltext0
 18392 1f3b 0200     		.2byte	0x2
 18393 1f3d 40       		.byte	0x40
 18394 1f3e 9F       		.byte	0x9f
 18395 1f3f 00000000 		.4byte	0
 18396 1f43 00000000 		.4byte	0
 18397              	.LLST148:
 18398 1f47 66070000 		.4byte	.LVL163-.Ltext0
 18399 1f4b 76070000 		.4byte	.LVL164-.Ltext0
 18400 1f4f 0200     		.2byte	0x2
 18401 1f51 31       		.byte	0x31
 18402 1f52 9F       		.byte	0x9f
 18403 1f53 00000000 		.4byte	0
 18404 1f57 00000000 		.4byte	0
 18405              	.LLST149:
 18406 1f5b 66070000 		.4byte	.LVL163-.Ltext0
 18407 1f5f 76070000 		.4byte	.LVL164-.Ltext0
 18408 1f63 0200     		.2byte	0x2
 18409 1f65 30       		.byte	0x30
 18410 1f66 9F       		.byte	0x9f
 18411 1f67 00000000 		.4byte	0
 18412 1f6b 00000000 		.4byte	0
 18413              	.LLST150:
 18414 1f6f 66070000 		.4byte	.LVL163-.Ltext0
 18415 1f73 76070000 		.4byte	.LVL164-.Ltext0
 18416 1f77 0100     		.2byte	0x1
 18417 1f79 53       		.byte	0x53
 18418 1f7a 00000000 		.4byte	0
 18419 1f7e 00000000 		.4byte	0
 18420              	.LLST152:
 18421 1f82 76070000 		.4byte	.LVL164-.Ltext0
 18422 1f86 86070000 		.4byte	.LVL165-.Ltext0
 18423 1f8a 0200     		.2byte	0x2
 18424 1f8c 31       		.byte	0x31
 18425 1f8d 9F       		.byte	0x9f
 18426 1f8e 00000000 		.4byte	0
 18427 1f92 00000000 		.4byte	0
 18428              	.LLST153:
 18429 1f96 76070000 		.4byte	.LVL164-.Ltext0
 18430 1f9a 86070000 		.4byte	.LVL165-.Ltext0
 18431 1f9e 0200     		.2byte	0x2
 18432 1fa0 34       		.byte	0x34
 18433 1fa1 9F       		.byte	0x9f
 18434 1fa2 00000000 		.4byte	0
 18435 1fa6 00000000 		.4byte	0
 18436              	.LLST154:
 18437 1faa 76070000 		.4byte	.LVL164-.Ltext0
 18438 1fae 86070000 		.4byte	.LVL165-.Ltext0
 18439 1fb2 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 466


 18440 1fb4 53       		.byte	0x53
 18441 1fb5 00000000 		.4byte	0
 18442 1fb9 00000000 		.4byte	0
 18443              	.LLST155:
 18444 1fbd 76070000 		.4byte	.LVL164-.Ltext0
 18445 1fc1 86070000 		.4byte	.LVL165-.Ltext0
 18446 1fc5 0200     		.2byte	0x2
 18447 1fc7 40       		.byte	0x40
 18448 1fc8 9F       		.byte	0x9f
 18449 1fc9 00000000 		.4byte	0
 18450 1fcd 00000000 		.4byte	0
 18451              	.LLST116:
 18452 1fd1 E8050000 		.4byte	.LVL134-.Ltext0
 18453 1fd5 24060000 		.4byte	.LVL138-.Ltext0
 18454 1fd9 0100     		.2byte	0x1
 18455 1fdb 50       		.byte	0x50
 18456 1fdc 24060000 		.4byte	.LVL138-.Ltext0
 18457 1fe0 26060000 		.4byte	.LVL139-.Ltext0
 18458 1fe4 0400     		.2byte	0x4
 18459 1fe6 F3       		.byte	0xf3
 18460 1fe7 01       		.uleb128 0x1
 18461 1fe8 50       		.byte	0x50
 18462 1fe9 9F       		.byte	0x9f
 18463 1fea 26060000 		.4byte	.LVL139-.Ltext0
 18464 1fee 5C060000 		.4byte	.LFE120-.Ltext0
 18465 1ff2 0100     		.2byte	0x1
 18466 1ff4 50       		.byte	0x50
 18467 1ff5 00000000 		.4byte	0
 18468 1ff9 00000000 		.4byte	0
 18469              	.LLST117:
 18470 1ffd E8050000 		.4byte	.LVL134-.Ltext0
 18471 2001 06060000 		.4byte	.LVL137-.Ltext0
 18472 2005 0100     		.2byte	0x1
 18473 2007 51       		.byte	0x51
 18474 2008 06060000 		.4byte	.LVL137-.Ltext0
 18475 200c 26060000 		.4byte	.LVL139-.Ltext0
 18476 2010 0400     		.2byte	0x4
 18477 2012 F3       		.byte	0xf3
 18478 2013 01       		.uleb128 0x1
 18479 2014 51       		.byte	0x51
 18480 2015 9F       		.byte	0x9f
 18481 2016 26060000 		.4byte	.LVL139-.Ltext0
 18482 201a 5C060000 		.4byte	.LFE120-.Ltext0
 18483 201e 0100     		.2byte	0x1
 18484 2020 51       		.byte	0x51
 18485 2021 00000000 		.4byte	0
 18486 2025 00000000 		.4byte	0
 18487              	.LLST118:
 18488 2029 EE050000 		.4byte	.LVL135-.Ltext0
 18489 202d F8050000 		.4byte	.LVL136-.Ltext0
 18490 2031 0200     		.2byte	0x2
 18491 2033 30       		.byte	0x30
 18492 2034 9F       		.byte	0x9f
 18493 2035 00000000 		.4byte	0
 18494 2039 00000000 		.4byte	0
 18495              	.LLST120:
 18496 203d EE050000 		.4byte	.LVL135-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 467


 18497 2041 F8050000 		.4byte	.LVL136-.Ltext0
 18498 2045 0100     		.2byte	0x1
 18499 2047 53       		.byte	0x53
 18500 2048 00000000 		.4byte	0
 18501 204c 00000000 		.4byte	0
 18502              	.LLST121:
 18503 2050 EE050000 		.4byte	.LVL135-.Ltext0
 18504 2054 F8050000 		.4byte	.LVL136-.Ltext0
 18505 2058 0200     		.2byte	0x2
 18506 205a 31       		.byte	0x31
 18507 205b 9F       		.byte	0x9f
 18508 205c 00000000 		.4byte	0
 18509 2060 00000000 		.4byte	0
 18510              	.LLST122:
 18511 2064 2A060000 		.4byte	.LVL140-.Ltext0
 18512 2068 34060000 		.4byte	.LVL141-.Ltext0
 18513 206c 0200     		.2byte	0x2
 18514 206e 30       		.byte	0x30
 18515 206f 9F       		.byte	0x9f
 18516 2070 00000000 		.4byte	0
 18517 2074 00000000 		.4byte	0
 18518              	.LLST123:
 18519 2078 2A060000 		.4byte	.LVL140-.Ltext0
 18520 207c 34060000 		.4byte	.LVL141-.Ltext0
 18521 2080 0200     		.2byte	0x2
 18522 2082 34       		.byte	0x34
 18523 2083 9F       		.byte	0x9f
 18524 2084 00000000 		.4byte	0
 18525 2088 00000000 		.4byte	0
 18526              	.LLST124:
 18527 208c 2A060000 		.4byte	.LVL140-.Ltext0
 18528 2090 34060000 		.4byte	.LVL141-.Ltext0
 18529 2094 0100     		.2byte	0x1
 18530 2096 53       		.byte	0x53
 18531 2097 00000000 		.4byte	0
 18532 209b 00000000 		.4byte	0
 18533              	.LLST125:
 18534 209f 2A060000 		.4byte	.LVL140-.Ltext0
 18535 20a3 34060000 		.4byte	.LVL141-.Ltext0
 18536 20a7 0200     		.2byte	0x2
 18537 20a9 40       		.byte	0x40
 18538 20aa 9F       		.byte	0x9f
 18539 20ab 00000000 		.4byte	0
 18540 20af 00000000 		.4byte	0
 18541              	.LLST126:
 18542 20b3 3C060000 		.4byte	.LVL142-.Ltext0
 18543 20b7 46060000 		.4byte	.LVL143-.Ltext0
 18544 20bb 0200     		.2byte	0x2
 18545 20bd 30       		.byte	0x30
 18546 20be 9F       		.byte	0x9f
 18547 20bf 00000000 		.4byte	0
 18548 20c3 00000000 		.4byte	0
 18549              	.LLST128:
 18550 20c7 3C060000 		.4byte	.LVL142-.Ltext0
 18551 20cb 46060000 		.4byte	.LVL143-.Ltext0
 18552 20cf 0100     		.2byte	0x1
 18553 20d1 53       		.byte	0x53
ARM GAS  /tmp/ccTsJCXT.s 			page 468


 18554 20d2 00000000 		.4byte	0
 18555 20d6 00000000 		.4byte	0
 18556              	.LLST129:
 18557 20da 3C060000 		.4byte	.LVL142-.Ltext0
 18558 20de 46060000 		.4byte	.LVL143-.Ltext0
 18559 20e2 0200     		.2byte	0x2
 18560 20e4 31       		.byte	0x31
 18561 20e5 9F       		.byte	0x9f
 18562 20e6 00000000 		.4byte	0
 18563 20ea 00000000 		.4byte	0
 18564              	.LLST130:
 18565 20ee 46060000 		.4byte	.LVL143-.Ltext0
 18566 20f2 52060000 		.4byte	.LVL144-.Ltext0
 18567 20f6 0200     		.2byte	0x2
 18568 20f8 30       		.byte	0x30
 18569 20f9 9F       		.byte	0x9f
 18570 20fa 00000000 		.4byte	0
 18571 20fe 00000000 		.4byte	0
 18572              	.LLST131:
 18573 2102 46060000 		.4byte	.LVL143-.Ltext0
 18574 2106 52060000 		.4byte	.LVL144-.Ltext0
 18575 210a 0200     		.2byte	0x2
 18576 210c 34       		.byte	0x34
 18577 210d 9F       		.byte	0x9f
 18578 210e 00000000 		.4byte	0
 18579 2112 00000000 		.4byte	0
 18580              	.LLST132:
 18581 2116 46060000 		.4byte	.LVL143-.Ltext0
 18582 211a 52060000 		.4byte	.LVL144-.Ltext0
 18583 211e 0100     		.2byte	0x1
 18584 2120 53       		.byte	0x53
 18585 2121 00000000 		.4byte	0
 18586 2125 00000000 		.4byte	0
 18587              	.LLST133:
 18588 2129 46060000 		.4byte	.LVL143-.Ltext0
 18589 212d 52060000 		.4byte	.LVL144-.Ltext0
 18590 2131 0200     		.2byte	0x2
 18591 2133 40       		.byte	0x40
 18592 2134 9F       		.byte	0x9f
 18593 2135 00000000 		.4byte	0
 18594 2139 00000000 		.4byte	0
 18595              	.LLST99:
 18596 213d 7A050000 		.4byte	.LVL125-.Ltext0
 18597 2141 C8050000 		.4byte	.LVL131-.Ltext0
 18598 2145 0100     		.2byte	0x1
 18599 2147 50       		.byte	0x50
 18600 2148 C8050000 		.4byte	.LVL131-.Ltext0
 18601 214c D0050000 		.4byte	.LVL132-.Ltext0
 18602 2150 0400     		.2byte	0x4
 18603 2152 F3       		.byte	0xf3
 18604 2153 01       		.uleb128 0x1
 18605 2154 50       		.byte	0x50
 18606 2155 9F       		.byte	0x9f
 18607 2156 D0050000 		.4byte	.LVL132-.Ltext0
 18608 215a E8050000 		.4byte	.LFE119-.Ltext0
 18609 215e 0100     		.2byte	0x1
 18610 2160 50       		.byte	0x50
ARM GAS  /tmp/ccTsJCXT.s 			page 469


 18611 2161 00000000 		.4byte	0
 18612 2165 00000000 		.4byte	0
 18613              	.LLST100:
 18614 2169 82050000 		.4byte	.LVL126-.Ltext0
 18615 216d 92050000 		.4byte	.LVL127-.Ltext0
 18616 2171 0200     		.2byte	0x2
 18617 2173 31       		.byte	0x31
 18618 2174 9F       		.byte	0x9f
 18619 2175 00000000 		.4byte	0
 18620 2179 00000000 		.4byte	0
 18621              	.LLST101:
 18622 217d 82050000 		.4byte	.LVL126-.Ltext0
 18623 2181 92050000 		.4byte	.LVL127-.Ltext0
 18624 2185 0200     		.2byte	0x2
 18625 2187 30       		.byte	0x30
 18626 2188 9F       		.byte	0x9f
 18627 2189 00000000 		.4byte	0
 18628 218d 00000000 		.4byte	0
 18629              	.LLST102:
 18630 2191 82050000 		.4byte	.LVL126-.Ltext0
 18631 2195 92050000 		.4byte	.LVL127-.Ltext0
 18632 2199 0100     		.2byte	0x1
 18633 219b 53       		.byte	0x53
 18634 219c 00000000 		.4byte	0
 18635 21a0 00000000 		.4byte	0
 18636              	.LLST104:
 18637 21a4 92050000 		.4byte	.LVL127-.Ltext0
 18638 21a8 A2050000 		.4byte	.LVL128-.Ltext0
 18639 21ac 0200     		.2byte	0x2
 18640 21ae 31       		.byte	0x31
 18641 21af 9F       		.byte	0x9f
 18642 21b0 00000000 		.4byte	0
 18643 21b4 00000000 		.4byte	0
 18644              	.LLST105:
 18645 21b8 92050000 		.4byte	.LVL127-.Ltext0
 18646 21bc A2050000 		.4byte	.LVL128-.Ltext0
 18647 21c0 0200     		.2byte	0x2
 18648 21c2 34       		.byte	0x34
 18649 21c3 9F       		.byte	0x9f
 18650 21c4 00000000 		.4byte	0
 18651 21c8 00000000 		.4byte	0
 18652              	.LLST106:
 18653 21cc 92050000 		.4byte	.LVL127-.Ltext0
 18654 21d0 A2050000 		.4byte	.LVL128-.Ltext0
 18655 21d4 0100     		.2byte	0x1
 18656 21d6 53       		.byte	0x53
 18657 21d7 00000000 		.4byte	0
 18658 21db 00000000 		.4byte	0
 18659              	.LLST107:
 18660 21df 92050000 		.4byte	.LVL127-.Ltext0
 18661 21e3 A2050000 		.4byte	.LVL128-.Ltext0
 18662 21e7 0200     		.2byte	0x2
 18663 21e9 40       		.byte	0x40
 18664 21ea 9F       		.byte	0x9f
 18665 21eb 00000000 		.4byte	0
 18666 21ef 00000000 		.4byte	0
 18667              	.LLST108:
ARM GAS  /tmp/ccTsJCXT.s 			page 470


 18668 21f3 AC050000 		.4byte	.LVL129-.Ltext0
 18669 21f7 BC050000 		.4byte	.LVL130-.Ltext0
 18670 21fb 0200     		.2byte	0x2
 18671 21fd 31       		.byte	0x31
 18672 21fe 9F       		.byte	0x9f
 18673 21ff 00000000 		.4byte	0
 18674 2203 00000000 		.4byte	0
 18675              	.LLST109:
 18676 2207 AC050000 		.4byte	.LVL129-.Ltext0
 18677 220b BC050000 		.4byte	.LVL130-.Ltext0
 18678 220f 0200     		.2byte	0x2
 18679 2211 30       		.byte	0x30
 18680 2212 9F       		.byte	0x9f
 18681 2213 00000000 		.4byte	0
 18682 2217 00000000 		.4byte	0
 18683              	.LLST110:
 18684 221b AC050000 		.4byte	.LVL129-.Ltext0
 18685 221f BC050000 		.4byte	.LVL130-.Ltext0
 18686 2223 0100     		.2byte	0x1
 18687 2225 53       		.byte	0x53
 18688 2226 00000000 		.4byte	0
 18689 222a 00000000 		.4byte	0
 18690              	.LLST112:
 18691 222e D0050000 		.4byte	.LVL132-.Ltext0
 18692 2232 E0050000 		.4byte	.LVL133-.Ltext0
 18693 2236 0200     		.2byte	0x2
 18694 2238 31       		.byte	0x31
 18695 2239 9F       		.byte	0x9f
 18696 223a 00000000 		.4byte	0
 18697 223e 00000000 		.4byte	0
 18698              	.LLST113:
 18699 2242 D0050000 		.4byte	.LVL132-.Ltext0
 18700 2246 E0050000 		.4byte	.LVL133-.Ltext0
 18701 224a 0200     		.2byte	0x2
 18702 224c 34       		.byte	0x34
 18703 224d 9F       		.byte	0x9f
 18704 224e 00000000 		.4byte	0
 18705 2252 00000000 		.4byte	0
 18706              	.LLST114:
 18707 2256 D0050000 		.4byte	.LVL132-.Ltext0
 18708 225a E0050000 		.4byte	.LVL133-.Ltext0
 18709 225e 0100     		.2byte	0x1
 18710 2260 53       		.byte	0x53
 18711 2261 00000000 		.4byte	0
 18712 2265 00000000 		.4byte	0
 18713              	.LLST115:
 18714 2269 D0050000 		.4byte	.LVL132-.Ltext0
 18715 226d E0050000 		.4byte	.LVL133-.Ltext0
 18716 2271 0200     		.2byte	0x2
 18717 2273 40       		.byte	0x40
 18718 2274 9F       		.byte	0x9f
 18719 2275 00000000 		.4byte	0
 18720 2279 00000000 		.4byte	0
 18721              	.LLST85:
 18722 227d 32050000 		.4byte	.LVL118-.Ltext0
 18723 2281 78050000 		.4byte	.LVL124-.Ltext0
 18724 2285 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 471


 18725 2287 50       		.byte	0x50
 18726 2288 78050000 		.4byte	.LVL124-.Ltext0
 18727 228c 7A050000 		.4byte	.LFE118-.Ltext0
 18728 2290 0400     		.2byte	0x4
 18729 2292 F3       		.byte	0xf3
 18730 2293 01       		.uleb128 0x1
 18731 2294 50       		.byte	0x50
 18732 2295 9F       		.byte	0x9f
 18733 2296 00000000 		.4byte	0
 18734 229a 00000000 		.4byte	0
 18735              	.LLST86:
 18736 229e 32050000 		.4byte	.LVL118-.Ltext0
 18737 22a2 60050000 		.4byte	.LVL123-.Ltext0
 18738 22a6 0100     		.2byte	0x1
 18739 22a8 51       		.byte	0x51
 18740 22a9 60050000 		.4byte	.LVL123-.Ltext0
 18741 22ad 7A050000 		.4byte	.LFE118-.Ltext0
 18742 22b1 0400     		.2byte	0x4
 18743 22b3 F3       		.byte	0xf3
 18744 22b4 01       		.uleb128 0x1
 18745 22b5 51       		.byte	0x51
 18746 22b6 9F       		.byte	0x9f
 18747 22b7 00000000 		.4byte	0
 18748 22bb 00000000 		.4byte	0
 18749              	.LLST87:
 18750 22bf 3A050000 		.4byte	.LVL119-.Ltext0
 18751 22c3 46050000 		.4byte	.LVL120-.Ltext0
 18752 22c7 0200     		.2byte	0x2
 18753 22c9 30       		.byte	0x30
 18754 22ca 9F       		.byte	0x9f
 18755 22cb 00000000 		.4byte	0
 18756 22cf 00000000 		.4byte	0
 18757              	.LLST89:
 18758 22d3 3A050000 		.4byte	.LVL119-.Ltext0
 18759 22d7 46050000 		.4byte	.LVL120-.Ltext0
 18760 22db 0100     		.2byte	0x1
 18761 22dd 53       		.byte	0x53
 18762 22de 00000000 		.4byte	0
 18763 22e2 00000000 		.4byte	0
 18764              	.LLST90:
 18765 22e6 3A050000 		.4byte	.LVL119-.Ltext0
 18766 22ea 46050000 		.4byte	.LVL120-.Ltext0
 18767 22ee 0200     		.2byte	0x2
 18768 22f0 31       		.byte	0x31
 18769 22f1 9F       		.byte	0x9f
 18770 22f2 00000000 		.4byte	0
 18771 22f6 00000000 		.4byte	0
 18772              	.LLST91:
 18773 22fa 46050000 		.4byte	.LVL120-.Ltext0
 18774 22fe 4E050000 		.4byte	.LVL121-.Ltext0
 18775 2302 0200     		.2byte	0x2
 18776 2304 30       		.byte	0x30
 18777 2305 9F       		.byte	0x9f
 18778 2306 00000000 		.4byte	0
 18779 230a 00000000 		.4byte	0
 18780              	.LLST92:
 18781 230e 46050000 		.4byte	.LVL120-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 472


 18782 2312 4E050000 		.4byte	.LVL121-.Ltext0
 18783 2316 0200     		.2byte	0x2
 18784 2318 34       		.byte	0x34
 18785 2319 9F       		.byte	0x9f
 18786 231a 00000000 		.4byte	0
 18787 231e 00000000 		.4byte	0
 18788              	.LLST93:
 18789 2322 46050000 		.4byte	.LVL120-.Ltext0
 18790 2326 4E050000 		.4byte	.LVL121-.Ltext0
 18791 232a 0100     		.2byte	0x1
 18792 232c 53       		.byte	0x53
 18793 232d 00000000 		.4byte	0
 18794 2331 00000000 		.4byte	0
 18795              	.LLST94:
 18796 2335 46050000 		.4byte	.LVL120-.Ltext0
 18797 2339 4E050000 		.4byte	.LVL121-.Ltext0
 18798 233d 0200     		.2byte	0x2
 18799 233f 40       		.byte	0x40
 18800 2340 9F       		.byte	0x9f
 18801 2341 00000000 		.4byte	0
 18802 2345 00000000 		.4byte	0
 18803              	.LLST95:
 18804 2349 4E050000 		.4byte	.LVL121-.Ltext0
 18805 234d 54050000 		.4byte	.LVL122-.Ltext0
 18806 2351 0200     		.2byte	0x2
 18807 2353 30       		.byte	0x30
 18808 2354 9F       		.byte	0x9f
 18809 2355 00000000 		.4byte	0
 18810 2359 00000000 		.4byte	0
 18811              	.LLST97:
 18812 235d 4E050000 		.4byte	.LVL121-.Ltext0
 18813 2361 54050000 		.4byte	.LVL122-.Ltext0
 18814 2365 0100     		.2byte	0x1
 18815 2367 53       		.byte	0x53
 18816 2368 00000000 		.4byte	0
 18817 236c 00000000 		.4byte	0
 18818              	.LLST98:
 18819 2370 4E050000 		.4byte	.LVL121-.Ltext0
 18820 2374 54050000 		.4byte	.LVL122-.Ltext0
 18821 2378 0200     		.2byte	0x2
 18822 237a 31       		.byte	0x31
 18823 237b 9F       		.byte	0x9f
 18824 237c 00000000 		.4byte	0
 18825 2380 00000000 		.4byte	0
 18826              	.LLST72:
 18827 2384 EE040000 		.4byte	.LVL112-.Ltext0
 18828 2388 2A050000 		.4byte	.LVL117-.Ltext0
 18829 238c 0100     		.2byte	0x1
 18830 238e 50       		.byte	0x50
 18831 238f 2A050000 		.4byte	.LVL117-.Ltext0
 18832 2393 32050000 		.4byte	.LFE117-.Ltext0
 18833 2397 0400     		.2byte	0x4
 18834 2399 F3       		.byte	0xf3
 18835 239a 01       		.uleb128 0x1
 18836 239b 50       		.byte	0x50
 18837 239c 9F       		.byte	0x9f
 18838 239d 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 473


 18839 23a1 00000000 		.4byte	0
 18840              	.LLST73:
 18841 23a5 F6040000 		.4byte	.LVL113-.Ltext0
 18842 23a9 06050000 		.4byte	.LVL114-.Ltext0
 18843 23ad 0200     		.2byte	0x2
 18844 23af 31       		.byte	0x31
 18845 23b0 9F       		.byte	0x9f
 18846 23b1 00000000 		.4byte	0
 18847 23b5 00000000 		.4byte	0
 18848              	.LLST74:
 18849 23b9 F6040000 		.4byte	.LVL113-.Ltext0
 18850 23bd 06050000 		.4byte	.LVL114-.Ltext0
 18851 23c1 0200     		.2byte	0x2
 18852 23c3 30       		.byte	0x30
 18853 23c4 9F       		.byte	0x9f
 18854 23c5 00000000 		.4byte	0
 18855 23c9 00000000 		.4byte	0
 18856              	.LLST75:
 18857 23cd F6040000 		.4byte	.LVL113-.Ltext0
 18858 23d1 06050000 		.4byte	.LVL114-.Ltext0
 18859 23d5 0100     		.2byte	0x1
 18860 23d7 53       		.byte	0x53
 18861 23d8 00000000 		.4byte	0
 18862 23dc 00000000 		.4byte	0
 18863              	.LLST77:
 18864 23e0 06050000 		.4byte	.LVL114-.Ltext0
 18865 23e4 16050000 		.4byte	.LVL115-.Ltext0
 18866 23e8 0200     		.2byte	0x2
 18867 23ea 31       		.byte	0x31
 18868 23eb 9F       		.byte	0x9f
 18869 23ec 00000000 		.4byte	0
 18870 23f0 00000000 		.4byte	0
 18871              	.LLST78:
 18872 23f4 06050000 		.4byte	.LVL114-.Ltext0
 18873 23f8 16050000 		.4byte	.LVL115-.Ltext0
 18874 23fc 0200     		.2byte	0x2
 18875 23fe 34       		.byte	0x34
 18876 23ff 9F       		.byte	0x9f
 18877 2400 00000000 		.4byte	0
 18878 2404 00000000 		.4byte	0
 18879              	.LLST79:
 18880 2408 06050000 		.4byte	.LVL114-.Ltext0
 18881 240c 16050000 		.4byte	.LVL115-.Ltext0
 18882 2410 0100     		.2byte	0x1
 18883 2412 53       		.byte	0x53
 18884 2413 00000000 		.4byte	0
 18885 2417 00000000 		.4byte	0
 18886              	.LLST80:
 18887 241b 06050000 		.4byte	.LVL114-.Ltext0
 18888 241f 16050000 		.4byte	.LVL115-.Ltext0
 18889 2423 0200     		.2byte	0x2
 18890 2425 40       		.byte	0x40
 18891 2426 9F       		.byte	0x9f
 18892 2427 00000000 		.4byte	0
 18893 242b 00000000 		.4byte	0
 18894              	.LLST81:
 18895 242f 16050000 		.4byte	.LVL115-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 474


 18896 2433 24050000 		.4byte	.LVL116-.Ltext0
 18897 2437 0200     		.2byte	0x2
 18898 2439 31       		.byte	0x31
 18899 243a 9F       		.byte	0x9f
 18900 243b 00000000 		.4byte	0
 18901 243f 00000000 		.4byte	0
 18902              	.LLST82:
 18903 2443 16050000 		.4byte	.LVL115-.Ltext0
 18904 2447 24050000 		.4byte	.LVL116-.Ltext0
 18905 244b 0200     		.2byte	0x2
 18906 244d 30       		.byte	0x30
 18907 244e 9F       		.byte	0x9f
 18908 244f 00000000 		.4byte	0
 18909 2453 00000000 		.4byte	0
 18910              	.LLST83:
 18911 2457 16050000 		.4byte	.LVL115-.Ltext0
 18912 245b 24050000 		.4byte	.LVL116-.Ltext0
 18913 245f 0100     		.2byte	0x1
 18914 2461 53       		.byte	0x53
 18915 2462 00000000 		.4byte	0
 18916 2466 00000000 		.4byte	0
 18917              	.LLST70:
 18918 246a B4040000 		.4byte	.LFB114-.Ltext0
 18919 246e BC040000 		.4byte	.LCFI10-.Ltext0
 18920 2472 0200     		.2byte	0x2
 18921 2474 7D       		.byte	0x7d
 18922 2475 00       		.sleb128 0
 18923 2476 BC040000 		.4byte	.LCFI10-.Ltext0
 18924 247a EE040000 		.4byte	.LFE114-.Ltext0
 18925 247e 0200     		.2byte	0x2
 18926 2480 7D       		.byte	0x7d
 18927 2481 08       		.sleb128 8
 18928 2482 00000000 		.4byte	0
 18929 2486 00000000 		.4byte	0
 18930              	.LLST71:
 18931 248a B4040000 		.4byte	.LVL109-.Ltext0
 18932 248e DE040000 		.4byte	.LVL110-.Ltext0
 18933 2492 0100     		.2byte	0x1
 18934 2494 50       		.byte	0x50
 18935 2495 DE040000 		.4byte	.LVL110-.Ltext0
 18936 2499 EE040000 		.4byte	.LFE114-.Ltext0
 18937 249d 0100     		.2byte	0x1
 18938 249f 54       		.byte	0x54
 18939 24a0 00000000 		.4byte	0
 18940 24a4 00000000 		.4byte	0
 18941              	.LLST236:
 18942 24a8 F20E0000 		.4byte	.LFB113-.Ltext0
 18943 24ac F40E0000 		.4byte	.LCFI34-.Ltext0
 18944 24b0 0200     		.2byte	0x2
 18945 24b2 7D       		.byte	0x7d
 18946 24b3 00       		.sleb128 0
 18947 24b4 F40E0000 		.4byte	.LCFI34-.Ltext0
 18948 24b8 880F0000 		.4byte	.LFE113-.Ltext0
 18949 24bc 0200     		.2byte	0x2
 18950 24be 7D       		.byte	0x7d
 18951 24bf 18       		.sleb128 24
 18952 24c0 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 475


 18953 24c4 00000000 		.4byte	0
 18954              	.LLST237:
 18955 24c8 F20E0000 		.4byte	.LVL335-.Ltext0
 18956 24cc 0D0F0000 		.4byte	.LVL336-1-.Ltext0
 18957 24d0 0100     		.2byte	0x1
 18958 24d2 50       		.byte	0x50
 18959 24d3 0D0F0000 		.4byte	.LVL336-1-.Ltext0
 18960 24d7 840F0000 		.4byte	.LVL349-.Ltext0
 18961 24db 0100     		.2byte	0x1
 18962 24dd 55       		.byte	0x55
 18963 24de 840F0000 		.4byte	.LVL349-.Ltext0
 18964 24e2 860F0000 		.4byte	.LVL350-.Ltext0
 18965 24e6 0100     		.2byte	0x1
 18966 24e8 50       		.byte	0x50
 18967 24e9 860F0000 		.4byte	.LVL350-.Ltext0
 18968 24ed 880F0000 		.4byte	.LFE113-.Ltext0
 18969 24f1 0100     		.2byte	0x1
 18970 24f3 55       		.byte	0x55
 18971 24f4 00000000 		.4byte	0
 18972 24f8 00000000 		.4byte	0
 18973              	.LLST238:
 18974 24fc F20E0000 		.4byte	.LVL335-.Ltext0
 18975 2500 0D0F0000 		.4byte	.LVL336-1-.Ltext0
 18976 2504 0100     		.2byte	0x1
 18977 2506 51       		.byte	0x51
 18978 2507 0D0F0000 		.4byte	.LVL336-1-.Ltext0
 18979 250b 840F0000 		.4byte	.LVL349-.Ltext0
 18980 250f 0100     		.2byte	0x1
 18981 2511 54       		.byte	0x54
 18982 2512 840F0000 		.4byte	.LVL349-.Ltext0
 18983 2516 880F0000 		.4byte	.LFE113-.Ltext0
 18984 251a 0100     		.2byte	0x1
 18985 251c 51       		.byte	0x51
 18986 251d 00000000 		.4byte	0
 18987 2521 00000000 		.4byte	0
 18988              	.LLST239:
 18989 2525 300F0000 		.4byte	.LVL338-.Ltext0
 18990 2529 360F0000 		.4byte	.LVL340-.Ltext0
 18991 252d 0100     		.2byte	0x1
 18992 252f 56       		.byte	0x56
 18993 2530 580F0000 		.4byte	.LVL342-.Ltext0
 18994 2534 840F0000 		.4byte	.LVL349-.Ltext0
 18995 2538 0100     		.2byte	0x1
 18996 253a 56       		.byte	0x56
 18997 253b 00000000 		.4byte	0
 18998 253f 00000000 		.4byte	0
 18999              	.LLST240:
 19000 2543 320F0000 		.4byte	.LVL339-.Ltext0
 19001 2547 3C0F0000 		.4byte	.LVL341-.Ltext0
 19002 254b 0100     		.2byte	0x1
 19003 254d 52       		.byte	0x52
 19004 254e 600F0000 		.4byte	.LVL343-.Ltext0
 19005 2552 660F0000 		.4byte	.LVL344-.Ltext0
 19006 2556 0D00     		.2byte	0xd
 19007 2558 74       		.byte	0x74
 19008 2559 1C       		.sleb128 28
 19009 255a 06       		.byte	0x6
ARM GAS  /tmp/ccTsJCXT.s 			page 476


 19010 255b 38       		.byte	0x38
 19011 255c 24       		.byte	0x24
 19012 255d 74       		.byte	0x74
 19013 255e 0C       		.sleb128 12
 19014 255f 06       		.byte	0x6
 19015 2560 21       		.byte	0x21
 19016 2561 72       		.byte	0x72
 19017 2562 00       		.sleb128 0
 19018 2563 21       		.byte	0x21
 19019 2564 9F       		.byte	0x9f
 19020 2565 660F0000 		.4byte	.LVL344-.Ltext0
 19021 2569 740F0000 		.4byte	.LVL346-.Ltext0
 19022 256d 0100     		.2byte	0x1
 19023 256f 53       		.byte	0x53
 19024 2570 740F0000 		.4byte	.LVL346-.Ltext0
 19025 2574 7C0F0000 		.4byte	.LVL348-.Ltext0
 19026 2578 0200     		.2byte	0x2
 19027 257a 70       		.byte	0x70
 19028 257b 18       		.sleb128 24
 19029 257c 00000000 		.4byte	0
 19030 2580 00000000 		.4byte	0
 19031              	.LLST241:
 19032 2584 580F0000 		.4byte	.LVL342-.Ltext0
 19033 2588 6C0F0000 		.4byte	.LVL345-.Ltext0
 19034 258c 0100     		.2byte	0x1
 19035 258e 57       		.byte	0x57
 19036 258f 6C0F0000 		.4byte	.LVL345-.Ltext0
 19037 2593 7A0F0000 		.4byte	.LVL347-.Ltext0
 19038 2597 0100     		.2byte	0x1
 19039 2599 52       		.byte	0x52
 19040 259a 7A0F0000 		.4byte	.LVL347-.Ltext0
 19041 259e 840F0000 		.4byte	.LVL349-.Ltext0
 19042 25a2 0100     		.2byte	0x1
 19043 25a4 57       		.byte	0x57
 19044 25a5 00000000 		.4byte	0
 19045 25a9 00000000 		.4byte	0
 19046              	.LLST60:
 19047 25ad 40040000 		.4byte	.LVL103-.Ltext0
 19048 25b1 AA040000 		.4byte	.LVL108-.Ltext0
 19049 25b5 0100     		.2byte	0x1
 19050 25b7 50       		.byte	0x50
 19051 25b8 AA040000 		.4byte	.LVL108-.Ltext0
 19052 25bc B0040000 		.4byte	.LFE112-.Ltext0
 19053 25c0 0400     		.2byte	0x4
 19054 25c2 F3       		.byte	0xf3
 19055 25c3 01       		.uleb128 0x1
 19056 25c4 50       		.byte	0x50
 19057 25c5 9F       		.byte	0x9f
 19058 25c6 00000000 		.4byte	0
 19059 25ca 00000000 		.4byte	0
 19060              	.LLST61:
 19061 25ce 40040000 		.4byte	.LVL103-.Ltext0
 19062 25d2 76040000 		.4byte	.LVL107-.Ltext0
 19063 25d6 0100     		.2byte	0x1
 19064 25d8 51       		.byte	0x51
 19065 25d9 76040000 		.4byte	.LVL107-.Ltext0
 19066 25dd B0040000 		.4byte	.LFE112-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 477


 19067 25e1 0400     		.2byte	0x4
 19068 25e3 F3       		.byte	0xf3
 19069 25e4 01       		.uleb128 0x1
 19070 25e5 51       		.byte	0x51
 19071 25e6 9F       		.byte	0x9f
 19072 25e7 00000000 		.4byte	0
 19073 25eb 00000000 		.4byte	0
 19074              	.LLST62:
 19075 25ef 52040000 		.4byte	.LVL104-.Ltext0
 19076 25f3 5E040000 		.4byte	.LVL105-.Ltext0
 19077 25f7 0200     		.2byte	0x2
 19078 25f9 30       		.byte	0x30
 19079 25fa 9F       		.byte	0x9f
 19080 25fb 00000000 		.4byte	0
 19081 25ff 00000000 		.4byte	0
 19082              	.LLST64:
 19083 2603 52040000 		.4byte	.LVL104-.Ltext0
 19084 2607 5E040000 		.4byte	.LVL105-.Ltext0
 19085 260b 0100     		.2byte	0x1
 19086 260d 53       		.byte	0x53
 19087 260e 00000000 		.4byte	0
 19088 2612 00000000 		.4byte	0
 19089              	.LLST65:
 19090 2616 52040000 		.4byte	.LVL104-.Ltext0
 19091 261a 5E040000 		.4byte	.LVL105-.Ltext0
 19092 261e 0200     		.2byte	0x2
 19093 2620 31       		.byte	0x31
 19094 2621 9F       		.byte	0x9f
 19095 2622 00000000 		.4byte	0
 19096 2626 00000000 		.4byte	0
 19097              	.LLST66:
 19098 262a 5E040000 		.4byte	.LVL105-.Ltext0
 19099 262e 6A040000 		.4byte	.LVL106-.Ltext0
 19100 2632 0200     		.2byte	0x2
 19101 2634 30       		.byte	0x30
 19102 2635 9F       		.byte	0x9f
 19103 2636 00000000 		.4byte	0
 19104 263a 00000000 		.4byte	0
 19105              	.LLST67:
 19106 263e 5E040000 		.4byte	.LVL105-.Ltext0
 19107 2642 6A040000 		.4byte	.LVL106-.Ltext0
 19108 2646 0200     		.2byte	0x2
 19109 2648 34       		.byte	0x34
 19110 2649 9F       		.byte	0x9f
 19111 264a 00000000 		.4byte	0
 19112 264e 00000000 		.4byte	0
 19113              	.LLST68:
 19114 2652 5E040000 		.4byte	.LVL105-.Ltext0
 19115 2656 6A040000 		.4byte	.LVL106-.Ltext0
 19116 265a 0100     		.2byte	0x1
 19117 265c 53       		.byte	0x53
 19118 265d 00000000 		.4byte	0
 19119 2661 00000000 		.4byte	0
 19120              	.LLST69:
 19121 2665 5E040000 		.4byte	.LVL105-.Ltext0
 19122 2669 6A040000 		.4byte	.LVL106-.Ltext0
 19123 266d 0200     		.2byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 478


 19124 266f 40       		.byte	0x40
 19125 2670 9F       		.byte	0x9f
 19126 2671 00000000 		.4byte	0
 19127 2675 00000000 		.4byte	0
 19128              	.LLST51:
 19129 2679 F8030000 		.4byte	.LVL98-.Ltext0
 19130 267d FC030000 		.4byte	.LVL99-.Ltext0
 19131 2681 0100     		.2byte	0x1
 19132 2683 50       		.byte	0x50
 19133 2684 FC030000 		.4byte	.LVL99-.Ltext0
 19134 2688 40040000 		.4byte	.LFE111-.Ltext0
 19135 268c 0400     		.2byte	0x4
 19136 268e F3       		.byte	0xf3
 19137 268f 01       		.uleb128 0x1
 19138 2690 50       		.byte	0x50
 19139 2691 9F       		.byte	0x9f
 19140 2692 00000000 		.4byte	0
 19141 2696 00000000 		.4byte	0
 19142              	.LLST52:
 19143 269a 0C040000 		.4byte	.LVL100-.Ltext0
 19144 269e 1C040000 		.4byte	.LVL101-.Ltext0
 19145 26a2 0200     		.2byte	0x2
 19146 26a4 31       		.byte	0x31
 19147 26a5 9F       		.byte	0x9f
 19148 26a6 00000000 		.4byte	0
 19149 26aa 00000000 		.4byte	0
 19150              	.LLST53:
 19151 26ae 0C040000 		.4byte	.LVL100-.Ltext0
 19152 26b2 1C040000 		.4byte	.LVL101-.Ltext0
 19153 26b6 0200     		.2byte	0x2
 19154 26b8 30       		.byte	0x30
 19155 26b9 9F       		.byte	0x9f
 19156 26ba 00000000 		.4byte	0
 19157 26be 00000000 		.4byte	0
 19158              	.LLST54:
 19159 26c2 0C040000 		.4byte	.LVL100-.Ltext0
 19160 26c6 1C040000 		.4byte	.LVL101-.Ltext0
 19161 26ca 0100     		.2byte	0x1
 19162 26cc 53       		.byte	0x53
 19163 26cd 00000000 		.4byte	0
 19164 26d1 00000000 		.4byte	0
 19165              	.LLST56:
 19166 26d5 1C040000 		.4byte	.LVL101-.Ltext0
 19167 26d9 2C040000 		.4byte	.LVL102-.Ltext0
 19168 26dd 0200     		.2byte	0x2
 19169 26df 31       		.byte	0x31
 19170 26e0 9F       		.byte	0x9f
 19171 26e1 00000000 		.4byte	0
 19172 26e5 00000000 		.4byte	0
 19173              	.LLST57:
 19174 26e9 1C040000 		.4byte	.LVL101-.Ltext0
 19175 26ed 2C040000 		.4byte	.LVL102-.Ltext0
 19176 26f1 0200     		.2byte	0x2
 19177 26f3 34       		.byte	0x34
 19178 26f4 9F       		.byte	0x9f
 19179 26f5 00000000 		.4byte	0
 19180 26f9 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 479


 19181              	.LLST58:
 19182 26fd 1C040000 		.4byte	.LVL101-.Ltext0
 19183 2701 2C040000 		.4byte	.LVL102-.Ltext0
 19184 2705 0100     		.2byte	0x1
 19185 2707 53       		.byte	0x53
 19186 2708 00000000 		.4byte	0
 19187 270c 00000000 		.4byte	0
 19188              	.LLST59:
 19189 2710 1C040000 		.4byte	.LVL101-.Ltext0
 19190 2714 2C040000 		.4byte	.LVL102-.Ltext0
 19191 2718 0200     		.2byte	0x2
 19192 271a 40       		.byte	0x40
 19193 271b 9F       		.byte	0x9f
 19194 271c 00000000 		.4byte	0
 19195 2720 00000000 		.4byte	0
 19196              	.LLST41:
 19197 2724 98030000 		.4byte	.LVL92-.Ltext0
 19198 2728 F2030000 		.4byte	.LVL97-.Ltext0
 19199 272c 0100     		.2byte	0x1
 19200 272e 50       		.byte	0x50
 19201 272f F2030000 		.4byte	.LVL97-.Ltext0
 19202 2733 F8030000 		.4byte	.LFE110-.Ltext0
 19203 2737 0400     		.2byte	0x4
 19204 2739 F3       		.byte	0xf3
 19205 273a 01       		.uleb128 0x1
 19206 273b 50       		.byte	0x50
 19207 273c 9F       		.byte	0x9f
 19208 273d 00000000 		.4byte	0
 19209 2741 00000000 		.4byte	0
 19210              	.LLST42:
 19211 2745 98030000 		.4byte	.LVL92-.Ltext0
 19212 2749 BE030000 		.4byte	.LVL96-.Ltext0
 19213 274d 0100     		.2byte	0x1
 19214 274f 51       		.byte	0x51
 19215 2750 BE030000 		.4byte	.LVL96-.Ltext0
 19216 2754 F8030000 		.4byte	.LFE110-.Ltext0
 19217 2758 0400     		.2byte	0x4
 19218 275a F3       		.byte	0xf3
 19219 275b 01       		.uleb128 0x1
 19220 275c 51       		.byte	0x51
 19221 275d 9F       		.byte	0x9f
 19222 275e 00000000 		.4byte	0
 19223 2762 00000000 		.4byte	0
 19224              	.LLST43:
 19225 2766 9A030000 		.4byte	.LVL93-.Ltext0
 19226 276a A6030000 		.4byte	.LVL94-.Ltext0
 19227 276e 0200     		.2byte	0x2
 19228 2770 30       		.byte	0x30
 19229 2771 9F       		.byte	0x9f
 19230 2772 00000000 		.4byte	0
 19231 2776 00000000 		.4byte	0
 19232              	.LLST45:
 19233 277a 9A030000 		.4byte	.LVL93-.Ltext0
 19234 277e A6030000 		.4byte	.LVL94-.Ltext0
 19235 2782 0100     		.2byte	0x1
 19236 2784 53       		.byte	0x53
 19237 2785 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 480


 19238 2789 00000000 		.4byte	0
 19239              	.LLST46:
 19240 278d 9A030000 		.4byte	.LVL93-.Ltext0
 19241 2791 A6030000 		.4byte	.LVL94-.Ltext0
 19242 2795 0200     		.2byte	0x2
 19243 2797 31       		.byte	0x31
 19244 2798 9F       		.byte	0x9f
 19245 2799 00000000 		.4byte	0
 19246 279d 00000000 		.4byte	0
 19247              	.LLST47:
 19248 27a1 A6030000 		.4byte	.LVL94-.Ltext0
 19249 27a5 B2030000 		.4byte	.LVL95-.Ltext0
 19250 27a9 0200     		.2byte	0x2
 19251 27ab 30       		.byte	0x30
 19252 27ac 9F       		.byte	0x9f
 19253 27ad 00000000 		.4byte	0
 19254 27b1 00000000 		.4byte	0
 19255              	.LLST48:
 19256 27b5 A6030000 		.4byte	.LVL94-.Ltext0
 19257 27b9 B2030000 		.4byte	.LVL95-.Ltext0
 19258 27bd 0200     		.2byte	0x2
 19259 27bf 34       		.byte	0x34
 19260 27c0 9F       		.byte	0x9f
 19261 27c1 00000000 		.4byte	0
 19262 27c5 00000000 		.4byte	0
 19263              	.LLST49:
 19264 27c9 A6030000 		.4byte	.LVL94-.Ltext0
 19265 27cd B2030000 		.4byte	.LVL95-.Ltext0
 19266 27d1 0100     		.2byte	0x1
 19267 27d3 53       		.byte	0x53
 19268 27d4 00000000 		.4byte	0
 19269 27d8 00000000 		.4byte	0
 19270              	.LLST50:
 19271 27dc A6030000 		.4byte	.LVL94-.Ltext0
 19272 27e0 B2030000 		.4byte	.LVL95-.Ltext0
 19273 27e4 0200     		.2byte	0x2
 19274 27e6 40       		.byte	0x40
 19275 27e7 9F       		.byte	0x9f
 19276 27e8 00000000 		.4byte	0
 19277 27ec 00000000 		.4byte	0
 19278              	.LLST32:
 19279 27f0 60030000 		.4byte	.LVL87-.Ltext0
 19280 27f4 64030000 		.4byte	.LVL89-.Ltext0
 19281 27f8 0100     		.2byte	0x1
 19282 27fa 50       		.byte	0x50
 19283 27fb 64030000 		.4byte	.LVL89-.Ltext0
 19284 27ff 98030000 		.4byte	.LFE109-.Ltext0
 19285 2803 0400     		.2byte	0x4
 19286 2805 F3       		.byte	0xf3
 19287 2806 01       		.uleb128 0x1
 19288 2807 50       		.byte	0x50
 19289 2808 9F       		.byte	0x9f
 19290 2809 00000000 		.4byte	0
 19291 280d 00000000 		.4byte	0
 19292              	.LLST33:
 19293 2811 62030000 		.4byte	.LVL88-.Ltext0
 19294 2815 74030000 		.4byte	.LVL90-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 481


 19295 2819 0200     		.2byte	0x2
 19296 281b 31       		.byte	0x31
 19297 281c 9F       		.byte	0x9f
 19298 281d 00000000 		.4byte	0
 19299 2821 00000000 		.4byte	0
 19300              	.LLST34:
 19301 2825 62030000 		.4byte	.LVL88-.Ltext0
 19302 2829 74030000 		.4byte	.LVL90-.Ltext0
 19303 282d 0200     		.2byte	0x2
 19304 282f 30       		.byte	0x30
 19305 2830 9F       		.byte	0x9f
 19306 2831 00000000 		.4byte	0
 19307 2835 00000000 		.4byte	0
 19308              	.LLST35:
 19309 2839 62030000 		.4byte	.LVL88-.Ltext0
 19310 283d 74030000 		.4byte	.LVL90-.Ltext0
 19311 2841 0100     		.2byte	0x1
 19312 2843 53       		.byte	0x53
 19313 2844 00000000 		.4byte	0
 19314 2848 00000000 		.4byte	0
 19315              	.LLST37:
 19316 284c 74030000 		.4byte	.LVL90-.Ltext0
 19317 2850 84030000 		.4byte	.LVL91-.Ltext0
 19318 2854 0200     		.2byte	0x2
 19319 2856 31       		.byte	0x31
 19320 2857 9F       		.byte	0x9f
 19321 2858 00000000 		.4byte	0
 19322 285c 00000000 		.4byte	0
 19323              	.LLST38:
 19324 2860 74030000 		.4byte	.LVL90-.Ltext0
 19325 2864 84030000 		.4byte	.LVL91-.Ltext0
 19326 2868 0200     		.2byte	0x2
 19327 286a 34       		.byte	0x34
 19328 286b 9F       		.byte	0x9f
 19329 286c 00000000 		.4byte	0
 19330 2870 00000000 		.4byte	0
 19331              	.LLST39:
 19332 2874 74030000 		.4byte	.LVL90-.Ltext0
 19333 2878 84030000 		.4byte	.LVL91-.Ltext0
 19334 287c 0100     		.2byte	0x1
 19335 287e 53       		.byte	0x53
 19336 287f 00000000 		.4byte	0
 19337 2883 00000000 		.4byte	0
 19338              	.LLST40:
 19339 2887 74030000 		.4byte	.LVL90-.Ltext0
 19340 288b 84030000 		.4byte	.LVL91-.Ltext0
 19341 288f 0200     		.2byte	0x2
 19342 2891 40       		.byte	0x40
 19343 2892 9F       		.byte	0x9f
 19344 2893 00000000 		.4byte	0
 19345 2897 00000000 		.4byte	0
 19346              	.LLST30:
 19347 289b 26030000 		.4byte	.LFB106-.Ltext0
 19348 289f 2E030000 		.4byte	.LCFI9-.Ltext0
 19349 28a3 0200     		.2byte	0x2
 19350 28a5 7D       		.byte	0x7d
 19351 28a6 00       		.sleb128 0
ARM GAS  /tmp/ccTsJCXT.s 			page 482


 19352 28a7 2E030000 		.4byte	.LCFI9-.Ltext0
 19353 28ab 60030000 		.4byte	.LFE106-.Ltext0
 19354 28af 0200     		.2byte	0x2
 19355 28b1 7D       		.byte	0x7d
 19356 28b2 08       		.sleb128 8
 19357 28b3 00000000 		.4byte	0
 19358 28b7 00000000 		.4byte	0
 19359              	.LLST31:
 19360 28bb 26030000 		.4byte	.LVL84-.Ltext0
 19361 28bf 50030000 		.4byte	.LVL85-.Ltext0
 19362 28c3 0100     		.2byte	0x1
 19363 28c5 50       		.byte	0x50
 19364 28c6 50030000 		.4byte	.LVL85-.Ltext0
 19365 28ca 60030000 		.4byte	.LFE106-.Ltext0
 19366 28ce 0100     		.2byte	0x1
 19367 28d0 54       		.byte	0x54
 19368 28d1 00000000 		.4byte	0
 19369 28d5 00000000 		.4byte	0
 19370              	.LLST233:
 19371 28d9 AC0E0000 		.4byte	.LFB105-.Ltext0
 19372 28dd AE0E0000 		.4byte	.LCFI33-.Ltext0
 19373 28e1 0200     		.2byte	0x2
 19374 28e3 7D       		.byte	0x7d
 19375 28e4 00       		.sleb128 0
 19376 28e5 AE0E0000 		.4byte	.LCFI33-.Ltext0
 19377 28e9 F20E0000 		.4byte	.LFE105-.Ltext0
 19378 28ed 0200     		.2byte	0x2
 19379 28ef 7D       		.byte	0x7d
 19380 28f0 10       		.sleb128 16
 19381 28f1 00000000 		.4byte	0
 19382 28f5 00000000 		.4byte	0
 19383              	.LLST234:
 19384 28f9 AC0E0000 		.4byte	.LVL330-.Ltext0
 19385 28fd C50E0000 		.4byte	.LVL331-1-.Ltext0
 19386 2901 0100     		.2byte	0x1
 19387 2903 50       		.byte	0x50
 19388 2904 C50E0000 		.4byte	.LVL331-1-.Ltext0
 19389 2908 EE0E0000 		.4byte	.LVL333-.Ltext0
 19390 290c 0100     		.2byte	0x1
 19391 290e 54       		.byte	0x54
 19392 290f EE0E0000 		.4byte	.LVL333-.Ltext0
 19393 2913 F00E0000 		.4byte	.LVL334-.Ltext0
 19394 2917 0100     		.2byte	0x1
 19395 2919 50       		.byte	0x50
 19396 291a F00E0000 		.4byte	.LVL334-.Ltext0
 19397 291e F20E0000 		.4byte	.LFE105-.Ltext0
 19398 2922 0100     		.2byte	0x1
 19399 2924 54       		.byte	0x54
 19400 2925 00000000 		.4byte	0
 19401 2929 00000000 		.4byte	0
 19402              	.LLST235:
 19403 292d AC0E0000 		.4byte	.LVL330-.Ltext0
 19404 2931 C50E0000 		.4byte	.LVL331-1-.Ltext0
 19405 2935 0100     		.2byte	0x1
 19406 2937 51       		.byte	0x51
 19407 2938 C50E0000 		.4byte	.LVL331-1-.Ltext0
 19408 293c EE0E0000 		.4byte	.LVL333-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 483


 19409 2940 0100     		.2byte	0x1
 19410 2942 55       		.byte	0x55
 19411 2943 EE0E0000 		.4byte	.LVL333-.Ltext0
 19412 2947 F20E0000 		.4byte	.LFE105-.Ltext0
 19413 294b 0100     		.2byte	0x1
 19414 294d 51       		.byte	0x51
 19415 294e 00000000 		.4byte	0
 19416 2952 00000000 		.4byte	0
 19417              	.LLST399:
 19418 2956 941C0000 		.4byte	.LFB104-.Ltext0
 19419 295a 961C0000 		.4byte	.LCFI63-.Ltext0
 19420 295e 0200     		.2byte	0x2
 19421 2960 7D       		.byte	0x7d
 19422 2961 00       		.sleb128 0
 19423 2962 961C0000 		.4byte	.LCFI63-.Ltext0
 19424 2966 1C1D0000 		.4byte	.LFE104-.Ltext0
 19425 296a 0200     		.2byte	0x2
 19426 296c 7D       		.byte	0x7d
 19427 296d 10       		.sleb128 16
 19428 296e 00000000 		.4byte	0
 19429 2972 00000000 		.4byte	0
 19430              	.LLST400:
 19431 2976 941C0000 		.4byte	.LVL695-.Ltext0
 19432 297a B41C0000 		.4byte	.LVL696-.Ltext0
 19433 297e 0100     		.2byte	0x1
 19434 2980 50       		.byte	0x50
 19435 2981 B41C0000 		.4byte	.LVL696-.Ltext0
 19436 2985 F21C0000 		.4byte	.LVL699-.Ltext0
 19437 2989 0100     		.2byte	0x1
 19438 298b 54       		.byte	0x54
 19439 298c F21C0000 		.4byte	.LVL699-.Ltext0
 19440 2990 F61C0000 		.4byte	.LVL700-.Ltext0
 19441 2994 0100     		.2byte	0x1
 19442 2996 50       		.byte	0x50
 19443 2997 F61C0000 		.4byte	.LVL700-.Ltext0
 19444 299b 001D0000 		.4byte	.LVL701-.Ltext0
 19445 299f 0100     		.2byte	0x1
 19446 29a1 54       		.byte	0x54
 19447 29a2 001D0000 		.4byte	.LVL701-.Ltext0
 19448 29a6 041D0000 		.4byte	.LVL702-.Ltext0
 19449 29aa 0100     		.2byte	0x1
 19450 29ac 50       		.byte	0x50
 19451 29ad 041D0000 		.4byte	.LVL702-.Ltext0
 19452 29b1 0E1D0000 		.4byte	.LVL703-.Ltext0
 19453 29b5 0100     		.2byte	0x1
 19454 29b7 54       		.byte	0x54
 19455 29b8 0E1D0000 		.4byte	.LVL703-.Ltext0
 19456 29bc 121D0000 		.4byte	.LVL704-.Ltext0
 19457 29c0 0100     		.2byte	0x1
 19458 29c2 50       		.byte	0x50
 19459 29c3 121D0000 		.4byte	.LVL704-.Ltext0
 19460 29c7 1C1D0000 		.4byte	.LFE104-.Ltext0
 19461 29cb 0100     		.2byte	0x1
 19462 29cd 54       		.byte	0x54
 19463 29ce 00000000 		.4byte	0
 19464 29d2 00000000 		.4byte	0
 19465              	.LLST401:
ARM GAS  /tmp/ccTsJCXT.s 			page 484


 19466 29d6 941C0000 		.4byte	.LVL695-.Ltext0
 19467 29da BF1C0000 		.4byte	.LVL697-1-.Ltext0
 19468 29de 0100     		.2byte	0x1
 19469 29e0 51       		.byte	0x51
 19470 29e1 BF1C0000 		.4byte	.LVL697-1-.Ltext0
 19471 29e5 F21C0000 		.4byte	.LVL699-.Ltext0
 19472 29e9 0100     		.2byte	0x1
 19473 29eb 55       		.byte	0x55
 19474 29ec F21C0000 		.4byte	.LVL699-.Ltext0
 19475 29f0 1C1D0000 		.4byte	.LFE104-.Ltext0
 19476 29f4 0100     		.2byte	0x1
 19477 29f6 51       		.byte	0x51
 19478 29f7 00000000 		.4byte	0
 19479 29fb 00000000 		.4byte	0
 19480              	.LLST393:
 19481 29ff 981B0000 		.4byte	.LFB103-.Ltext0
 19482 2a03 9A1B0000 		.4byte	.LCFI62-.Ltext0
 19483 2a07 0200     		.2byte	0x2
 19484 2a09 7D       		.byte	0x7d
 19485 2a0a 00       		.sleb128 0
 19486 2a0b 9A1B0000 		.4byte	.LCFI62-.Ltext0
 19487 2a0f 941C0000 		.4byte	.LFE103-.Ltext0
 19488 2a13 0200     		.2byte	0x2
 19489 2a15 7D       		.byte	0x7d
 19490 2a16 10       		.sleb128 16
 19491 2a17 00000000 		.4byte	0
 19492 2a1b 00000000 		.4byte	0
 19493              	.LLST394:
 19494 2a1f 981B0000 		.4byte	.LVL679-.Ltext0
 19495 2a23 A01B0000 		.4byte	.LVL680-.Ltext0
 19496 2a27 0100     		.2byte	0x1
 19497 2a29 50       		.byte	0x50
 19498 2a2a A01B0000 		.4byte	.LVL680-.Ltext0
 19499 2a2e 941C0000 		.4byte	.LFE103-.Ltext0
 19500 2a32 0100     		.2byte	0x1
 19501 2a34 54       		.byte	0x54
 19502 2a35 00000000 		.4byte	0
 19503 2a39 00000000 		.4byte	0
 19504              	.LLST395:
 19505 2a3d 981B0000 		.4byte	.LVL679-.Ltext0
 19506 2a41 AC1B0000 		.4byte	.LVL681-.Ltext0
 19507 2a45 0100     		.2byte	0x1
 19508 2a47 51       		.byte	0x51
 19509 2a48 AC1B0000 		.4byte	.LVL681-.Ltext0
 19510 2a4c 941C0000 		.4byte	.LFE103-.Ltext0
 19511 2a50 0100     		.2byte	0x1
 19512 2a52 55       		.byte	0x55
 19513 2a53 00000000 		.4byte	0
 19514 2a57 00000000 		.4byte	0
 19515              	.LLST396:
 19516 2a5b 981B0000 		.4byte	.LVL679-.Ltext0
 19517 2a5f B41B0000 		.4byte	.LVL682-.Ltext0
 19518 2a63 0100     		.2byte	0x1
 19519 2a65 52       		.byte	0x52
 19520 2a66 B41B0000 		.4byte	.LVL682-.Ltext0
 19521 2a6a B81B0000 		.4byte	.LVL683-.Ltext0
 19522 2a6e 0400     		.2byte	0x4
ARM GAS  /tmp/ccTsJCXT.s 			page 485


 19523 2a70 F3       		.byte	0xf3
 19524 2a71 01       		.uleb128 0x1
 19525 2a72 52       		.byte	0x52
 19526 2a73 9F       		.byte	0x9f
 19527 2a74 B81B0000 		.4byte	.LVL683-.Ltext0
 19528 2a78 E91B0000 		.4byte	.LVL684-1-.Ltext0
 19529 2a7c 0100     		.2byte	0x1
 19530 2a7e 52       		.byte	0x52
 19531 2a7f E91B0000 		.4byte	.LVL684-1-.Ltext0
 19532 2a83 1A1C0000 		.4byte	.LVL689-.Ltext0
 19533 2a87 0400     		.2byte	0x4
 19534 2a89 F3       		.byte	0xf3
 19535 2a8a 01       		.uleb128 0x1
 19536 2a8b 52       		.byte	0x52
 19537 2a8c 9F       		.byte	0x9f
 19538 2a8d 1A1C0000 		.4byte	.LVL689-.Ltext0
 19539 2a91 2F1C0000 		.4byte	.LVL690-1-.Ltext0
 19540 2a95 0100     		.2byte	0x1
 19541 2a97 52       		.byte	0x52
 19542 2a98 2F1C0000 		.4byte	.LVL690-1-.Ltext0
 19543 2a9c 3E1C0000 		.4byte	.LVL691-.Ltext0
 19544 2aa0 0400     		.2byte	0x4
 19545 2aa2 F3       		.byte	0xf3
 19546 2aa3 01       		.uleb128 0x1
 19547 2aa4 52       		.byte	0x52
 19548 2aa5 9F       		.byte	0x9f
 19549 2aa6 3E1C0000 		.4byte	.LVL691-.Ltext0
 19550 2aaa 531C0000 		.4byte	.LVL692-1-.Ltext0
 19551 2aae 0100     		.2byte	0x1
 19552 2ab0 52       		.byte	0x52
 19553 2ab1 531C0000 		.4byte	.LVL692-1-.Ltext0
 19554 2ab5 621C0000 		.4byte	.LVL693-.Ltext0
 19555 2ab9 0400     		.2byte	0x4
 19556 2abb F3       		.byte	0xf3
 19557 2abc 01       		.uleb128 0x1
 19558 2abd 52       		.byte	0x52
 19559 2abe 9F       		.byte	0x9f
 19560 2abf 621C0000 		.4byte	.LVL693-.Ltext0
 19561 2ac3 771C0000 		.4byte	.LVL694-1-.Ltext0
 19562 2ac7 0100     		.2byte	0x1
 19563 2ac9 52       		.byte	0x52
 19564 2aca 771C0000 		.4byte	.LVL694-1-.Ltext0
 19565 2ace 941C0000 		.4byte	.LFE103-.Ltext0
 19566 2ad2 0400     		.2byte	0x4
 19567 2ad4 F3       		.byte	0xf3
 19568 2ad5 01       		.uleb128 0x1
 19569 2ad6 52       		.byte	0x52
 19570 2ad7 9F       		.byte	0x9f
 19571 2ad8 00000000 		.4byte	0
 19572 2adc 00000000 		.4byte	0
 19573              	.LLST397:
 19574 2ae0 981B0000 		.4byte	.LVL679-.Ltext0
 19575 2ae4 B41B0000 		.4byte	.LVL682-.Ltext0
 19576 2ae8 0100     		.2byte	0x1
 19577 2aea 53       		.byte	0x53
 19578 2aeb B41B0000 		.4byte	.LVL682-.Ltext0
 19579 2aef B81B0000 		.4byte	.LVL683-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 486


 19580 2af3 0400     		.2byte	0x4
 19581 2af5 F3       		.byte	0xf3
 19582 2af6 01       		.uleb128 0x1
 19583 2af7 53       		.byte	0x53
 19584 2af8 9F       		.byte	0x9f
 19585 2af9 B81B0000 		.4byte	.LVL683-.Ltext0
 19586 2afd E91B0000 		.4byte	.LVL684-1-.Ltext0
 19587 2b01 0100     		.2byte	0x1
 19588 2b03 53       		.byte	0x53
 19589 2b04 E91B0000 		.4byte	.LVL684-1-.Ltext0
 19590 2b08 1A1C0000 		.4byte	.LVL689-.Ltext0
 19591 2b0c 0400     		.2byte	0x4
 19592 2b0e F3       		.byte	0xf3
 19593 2b0f 01       		.uleb128 0x1
 19594 2b10 53       		.byte	0x53
 19595 2b11 9F       		.byte	0x9f
 19596 2b12 1A1C0000 		.4byte	.LVL689-.Ltext0
 19597 2b16 2F1C0000 		.4byte	.LVL690-1-.Ltext0
 19598 2b1a 0100     		.2byte	0x1
 19599 2b1c 53       		.byte	0x53
 19600 2b1d 2F1C0000 		.4byte	.LVL690-1-.Ltext0
 19601 2b21 3E1C0000 		.4byte	.LVL691-.Ltext0
 19602 2b25 0400     		.2byte	0x4
 19603 2b27 F3       		.byte	0xf3
 19604 2b28 01       		.uleb128 0x1
 19605 2b29 53       		.byte	0x53
 19606 2b2a 9F       		.byte	0x9f
 19607 2b2b 3E1C0000 		.4byte	.LVL691-.Ltext0
 19608 2b2f 531C0000 		.4byte	.LVL692-1-.Ltext0
 19609 2b33 0100     		.2byte	0x1
 19610 2b35 53       		.byte	0x53
 19611 2b36 531C0000 		.4byte	.LVL692-1-.Ltext0
 19612 2b3a 621C0000 		.4byte	.LVL693-.Ltext0
 19613 2b3e 0400     		.2byte	0x4
 19614 2b40 F3       		.byte	0xf3
 19615 2b41 01       		.uleb128 0x1
 19616 2b42 53       		.byte	0x53
 19617 2b43 9F       		.byte	0x9f
 19618 2b44 621C0000 		.4byte	.LVL693-.Ltext0
 19619 2b48 771C0000 		.4byte	.LVL694-1-.Ltext0
 19620 2b4c 0100     		.2byte	0x1
 19621 2b4e 53       		.byte	0x53
 19622 2b4f 771C0000 		.4byte	.LVL694-1-.Ltext0
 19623 2b53 941C0000 		.4byte	.LFE103-.Ltext0
 19624 2b57 0400     		.2byte	0x4
 19625 2b59 F3       		.byte	0xf3
 19626 2b5a 01       		.uleb128 0x1
 19627 2b5b 53       		.byte	0x53
 19628 2b5c 9F       		.byte	0x9f
 19629 2b5d 00000000 		.4byte	0
 19630 2b61 00000000 		.4byte	0
 19631              	.LLST398:
 19632 2b65 081C0000 		.4byte	.LVL686-.Ltext0
 19633 2b69 0C1C0000 		.4byte	.LVL687-.Ltext0
 19634 2b6d 0500     		.2byte	0x5
 19635 2b6f 72       		.byte	0x72
 19636 2b70 00       		.sleb128 0
ARM GAS  /tmp/ccTsJCXT.s 			page 487


 19637 2b71 37       		.byte	0x37
 19638 2b72 1A       		.byte	0x1a
 19639 2b73 9F       		.byte	0x9f
 19640 2b74 0C1C0000 		.4byte	.LVL687-.Ltext0
 19641 2b78 121C0000 		.4byte	.LVL688-.Ltext0
 19642 2b7c 0100     		.2byte	0x1
 19643 2b7e 52       		.byte	0x52
 19644 2b7f 00000000 		.4byte	0
 19645 2b83 00000000 		.4byte	0
 19646              	.LLST390:
 19647 2b87 2C1B0000 		.4byte	.LFB102-.Ltext0
 19648 2b8b 2E1B0000 		.4byte	.LCFI61-.Ltext0
 19649 2b8f 0200     		.2byte	0x2
 19650 2b91 7D       		.byte	0x7d
 19651 2b92 00       		.sleb128 0
 19652 2b93 2E1B0000 		.4byte	.LCFI61-.Ltext0
 19653 2b97 981B0000 		.4byte	.LFE102-.Ltext0
 19654 2b9b 0200     		.2byte	0x2
 19655 2b9d 7D       		.byte	0x7d
 19656 2b9e 08       		.sleb128 8
 19657 2b9f 00000000 		.4byte	0
 19658 2ba3 00000000 		.4byte	0
 19659              	.LLST391:
 19660 2ba7 2C1B0000 		.4byte	.LVL675-.Ltext0
 19661 2bab 541B0000 		.4byte	.LVL676-.Ltext0
 19662 2baf 0100     		.2byte	0x1
 19663 2bb1 50       		.byte	0x50
 19664 2bb2 541B0000 		.4byte	.LVL676-.Ltext0
 19665 2bb6 7A1B0000 		.4byte	.LVL678-.Ltext0
 19666 2bba 0100     		.2byte	0x1
 19667 2bbc 54       		.byte	0x54
 19668 2bbd 7A1B0000 		.4byte	.LVL678-.Ltext0
 19669 2bc1 981B0000 		.4byte	.LFE102-.Ltext0
 19670 2bc5 0100     		.2byte	0x1
 19671 2bc7 50       		.byte	0x50
 19672 2bc8 00000000 		.4byte	0
 19673 2bcc 00000000 		.4byte	0
 19674              	.LLST392:
 19675 2bd0 2C1B0000 		.4byte	.LVL675-.Ltext0
 19676 2bd4 571B0000 		.4byte	.LVL677-1-.Ltext0
 19677 2bd8 0100     		.2byte	0x1
 19678 2bda 51       		.byte	0x51
 19679 2bdb 571B0000 		.4byte	.LVL677-1-.Ltext0
 19680 2bdf 7A1B0000 		.4byte	.LVL678-.Ltext0
 19681 2be3 0400     		.2byte	0x4
 19682 2be5 F3       		.byte	0xf3
 19683 2be6 01       		.uleb128 0x1
 19684 2be7 51       		.byte	0x51
 19685 2be8 9F       		.byte	0x9f
 19686 2be9 7A1B0000 		.4byte	.LVL678-.Ltext0
 19687 2bed 981B0000 		.4byte	.LFE102-.Ltext0
 19688 2bf1 0100     		.2byte	0x1
 19689 2bf3 51       		.byte	0x51
 19690 2bf4 00000000 		.4byte	0
 19691 2bf8 00000000 		.4byte	0
 19692              	.LLST386:
 19693 2bfc CA1A0000 		.4byte	.LFB101-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 488


 19694 2c00 CC1A0000 		.4byte	.LCFI60-.Ltext0
 19695 2c04 0200     		.2byte	0x2
 19696 2c06 7D       		.byte	0x7d
 19697 2c07 00       		.sleb128 0
 19698 2c08 CC1A0000 		.4byte	.LCFI60-.Ltext0
 19699 2c0c 2C1B0000 		.4byte	.LFE101-.Ltext0
 19700 2c10 0200     		.2byte	0x2
 19701 2c12 7D       		.byte	0x7d
 19702 2c13 08       		.sleb128 8
 19703 2c14 00000000 		.4byte	0
 19704 2c18 00000000 		.4byte	0
 19705              	.LLST387:
 19706 2c1c CA1A0000 		.4byte	.LVL668-.Ltext0
 19707 2c20 F01A0000 		.4byte	.LVL669-.Ltext0
 19708 2c24 0100     		.2byte	0x1
 19709 2c26 50       		.byte	0x50
 19710 2c27 F01A0000 		.4byte	.LVL669-.Ltext0
 19711 2c2b 0E1B0000 		.4byte	.LVL674-.Ltext0
 19712 2c2f 0100     		.2byte	0x1
 19713 2c31 54       		.byte	0x54
 19714 2c32 0E1B0000 		.4byte	.LVL674-.Ltext0
 19715 2c36 2C1B0000 		.4byte	.LFE101-.Ltext0
 19716 2c3a 0100     		.2byte	0x1
 19717 2c3c 50       		.byte	0x50
 19718 2c3d 00000000 		.4byte	0
 19719 2c41 00000000 		.4byte	0
 19720              	.LLST388:
 19721 2c45 CA1A0000 		.4byte	.LVL668-.Ltext0
 19722 2c49 F51A0000 		.4byte	.LVL670-1-.Ltext0
 19723 2c4d 0100     		.2byte	0x1
 19724 2c4f 51       		.byte	0x51
 19725 2c50 F51A0000 		.4byte	.LVL670-1-.Ltext0
 19726 2c54 0E1B0000 		.4byte	.LVL674-.Ltext0
 19727 2c58 0400     		.2byte	0x4
 19728 2c5a F3       		.byte	0xf3
 19729 2c5b 01       		.uleb128 0x1
 19730 2c5c 51       		.byte	0x51
 19731 2c5d 9F       		.byte	0x9f
 19732 2c5e 0E1B0000 		.4byte	.LVL674-.Ltext0
 19733 2c62 2C1B0000 		.4byte	.LFE101-.Ltext0
 19734 2c66 0100     		.2byte	0x1
 19735 2c68 51       		.byte	0x51
 19736 2c69 00000000 		.4byte	0
 19737 2c6d 00000000 		.4byte	0
 19738              	.LLST389:
 19739 2c71 FC1A0000 		.4byte	.LVL671-.Ltext0
 19740 2c75 001B0000 		.4byte	.LVL672-.Ltext0
 19741 2c79 0500     		.2byte	0x5
 19742 2c7b 72       		.byte	0x72
 19743 2c7c 00       		.sleb128 0
 19744 2c7d 37       		.byte	0x37
 19745 2c7e 1A       		.byte	0x1a
 19746 2c7f 9F       		.byte	0x9f
 19747 2c80 001B0000 		.4byte	.LVL672-.Ltext0
 19748 2c84 061B0000 		.4byte	.LVL673-.Ltext0
 19749 2c88 0100     		.2byte	0x1
 19750 2c8a 52       		.byte	0x52
ARM GAS  /tmp/ccTsJCXT.s 			page 489


 19751 2c8b 00000000 		.4byte	0
 19752 2c8f 00000000 		.4byte	0
 19753              	.LLST383:
 19754 2c93 9C1A0000 		.4byte	.LFB100-.Ltext0
 19755 2c97 9E1A0000 		.4byte	.LCFI59-.Ltext0
 19756 2c9b 0200     		.2byte	0x2
 19757 2c9d 7D       		.byte	0x7d
 19758 2c9e 00       		.sleb128 0
 19759 2c9f 9E1A0000 		.4byte	.LCFI59-.Ltext0
 19760 2ca3 CA1A0000 		.4byte	.LFE100-.Ltext0
 19761 2ca7 0200     		.2byte	0x2
 19762 2ca9 7D       		.byte	0x7d
 19763 2caa 08       		.sleb128 8
 19764 2cab 00000000 		.4byte	0
 19765 2caf 00000000 		.4byte	0
 19766              	.LLST384:
 19767 2cb3 9C1A0000 		.4byte	.LVL665-.Ltext0
 19768 2cb7 A41A0000 		.4byte	.LVL666-.Ltext0
 19769 2cbb 0100     		.2byte	0x1
 19770 2cbd 50       		.byte	0x50
 19771 2cbe A41A0000 		.4byte	.LVL666-.Ltext0
 19772 2cc2 CA1A0000 		.4byte	.LFE100-.Ltext0
 19773 2cc6 0100     		.2byte	0x1
 19774 2cc8 54       		.byte	0x54
 19775 2cc9 00000000 		.4byte	0
 19776 2ccd 00000000 		.4byte	0
 19777              	.LLST385:
 19778 2cd1 9C1A0000 		.4byte	.LVL665-.Ltext0
 19779 2cd5 A71A0000 		.4byte	.LVL667-1-.Ltext0
 19780 2cd9 0100     		.2byte	0x1
 19781 2cdb 51       		.byte	0x51
 19782 2cdc A71A0000 		.4byte	.LVL667-1-.Ltext0
 19783 2ce0 CA1A0000 		.4byte	.LFE100-.Ltext0
 19784 2ce4 0400     		.2byte	0x4
 19785 2ce6 F3       		.byte	0xf3
 19786 2ce7 01       		.uleb128 0x1
 19787 2ce8 51       		.byte	0x51
 19788 2ce9 9F       		.byte	0x9f
 19789 2cea 00000000 		.4byte	0
 19790 2cee 00000000 		.4byte	0
 19791              	.LLST379:
 19792 2cf2 781A0000 		.4byte	.LFB99-.Ltext0
 19793 2cf6 7A1A0000 		.4byte	.LCFI58-.Ltext0
 19794 2cfa 0200     		.2byte	0x2
 19795 2cfc 7D       		.byte	0x7d
 19796 2cfd 00       		.sleb128 0
 19797 2cfe 7A1A0000 		.4byte	.LCFI58-.Ltext0
 19798 2d02 9C1A0000 		.4byte	.LFE99-.Ltext0
 19799 2d06 0200     		.2byte	0x2
 19800 2d08 7D       		.byte	0x7d
 19801 2d09 08       		.sleb128 8
 19802 2d0a 00000000 		.4byte	0
 19803 2d0e 00000000 		.4byte	0
 19804              	.LLST380:
 19805 2d12 781A0000 		.4byte	.LVL659-.Ltext0
 19806 2d16 801A0000 		.4byte	.LVL660-.Ltext0
 19807 2d1a 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 490


 19808 2d1c 50       		.byte	0x50
 19809 2d1d 801A0000 		.4byte	.LVL660-.Ltext0
 19810 2d21 9C1A0000 		.4byte	.LFE99-.Ltext0
 19811 2d25 0100     		.2byte	0x1
 19812 2d27 54       		.byte	0x54
 19813 2d28 00000000 		.4byte	0
 19814 2d2c 00000000 		.4byte	0
 19815              	.LLST381:
 19816 2d30 781A0000 		.4byte	.LVL659-.Ltext0
 19817 2d34 831A0000 		.4byte	.LVL661-1-.Ltext0
 19818 2d38 0100     		.2byte	0x1
 19819 2d3a 51       		.byte	0x51
 19820 2d3b 831A0000 		.4byte	.LVL661-1-.Ltext0
 19821 2d3f 9C1A0000 		.4byte	.LFE99-.Ltext0
 19822 2d43 0400     		.2byte	0x4
 19823 2d45 F3       		.byte	0xf3
 19824 2d46 01       		.uleb128 0x1
 19825 2d47 51       		.byte	0x51
 19826 2d48 9F       		.byte	0x9f
 19827 2d49 00000000 		.4byte	0
 19828 2d4d 00000000 		.4byte	0
 19829              	.LLST382:
 19830 2d51 8A1A0000 		.4byte	.LVL662-.Ltext0
 19831 2d55 8E1A0000 		.4byte	.LVL663-.Ltext0
 19832 2d59 0500     		.2byte	0x5
 19833 2d5b 72       		.byte	0x72
 19834 2d5c 00       		.sleb128 0
 19835 2d5d 37       		.byte	0x37
 19836 2d5e 1A       		.byte	0x1a
 19837 2d5f 9F       		.byte	0x9f
 19838 2d60 8E1A0000 		.4byte	.LVL663-.Ltext0
 19839 2d64 941A0000 		.4byte	.LVL664-.Ltext0
 19840 2d68 0100     		.2byte	0x1
 19841 2d6a 52       		.byte	0x52
 19842 2d6b 00000000 		.4byte	0
 19843 2d6f 00000000 		.4byte	0
 19844              	.LLST28:
 19845 2d73 E8020000 		.4byte	.LFB96-.Ltext0
 19846 2d77 F0020000 		.4byte	.LCFI8-.Ltext0
 19847 2d7b 0200     		.2byte	0x2
 19848 2d7d 7D       		.byte	0x7d
 19849 2d7e 00       		.sleb128 0
 19850 2d7f F0020000 		.4byte	.LCFI8-.Ltext0
 19851 2d83 22030000 		.4byte	.LFE96-.Ltext0
 19852 2d87 0200     		.2byte	0x2
 19853 2d89 7D       		.byte	0x7d
 19854 2d8a 08       		.sleb128 8
 19855 2d8b 00000000 		.4byte	0
 19856 2d8f 00000000 		.4byte	0
 19857              	.LLST29:
 19858 2d93 E8020000 		.4byte	.LVL81-.Ltext0
 19859 2d97 12030000 		.4byte	.LVL82-.Ltext0
 19860 2d9b 0100     		.2byte	0x1
 19861 2d9d 50       		.byte	0x50
 19862 2d9e 12030000 		.4byte	.LVL82-.Ltext0
 19863 2da2 22030000 		.4byte	.LFE96-.Ltext0
 19864 2da6 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 491


 19865 2da8 54       		.byte	0x54
 19866 2da9 00000000 		.4byte	0
 19867 2dad 00000000 		.4byte	0
 19868              	.LLST231:
 19869 2db1 780E0000 		.4byte	.LFB95-.Ltext0
 19870 2db5 7A0E0000 		.4byte	.LCFI32-.Ltext0
 19871 2db9 0200     		.2byte	0x2
 19872 2dbb 7D       		.byte	0x7d
 19873 2dbc 00       		.sleb128 0
 19874 2dbd 7A0E0000 		.4byte	.LCFI32-.Ltext0
 19875 2dc1 AC0E0000 		.4byte	.LFE95-.Ltext0
 19876 2dc5 0200     		.2byte	0x2
 19877 2dc7 7D       		.byte	0x7d
 19878 2dc8 08       		.sleb128 8
 19879 2dc9 00000000 		.4byte	0
 19880 2dcd 00000000 		.4byte	0
 19881              	.LLST232:
 19882 2dd1 780E0000 		.4byte	.LVL325-.Ltext0
 19883 2dd5 8F0E0000 		.4byte	.LVL326-1-.Ltext0
 19884 2dd9 0100     		.2byte	0x1
 19885 2ddb 50       		.byte	0x50
 19886 2ddc 8F0E0000 		.4byte	.LVL326-1-.Ltext0
 19887 2de0 A80E0000 		.4byte	.LVL328-.Ltext0
 19888 2de4 0100     		.2byte	0x1
 19889 2de6 54       		.byte	0x54
 19890 2de7 A80E0000 		.4byte	.LVL328-.Ltext0
 19891 2deb AA0E0000 		.4byte	.LVL329-.Ltext0
 19892 2def 0100     		.2byte	0x1
 19893 2df1 50       		.byte	0x50
 19894 2df2 AA0E0000 		.4byte	.LVL329-.Ltext0
 19895 2df6 AC0E0000 		.4byte	.LFE95-.Ltext0
 19896 2dfa 0100     		.2byte	0x1
 19897 2dfc 54       		.byte	0x54
 19898 2dfd 00000000 		.4byte	0
 19899 2e01 00000000 		.4byte	0
 19900              	.LLST376:
 19901 2e05 C4190000 		.4byte	.LFB94-.Ltext0
 19902 2e09 C6190000 		.4byte	.LCFI57-.Ltext0
 19903 2e0d 0200     		.2byte	0x2
 19904 2e0f 7D       		.byte	0x7d
 19905 2e10 00       		.sleb128 0
 19906 2e11 C6190000 		.4byte	.LCFI57-.Ltext0
 19907 2e15 741A0000 		.4byte	.LFE94-.Ltext0
 19908 2e19 0200     		.2byte	0x2
 19909 2e1b 7D       		.byte	0x7d
 19910 2e1c 10       		.sleb128 16
 19911 2e1d 00000000 		.4byte	0
 19912 2e21 00000000 		.4byte	0
 19913              	.LLST377:
 19914 2e25 C4190000 		.4byte	.LVL649-.Ltext0
 19915 2e29 E4190000 		.4byte	.LVL650-.Ltext0
 19916 2e2d 0100     		.2byte	0x1
 19917 2e2f 50       		.byte	0x50
 19918 2e30 E4190000 		.4byte	.LVL650-.Ltext0
 19919 2e34 441A0000 		.4byte	.LVL653-.Ltext0
 19920 2e38 0100     		.2byte	0x1
 19921 2e3a 54       		.byte	0x54
ARM GAS  /tmp/ccTsJCXT.s 			page 492


 19922 2e3b 441A0000 		.4byte	.LVL653-.Ltext0
 19923 2e3f 481A0000 		.4byte	.LVL654-.Ltext0
 19924 2e43 0100     		.2byte	0x1
 19925 2e45 50       		.byte	0x50
 19926 2e46 481A0000 		.4byte	.LVL654-.Ltext0
 19927 2e4a 521A0000 		.4byte	.LVL655-.Ltext0
 19928 2e4e 0100     		.2byte	0x1
 19929 2e50 54       		.byte	0x54
 19930 2e51 521A0000 		.4byte	.LVL655-.Ltext0
 19931 2e55 561A0000 		.4byte	.LVL656-.Ltext0
 19932 2e59 0100     		.2byte	0x1
 19933 2e5b 50       		.byte	0x50
 19934 2e5c 561A0000 		.4byte	.LVL656-.Ltext0
 19935 2e60 601A0000 		.4byte	.LVL657-.Ltext0
 19936 2e64 0100     		.2byte	0x1
 19937 2e66 54       		.byte	0x54
 19938 2e67 601A0000 		.4byte	.LVL657-.Ltext0
 19939 2e6b 641A0000 		.4byte	.LVL658-.Ltext0
 19940 2e6f 0100     		.2byte	0x1
 19941 2e71 50       		.byte	0x50
 19942 2e72 641A0000 		.4byte	.LVL658-.Ltext0
 19943 2e76 741A0000 		.4byte	.LFE94-.Ltext0
 19944 2e7a 0100     		.2byte	0x1
 19945 2e7c 54       		.byte	0x54
 19946 2e7d 00000000 		.4byte	0
 19947 2e81 00000000 		.4byte	0
 19948              	.LLST378:
 19949 2e85 C4190000 		.4byte	.LVL649-.Ltext0
 19950 2e89 EF190000 		.4byte	.LVL651-1-.Ltext0
 19951 2e8d 0100     		.2byte	0x1
 19952 2e8f 51       		.byte	0x51
 19953 2e90 EF190000 		.4byte	.LVL651-1-.Ltext0
 19954 2e94 441A0000 		.4byte	.LVL653-.Ltext0
 19955 2e98 0100     		.2byte	0x1
 19956 2e9a 55       		.byte	0x55
 19957 2e9b 441A0000 		.4byte	.LVL653-.Ltext0
 19958 2e9f 741A0000 		.4byte	.LFE94-.Ltext0
 19959 2ea3 0100     		.2byte	0x1
 19960 2ea5 51       		.byte	0x51
 19961 2ea6 00000000 		.4byte	0
 19962 2eaa 00000000 		.4byte	0
 19963              	.LLST370:
 19964 2eae B0180000 		.4byte	.LFB93-.Ltext0
 19965 2eb2 B2180000 		.4byte	.LCFI56-.Ltext0
 19966 2eb6 0200     		.2byte	0x2
 19967 2eb8 7D       		.byte	0x7d
 19968 2eb9 00       		.sleb128 0
 19969 2eba B2180000 		.4byte	.LCFI56-.Ltext0
 19970 2ebe C0190000 		.4byte	.LFE93-.Ltext0
 19971 2ec2 0200     		.2byte	0x2
 19972 2ec4 7D       		.byte	0x7d
 19973 2ec5 10       		.sleb128 16
 19974 2ec6 00000000 		.4byte	0
 19975 2eca 00000000 		.4byte	0
 19976              	.LLST371:
 19977 2ece B0180000 		.4byte	.LVL632-.Ltext0
 19978 2ed2 B8180000 		.4byte	.LVL633-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 493


 19979 2ed6 0100     		.2byte	0x1
 19980 2ed8 50       		.byte	0x50
 19981 2ed9 B8180000 		.4byte	.LVL633-.Ltext0
 19982 2edd C0190000 		.4byte	.LFE93-.Ltext0
 19983 2ee1 0100     		.2byte	0x1
 19984 2ee3 54       		.byte	0x54
 19985 2ee4 00000000 		.4byte	0
 19986 2ee8 00000000 		.4byte	0
 19987              	.LLST372:
 19988 2eec B0180000 		.4byte	.LVL632-.Ltext0
 19989 2ef0 C0180000 		.4byte	.LVL634-.Ltext0
 19990 2ef4 0100     		.2byte	0x1
 19991 2ef6 51       		.byte	0x51
 19992 2ef7 C0180000 		.4byte	.LVL634-.Ltext0
 19993 2efb C0190000 		.4byte	.LFE93-.Ltext0
 19994 2eff 0100     		.2byte	0x1
 19995 2f01 55       		.byte	0x55
 19996 2f02 00000000 		.4byte	0
 19997 2f06 00000000 		.4byte	0
 19998              	.LLST373:
 19999 2f0a B0180000 		.4byte	.LVL632-.Ltext0
 20000 2f0e C6180000 		.4byte	.LVL635-.Ltext0
 20001 2f12 0100     		.2byte	0x1
 20002 2f14 52       		.byte	0x52
 20003 2f15 C6180000 		.4byte	.LVL635-.Ltext0
 20004 2f19 CE180000 		.4byte	.LVL636-.Ltext0
 20005 2f1d 0100     		.2byte	0x1
 20006 2f1f 51       		.byte	0x51
 20007 2f20 CE180000 		.4byte	.LVL636-.Ltext0
 20008 2f24 D2180000 		.4byte	.LVL637-.Ltext0
 20009 2f28 0400     		.2byte	0x4
 20010 2f2a F3       		.byte	0xf3
 20011 2f2b 01       		.uleb128 0x1
 20012 2f2c 52       		.byte	0x52
 20013 2f2d 9F       		.byte	0x9f
 20014 2f2e D2180000 		.4byte	.LVL637-.Ltext0
 20015 2f32 03190000 		.4byte	.LVL638-1-.Ltext0
 20016 2f36 0100     		.2byte	0x1
 20017 2f38 51       		.byte	0x51
 20018 2f39 03190000 		.4byte	.LVL638-1-.Ltext0
 20019 2f3d 42190000 		.4byte	.LVL643-.Ltext0
 20020 2f41 0400     		.2byte	0x4
 20021 2f43 F3       		.byte	0xf3
 20022 2f44 01       		.uleb128 0x1
 20023 2f45 52       		.byte	0x52
 20024 2f46 9F       		.byte	0x9f
 20025 2f47 42190000 		.4byte	.LVL643-.Ltext0
 20026 2f4b 57190000 		.4byte	.LVL644-1-.Ltext0
 20027 2f4f 0100     		.2byte	0x1
 20028 2f51 51       		.byte	0x51
 20029 2f52 57190000 		.4byte	.LVL644-1-.Ltext0
 20030 2f56 66190000 		.4byte	.LVL645-.Ltext0
 20031 2f5a 0400     		.2byte	0x4
 20032 2f5c F3       		.byte	0xf3
 20033 2f5d 01       		.uleb128 0x1
 20034 2f5e 52       		.byte	0x52
 20035 2f5f 9F       		.byte	0x9f
ARM GAS  /tmp/ccTsJCXT.s 			page 494


 20036 2f60 66190000 		.4byte	.LVL645-.Ltext0
 20037 2f64 7B190000 		.4byte	.LVL646-1-.Ltext0
 20038 2f68 0100     		.2byte	0x1
 20039 2f6a 51       		.byte	0x51
 20040 2f6b 7B190000 		.4byte	.LVL646-1-.Ltext0
 20041 2f6f 8A190000 		.4byte	.LVL647-.Ltext0
 20042 2f73 0400     		.2byte	0x4
 20043 2f75 F3       		.byte	0xf3
 20044 2f76 01       		.uleb128 0x1
 20045 2f77 52       		.byte	0x52
 20046 2f78 9F       		.byte	0x9f
 20047 2f79 8A190000 		.4byte	.LVL647-.Ltext0
 20048 2f7d 9F190000 		.4byte	.LVL648-1-.Ltext0
 20049 2f81 0100     		.2byte	0x1
 20050 2f83 51       		.byte	0x51
 20051 2f84 9F190000 		.4byte	.LVL648-1-.Ltext0
 20052 2f88 C0190000 		.4byte	.LFE93-.Ltext0
 20053 2f8c 0400     		.2byte	0x4
 20054 2f8e F3       		.byte	0xf3
 20055 2f8f 01       		.uleb128 0x1
 20056 2f90 52       		.byte	0x52
 20057 2f91 9F       		.byte	0x9f
 20058 2f92 00000000 		.4byte	0
 20059 2f96 00000000 		.4byte	0
 20060              	.LLST374:
 20061 2f9a B0180000 		.4byte	.LVL632-.Ltext0
 20062 2f9e CE180000 		.4byte	.LVL636-.Ltext0
 20063 2fa2 0100     		.2byte	0x1
 20064 2fa4 53       		.byte	0x53
 20065 2fa5 CE180000 		.4byte	.LVL636-.Ltext0
 20066 2fa9 D2180000 		.4byte	.LVL637-.Ltext0
 20067 2fad 0400     		.2byte	0x4
 20068 2faf F3       		.byte	0xf3
 20069 2fb0 01       		.uleb128 0x1
 20070 2fb1 53       		.byte	0x53
 20071 2fb2 9F       		.byte	0x9f
 20072 2fb3 D2180000 		.4byte	.LVL637-.Ltext0
 20073 2fb7 03190000 		.4byte	.LVL638-1-.Ltext0
 20074 2fbb 0100     		.2byte	0x1
 20075 2fbd 53       		.byte	0x53
 20076 2fbe 03190000 		.4byte	.LVL638-1-.Ltext0
 20077 2fc2 42190000 		.4byte	.LVL643-.Ltext0
 20078 2fc6 0400     		.2byte	0x4
 20079 2fc8 F3       		.byte	0xf3
 20080 2fc9 01       		.uleb128 0x1
 20081 2fca 53       		.byte	0x53
 20082 2fcb 9F       		.byte	0x9f
 20083 2fcc 42190000 		.4byte	.LVL643-.Ltext0
 20084 2fd0 57190000 		.4byte	.LVL644-1-.Ltext0
 20085 2fd4 0100     		.2byte	0x1
 20086 2fd6 53       		.byte	0x53
 20087 2fd7 57190000 		.4byte	.LVL644-1-.Ltext0
 20088 2fdb 66190000 		.4byte	.LVL645-.Ltext0
 20089 2fdf 0400     		.2byte	0x4
 20090 2fe1 F3       		.byte	0xf3
 20091 2fe2 01       		.uleb128 0x1
 20092 2fe3 53       		.byte	0x53
ARM GAS  /tmp/ccTsJCXT.s 			page 495


 20093 2fe4 9F       		.byte	0x9f
 20094 2fe5 66190000 		.4byte	.LVL645-.Ltext0
 20095 2fe9 7B190000 		.4byte	.LVL646-1-.Ltext0
 20096 2fed 0100     		.2byte	0x1
 20097 2fef 53       		.byte	0x53
 20098 2ff0 7B190000 		.4byte	.LVL646-1-.Ltext0
 20099 2ff4 8A190000 		.4byte	.LVL647-.Ltext0
 20100 2ff8 0400     		.2byte	0x4
 20101 2ffa F3       		.byte	0xf3
 20102 2ffb 01       		.uleb128 0x1
 20103 2ffc 53       		.byte	0x53
 20104 2ffd 9F       		.byte	0x9f
 20105 2ffe 8A190000 		.4byte	.LVL647-.Ltext0
 20106 3002 9F190000 		.4byte	.LVL648-1-.Ltext0
 20107 3006 0100     		.2byte	0x1
 20108 3008 53       		.byte	0x53
 20109 3009 9F190000 		.4byte	.LVL648-1-.Ltext0
 20110 300d C0190000 		.4byte	.LFE93-.Ltext0
 20111 3011 0400     		.2byte	0x4
 20112 3013 F3       		.byte	0xf3
 20113 3014 01       		.uleb128 0x1
 20114 3015 53       		.byte	0x53
 20115 3016 9F       		.byte	0x9f
 20116 3017 00000000 		.4byte	0
 20117 301b 00000000 		.4byte	0
 20118              	.LLST375:
 20119 301f 30190000 		.4byte	.LVL640-.Ltext0
 20120 3023 34190000 		.4byte	.LVL641-.Ltext0
 20121 3027 0500     		.2byte	0x5
 20122 3029 72       		.byte	0x72
 20123 302a 00       		.sleb128 0
 20124 302b 37       		.byte	0x37
 20125 302c 1A       		.byte	0x1a
 20126 302d 9F       		.byte	0x9f
 20127 302e 34190000 		.4byte	.LVL641-.Ltext0
 20128 3032 3A190000 		.4byte	.LVL642-.Ltext0
 20129 3036 0100     		.2byte	0x1
 20130 3038 52       		.byte	0x52
 20131 3039 00000000 		.4byte	0
 20132 303d 00000000 		.4byte	0
 20133              	.LLST367:
 20134 3041 18180000 		.4byte	.LFB92-.Ltext0
 20135 3045 1A180000 		.4byte	.LCFI55-.Ltext0
 20136 3049 0200     		.2byte	0x2
 20137 304b 7D       		.byte	0x7d
 20138 304c 00       		.sleb128 0
 20139 304d 1A180000 		.4byte	.LCFI55-.Ltext0
 20140 3051 AC180000 		.4byte	.LFE92-.Ltext0
 20141 3055 0200     		.2byte	0x2
 20142 3057 7D       		.byte	0x7d
 20143 3058 08       		.sleb128 8
 20144 3059 00000000 		.4byte	0
 20145 305d 00000000 		.4byte	0
 20146              	.LLST368:
 20147 3061 18180000 		.4byte	.LVL628-.Ltext0
 20148 3065 40180000 		.4byte	.LVL629-.Ltext0
 20149 3069 0100     		.2byte	0x1
ARM GAS  /tmp/ccTsJCXT.s 			page 496


 20150 306b 50       		.byte	0x50
 20151 306c 40180000 		.4byte	.LVL629-.Ltext0
 20152 3070 88180000 		.4byte	.LVL631-.Ltext0
 20153 3074 0100     		.2byte	0x1
 20154 3076 54       		.byte	0x54
 20155 3077 88180000 		.4byte	.LVL631-.Ltext0
 20156 307b AC180000 		.4byte	.LFE92-.Ltext0
 20157 307f 0100     		.2byte	0x1
 20158 3081 50       		.byte	0x50
 20159 3082 00000000 		.4byte	0
 20160 3086 00000000 		.4byte	0
 20161              	.LLST369:
 20162 308a 18180000 		.4byte	.LVL628-.Ltext0
 20163 308e 43180000 		.4byte	.LVL630-1-.Ltext0
 20164 3092 0100     		.2byte	0x1
 20165 3094 51       		.byte	0x51
 20166 3095 43180000 		.4byte	.LVL630-1-.Ltext0
 20167 3099 88180000 		.4byte	.LVL631-.Ltext0
 20168 309d 0400     		.2byte	0x4
 20169 309f F3       		.byte	0xf3
 20170 30a0 01       		.uleb128 0x1
 20171 30a1 51       		.byte	0x51
 20172 30a2 9F       		.byte	0x9f
 20173 30a3 88180000 		.4byte	.LVL631-.Ltext0
 20174 30a7 AC180000 		.4byte	.LFE92-.Ltext0
 20175 30ab 0100     		.2byte	0x1
 20176 30ad 51       		.byte	0x51
 20177 30ae 00000000 		.4byte	0
 20178 30b2 00000000 		.4byte	0
 20179              	.LLST363:
 20180 30b6 A0170000 		.4byte	.LFB91-.Ltext0
 20181 30ba A2170000 		.4byte	.LCFI54-.Ltext0
 20182 30be 0200     		.2byte	0x2
 20183 30c0 7D       		.byte	0x7d
 20184 30c1 00       		.sleb128 0
 20185 30c2 A2170000 		.4byte	.LCFI54-.Ltext0
 20186 30c6 14180000 		.4byte	.LFE91-.Ltext0
 20187 30ca 0200     		.2byte	0x2
 20188 30cc 7D       		.byte	0x7d
 20189 30cd 08       		.sleb128 8
 20190 30ce 00000000 		.4byte	0
 20191 30d2 00000000 		.4byte	0
 20192              	.LLST364:
 20193 30d6 A0170000 		.4byte	.LVL621-.Ltext0
 20194 30da C6170000 		.4byte	.LVL622-.Ltext0
 20195 30de 0100     		.2byte	0x1
 20196 30e0 50       		.byte	0x50
 20197 30e1 C6170000 		.4byte	.LVL622-.Ltext0
 20198 30e5 F2170000 		.4byte	.LVL627-.Ltext0
 20199 30e9 0100     		.2byte	0x1
 20200 30eb 54       		.byte	0x54
 20201 30ec F2170000 		.4byte	.LVL627-.Ltext0
 20202 30f0 14180000 		.4byte	.LFE91-.Ltext0
 20203 30f4 0100     		.2byte	0x1
 20204 30f6 50       		.byte	0x50
 20205 30f7 00000000 		.4byte	0
 20206 30fb 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 497


 20207              	.LLST365:
 20208 30ff A0170000 		.4byte	.LVL621-.Ltext0
 20209 3103 CB170000 		.4byte	.LVL623-1-.Ltext0
 20210 3107 0100     		.2byte	0x1
 20211 3109 51       		.byte	0x51
 20212 310a CB170000 		.4byte	.LVL623-1-.Ltext0
 20213 310e F2170000 		.4byte	.LVL627-.Ltext0
 20214 3112 0400     		.2byte	0x4
 20215 3114 F3       		.byte	0xf3
 20216 3115 01       		.uleb128 0x1
 20217 3116 51       		.byte	0x51
 20218 3117 9F       		.byte	0x9f
 20219 3118 F2170000 		.4byte	.LVL627-.Ltext0
 20220 311c 14180000 		.4byte	.LFE91-.Ltext0
 20221 3120 0100     		.2byte	0x1
 20222 3122 51       		.byte	0x51
 20223 3123 00000000 		.4byte	0
 20224 3127 00000000 		.4byte	0
 20225              	.LLST366:
 20226 312b E0170000 		.4byte	.LVL624-.Ltext0
 20227 312f E4170000 		.4byte	.LVL625-.Ltext0
 20228 3133 0500     		.2byte	0x5
 20229 3135 72       		.byte	0x72
 20230 3136 00       		.sleb128 0
 20231 3137 37       		.byte	0x37
 20232 3138 1A       		.byte	0x1a
 20233 3139 9F       		.byte	0x9f
 20234 313a E4170000 		.4byte	.LVL625-.Ltext0
 20235 313e EA170000 		.4byte	.LVL626-.Ltext0
 20236 3142 0100     		.2byte	0x1
 20237 3144 52       		.byte	0x52
 20238 3145 00000000 		.4byte	0
 20239 3149 00000000 		.4byte	0
 20240              	.LLST360:
 20241 314d 44170000 		.4byte	.LFB90-.Ltext0
 20242 3151 46170000 		.4byte	.LCFI53-.Ltext0
 20243 3155 0200     		.2byte	0x2
 20244 3157 7D       		.byte	0x7d
 20245 3158 00       		.sleb128 0
 20246 3159 46170000 		.4byte	.LCFI53-.Ltext0
 20247 315d A0170000 		.4byte	.LFE90-.Ltext0
 20248 3161 0200     		.2byte	0x2
 20249 3163 7D       		.byte	0x7d
 20250 3164 08       		.sleb128 8
 20251 3165 00000000 		.4byte	0
 20252 3169 00000000 		.4byte	0
 20253              	.LLST361:
 20254 316d 44170000 		.4byte	.LVL617-.Ltext0
 20255 3171 4C170000 		.4byte	.LVL618-.Ltext0
 20256 3175 0100     		.2byte	0x1
 20257 3177 50       		.byte	0x50
 20258 3178 4C170000 		.4byte	.LVL618-.Ltext0
 20259 317c 9A170000 		.4byte	.LVL620-.Ltext0
 20260 3180 0100     		.2byte	0x1
 20261 3182 54       		.byte	0x54
 20262 3183 9A170000 		.4byte	.LVL620-.Ltext0
 20263 3187 A0170000 		.4byte	.LFE90-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 498


 20264 318b 0400     		.2byte	0x4
 20265 318d F3       		.byte	0xf3
 20266 318e 01       		.uleb128 0x1
 20267 318f 50       		.byte	0x50
 20268 3190 9F       		.byte	0x9f
 20269 3191 00000000 		.4byte	0
 20270 3195 00000000 		.4byte	0
 20271              	.LLST362:
 20272 3199 44170000 		.4byte	.LVL617-.Ltext0
 20273 319d 4F170000 		.4byte	.LVL619-1-.Ltext0
 20274 31a1 0100     		.2byte	0x1
 20275 31a3 51       		.byte	0x51
 20276 31a4 4F170000 		.4byte	.LVL619-1-.Ltext0
 20277 31a8 A0170000 		.4byte	.LFE90-.Ltext0
 20278 31ac 0400     		.2byte	0x4
 20279 31ae F3       		.byte	0xf3
 20280 31af 01       		.uleb128 0x1
 20281 31b0 51       		.byte	0x51
 20282 31b1 9F       		.byte	0x9f
 20283 31b2 00000000 		.4byte	0
 20284 31b6 00000000 		.4byte	0
 20285              	.LLST356:
 20286 31ba 08170000 		.4byte	.LFB89-.Ltext0
 20287 31be 0A170000 		.4byte	.LCFI52-.Ltext0
 20288 31c2 0200     		.2byte	0x2
 20289 31c4 7D       		.byte	0x7d
 20290 31c5 00       		.sleb128 0
 20291 31c6 0A170000 		.4byte	.LCFI52-.Ltext0
 20292 31ca 40170000 		.4byte	.LFE89-.Ltext0
 20293 31ce 0200     		.2byte	0x2
 20294 31d0 7D       		.byte	0x7d
 20295 31d1 08       		.sleb128 8
 20296 31d2 00000000 		.4byte	0
 20297 31d6 00000000 		.4byte	0
 20298              	.LLST357:
 20299 31da 08170000 		.4byte	.LVL610-.Ltext0
 20300 31de 10170000 		.4byte	.LVL611-.Ltext0
 20301 31e2 0100     		.2byte	0x1
 20302 31e4 50       		.byte	0x50
 20303 31e5 10170000 		.4byte	.LVL611-.Ltext0
 20304 31e9 3A170000 		.4byte	.LVL616-.Ltext0
 20305 31ed 0100     		.2byte	0x1
 20306 31ef 54       		.byte	0x54
 20307 31f0 3A170000 		.4byte	.LVL616-.Ltext0
 20308 31f4 40170000 		.4byte	.LFE89-.Ltext0
 20309 31f8 0400     		.2byte	0x4
 20310 31fa F3       		.byte	0xf3
 20311 31fb 01       		.uleb128 0x1
 20312 31fc 50       		.byte	0x50
 20313 31fd 9F       		.byte	0x9f
 20314 31fe 00000000 		.4byte	0
 20315 3202 00000000 		.4byte	0
 20316              	.LLST358:
 20317 3206 08170000 		.4byte	.LVL610-.Ltext0
 20318 320a 13170000 		.4byte	.LVL612-1-.Ltext0
 20319 320e 0100     		.2byte	0x1
 20320 3210 51       		.byte	0x51
ARM GAS  /tmp/ccTsJCXT.s 			page 499


 20321 3211 13170000 		.4byte	.LVL612-1-.Ltext0
 20322 3215 40170000 		.4byte	.LFE89-.Ltext0
 20323 3219 0400     		.2byte	0x4
 20324 321b F3       		.byte	0xf3
 20325 321c 01       		.uleb128 0x1
 20326 321d 51       		.byte	0x51
 20327 321e 9F       		.byte	0x9f
 20328 321f 00000000 		.4byte	0
 20329 3223 00000000 		.4byte	0
 20330              	.LLST359:
 20331 3227 28170000 		.4byte	.LVL613-.Ltext0
 20332 322b 2C170000 		.4byte	.LVL614-.Ltext0
 20333 322f 0500     		.2byte	0x5
 20334 3231 72       		.byte	0x72
 20335 3232 00       		.sleb128 0
 20336 3233 37       		.byte	0x37
 20337 3234 1A       		.byte	0x1a
 20338 3235 9F       		.byte	0x9f
 20339 3236 2C170000 		.4byte	.LVL614-.Ltext0
 20340 323a 32170000 		.4byte	.LVL615-.Ltext0
 20341 323e 0100     		.2byte	0x1
 20342 3240 52       		.byte	0x52
 20343 3241 00000000 		.4byte	0
 20344 3245 00000000 		.4byte	0
 20345              	.LLST26:
 20346 3249 AA020000 		.4byte	.LFB86-.Ltext0
 20347 324d B2020000 		.4byte	.LCFI7-.Ltext0
 20348 3251 0200     		.2byte	0x2
 20349 3253 7D       		.byte	0x7d
 20350 3254 00       		.sleb128 0
 20351 3255 B2020000 		.4byte	.LCFI7-.Ltext0
 20352 3259 E4020000 		.4byte	.LFE86-.Ltext0
 20353 325d 0200     		.2byte	0x2
 20354 325f 7D       		.byte	0x7d
 20355 3260 08       		.sleb128 8
 20356 3261 00000000 		.4byte	0
 20357 3265 00000000 		.4byte	0
 20358              	.LLST27:
 20359 3269 AA020000 		.4byte	.LVL78-.Ltext0
 20360 326d D4020000 		.4byte	.LVL79-.Ltext0
 20361 3271 0100     		.2byte	0x1
 20362 3273 50       		.byte	0x50
 20363 3274 D4020000 		.4byte	.LVL79-.Ltext0
 20364 3278 E4020000 		.4byte	.LFE86-.Ltext0
 20365 327c 0100     		.2byte	0x1
 20366 327e 54       		.byte	0x54
 20367 327f 00000000 		.4byte	0
 20368 3283 00000000 		.4byte	0
 20369              	.LLST229:
 20370 3287 440E0000 		.4byte	.LFB85-.Ltext0
 20371 328b 460E0000 		.4byte	.LCFI31-.Ltext0
 20372 328f 0200     		.2byte	0x2
 20373 3291 7D       		.byte	0x7d
 20374 3292 00       		.sleb128 0
 20375 3293 460E0000 		.4byte	.LCFI31-.Ltext0
 20376 3297 780E0000 		.4byte	.LFE85-.Ltext0
 20377 329b 0200     		.2byte	0x2
ARM GAS  /tmp/ccTsJCXT.s 			page 500


 20378 329d 7D       		.byte	0x7d
 20379 329e 08       		.sleb128 8
 20380 329f 00000000 		.4byte	0
 20381 32a3 00000000 		.4byte	0
 20382              	.LLST230:
 20383 32a7 440E0000 		.4byte	.LVL320-.Ltext0
 20384 32ab 5B0E0000 		.4byte	.LVL321-1-.Ltext0
 20385 32af 0100     		.2byte	0x1
 20386 32b1 50       		.byte	0x50
 20387 32b2 5B0E0000 		.4byte	.LVL321-1-.Ltext0
 20388 32b6 740E0000 		.4byte	.LVL323-.Ltext0
 20389 32ba 0100     		.2byte	0x1
 20390 32bc 54       		.byte	0x54
 20391 32bd 740E0000 		.4byte	.LVL323-.Ltext0
 20392 32c1 760E0000 		.4byte	.LVL324-.Ltext0
 20393 32c5 0100     		.2byte	0x1
 20394 32c7 50       		.byte	0x50
 20395 32c8 760E0000 		.4byte	.LVL324-.Ltext0
 20396 32cc 780E0000 		.4byte	.LFE85-.Ltext0
 20397 32d0 0100     		.2byte	0x1
 20398 32d2 54       		.byte	0x54
 20399 32d3 00000000 		.4byte	0
 20400 32d7 00000000 		.4byte	0
 20401              	.LLST353:
 20402 32db B4160000 		.4byte	.LFB80-.Ltext0
 20403 32df B6160000 		.4byte	.LCFI51-.Ltext0
 20404 32e3 0200     		.2byte	0x2
 20405 32e5 7D       		.byte	0x7d
 20406 32e6 00       		.sleb128 0
 20407 32e7 B6160000 		.4byte	.LCFI51-.Ltext0
 20408 32eb 08170000 		.4byte	.LFE80-.Ltext0
 20409 32ef 0200     		.2byte	0x2
 20410 32f1 7D       		.byte	0x7d
 20411 32f2 08       		.sleb128 8
 20412 32f3 00000000 		.4byte	0
 20413 32f7 00000000 		.4byte	0
 20414              	.LLST354:
 20415 32fb B4160000 		.4byte	.LVL606-.Ltext0
 20416 32ff BC160000 		.4byte	.LVL607-.Ltext0
 20417 3303 0100     		.2byte	0x1
 20418 3305 50       		.byte	0x50
 20419 3306 BC160000 		.4byte	.LVL607-.Ltext0
 20420 330a 04170000 		.4byte	.LVL609-.Ltext0
 20421 330e 0100     		.2byte	0x1
 20422 3310 54       		.byte	0x54
 20423 3311 04170000 		.4byte	.LVL609-.Ltext0
 20424 3315 08170000 		.4byte	.LFE80-.Ltext0
 20425 3319 0400     		.2byte	0x4
 20426 331b F3       		.byte	0xf3
 20427 331c 01       		.uleb128 0x1
 20428 331d 50       		.byte	0x50
 20429 331e 9F       		.byte	0x9f
 20430 331f 00000000 		.4byte	0
 20431 3323 00000000 		.4byte	0
 20432              	.LLST355:
 20433 3327 B4160000 		.4byte	.LVL606-.Ltext0
 20434 332b BF160000 		.4byte	.LVL608-1-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 501


 20435 332f 0100     		.2byte	0x1
 20436 3331 51       		.byte	0x51
 20437 3332 BF160000 		.4byte	.LVL608-1-.Ltext0
 20438 3336 08170000 		.4byte	.LFE80-.Ltext0
 20439 333a 0400     		.2byte	0x4
 20440 333c F3       		.byte	0xf3
 20441 333d 01       		.uleb128 0x1
 20442 333e 51       		.byte	0x51
 20443 333f 9F       		.byte	0x9f
 20444 3340 00000000 		.4byte	0
 20445 3344 00000000 		.4byte	0
 20446              	.LLST24:
 20447 3348 6C020000 		.4byte	.LFB76-.Ltext0
 20448 334c 74020000 		.4byte	.LCFI6-.Ltext0
 20449 3350 0200     		.2byte	0x2
 20450 3352 7D       		.byte	0x7d
 20451 3353 00       		.sleb128 0
 20452 3354 74020000 		.4byte	.LCFI6-.Ltext0
 20453 3358 A6020000 		.4byte	.LFE76-.Ltext0
 20454 335c 0200     		.2byte	0x2
 20455 335e 7D       		.byte	0x7d
 20456 335f 08       		.sleb128 8
 20457 3360 00000000 		.4byte	0
 20458 3364 00000000 		.4byte	0
 20459              	.LLST25:
 20460 3368 6C020000 		.4byte	.LVL75-.Ltext0
 20461 336c 96020000 		.4byte	.LVL76-.Ltext0
 20462 3370 0100     		.2byte	0x1
 20463 3372 50       		.byte	0x50
 20464 3373 96020000 		.4byte	.LVL76-.Ltext0
 20465 3377 A6020000 		.4byte	.LFE76-.Ltext0
 20466 337b 0100     		.2byte	0x1
 20467 337d 54       		.byte	0x54
 20468 337e 00000000 		.4byte	0
 20469 3382 00000000 		.4byte	0
 20470              	.LLST227:
 20471 3386 100E0000 		.4byte	.LFB75-.Ltext0
 20472 338a 120E0000 		.4byte	.LCFI30-.Ltext0
 20473 338e 0200     		.2byte	0x2
 20474 3390 7D       		.byte	0x7d
 20475 3391 00       		.sleb128 0
 20476 3392 120E0000 		.4byte	.LCFI30-.Ltext0
 20477 3396 440E0000 		.4byte	.LFE75-.Ltext0
 20478 339a 0200     		.2byte	0x2
 20479 339c 7D       		.byte	0x7d
 20480 339d 08       		.sleb128 8
 20481 339e 00000000 		.4byte	0
 20482 33a2 00000000 		.4byte	0
 20483              	.LLST228:
 20484 33a6 100E0000 		.4byte	.LVL315-.Ltext0
 20485 33aa 270E0000 		.4byte	.LVL316-1-.Ltext0
 20486 33ae 0100     		.2byte	0x1
 20487 33b0 50       		.byte	0x50
 20488 33b1 270E0000 		.4byte	.LVL316-1-.Ltext0
 20489 33b5 400E0000 		.4byte	.LVL318-.Ltext0
 20490 33b9 0100     		.2byte	0x1
 20491 33bb 54       		.byte	0x54
ARM GAS  /tmp/ccTsJCXT.s 			page 502


 20492 33bc 400E0000 		.4byte	.LVL318-.Ltext0
 20493 33c0 420E0000 		.4byte	.LVL319-.Ltext0
 20494 33c4 0100     		.2byte	0x1
 20495 33c6 50       		.byte	0x50
 20496 33c7 420E0000 		.4byte	.LVL319-.Ltext0
 20497 33cb 440E0000 		.4byte	.LFE75-.Ltext0
 20498 33cf 0100     		.2byte	0x1
 20499 33d1 54       		.byte	0x54
 20500 33d2 00000000 		.4byte	0
 20501 33d6 00000000 		.4byte	0
 20502              	.LLST22:
 20503 33da 2C020000 		.4byte	.LFB74-.Ltext0
 20504 33de 30020000 		.4byte	.LCFI5-.Ltext0
 20505 33e2 0200     		.2byte	0x2
 20506 33e4 7D       		.byte	0x7d
 20507 33e5 00       		.sleb128 0
 20508 33e6 30020000 		.4byte	.LCFI5-.Ltext0
 20509 33ea 68020000 		.4byte	.LFE74-.Ltext0
 20510 33ee 0200     		.2byte	0x2
 20511 33f0 7D       		.byte	0x7d
 20512 33f1 08       		.sleb128 8
 20513 33f2 00000000 		.4byte	0
 20514 33f6 00000000 		.4byte	0
 20515              	.LLST23:
 20516 33fa 2C020000 		.4byte	.LVL72-.Ltext0
 20517 33fe 3C020000 		.4byte	.LVL73-.Ltext0
 20518 3402 0100     		.2byte	0x1
 20519 3404 50       		.byte	0x50
 20520 3405 3C020000 		.4byte	.LVL73-.Ltext0
 20521 3409 68020000 		.4byte	.LFE74-.Ltext0
 20522 340d 0100     		.2byte	0x1
 20523 340f 54       		.byte	0x54
 20524 3410 00000000 		.4byte	0
 20525 3414 00000000 		.4byte	0
 20526              	.LLST17:
 20527 3418 C2010000 		.4byte	.LFB73-.Ltext0
 20528 341c C4010000 		.4byte	.LCFI4-.Ltext0
 20529 3420 0200     		.2byte	0x2
 20530 3422 7D       		.byte	0x7d
 20531 3423 00       		.sleb128 0
 20532 3424 C4010000 		.4byte	.LCFI4-.Ltext0
 20533 3428 2C020000 		.4byte	.LFE73-.Ltext0
 20534 342c 0200     		.2byte	0x2
 20535 342e 7D       		.byte	0x7d
 20536 342f 08       		.sleb128 8
 20537 3430 00000000 		.4byte	0
 20538 3434 00000000 		.4byte	0
 20539              	.LLST18:
 20540 3438 C2010000 		.4byte	.LVL62-.Ltext0
 20541 343c CA010000 		.4byte	.LVL63-.Ltext0
 20542 3440 0100     		.2byte	0x1
 20543 3442 50       		.byte	0x50
 20544 3443 CA010000 		.4byte	.LVL63-.Ltext0
 20545 3447 20020000 		.4byte	.LVL71-.Ltext0
 20546 344b 0100     		.2byte	0x1
 20547 344d 54       		.byte	0x54
 20548 344e 20020000 		.4byte	.LVL71-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 503


 20549 3452 2C020000 		.4byte	.LFE73-.Ltext0
 20550 3456 0400     		.2byte	0x4
 20551 3458 F3       		.byte	0xf3
 20552 3459 01       		.uleb128 0x1
 20553 345a 50       		.byte	0x50
 20554 345b 9F       		.byte	0x9f
 20555 345c 00000000 		.4byte	0
 20556 3460 00000000 		.4byte	0
 20557              	.LLST19:
 20558 3464 C2010000 		.4byte	.LVL62-.Ltext0
 20559 3468 DE010000 		.4byte	.LVL65-.Ltext0
 20560 346c 0100     		.2byte	0x1
 20561 346e 51       		.byte	0x51
 20562 346f DE010000 		.4byte	.LVL65-.Ltext0
 20563 3473 E2010000 		.4byte	.LVL66-.Ltext0
 20564 3477 0400     		.2byte	0x4
 20565 3479 F3       		.byte	0xf3
 20566 347a 01       		.uleb128 0x1
 20567 347b 51       		.byte	0x51
 20568 347c 9F       		.byte	0x9f
 20569 347d E2010000 		.4byte	.LVL66-.Ltext0
 20570 3481 FD010000 		.4byte	.LVL67-1-.Ltext0
 20571 3485 0100     		.2byte	0x1
 20572 3487 51       		.byte	0x51
 20573 3488 FD010000 		.4byte	.LVL67-1-.Ltext0
 20574 348c 2C020000 		.4byte	.LFE73-.Ltext0
 20575 3490 0400     		.2byte	0x4
 20576 3492 F3       		.byte	0xf3
 20577 3493 01       		.uleb128 0x1
 20578 3494 51       		.byte	0x51
 20579 3495 9F       		.byte	0x9f
 20580 3496 00000000 		.4byte	0
 20581 349a 00000000 		.4byte	0
 20582              	.LLST20:
 20583 349e C2010000 		.4byte	.LVL62-.Ltext0
 20584 34a2 D6010000 		.4byte	.LVL64-.Ltext0
 20585 34a6 0100     		.2byte	0x1
 20586 34a8 52       		.byte	0x52
 20587 34a9 D6010000 		.4byte	.LVL64-.Ltext0
 20588 34ad 2C020000 		.4byte	.LFE73-.Ltext0
 20589 34b1 0400     		.2byte	0x4
 20590 34b3 F3       		.byte	0xf3
 20591 34b4 01       		.uleb128 0x1
 20592 34b5 52       		.byte	0x52
 20593 34b6 9F       		.byte	0x9f
 20594 34b7 00000000 		.4byte	0
 20595 34bb 00000000 		.4byte	0
 20596              	.LLST21:
 20597 34bf 0E020000 		.4byte	.LVL68-.Ltext0
 20598 34c3 12020000 		.4byte	.LVL69-.Ltext0
 20599 34c7 0500     		.2byte	0x5
 20600 34c9 72       		.byte	0x72
 20601 34ca 00       		.sleb128 0
 20602 34cb 37       		.byte	0x37
 20603 34cc 1A       		.byte	0x1a
 20604 34cd 9F       		.byte	0x9f
 20605 34ce 12020000 		.4byte	.LVL69-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 504


 20606 34d2 18020000 		.4byte	.LVL70-.Ltext0
 20607 34d6 0100     		.2byte	0x1
 20608 34d8 52       		.byte	0x52
 20609 34d9 00000000 		.4byte	0
 20610 34dd 00000000 		.4byte	0
 20611              	.LLST16:
 20612 34e1 98010000 		.4byte	.LVL60-.Ltext0
 20613 34e5 C0010000 		.4byte	.LVL61-.Ltext0
 20614 34e9 0100     		.2byte	0x1
 20615 34eb 50       		.byte	0x50
 20616 34ec C0010000 		.4byte	.LVL61-.Ltext0
 20617 34f0 C2010000 		.4byte	.LFE72-.Ltext0
 20618 34f4 0400     		.2byte	0x4
 20619 34f6 F3       		.byte	0xf3
 20620 34f7 01       		.uleb128 0x1
 20621 34f8 50       		.byte	0x50
 20622 34f9 9F       		.byte	0x9f
 20623 34fa 00000000 		.4byte	0
 20624 34fe 00000000 		.4byte	0
 20625              	.LLST14:
 20626 3502 78010000 		.4byte	.LVL55-.Ltext0
 20627 3506 7C010000 		.4byte	.LVL56-.Ltext0
 20628 350a 0100     		.2byte	0x1
 20629 350c 50       		.byte	0x50
 20630 350d 7C010000 		.4byte	.LVL56-.Ltext0
 20631 3511 98010000 		.4byte	.LFE71-.Ltext0
 20632 3515 0400     		.2byte	0x4
 20633 3517 F3       		.byte	0xf3
 20634 3518 01       		.uleb128 0x1
 20635 3519 50       		.byte	0x50
 20636 351a 9F       		.byte	0x9f
 20637 351b 00000000 		.4byte	0
 20638 351f 00000000 		.4byte	0
 20639              	.LLST15:
 20640 3523 86010000 		.4byte	.LVL57-.Ltext0
 20641 3527 8A010000 		.4byte	.LVL58-.Ltext0
 20642 352b 0500     		.2byte	0x5
 20643 352d 72       		.byte	0x72
 20644 352e 00       		.sleb128 0
 20645 352f 37       		.byte	0x37
 20646 3530 1A       		.byte	0x1a
 20647 3531 9F       		.byte	0x9f
 20648 3532 8A010000 		.4byte	.LVL58-.Ltext0
 20649 3536 90010000 		.4byte	.LVL59-.Ltext0
 20650 353a 0100     		.2byte	0x1
 20651 353c 52       		.byte	0x52
 20652 353d 00000000 		.4byte	0
 20653 3541 00000000 		.4byte	0
 20654              	.LLST13:
 20655 3545 4A010000 		.4byte	.LVL53-.Ltext0
 20656 3549 76010000 		.4byte	.LVL54-.Ltext0
 20657 354d 0100     		.2byte	0x1
 20658 354f 50       		.byte	0x50
 20659 3550 76010000 		.4byte	.LVL54-.Ltext0
 20660 3554 78010000 		.4byte	.LFE70-.Ltext0
 20661 3558 0400     		.2byte	0x4
 20662 355a F3       		.byte	0xf3
ARM GAS  /tmp/ccTsJCXT.s 			page 505


 20663 355b 01       		.uleb128 0x1
 20664 355c 50       		.byte	0x50
 20665 355d 9F       		.byte	0x9f
 20666 355e 00000000 		.4byte	0
 20667 3562 00000000 		.4byte	0
 20668              	.LLST11:
 20669 3566 26010000 		.4byte	.LVL48-.Ltext0
 20670 356a 48010000 		.4byte	.LVL52-.Ltext0
 20671 356e 0100     		.2byte	0x1
 20672 3570 50       		.byte	0x50
 20673 3571 48010000 		.4byte	.LVL52-.Ltext0
 20674 3575 4A010000 		.4byte	.LFE69-.Ltext0
 20675 3579 0400     		.2byte	0x4
 20676 357b F3       		.byte	0xf3
 20677 357c 01       		.uleb128 0x1
 20678 357d 50       		.byte	0x50
 20679 357e 9F       		.byte	0x9f
 20680 357f 00000000 		.4byte	0
 20681 3583 00000000 		.4byte	0
 20682              	.LLST12:
 20683 3587 30010000 		.4byte	.LVL49-.Ltext0
 20684 358b 34010000 		.4byte	.LVL50-.Ltext0
 20685 358f 0500     		.2byte	0x5
 20686 3591 72       		.byte	0x72
 20687 3592 00       		.sleb128 0
 20688 3593 37       		.byte	0x37
 20689 3594 1A       		.byte	0x1a
 20690 3595 9F       		.byte	0x9f
 20691 3596 34010000 		.4byte	.LVL50-.Ltext0
 20692 359a 3A010000 		.4byte	.LVL51-.Ltext0
 20693 359e 0100     		.2byte	0x1
 20694 35a0 52       		.byte	0x52
 20695 35a1 00000000 		.4byte	0
 20696 35a5 00000000 		.4byte	0
 20697              	.LLST9:
 20698 35a9 EC000000 		.4byte	.LFB66-.Ltext0
 20699 35ad F4000000 		.4byte	.LCFI3-.Ltext0
 20700 35b1 0200     		.2byte	0x2
 20701 35b3 7D       		.byte	0x7d
 20702 35b4 00       		.sleb128 0
 20703 35b5 F4000000 		.4byte	.LCFI3-.Ltext0
 20704 35b9 26010000 		.4byte	.LFE66-.Ltext0
 20705 35bd 0200     		.2byte	0x2
 20706 35bf 7D       		.byte	0x7d
 20707 35c0 08       		.sleb128 8
 20708 35c1 00000000 		.4byte	0
 20709 35c5 00000000 		.4byte	0
 20710              	.LLST10:
 20711 35c9 EC000000 		.4byte	.LVL45-.Ltext0
 20712 35cd 16010000 		.4byte	.LVL46-.Ltext0
 20713 35d1 0100     		.2byte	0x1
 20714 35d3 50       		.byte	0x50
 20715 35d4 16010000 		.4byte	.LVL46-.Ltext0
 20716 35d8 26010000 		.4byte	.LFE66-.Ltext0
 20717 35dc 0100     		.2byte	0x1
 20718 35de 54       		.byte	0x54
 20719 35df 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 506


 20720 35e3 00000000 		.4byte	0
 20721              	.LLST225:
 20722 35e7 DC0D0000 		.4byte	.LFB65-.Ltext0
 20723 35eb DE0D0000 		.4byte	.LCFI29-.Ltext0
 20724 35ef 0200     		.2byte	0x2
 20725 35f1 7D       		.byte	0x7d
 20726 35f2 00       		.sleb128 0
 20727 35f3 DE0D0000 		.4byte	.LCFI29-.Ltext0
 20728 35f7 100E0000 		.4byte	.LFE65-.Ltext0
 20729 35fb 0200     		.2byte	0x2
 20730 35fd 7D       		.byte	0x7d
 20731 35fe 08       		.sleb128 8
 20732 35ff 00000000 		.4byte	0
 20733 3603 00000000 		.4byte	0
 20734              	.LLST226:
 20735 3607 DC0D0000 		.4byte	.LVL310-.Ltext0
 20736 360b F30D0000 		.4byte	.LVL311-1-.Ltext0
 20737 360f 0100     		.2byte	0x1
 20738 3611 50       		.byte	0x50
 20739 3612 F30D0000 		.4byte	.LVL311-1-.Ltext0
 20740 3616 0C0E0000 		.4byte	.LVL313-.Ltext0
 20741 361a 0100     		.2byte	0x1
 20742 361c 54       		.byte	0x54
 20743 361d 0C0E0000 		.4byte	.LVL313-.Ltext0
 20744 3621 0E0E0000 		.4byte	.LVL314-.Ltext0
 20745 3625 0100     		.2byte	0x1
 20746 3627 50       		.byte	0x50
 20747 3628 0E0E0000 		.4byte	.LVL314-.Ltext0
 20748 362c 100E0000 		.4byte	.LFE65-.Ltext0
 20749 3630 0100     		.2byte	0x1
 20750 3632 54       		.byte	0x54
 20751 3633 00000000 		.4byte	0
 20752 3637 00000000 		.4byte	0
 20753              	.LLST222:
 20754 363b 740D0000 		.4byte	.LVL298-.Ltext0
 20755 363f 780D0000 		.4byte	.LVL299-.Ltext0
 20756 3643 0100     		.2byte	0x1
 20757 3645 50       		.byte	0x50
 20758 3646 780D0000 		.4byte	.LVL299-.Ltext0
 20759 364a 7A0D0000 		.4byte	.LFE154-.Ltext0
 20760 364e 0400     		.2byte	0x4
 20761 3650 F3       		.byte	0xf3
 20762 3651 01       		.uleb128 0x1
 20763 3652 50       		.byte	0x50
 20764 3653 9F       		.byte	0x9f
 20765 3654 00000000 		.4byte	0
 20766 3658 00000000 		.4byte	0
 20767              	.LLST349:
 20768 365c 98160000 		.4byte	.LFB178-.Ltext0
 20769 3660 9A160000 		.4byte	.LCFI50-.Ltext0
 20770 3664 0200     		.2byte	0x2
 20771 3666 7D       		.byte	0x7d
 20772 3667 00       		.sleb128 0
 20773 3668 9A160000 		.4byte	.LCFI50-.Ltext0
 20774 366c B4160000 		.4byte	.LFE178-.Ltext0
 20775 3670 0200     		.2byte	0x2
 20776 3672 7D       		.byte	0x7d
ARM GAS  /tmp/ccTsJCXT.s 			page 507


 20777 3673 08       		.sleb128 8
 20778 3674 00000000 		.4byte	0
 20779 3678 00000000 		.4byte	0
 20780              	.LLST350:
 20781 367c 98160000 		.4byte	.LVL602-.Ltext0
 20782 3680 A2160000 		.4byte	.LVL603-.Ltext0
 20783 3684 0100     		.2byte	0x1
 20784 3686 51       		.byte	0x51
 20785 3687 A2160000 		.4byte	.LVL603-.Ltext0
 20786 368b B4160000 		.4byte	.LFE178-.Ltext0
 20787 368f 0400     		.2byte	0x4
 20788 3691 F3       		.byte	0xf3
 20789 3692 01       		.uleb128 0x1
 20790 3693 51       		.byte	0x51
 20791 3694 9F       		.byte	0x9f
 20792 3695 00000000 		.4byte	0
 20793 3699 00000000 		.4byte	0
 20794              	.LLST351:
 20795 369d 98160000 		.4byte	.LVL602-.Ltext0
 20796 36a1 AE160000 		.4byte	.LVL605-.Ltext0
 20797 36a5 0100     		.2byte	0x1
 20798 36a7 52       		.byte	0x52
 20799 36a8 AE160000 		.4byte	.LVL605-.Ltext0
 20800 36ac B4160000 		.4byte	.LFE178-.Ltext0
 20801 36b0 0400     		.2byte	0x4
 20802 36b2 F3       		.byte	0xf3
 20803 36b3 01       		.uleb128 0x1
 20804 36b4 52       		.byte	0x52
 20805 36b5 9F       		.byte	0x9f
 20806 36b6 00000000 		.4byte	0
 20807 36ba 00000000 		.4byte	0
 20808              	.LLST352:
 20809 36be A2160000 		.4byte	.LVL603-.Ltext0
 20810 36c2 A4160000 		.4byte	.LVL604-.Ltext0
 20811 36c6 0500     		.2byte	0x5
 20812 36c8 31       		.byte	0x31
 20813 36c9 71       		.byte	0x71
 20814 36ca 00       		.sleb128 0
 20815 36cb 24       		.byte	0x24
 20816 36cc 9F       		.byte	0x9f
 20817 36cd A4160000 		.4byte	.LVL604-.Ltext0
 20818 36d1 B4160000 		.4byte	.LFE178-.Ltext0
 20819 36d5 0100     		.2byte	0x1
 20820 36d7 54       		.byte	0x54
 20821 36d8 00000000 		.4byte	0
 20822 36dc 00000000 		.4byte	0
 20823              		.section	.debug_aranges,"",%progbits
 20824 0000 1C000000 		.4byte	0x1c
 20825 0004 0200     		.2byte	0x2
 20826 0006 00000000 		.4byte	.Ldebug_info0
 20827 000a 04       		.byte	0x4
 20828 000b 00       		.byte	0
 20829 000c 0000     		.2byte	0
 20830 000e 0000     		.2byte	0
 20831 0010 00000000 		.4byte	.Ltext0
 20832 0014 1C1D0000 		.4byte	.Letext0-.Ltext0
 20833 0018 00000000 		.4byte	0
ARM GAS  /tmp/ccTsJCXT.s 			page 508


 20834 001c 00000000 		.4byte	0
 20835              		.section	.debug_ranges,"",%progbits
 20836              	.Ldebug_ranges0:
 20837 0000 06050000 		.4byte	.LBB84-.Ltext0
 20838 0004 16050000 		.4byte	.LBE84-.Ltext0
 20839 0008 24050000 		.4byte	.LBB89-.Ltext0
 20840 000c 26050000 		.4byte	.LBE89-.Ltext0
 20841 0010 00000000 		.4byte	0
 20842 0014 00000000 		.4byte	0
 20843 0018 46050000 		.4byte	.LBB92-.Ltext0
 20844 001c 4E050000 		.4byte	.LBE92-.Ltext0
 20845 0020 54050000 		.4byte	.LBB97-.Ltext0
 20846 0024 5A050000 		.4byte	.LBE97-.Ltext0
 20847 0028 00000000 		.4byte	0
 20848 002c 00000000 		.4byte	0
 20849 0030 EA050000 		.4byte	.LBB106-.Ltext0
 20850 0034 EC050000 		.4byte	.LBE106-.Ltext0
 20851 0038 EE050000 		.4byte	.LBB109-.Ltext0
 20852 003c F8050000 		.4byte	.LBE109-.Ltext0
 20853 0040 00000000 		.4byte	0
 20854 0044 00000000 		.4byte	0
 20855 0048 D6060000 		.4byte	.LBB118-.Ltext0
 20856 004c DC060000 		.4byte	.LBE118-.Ltext0
 20857 0050 0C070000 		.4byte	.LBB121-.Ltext0
 20858 0054 1C070000 		.4byte	.LBE121-.Ltext0
 20859 0058 00000000 		.4byte	0
 20860 005c 00000000 		.4byte	0
 20861 0060 B0070000 		.4byte	.LBB126-.Ltext0
 20862 0064 B2070000 		.4byte	.LBE126-.Ltext0
 20863 0068 B6070000 		.4byte	.LBB130-.Ltext0
 20864 006c BE070000 		.4byte	.LBE130-.Ltext0
 20865 0070 C0070000 		.4byte	.LBB131-.Ltext0
 20866 0074 C2070000 		.4byte	.LBE131-.Ltext0
 20867 0078 00000000 		.4byte	0
 20868 007c 00000000 		.4byte	0
 20869 0080 10080000 		.4byte	.LBB134-.Ltext0
 20870 0084 18080000 		.4byte	.LBE134-.Ltext0
 20871 0088 1A080000 		.4byte	.LBB137-.Ltext0
 20872 008c 1C080000 		.4byte	.LBE137-.Ltext0
 20873 0090 00000000 		.4byte	0
 20874 0094 00000000 		.4byte	0
 20875 0098 E2110000 		.4byte	.LBB148-.Ltext0
 20876 009c E4110000 		.4byte	.LBE148-.Ltext0
 20877 00a0 E6110000 		.4byte	.LBB151-.Ltext0
 20878 00a4 10120000 		.4byte	.LBE151-.Ltext0
 20879 00a8 00000000 		.4byte	0
 20880 00ac 00000000 		.4byte	0
 20881 00b0 7E140000 		.4byte	.LBB172-.Ltext0
 20882 00b4 8C140000 		.4byte	.LBE172-.Ltext0
 20883 00b8 C2140000 		.4byte	.LBB179-.Ltext0
 20884 00bc C6140000 		.4byte	.LBE179-.Ltext0
 20885 00c0 00000000 		.4byte	0
 20886 00c4 00000000 		.4byte	0
 20887 00c8 AC150000 		.4byte	.LBB192-.Ltext0
 20888 00cc B2150000 		.4byte	.LBE192-.Ltext0
 20889 00d0 B6150000 		.4byte	.LBB195-.Ltext0
 20890 00d4 D2150000 		.4byte	.LBE195-.Ltext0
ARM GAS  /tmp/ccTsJCXT.s 			page 509


 20891 00d8 00000000 		.4byte	0
 20892 00dc 00000000 		.4byte	0
 20893              		.section	.debug_line,"",%progbits
 20894              	.Ldebug_line0:
 20895 0000 CF0C0000 		.section	.debug_str,"MS",%progbits,1
 20895      02006601 
 20895      00000201 
 20895      FB0E0D00 
 20895      01010101 
 20896              	.LASF292:
 20897 0000 48414C5F 		.ascii	"HAL_TIM_Base_Start_IT\000"
 20897      54494D5F 
 20897      42617365 
 20897      5F537461 
 20897      72745F49 
 20898              	.LASF238:
 20899 0016 70446174 		.ascii	"pData1\000"
 20899      613100
 20900              	.LASF239:
 20901 001d 70446174 		.ascii	"pData2\000"
 20901      613200
 20902              	.LASF52:
 20903 0024 44697265 		.ascii	"Direction\000"
 20903      6374696F 
 20903      6E00
 20904              	.LASF291:
 20905 002e 48414C5F 		.ascii	"HAL_TIM_Base_Stop_IT\000"
 20905      54494D5F 
 20905      42617365 
 20905      5F53746F 
 20905      705F4954 
 20906              	.LASF17:
 20907 0043 73697A65 		.ascii	"sizetype\000"
 20907      74797065 
 20907      00
 20908              	.LASF181:
 20909 004c 54494D5F 		.ascii	"TIM_DMATriggerHalfCplt\000"
 20909      444D4154 
 20909      72696767 
 20909      65724861 
 20909      6C664370 
 20910              	.LASF48:
 20911 0063 48414C5F 		.ascii	"HAL_StatusTypeDef\000"
 20911      53746174 
 20911      75735479 
 20911      70654465 
 20911      6600
 20912              	.LASF211:
 20913 0075 5449315F 		.ascii	"TI1_Selection\000"
 20913      53656C65 
 20913      6374696F 
 20913      6E00
 20914              	.LASF101:
 20915 0083 49433153 		.ascii	"IC1Selection\000"
 20915      656C6563 
 20915      74696F6E 
 20915      00
ARM GAS  /tmp/ccTsJCXT.s 			page 510


 20916              	.LASF265:
 20917 0090 48414C5F 		.ascii	"HAL_TIM_IC_MspDeInit\000"
 20917      54494D5F 
 20917      49435F4D 
 20917      73704465 
 20917      496E6974 
 20918              	.LASF115:
 20919 00a5 436C6561 		.ascii	"ClearInputSource\000"
 20919      72496E70 
 20919      7574536F 
 20919      75726365 
 20919      00
 20920              	.LASF15:
 20921 00b6 696E7433 		.ascii	"int32_t\000"
 20921      325F7400 
 20922              	.LASF215:
 20923 00be 73436C65 		.ascii	"sClearInputConfig\000"
 20923      6172496E 
 20923      70757443 
 20923      6F6E6669 
 20923      6700
 20924              	.LASF308:
 20925 00d0 48414C5F 		.ascii	"HAL_TIM_Encoder_GetState\000"
 20925      54494D5F 
 20925      456E636F 
 20925      6465725F 
 20925      47657453 
 20926              	.LASF251:
 20927 00e9 48414C5F 		.ascii	"HAL_TIM_OnePulse_Stop\000"
 20927      54494D5F 
 20927      4F6E6550 
 20927      756C7365 
 20927      5F53746F 
 20928              	.LASF45:
 20929 00ff 48414C5F 		.ascii	"HAL_ERROR\000"
 20929      4552524F 
 20929      5200
 20930              	.LASF90:
 20931 0109 4F434964 		.ascii	"OCIdleState\000"
 20931      6C655374 
 20931      61746500 
 20932              	.LASF125:
 20933 0115 54494D5F 		.ascii	"TIM_SlaveConfigTypeDef\000"
 20933      536C6176 
 20933      65436F6E 
 20933      66696754 
 20933      79706544 
 20934              	.LASF166:
 20935 012c 54494D5F 		.ascii	"TIM_TI1_ConfigInputStage\000"
 20935      5449315F 
 20935      436F6E66 
 20935      6967496E 
 20935      70757453 
 20936              	.LASF294:
 20937 0145 48414C5F 		.ascii	"HAL_TIM_Base_Start\000"
 20937      54494D5F 
 20937      42617365 
ARM GAS  /tmp/ccTsJCXT.s 			page 511


 20937      5F537461 
 20937      727400
 20938              	.LASF164:
 20939 0158 746D7063 		.ascii	"tmpccmr1\000"
 20939      636D7231 
 20939      00
 20940              	.LASF160:
 20941 0161 746D7063 		.ascii	"tmpccmr2\000"
 20941      636D7232 
 20941      00
 20942              	.LASF214:
 20943 016a 48414C5F 		.ascii	"HAL_TIM_ConfigOCrefClear\000"
 20943      54494D5F 
 20943      436F6E66 
 20943      69674F43 
 20943      72656643 
 20944              	.LASF279:
 20945 0183 48414C5F 		.ascii	"HAL_TIM_OC_Stop_DMA\000"
 20945      54494D5F 
 20945      4F435F53 
 20945      746F705F 
 20945      444D4100 
 20946              	.LASF22:
 20947 0197 434E4454 		.ascii	"CNDTR\000"
 20947      5200
 20948              	.LASF38:
 20949 019d 444D4152 		.ascii	"DMAR\000"
 20949      00
 20950              	.LASF172:
 20951 01a2 746D7063 		.ascii	"tmpccmrx\000"
 20951      636D7278 
 20951      00
 20952              	.LASF178:
 20953 01ab 54494D5F 		.ascii	"TIM_Base_SetConfig\000"
 20953      42617365 
 20953      5F536574 
 20953      436F6E66 
 20953      696700
 20954              	.LASF33:
 20955 01be 43435231 		.ascii	"CCR1\000"
 20955      00
 20956              	.LASF34:
 20957 01c3 43435232 		.ascii	"CCR2\000"
 20957      00
 20958              	.LASF35:
 20959 01c8 43435233 		.ascii	"CCR3\000"
 20959      00
 20960              	.LASF36:
 20961 01cd 43435234 		.ascii	"CCR4\000"
 20961      00
 20962              	.LASF67:
 20963 01d2 4C6F636B 		.ascii	"Lock\000"
 20963      00
 20964              	.LASF3:
 20965 01d7 5F5F7569 		.ascii	"__uint8_t\000"
 20965      6E74385F 
 20965      7400
ARM GAS  /tmp/ccTsJCXT.s 			page 512


 20966              	.LASF245:
 20967 01e1 48414C5F 		.ascii	"HAL_TIM_Encoder_MspDeInit\000"
 20967      54494D5F 
 20967      456E636F 
 20967      6465725F 
 20967      4D737044 
 20968              	.LASF290:
 20969 01fb 48414C5F 		.ascii	"HAL_TIM_Base_Start_DMA\000"
 20969      54494D5F 
 20969      42617365 
 20969      5F537461 
 20969      72745F44 
 20970              	.LASF157:
 20971 0212 54494D5F 		.ascii	"TIM_ICPolarity\000"
 20971      4943506F 
 20971      6C617269 
 20971      747900
 20972              	.LASF188:
 20973 0221 54494D5F 		.ascii	"TIM_DMADelayPulseCplt\000"
 20973      444D4144 
 20973      656C6179 
 20973      50756C73 
 20973      6543706C 
 20974              	.LASF242:
 20975 0237 48414C5F 		.ascii	"HAL_TIM_Encoder_Start_IT\000"
 20975      54494D5F 
 20975      456E636F 
 20975      6465725F 
 20975      53746172 
 20976              	.LASF198:
 20977 0250 48414C5F 		.ascii	"HAL_TIM_TriggerCallback\000"
 20977      54494D5F 
 20977      54726967 
 20977      67657243 
 20977      616C6C62 
 20978              	.LASF268:
 20979 0268 48414C5F 		.ascii	"HAL_TIM_IC_Init\000"
 20979      54494D5F 
 20979      49435F49 
 20979      6E697400 
 20980              	.LASF296:
 20981 0278 48414C5F 		.ascii	"HAL_TIM_Base_MspInit\000"
 20981      54494D5F 
 20981      42617365 
 20981      5F4D7370 
 20981      496E6974 
 20982              	.LASF180:
 20983 028d 746D7063 		.ascii	"tmpcr1\000"
 20983      723100
 20984              	.LASF173:
 20985 0294 746D7063 		.ascii	"tmpcr2\000"
 20985      723200
 20986              	.LASF130:
 20987 029b 48414C5F 		.ascii	"HAL_TIM_STATE_ERROR\000"
 20987      54494D5F 
 20987      53544154 
 20987      455F4552 
ARM GAS  /tmp/ccTsJCXT.s 			page 513


 20987      524F5200 
 20988              	.LASF7:
 20989 02af 6C6F6E67 		.ascii	"long int\000"
 20989      20696E74 
 20989      00
 20990              	.LASF247:
 20991 02b8 48414C5F 		.ascii	"HAL_TIM_Encoder_DeInit\000"
 20991      54494D5F 
 20991      456E636F 
 20991      6465725F 
 20991      4465496E 
 20992              	.LASF259:
 20993 02cf 48414C5F 		.ascii	"HAL_TIM_IC_Start_DMA\000"
 20993      54494D5F 
 20993      49435F53 
 20993      74617274 
 20993      5F444D41 
 20994              	.LASF300:
 20995 02e4 48414C5F 		.ascii	"HAL_DMA_Start_IT\000"
 20995      444D415F 
 20995      53746172 
 20995      745F4954 
 20995      00
 20996              	.LASF158:
 20997 02f5 54494D5F 		.ascii	"TIM_ICSelection\000"
 20997      49435365 
 20997      6C656374 
 20997      696F6E00 
 20998              	.LASF84:
 20999 0305 54494D5F 		.ascii	"TIM_Base_InitTypeDef\000"
 20999      42617365 
 20999      5F496E69 
 20999      74547970 
 20999      65446566 
 21000              	.LASF98:
 21001 031a 54494D5F 		.ascii	"TIM_IC_InitTypeDef\000"
 21001      49435F49 
 21001      6E697454 
 21001      79706544 
 21001      656600
 21002              	.LASF58:
 21003 032d 5072696F 		.ascii	"Priority\000"
 21003      72697479 
 21003      00
 21004              	.LASF74:
 21005 0336 4572726F 		.ascii	"ErrorCode\000"
 21005      72436F64 
 21005      6500
 21006              	.LASF192:
 21007 0340 48414C5F 		.ascii	"HAL_TIM_IC_GetState\000"
 21007      54494D5F 
 21007      49435F47 
 21007      65745374 
 21007      61746500 
 21008              	.LASF277:
 21009 0354 48414C5F 		.ascii	"HAL_TIM_PWM_DeInit\000"
 21009      54494D5F 
ARM GAS  /tmp/ccTsJCXT.s 			page 514


 21009      50574D5F 
 21009      4465496E 
 21009      697400
 21010              	.LASF191:
 21011 0367 48414C5F 		.ascii	"HAL_TIM_OnePulse_GetState\000"
 21011      54494D5F 
 21011      4F6E6550 
 21011      756C7365 
 21011      5F476574 
 21012              	.LASF171:
 21013 0381 4F435F43 		.ascii	"OC_Config\000"
 21013      6F6E6669 
 21013      6700
 21014              	.LASF167:
 21015 038b 54494D5F 		.ascii	"TIM_ETR_SetConfig\000"
 21015      4554525F 
 21015      53657443 
 21015      6F6E6669 
 21015      6700
 21016              	.LASF51:
 21017 039d 48414C5F 		.ascii	"HAL_LockTypeDef\000"
 21017      4C6F636B 
 21017      54797065 
 21017      44656600 
 21018              	.LASF138:
 21019 03ad 4368616E 		.ascii	"Channel\000"
 21019      6E656C00 
 21020              	.LASF131:
 21021 03b5 48414C5F 		.ascii	"HAL_TIM_StateTypeDef\000"
 21021      54494D5F 
 21021      53746174 
 21021      65547970 
 21021      65446566 
 21022              	.LASF23:
 21023 03ca 43504152 		.ascii	"CPAR\000"
 21023      00
 21024              	.LASF208:
 21025 03cf 48414C5F 		.ascii	"HAL_TIM_SlaveConfigSynchro_IT\000"
 21025      54494D5F 
 21025      536C6176 
 21025      65436F6E 
 21025      66696753 
 21026              	.LASF0:
 21027 03ed 7369676E 		.ascii	"signed char\000"
 21027      65642063 
 21027      68617200 
 21028              	.LASF230:
 21029 03f9 496E7075 		.ascii	"InputChannel\000"
 21029      74436861 
 21029      6E6E656C 
 21029      00
 21030              	.LASF13:
 21031 0406 75696E74 		.ascii	"uint8_t\000"
 21031      385F7400 
 21032              	.LASF235:
 21033 040e 48414C5F 		.ascii	"HAL_TIM_IRQHandler\000"
 21033      54494D5F 
ARM GAS  /tmp/ccTsJCXT.s 			page 515


 21033      49525148 
 21033      616E646C 
 21033      657200
 21034              	.LASF44:
 21035 0421 48414C5F 		.ascii	"HAL_OK\000"
 21035      4F4B00
 21036              	.LASF283:
 21037 0428 48414C5F 		.ascii	"HAL_TIM_OC_Stop\000"
 21037      54494D5F 
 21037      4F435F53 
 21037      746F7000 
 21038              	.LASF243:
 21039 0438 48414C5F 		.ascii	"HAL_TIM_Encoder_Stop\000"
 21039      54494D5F 
 21039      456E636F 
 21039      6465725F 
 21039      53746F70 
 21040              	.LASF39:
 21041 044d 54494D5F 		.ascii	"TIM_TypeDef\000"
 21041      54797065 
 21041      44656600 
 21042              	.LASF1:
 21043 0459 756E7369 		.ascii	"unsigned char\000"
 21043      676E6564 
 21043      20636861 
 21043      7200
 21044              	.LASF27:
 21045 0467 444D415F 		.ascii	"DMA_TypeDef\000"
 21045      54797065 
 21045      44656600 
 21046              	.LASF228:
 21047 0473 73436F6E 		.ascii	"sConfig\000"
 21047      66696700 
 21048              	.LASF76:
 21049 047b 4368616E 		.ascii	"ChannelIndex\000"
 21049      6E656C49 
 21049      6E646578 
 21049      00
 21050              	.LASF233:
 21051 0488 48414C5F 		.ascii	"HAL_TIM_IC_ConfigChannel\000"
 21051      54494D5F 
 21051      49435F43 
 21051      6F6E6669 
 21051      67436861 
 21052              	.LASF203:
 21053 04a1 48414C5F 		.ascii	"HAL_TIM_OC_DelayElapsedCallback\000"
 21053      54494D5F 
 21053      4F435F44 
 21053      656C6179 
 21053      456C6170 
 21054              	.LASF147:
 21055 04c1 75775469 		.ascii	"uwTickFreq\000"
 21055      636B4672 
 21055      657100
 21056              	.LASF244:
 21057 04cc 48414C5F 		.ascii	"HAL_TIM_Encoder_Start\000"
 21057      54494D5F 
ARM GAS  /tmp/ccTsJCXT.s 			page 516


 21057      456E636F 
 21057      6465725F 
 21057      53746172 
 21058              	.LASF202:
 21059 04e2 48414C5F 		.ascii	"HAL_TIM_IC_CaptureCallback\000"
 21059      54494D5F 
 21059      49435F43 
 21059      61707475 
 21059      72654361 
 21060              	.LASF262:
 21061 04fd 48414C5F 		.ascii	"HAL_TIM_IC_Start_IT\000"
 21061      54494D5F 
 21061      49435F53 
 21061      74617274 
 21061      5F495400 
 21062              	.LASF132:
 21063 0511 48414C5F 		.ascii	"HAL_TIM_ACTIVE_CHANNEL_1\000"
 21063      54494D5F 
 21063      41435449 
 21063      56455F43 
 21063      48414E4E 
 21064              	.LASF133:
 21065 052a 48414C5F 		.ascii	"HAL_TIM_ACTIVE_CHANNEL_2\000"
 21065      54494D5F 
 21065      41435449 
 21065      56455F43 
 21065      48414E4E 
 21066              	.LASF134:
 21067 0543 48414C5F 		.ascii	"HAL_TIM_ACTIVE_CHANNEL_3\000"
 21067      54494D5F 
 21067      41435449 
 21067      56455F43 
 21067      48414E4E 
 21068              	.LASF135:
 21069 055c 48414C5F 		.ascii	"HAL_TIM_ACTIVE_CHANNEL_4\000"
 21069      54494D5F 
 21069      41435449 
 21069      56455F43 
 21069      48414E4E 
 21070              	.LASF30:
 21071 0575 43434D52 		.ascii	"CCMR1\000"
 21071      3100
 21072              	.LASF31:
 21073 057b 43434D52 		.ascii	"CCMR2\000"
 21073      3200
 21074              	.LASF91:
 21075 0581 4F434E49 		.ascii	"OCNIdleState\000"
 21075      646C6553 
 21075      74617465 
 21075      00
 21076              	.LASF273:
 21077 058e 48414C5F 		.ascii	"HAL_TIM_PWM_Stop\000"
 21077      54494D5F 
 21077      50574D5F 
 21077      53746F70 
 21077      00
 21078              	.LASF26:
ARM GAS  /tmp/ccTsJCXT.s 			page 517


 21079 059f 49464352 		.ascii	"IFCR\000"
 21079      00
 21080              	.LASF87:
 21081 05a4 4F43506F 		.ascii	"OCPolarity\000"
 21081      6C617269 
 21081      747900
 21082              	.LASF271:
 21083 05af 48414C5F 		.ascii	"HAL_TIM_PWM_Stop_IT\000"
 21083      54494D5F 
 21083      50574D5F 
 21083      53746F70 
 21083      5F495400 
 21084              	.LASF4:
 21085 05c3 5F5F7569 		.ascii	"__uint16_t\000"
 21085      6E743136 
 21085      5F7400
 21086              	.LASF289:
 21087 05ce 48414C5F 		.ascii	"HAL_TIM_Base_Stop_DMA\000"
 21087      54494D5F 
 21087      42617365 
 21087      5F53746F 
 21087      705F444D 
 21088              	.LASF252:
 21089 05e4 48414C5F 		.ascii	"HAL_TIM_OnePulse_Start\000"
 21089      54494D5F 
 21089      4F6E6550 
 21089      756C7365 
 21089      5F537461 
 21090              	.LASF302:
 21091 05fb 48414C5F 		.ascii	"HAL_TIMEx_CommutCallback\000"
 21091      54494D45 
 21091      785F436F 
 21091      6D6D7574 
 21091      43616C6C 
 21092              	.LASF270:
 21093 0614 48414C5F 		.ascii	"HAL_TIM_PWM_Start_DMA\000"
 21093      54494D5F 
 21093      50574D5F 
 21093      53746172 
 21093      745F444D 
 21094              	.LASF122:
 21095 062a 54726967 		.ascii	"TriggerPolarity\000"
 21095      67657250 
 21095      6F6C6172 
 21095      69747900 
 21096              	.LASF78:
 21097 063a 50726573 		.ascii	"Prescaler\000"
 21097      63616C65 
 21097      7200
 21098              	.LASF53:
 21099 0644 50657269 		.ascii	"PeriphInc\000"
 21099      7068496E 
 21099      6300
 21100              	.LASF88:
 21101 064e 4F434E50 		.ascii	"OCNPolarity\000"
 21101      6F6C6172 
 21101      69747900 
ARM GAS  /tmp/ccTsJCXT.s 			page 518


 21102              	.LASF73:
 21103 065a 58666572 		.ascii	"XferAbortCallback\000"
 21103      41626F72 
 21103      7443616C 
 21103      6C626163 
 21103      6B00
 21104              	.LASF106:
 21105 066c 49433250 		.ascii	"IC2Prescaler\000"
 21105      72657363 
 21105      616C6572 
 21105      00
 21106              	.LASF94:
 21107 0679 49435365 		.ascii	"ICSelection\000"
 21107      6C656374 
 21107      696F6E00 
 21108              	.LASF303:
 21109 0685 474E5520 		.ascii	"GNU C11 6.3.1 20170620 -mcpu=cortex-m3 -mthumb -g -"
 21109      43313120 
 21109      362E332E 
 21109      31203230 
 21109      31373036 
 21110 06b8 67647761 		.ascii	"gdwarf-2 -Os -fomit-frame-pointer\000"
 21110      72662D32 
 21110      202D4F73 
 21110      202D666F 
 21110      6D69742D 
 21111              	.LASF110:
 21112 06da 436C6F63 		.ascii	"ClockPolarity\000"
 21112      6B506F6C 
 21112      61726974 
 21112      7900
 21113              	.LASF267:
 21114 06e8 48414C5F 		.ascii	"HAL_TIM_IC_DeInit\000"
 21114      54494D5F 
 21114      49435F44 
 21114      65496E69 
 21114      7400
 21115              	.LASF269:
 21116 06fa 48414C5F 		.ascii	"HAL_TIM_PWM_Stop_DMA\000"
 21116      54494D5F 
 21116      50574D5F 
 21116      53746F70 
 21116      5F444D41 
 21117              	.LASF218:
 21118 070f 48414C5F 		.ascii	"HAL_TIM_DMABurst_ReadStop\000"
 21118      54494D5F 
 21118      444D4142 
 21118      75727374 
 21118      5F526561 
 21119              	.LASF93:
 21120 0729 4943506F 		.ascii	"ICPolarity\000"
 21120      6C617269 
 21120      747900
 21121              	.LASF109:
 21122 0734 436C6F63 		.ascii	"ClockSource\000"
 21122      6B536F75 
 21122      72636500 
ARM GAS  /tmp/ccTsJCXT.s 			page 519


 21123              	.LASF139:
 21124 0740 68646D61 		.ascii	"hdma\000"
 21124      00
 21125              	.LASF143:
 21126 0745 48414C5F 		.ascii	"HAL_TICK_FREQ_1KHZ\000"
 21126      5449434B 
 21126      5F465245 
 21126      515F314B 
 21126      485A00
 21127              	.LASF128:
 21128 0758 48414C5F 		.ascii	"HAL_TIM_STATE_BUSY\000"
 21128      54494D5F 
 21128      53544154 
 21128      455F4255 
 21128      535900
 21129              	.LASF255:
 21130 076b 48414C5F 		.ascii	"HAL_TIM_OnePulse_DeInit\000"
 21130      54494D5F 
 21130      4F6E6550 
 21130      756C7365 
 21130      5F446549 
 21131              	.LASF165:
 21132 0783 54494D5F 		.ascii	"TIM_TI2_SetConfig\000"
 21132      5449325F 
 21132      53657443 
 21132      6F6E6669 
 21132      6700
 21133              	.LASF65:
 21134 0795 496E7374 		.ascii	"Instance\000"
 21134      616E6365 
 21134      00
 21135              	.LASF100:
 21136 079e 49433150 		.ascii	"IC1Polarity\000"
 21136      6F6C6172 
 21136      69747900 
 21137              	.LASF168:
 21138 07aa 54494D5F 		.ascii	"TIM_TI1_SetConfig\000"
 21138      5449315F 
 21138      53657443 
 21138      6F6E6669 
 21138      6700
 21139              	.LASF159:
 21140 07bc 54494D5F 		.ascii	"TIM_ICFilter\000"
 21140      49434669 
 21140      6C746572 
 21140      00
 21141              	.LASF217:
 21142 07c9 4576656E 		.ascii	"EventSource\000"
 21142      74536F75 
 21142      72636500 
 21143              	.LASF9:
 21144 07d5 6C6F6E67 		.ascii	"long unsigned int\000"
 21144      20756E73 
 21144      69676E65 
 21144      6420696E 
 21144      7400
 21145              	.LASF280:
ARM GAS  /tmp/ccTsJCXT.s 			page 520


 21146 07e7 48414C5F 		.ascii	"HAL_TIM_OC_Start_DMA\000"
 21146      54494D5F 
 21146      4F435F53 
 21146      74617274 
 21146      5F444D41 
 21147              	.LASF146:
 21148 07fc 75775469 		.ascii	"uwTickPrio\000"
 21148      636B5072 
 21148      696F00
 21149              	.LASF220:
 21150 0807 73746174 		.ascii	"status\000"
 21150      757300
 21151              	.LASF29:
 21152 080e 44494552 		.ascii	"DIER\000"
 21152      00
 21153              	.LASF19:
 21154 0813 53797374 		.ascii	"SystemCoreClock\000"
 21154      656D436F 
 21154      7265436C 
 21154      6F636B00 
 21155              	.LASF236:
 21156 0823 48414C5F 		.ascii	"HAL_TIM_Encoder_Stop_DMA\000"
 21156      54494D5F 
 21156      456E636F 
 21156      6465725F 
 21156      53746F70 
 21157              	.LASF126:
 21158 083c 48414C5F 		.ascii	"HAL_TIM_STATE_RESET\000"
 21158      54494D5F 
 21158      53544154 
 21158      455F5245 
 21158      53455400 
 21159              	.LASF117:
 21160 0850 436C6561 		.ascii	"ClearInputPrescaler\000"
 21160      72496E70 
 21160      75745072 
 21160      65736361 
 21160      6C657200 
 21161              	.LASF254:
 21162 0864 48414C5F 		.ascii	"HAL_TIM_OnePulse_MspInit\000"
 21162      54494D5F 
 21162      4F6E6550 
 21162      756C7365 
 21162      5F4D7370 
 21163              	.LASF223:
 21164 087d 42757273 		.ascii	"BurstBuffer\000"
 21164      74427566 
 21164      66657200 
 21165              	.LASF249:
 21166 0889 48414C5F 		.ascii	"HAL_TIM_OnePulse_Stop_IT\000"
 21166      54494D5F 
 21166      4F6E6550 
 21166      756C7365 
 21166      5F53746F 
 21167              	.LASF183:
 21168 08a2 54494D5F 		.ascii	"TIM_DMAPeriodElapsedHalfCplt\000"
 21168      444D4150 
ARM GAS  /tmp/ccTsJCXT.s 			page 521


 21168      6572696F 
 21168      64456C61 
 21168      70736564 
 21169              	.LASF293:
 21170 08bf 48414C5F 		.ascii	"HAL_TIM_Base_Stop\000"
 21170      54494D5F 
 21170      42617365 
 21170      5F53746F 
 21170      7000
 21171              	.LASF282:
 21172 08d1 48414C5F 		.ascii	"HAL_TIM_OC_Start_IT\000"
 21172      54494D5F 
 21172      4F435F53 
 21172      74617274 
 21172      5F495400 
 21173              	.LASF299:
 21174 08e5 48414C5F 		.ascii	"HAL_DMA_Abort_IT\000"
 21174      444D415F 
 21174      41626F72 
 21174      745F4954 
 21174      00
 21175              	.LASF184:
 21176 08f6 54494D5F 		.ascii	"TIM_DMAPeriodElapsedCplt\000"
 21176      444D4150 
 21176      6572696F 
 21176      64456C61 
 21176      70736564 
 21177              	.LASF169:
 21178 090f 6874696D 		.ascii	"htim\000"
 21178      00
 21179              	.LASF248:
 21180 0914 48414C5F 		.ascii	"HAL_TIM_Encoder_Init\000"
 21180      54494D5F 
 21180      456E636F 
 21180      6465725F 
 21180      496E6974 
 21181              	.LASF56:
 21182 0929 4D656D44 		.ascii	"MemDataAlignment\000"
 21182      61746141 
 21182      6C69676E 
 21182      6D656E74 
 21182      00
 21183              	.LASF8:
 21184 093a 5F5F7569 		.ascii	"__uint32_t\000"
 21184      6E743332 
 21184      5F7400
 21185              	.LASF10:
 21186 0945 6C6F6E67 		.ascii	"long long int\000"
 21186      206C6F6E 
 21186      6720696E 
 21186      7400
 21187              	.LASF123:
 21188 0953 54726967 		.ascii	"TriggerPrescaler\000"
 21188      67657250 
 21188      72657363 
 21188      616C6572 
 21188      00
ARM GAS  /tmp/ccTsJCXT.s 			page 522


 21189              	.LASF55:
 21190 0964 50657269 		.ascii	"PeriphDataAlignment\000"
 21190      70684461 
 21190      7461416C 
 21190      69676E6D 
 21190      656E7400 
 21191              	.LASF150:
 21192 0978 54494D5F 		.ascii	"TIM_ExtTRGPrescaler\000"
 21192      45787454 
 21192      52475072 
 21192      65736361 
 21192      6C657200 
 21193              	.LASF136:
 21194 098c 48414C5F 		.ascii	"HAL_TIM_ACTIVE_CHANNEL_CLEARED\000"
 21194      54494D5F 
 21194      41435449 
 21194      56455F43 
 21194      48414E4E 
 21195              	.LASF102:
 21196 09ab 49433150 		.ascii	"IC1Prescaler\000"
 21196      72657363 
 21196      616C6572 
 21196      00
 21197              	.LASF105:
 21198 09b8 49433253 		.ascii	"IC2Selection\000"
 21198      656C6563 
 21198      74696F6E 
 21198      00
 21199              	.LASF189:
 21200 09c5 54494D5F 		.ascii	"TIM_DMAError\000"
 21200      444D4145 
 21200      72726F72 
 21200      00
 21201              	.LASF18:
 21202 09d2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 21202      52784275 
 21202      66666572 
 21202      00
 21203              	.LASF219:
 21204 09df 42757273 		.ascii	"BurstRequestSrc\000"
 21204      74526571 
 21204      75657374 
 21204      53726300 
 21205              	.LASF92:
 21206 09ef 54494D5F 		.ascii	"TIM_OC_InitTypeDef\000"
 21206      4F435F49 
 21206      6E697454 
 21206      79706544 
 21206      656600
 21207              	.LASF83:
 21208 0a02 4175746F 		.ascii	"AutoReloadPreload\000"
 21208      52656C6F 
 21208      61645072 
 21208      656C6F61 
 21208      6400
 21209              	.LASF190:
 21210 0a14 54494D5F 		.ascii	"TIM_CCxChannelCmd\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 523


 21210      43437843 
 21210      68616E6E 
 21210      656C436D 
 21210      6400
 21211              	.LASF258:
 21212 0a26 48414C5F 		.ascii	"HAL_TIM_IC_Stop_DMA\000"
 21212      54494D5F 
 21212      49435F53 
 21212      746F705F 
 21212      444D4100 
 21213              	.LASF63:
 21214 0a3a 48414C5F 		.ascii	"HAL_DMA_STATE_TIMEOUT\000"
 21214      444D415F 
 21214      53544154 
 21214      455F5449 
 21214      4D454F55 
 21215              	.LASF12:
 21216 0a50 756E7369 		.ascii	"unsigned int\000"
 21216      676E6564 
 21216      20696E74 
 21216      00
 21217              	.LASF216:
 21218 0a5d 48414C5F 		.ascii	"HAL_TIM_GenerateEvent\000"
 21218      54494D5F 
 21218      47656E65 
 21218      72617465 
 21218      4576656E 
 21219              	.LASF89:
 21220 0a73 4F434661 		.ascii	"OCFastMode\000"
 21220      73744D6F 
 21220      646500
 21221              	.LASF237:
 21222 0a7e 48414C5F 		.ascii	"HAL_TIM_Encoder_Start_DMA\000"
 21222      54494D5F 
 21222      456E636F 
 21222      6465725F 
 21222      53746172 
 21223              	.LASF75:
 21224 0a98 446D6142 		.ascii	"DmaBaseAddress\000"
 21224      61736541 
 21224      64647265 
 21224      737300
 21225              	.LASF281:
 21226 0aa7 48414C5F 		.ascii	"HAL_TIM_OC_Stop_IT\000"
 21226      54494D5F 
 21226      4F435F53 
 21226      746F705F 
 21226      495400
 21227              	.LASF95:
 21228 0aba 49434669 		.ascii	"ICFilter\000"
 21228      6C746572 
 21228      00
 21229              	.LASF118:
 21230 0ac3 436C6561 		.ascii	"ClearInputFilter\000"
 21230      72496E70 
 21230      75744669 
 21230      6C746572 
ARM GAS  /tmp/ccTsJCXT.s 			page 524


 21230      00
 21231              	.LASF69:
 21232 0ad4 50617265 		.ascii	"Parent\000"
 21232      6E7400
 21233              	.LASF263:
 21234 0adb 48414C5F 		.ascii	"HAL_TIM_IC_Stop\000"
 21234      54494D5F 
 21234      49435F53 
 21234      746F7000 
 21235              	.LASF24:
 21236 0aeb 434D4152 		.ascii	"CMAR\000"
 21236      00
 21237              	.LASF149:
 21238 0af0 4368616E 		.ascii	"ChannelState\000"
 21238      6E656C53 
 21238      74617465 
 21238      00
 21239              	.LASF256:
 21240 0afd 48414C5F 		.ascii	"HAL_TIM_OnePulse_Init\000"
 21240      54494D5F 
 21240      4F6E6550 
 21240      756C7365 
 21240      5F496E69 
 21241              	.LASF60:
 21242 0b13 48414C5F 		.ascii	"HAL_DMA_STATE_RESET\000"
 21242      444D415F 
 21242      53544154 
 21242      455F5245 
 21242      53455400 
 21243              	.LASF276:
 21244 0b27 48414C5F 		.ascii	"HAL_TIM_PWM_MspInit\000"
 21244      54494D5F 
 21244      50574D5F 
 21244      4D737049 
 21244      6E697400 
 21245              	.LASF231:
 21246 0b3b 74656D70 		.ascii	"temp1\000"
 21246      3100
 21247              	.LASF66:
 21248 0b41 496E6974 		.ascii	"Init\000"
 21248      00
 21249              	.LASF152:
 21250 0b46 45787454 		.ascii	"ExtTRGFilter\000"
 21250      52474669 
 21250      6C746572 
 21250      00
 21251              	.LASF199:
 21252 0b53 48414C5F 		.ascii	"HAL_TIM_PWM_PulseFinishedHalfCpltCallback\000"
 21252      54494D5F 
 21252      50574D5F 
 21252      50756C73 
 21252      6546696E 
 21253              	.LASF85:
 21254 0b7d 4F434D6F 		.ascii	"OCMode\000"
 21254      646500
 21255              	.LASF104:
 21256 0b84 49433250 		.ascii	"IC2Polarity\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 525


 21256      6F6C6172 
 21256      69747900 
 21257              	.LASF114:
 21258 0b90 436C6561 		.ascii	"ClearInputState\000"
 21258      72496E70 
 21258      75745374 
 21258      61746500 
 21259              	.LASF54:
 21260 0ba0 4D656D49 		.ascii	"MemInc\000"
 21260      6E6300
 21261              	.LASF226:
 21262 0ba7 48414C5F 		.ascii	"HAL_TIM_DMABurst_WriteStart\000"
 21262      54494D5F 
 21262      444D4142 
 21262      75727374 
 21262      5F577269 
 21263              	.LASF179:
 21264 0bc3 53747275 		.ascii	"Structure\000"
 21264      63747572 
 21264      6500
 21265              	.LASF142:
 21266 0bcd 48414C5F 		.ascii	"HAL_TICK_FREQ_100HZ\000"
 21266      5449434B 
 21266      5F465245 
 21266      515F3130 
 21266      30485A00 
 21267              	.LASF170:
 21268 0be1 73536C61 		.ascii	"sSlaveConfig\000"
 21268      7665436F 
 21268      6E666967 
 21268      00
 21269              	.LASF41:
 21270 0bee 44495341 		.ascii	"DISABLE\000"
 21270      424C4500 
 21271              	.LASF72:
 21272 0bf6 58666572 		.ascii	"XferErrorCallback\000"
 21272      4572726F 
 21272      7243616C 
 21272      6C626163 
 21272      6B00
 21273              	.LASF121:
 21274 0c08 496E7075 		.ascii	"InputTrigger\000"
 21274      74547269 
 21274      67676572 
 21274      00
 21275              	.LASF43:
 21276 0c15 6C6F6E67 		.ascii	"long double\000"
 21276      20646F75 
 21276      626C6500 
 21277              	.LASF232:
 21278 0c21 48414C5F 		.ascii	"HAL_TIM_PWM_ConfigChannel\000"
 21278      54494D5F 
 21278      50574D5F 
 21278      436F6E66 
 21278      69674368 
 21279              	.LASF82:
 21280 0c3b 52657065 		.ascii	"RepetitionCounter\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 526


 21280      74697469 
 21280      6F6E436F 
 21280      756E7465 
 21280      7200
 21281              	.LASF57:
 21282 0c4d 4D6F6465 		.ascii	"Mode\000"
 21282      00
 21283              	.LASF174:
 21284 0c52 54494D5F 		.ascii	"TIM_OC4_SetConfig\000"
 21284      4F43345F 
 21284      53657443 
 21284      6F6E6669 
 21284      6700
 21285              	.LASF156:
 21286 0c64 54494D5F 		.ascii	"TIM_TI4_SetConfig\000"
 21286      5449345F 
 21286      53657443 
 21286      6F6E6669 
 21286      6700
 21287              	.LASF222:
 21288 0c76 42757273 		.ascii	"BurstBaseAddress\000"
 21288      74426173 
 21288      65416464 
 21288      72657373 
 21288      00
 21289              	.LASF304:
 21290 0c87 7372632F 		.ascii	"src/stm32f1xx_hal_tim.c\000"
 21290      73746D33 
 21290      32663178 
 21290      785F6861 
 21290      6C5F7469 
 21291              	.LASF46:
 21292 0c9f 48414C5F 		.ascii	"HAL_BUSY\000"
 21292      42555359 
 21292      00
 21293              	.LASF137:
 21294 0ca8 48414C5F 		.ascii	"HAL_TIM_ActiveChannel\000"
 21294      54494D5F 
 21294      41637469 
 21294      76654368 
 21294      616E6E65 
 21295              	.LASF25:
 21296 0cbe 444D415F 		.ascii	"DMA_Channel_TypeDef\000"
 21296      4368616E 
 21296      6E656C5F 
 21296      54797065 
 21296      44656600 
 21297              	.LASF20:
 21298 0cd2 41484250 		.ascii	"AHBPrescTable\000"
 21298      72657363 
 21298      5461626C 
 21298      6500
 21299              	.LASF175:
 21300 0ce0 54494D5F 		.ascii	"TIM_OC3_SetConfig\000"
 21300      4F43335F 
 21300      53657443 
 21300      6F6E6669 
ARM GAS  /tmp/ccTsJCXT.s 			page 527


 21300      6700
 21301              	.LASF204:
 21302 0cf2 48414C5F 		.ascii	"HAL_TIM_PeriodElapsedHalfCpltCallback\000"
 21302      54494D5F 
 21302      50657269 
 21302      6F64456C 
 21302      61707365 
 21303              	.LASF264:
 21304 0d18 48414C5F 		.ascii	"HAL_TIM_IC_Start\000"
 21304      54494D5F 
 21304      49435F53 
 21304      74617274 
 21304      00
 21305              	.LASF295:
 21306 0d29 48414C5F 		.ascii	"HAL_TIM_Base_MspDeInit\000"
 21306      54494D5F 
 21306      42617365 
 21306      5F4D7370 
 21306      4465496E 
 21307              	.LASF162:
 21308 0d40 54494D5F 		.ascii	"TIM_TI3_SetConfig\000"
 21308      5449335F 
 21308      53657443 
 21308      6F6E6669 
 21308      6700
 21309              	.LASF287:
 21310 0d52 48414C5F 		.ascii	"HAL_TIM_OC_DeInit\000"
 21310      54494D5F 
 21310      4F435F44 
 21310      65496E69 
 21310      7400
 21311              	.LASF155:
 21312 0d64 54494D5F 		.ascii	"TIM_ITRx_SetConfig\000"
 21312      49545278 
 21312      5F536574 
 21312      436F6E66 
 21312      696700
 21313              	.LASF11:
 21314 0d77 6C6F6E67 		.ascii	"long long unsigned int\000"
 21314      206C6F6E 
 21314      6720756E 
 21314      7369676E 
 21314      65642069 
 21315              	.LASF221:
 21316 0d8e 48414C5F 		.ascii	"HAL_TIM_DMABurst_ReadStart\000"
 21316      54494D5F 
 21316      444D4142 
 21316      75727374 
 21316      5F526561 
 21317              	.LASF306:
 21318 0da9 5F5F444D 		.ascii	"__DMA_HandleTypeDef\000"
 21318      415F4861 
 21318      6E646C65 
 21318      54797065 
 21318      44656600 
 21319              	.LASF103:
 21320 0dbd 49433146 		.ascii	"IC1Filter\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 528


 21320      696C7465 
 21320      7200
 21321              	.LASF176:
 21322 0dc7 54494D5F 		.ascii	"TIM_OC2_SetConfig\000"
 21322      4F43325F 
 21322      53657443 
 21322      6F6E6669 
 21322      6700
 21323              	.LASF14:
 21324 0dd9 75696E74 		.ascii	"uint16_t\000"
 21324      31365F74 
 21324      00
 21325              	.LASF194:
 21326 0de2 48414C5F 		.ascii	"HAL_TIM_OC_GetState\000"
 21326      54494D5F 
 21326      4F435F47 
 21326      65745374 
 21326      61746500 
 21327              	.LASF153:
 21328 0df6 496E7075 		.ascii	"InputTriggerSource\000"
 21328      74547269 
 21328      67676572 
 21328      536F7572 
 21328      636500
 21329              	.LASF213:
 21330 0e09 73436C6F 		.ascii	"sClockSourceConfig\000"
 21330      636B536F 
 21330      75726365 
 21330      436F6E66 
 21330      696700
 21331              	.LASF99:
 21332 0e1c 456E636F 		.ascii	"EncoderMode\000"
 21332      6465724D 
 21332      6F646500 
 21333              	.LASF32:
 21334 0e28 43434552 		.ascii	"CCER\000"
 21334      00
 21335              	.LASF79:
 21336 0e2d 436F756E 		.ascii	"CounterMode\000"
 21336      7465724D 
 21336      6F646500 
 21337              	.LASF68:
 21338 0e39 53746174 		.ascii	"State\000"
 21338      6500
 21339              	.LASF129:
 21340 0e3f 48414C5F 		.ascii	"HAL_TIM_STATE_TIMEOUT\000"
 21340      54494D5F 
 21340      53544154 
 21340      455F5449 
 21340      4D454F55 
 21341              	.LASF49:
 21342 0e55 48414C5F 		.ascii	"HAL_UNLOCKED\000"
 21342      554E4C4F 
 21342      434B4544 
 21342      00
 21343              	.LASF77:
 21344 0e62 444D415F 		.ascii	"DMA_HandleTypeDef\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 529


 21344      48616E64 
 21344      6C655479 
 21344      70654465 
 21344      6600
 21345              	.LASF145:
 21346 0e74 48414C5F 		.ascii	"HAL_TickFreqTypeDef\000"
 21346      5469636B 
 21346      46726571 
 21346      54797065 
 21346      44656600 
 21347              	.LASF70:
 21348 0e88 58666572 		.ascii	"XferCpltCallback\000"
 21348      43706C74 
 21348      43616C6C 
 21348      6261636B 
 21348      00
 21349              	.LASF113:
 21350 0e99 54494D5F 		.ascii	"TIM_ClockConfigTypeDef\000"
 21350      436C6F63 
 21350      6B436F6E 
 21350      66696754 
 21350      79706544 
 21351              	.LASF209:
 21352 0eb0 48414C5F 		.ascii	"HAL_TIM_SlaveConfigSynchro\000"
 21352      54494D5F 
 21352      536C6176 
 21352      65436F6E 
 21352      66696753 
 21353              	.LASF229:
 21354 0ecb 4F757470 		.ascii	"OutputChannel\000"
 21354      75744368 
 21354      616E6E65 
 21354      6C00
 21355              	.LASF200:
 21356 0ed9 48414C5F 		.ascii	"HAL_TIM_PWM_PulseFinishedCallback\000"
 21356      54494D5F 
 21356      50574D5F 
 21356      50756C73 
 21356      6546696E 
 21357              	.LASF234:
 21358 0efb 48414C5F 		.ascii	"HAL_TIM_OC_ConfigChannel\000"
 21358      54494D5F 
 21358      4F435F43 
 21358      6F6E6669 
 21358      67436861 
 21359              	.LASF28:
 21360 0f14 534D4352 		.ascii	"SMCR\000"
 21360      00
 21361              	.LASF107:
 21362 0f19 49433246 		.ascii	"IC2Filter\000"
 21362      696C7465 
 21362      7200
 21363              	.LASF301:
 21364 0f23 48414C5F 		.ascii	"HAL_TIMEx_BreakCallback\000"
 21364      54494D45 
 21364      785F4272 
 21364      65616B43 
ARM GAS  /tmp/ccTsJCXT.s 			page 530


 21364      616C6C62 
 21365              	.LASF40:
 21366 0f3b 52455345 		.ascii	"RESET\000"
 21366      5400
 21367              	.LASF205:
 21368 0f41 48414C5F 		.ascii	"HAL_TIM_PeriodElapsedCallback\000"
 21368      54494D5F 
 21368      50657269 
 21368      6F64456C 
 21368      61707365 
 21369              	.LASF288:
 21370 0f5f 48414C5F 		.ascii	"HAL_TIM_OC_Init\000"
 21370      54494D5F 
 21370      4F435F49 
 21370      6E697400 
 21371              	.LASF240:
 21372 0f6f 4C656E67 		.ascii	"Length\000"
 21372      746800
 21373              	.LASF206:
 21374 0f76 746D7072 		.ascii	"tmpreg\000"
 21374      656700
 21375              	.LASF187:
 21376 0f7d 54494D5F 		.ascii	"TIM_DMADelayPulseHalfCplt\000"
 21376      444D4144 
 21376      656C6179 
 21376      50756C73 
 21376      6548616C 
 21377              	.LASF62:
 21378 0f97 48414C5F 		.ascii	"HAL_DMA_STATE_BUSY\000"
 21378      444D415F 
 21378      53544154 
 21378      455F4255 
 21378      535900
 21379              	.LASF127:
 21380 0faa 48414C5F 		.ascii	"HAL_TIM_STATE_READY\000"
 21380      54494D5F 
 21380      53544154 
 21380      455F5245 
 21380      41445900 
 21381              	.LASF274:
 21382 0fbe 48414C5F 		.ascii	"HAL_TIM_PWM_Start\000"
 21382      54494D5F 
 21382      50574D5F 
 21382      53746172 
 21382      7400
 21383              	.LASF224:
 21384 0fd0 42757273 		.ascii	"BurstLength\000"
 21384      744C656E 
 21384      67746800 
 21385              	.LASF148:
 21386 0fdc 54494D78 		.ascii	"TIMx\000"
 21386      00
 21387              	.LASF59:
 21388 0fe1 444D415F 		.ascii	"DMA_InitTypeDef\000"
 21388      496E6974 
 21388      54797065 
 21388      44656600 
ARM GAS  /tmp/ccTsJCXT.s 			page 531


 21389              	.LASF196:
 21390 0ff1 48414C5F 		.ascii	"HAL_TIM_ErrorCallback\000"
 21390      54494D5F 
 21390      4572726F 
 21390      7243616C 
 21390      6C626163 
 21391              	.LASF207:
 21392 1007 48414C5F 		.ascii	"HAL_TIM_ReadCapturedValue\000"
 21392      54494D5F 
 21392      52656164 
 21392      43617074 
 21392      75726564 
 21393              	.LASF80:
 21394 1021 50657269 		.ascii	"Period\000"
 21394      6F6400
 21395              	.LASF119:
 21396 1028 54494D5F 		.ascii	"TIM_ClearInputConfigTypeDef\000"
 21396      436C6561 
 21396      72496E70 
 21396      7574436F 
 21396      6E666967 
 21397              	.LASF21:
 21398 1044 41504250 		.ascii	"APBPrescTable\000"
 21398      72657363 
 21398      5461626C 
 21398      6500
 21399              	.LASF307:
 21400 1052 54494D5F 		.ascii	"TIM_SlaveTimer_SetConfig\000"
 21400      536C6176 
 21400      6554696D 
 21400      65725F53 
 21400      6574436F 
 21401              	.LASF197:
 21402 106b 48414C5F 		.ascii	"HAL_TIM_TriggerHalfCpltCallback\000"
 21402      54494D5F 
 21402      54726967 
 21402      67657248 
 21402      616C6643 
 21403              	.LASF2:
 21404 108b 73686F72 		.ascii	"short int\000"
 21404      7420696E 
 21404      7400
 21405              	.LASF116:
 21406 1095 436C6561 		.ascii	"ClearInputPolarity\000"
 21406      72496E70 
 21406      7574506F 
 21406      6C617269 
 21406      747900
 21407              	.LASF210:
 21408 10a8 48414C5F 		.ascii	"HAL_TIM_ConfigTI1Input\000"
 21408      54494D5F 
 21408      436F6E66 
 21408      69675449 
 21408      31496E70 
 21409              	.LASF278:
 21410 10bf 48414C5F 		.ascii	"HAL_TIM_PWM_Init\000"
 21410      54494D5F 
ARM GAS  /tmp/ccTsJCXT.s 			page 532


 21410      50574D5F 
 21410      496E6974 
 21410      00
 21411              	.LASF284:
 21412 10d0 48414C5F 		.ascii	"HAL_TIM_OC_Start\000"
 21412      54494D5F 
 21412      4F435F53 
 21412      74617274 
 21412      00
 21413              	.LASF186:
 21414 10e1 54494D5F 		.ascii	"TIM_DMACaptureCplt\000"
 21414      444D4143 
 21414      61707475 
 21414      72654370 
 21414      6C7400
 21415              	.LASF297:
 21416 10f4 48414C5F 		.ascii	"HAL_TIM_Base_DeInit\000"
 21416      54494D5F 
 21416      42617365 
 21416      5F446549 
 21416      6E697400 
 21417              	.LASF151:
 21418 1108 54494D5F 		.ascii	"TIM_ExtTRGPolarity\000"
 21418      45787454 
 21418      5247506F 
 21418      6C617269 
 21418      747900
 21419              	.LASF64:
 21420 111b 48414C5F 		.ascii	"HAL_DMA_StateTypeDef\000"
 21420      444D415F 
 21420      53746174 
 21420      65547970 
 21420      65446566 
 21421              	.LASF42:
 21422 1130 454E4142 		.ascii	"ENABLE\000"
 21422      4C4500
 21423              	.LASF97:
 21424 1137 49435072 		.ascii	"ICPrescaler\000"
 21424      65736361 
 21424      6C657200 
 21425              	.LASF111:
 21426 1143 436C6F63 		.ascii	"ClockPrescaler\000"
 21426      6B507265 
 21426      7363616C 
 21426      657200
 21427              	.LASF225:
 21428 1152 48414C5F 		.ascii	"HAL_TIM_DMABurst_WriteStop\000"
 21428      54494D5F 
 21428      444D4142 
 21428      75727374 
 21428      5F577269 
 21429              	.LASF275:
 21430 116d 48414C5F 		.ascii	"HAL_TIM_PWM_MspDeInit\000"
 21430      54494D5F 
 21430      50574D5F 
 21430      4D737044 
 21430      65496E69 
ARM GAS  /tmp/ccTsJCXT.s 			page 533


 21431              	.LASF86:
 21432 1183 50756C73 		.ascii	"Pulse\000"
 21432      6500
 21433              	.LASF253:
 21434 1189 48414C5F 		.ascii	"HAL_TIM_OnePulse_MspDeInit\000"
 21434      54494D5F 
 21434      4F6E6550 
 21434      756C7365 
 21434      5F4D7370 
 21435              	.LASF257:
 21436 11a4 4F6E6550 		.ascii	"OnePulseMode\000"
 21436      756C7365 
 21436      4D6F6465 
 21436      00
 21437              	.LASF124:
 21438 11b1 54726967 		.ascii	"TriggerFilter\000"
 21438      67657246 
 21438      696C7465 
 21438      7200
 21439              	.LASF140:
 21440 11bf 54494D5F 		.ascii	"TIM_HandleTypeDef\000"
 21440      48616E64 
 21440      6C655479 
 21440      70654465 
 21440      6600
 21441              	.LASF71:
 21442 11d1 58666572 		.ascii	"XferHalfCpltCallback\000"
 21442      48616C66 
 21442      43706C74 
 21442      43616C6C 
 21442      6261636B 
 21443              	.LASF37:
 21444 11e6 42445452 		.ascii	"BDTR\000"
 21444      00
 21445              	.LASF286:
 21446 11eb 48414C5F 		.ascii	"HAL_TIM_OC_MspInit\000"
 21446      54494D5F 
 21446      4F435F4D 
 21446      7370496E 
 21446      697400
 21447              	.LASF16:
 21448 11fe 75696E74 		.ascii	"uint32_t\000"
 21448      33325F74 
 21448      00
 21449              	.LASF182:
 21450 1207 54494D5F 		.ascii	"TIM_DMATriggerCplt\000"
 21450      444D4154 
 21450      72696767 
 21450      65724370 
 21450      6C7400
 21451              	.LASF161:
 21452 121a 746D7063 		.ascii	"tmpccer\000"
 21452      63657200 
 21453              	.LASF195:
 21454 1222 48414C5F 		.ascii	"HAL_TIM_Base_GetState\000"
 21454      54494D5F 
 21454      42617365 
ARM GAS  /tmp/ccTsJCXT.s 			page 534


 21454      5F476574 
 21454      53746174 
 21455              	.LASF50:
 21456 1238 48414C5F 		.ascii	"HAL_LOCKED\000"
 21456      4C4F434B 
 21456      454400
 21457              	.LASF47:
 21458 1243 48414C5F 		.ascii	"HAL_TIMEOUT\000"
 21458      54494D45 
 21458      4F555400 
 21459              	.LASF112:
 21460 124f 436C6F63 		.ascii	"ClockFilter\000"
 21460      6B46696C 
 21460      74657200 
 21461              	.LASF177:
 21462 125b 54494D5F 		.ascii	"TIM_OC1_SetConfig\000"
 21462      4F43315F 
 21462      53657443 
 21462      6F6E6669 
 21462      6700
 21463              	.LASF5:
 21464 126d 73686F72 		.ascii	"short unsigned int\000"
 21464      7420756E 
 21464      7369676E 
 21464      65642069 
 21464      6E7400
 21465              	.LASF141:
 21466 1280 48414C5F 		.ascii	"HAL_TICK_FREQ_10HZ\000"
 21466      5449434B 
 21466      5F465245 
 21466      515F3130 
 21466      485A00
 21467              	.LASF227:
 21468 1293 48414C5F 		.ascii	"HAL_TIM_OnePulse_ConfigChannel\000"
 21468      54494D5F 
 21468      4F6E6550 
 21468      756C7365 
 21468      5F436F6E 
 21469              	.LASF96:
 21470 12b2 54494D5F 		.ascii	"TIM_OnePulse_InitTypeDef\000"
 21470      4F6E6550 
 21470      756C7365 
 21470      5F496E69 
 21470      74547970 
 21471              	.LASF61:
 21472 12cb 48414C5F 		.ascii	"HAL_DMA_STATE_READY\000"
 21472      444D415F 
 21472      53544154 
 21472      455F5245 
 21472      41445900 
 21473              	.LASF250:
 21474 12df 48414C5F 		.ascii	"HAL_TIM_OnePulse_Start_IT\000"
 21474      54494D5F 
 21474      4F6E6550 
 21474      756C7365 
 21474      5F537461 
 21475              	.LASF154:
ARM GAS  /tmp/ccTsJCXT.s 			page 535


 21476 12f9 746D7073 		.ascii	"tmpsmcr\000"
 21476      6D637200 
 21477              	.LASF201:
 21478 1301 48414C5F 		.ascii	"HAL_TIM_IC_CaptureHalfCpltCallback\000"
 21478      54494D5F 
 21478      49435F43 
 21478      61707475 
 21478      72654861 
 21479              	.LASF6:
 21480 1324 5F5F696E 		.ascii	"__int32_t\000"
 21480      7433325F 
 21480      7400
 21481              	.LASF272:
 21482 132e 48414C5F 		.ascii	"HAL_TIM_PWM_Start_IT\000"
 21482      54494D5F 
 21482      50574D5F 
 21482      53746172 
 21482      745F4954 
 21483              	.LASF144:
 21484 1343 48414C5F 		.ascii	"HAL_TICK_FREQ_DEFAULT\000"
 21484      5449434B 
 21484      5F465245 
 21484      515F4445 
 21484      4641554C 
 21485              	.LASF260:
 21486 1359 70446174 		.ascii	"pData\000"
 21486      6100
 21487              	.LASF285:
 21488 135f 48414C5F 		.ascii	"HAL_TIM_OC_MspDeInit\000"
 21488      54494D5F 
 21488      4F435F4D 
 21488      73704465 
 21488      496E6974 
 21489              	.LASF246:
 21490 1374 48414C5F 		.ascii	"HAL_TIM_Encoder_MspInit\000"
 21490      54494D5F 
 21490      456E636F 
 21490      6465725F 
 21490      4D737049 
 21491              	.LASF193:
 21492 138c 48414C5F 		.ascii	"HAL_TIM_PWM_GetState\000"
 21492      54494D5F 
 21492      50574D5F 
 21492      47657453 
 21492      74617465 
 21493              	.LASF241:
 21494 13a1 48414C5F 		.ascii	"HAL_TIM_Encoder_Stop_IT\000"
 21494      54494D5F 
 21494      456E636F 
 21494      6465725F 
 21494      53746F70 
 21495              	.LASF120:
 21496 13b9 536C6176 		.ascii	"SlaveMode\000"
 21496      654D6F64 
 21496      6500
 21497              	.LASF185:
 21498 13c3 54494D5F 		.ascii	"TIM_DMACaptureHalfCplt\000"
ARM GAS  /tmp/ccTsJCXT.s 			page 536


 21498      444D4143 
 21498      61707475 
 21498      72654861 
 21498      6C664370 
 21499              	.LASF305:
 21500 13da 2F686F6D 		.ascii	"/home/berndoj/git/stm32tctst/lib/stm32f1hal\000"
 21500      652F6265 
 21500      726E646F 
 21500      6A2F6769 
 21500      742F7374 
 21501              	.LASF266:
 21502 1406 48414C5F 		.ascii	"HAL_TIM_IC_MspInit\000"
 21502      54494D5F 
 21502      49435F4D 
 21502      7370496E 
 21502      697400
 21503              	.LASF261:
 21504 1419 48414C5F 		.ascii	"HAL_TIM_IC_Stop_IT\000"
 21504      54494D5F 
 21504      49435F53 
 21504      746F705F 
 21504      495400
 21505              	.LASF163:
 21506 142c 54494D5F 		.ascii	"TIM_TI2_ConfigInputStage\000"
 21506      5449325F 
 21506      436F6E66 
 21506      6967496E 
 21506      70757453 
 21507              	.LASF212:
 21508 1445 48414C5F 		.ascii	"HAL_TIM_ConfigClockSource\000"
 21508      54494D5F 
 21508      436F6E66 
 21508      6967436C 
 21508      6F636B53 
 21509              	.LASF108:
 21510 145f 54494D5F 		.ascii	"TIM_Encoder_InitTypeDef\000"
 21510      456E636F 
 21510      6465725F 
 21510      496E6974 
 21510      54797065 
 21511              	.LASF81:
 21512 1477 436C6F63 		.ascii	"ClockDivision\000"
 21512      6B446976 
 21512      6973696F 
 21512      6E00
 21513              	.LASF298:
 21514 1485 48414C5F 		.ascii	"HAL_TIM_Base_Init\000"
 21514      54494D5F 
 21514      42617365 
 21514      5F496E69 
 21514      7400
 21515              		.ident	"GCC: (15:6.3.1+svn253039-1build1) 6.3.1 20170620"
ARM GAS  /tmp/ccTsJCXT.s 			page 537


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_tim.c
     /tmp/ccTsJCXT.s:69     .text:0000000000000000 $t
     /tmp/ccTsJCXT.s:75     .text:0000000000000000 TIM_OC1_SetConfig
     /tmp/ccTsJCXT.s:164    .text:000000000000004c $d
     /tmp/ccTsJCXT.s:168    .text:0000000000000050 $t
     /tmp/ccTsJCXT.s:174    .text:0000000000000050 TIM_OC3_SetConfig
     /tmp/ccTsJCXT.s:263    .text:00000000000000a0 $d
     /tmp/ccTsJCXT.s:267    .text:00000000000000a4 $t
     /tmp/ccTsJCXT.s:273    .text:00000000000000a4 TIM_OC4_SetConfig
     /tmp/ccTsJCXT.s:345    .text:00000000000000e4 $d
     /tmp/ccTsJCXT.s:349    .text:00000000000000e8 $t
     /tmp/ccTsJCXT.s:356    .text:00000000000000e8 HAL_TIM_Base_MspInit
     /tmp/ccTsJCXT.s:373    .text:00000000000000ea HAL_TIM_Base_MspDeInit
     /tmp/ccTsJCXT.s:390    .text:00000000000000ec HAL_TIM_Base_DeInit
     /tmp/ccTsJCXT.s:448    .text:0000000000000126 HAL_TIM_Base_Start
     /tmp/ccTsJCXT.s:490    .text:000000000000014a HAL_TIM_Base_Stop
     /tmp/ccTsJCXT.s:535    .text:0000000000000178 HAL_TIM_Base_Start_IT
     /tmp/ccTsJCXT.s:577    .text:0000000000000198 HAL_TIM_Base_Stop_IT
     /tmp/ccTsJCXT.s:618    .text:00000000000001c2 HAL_TIM_Base_Start_DMA
     /tmp/ccTsJCXT.s:703    .text:0000000000000220 $d
     /tmp/ccTsJCXT.s:3005   .text:0000000000000ac0 TIM_DMAPeriodElapsedCplt
     /tmp/ccTsJCXT.s:3055   .text:0000000000000ad2 TIM_DMAPeriodElapsedHalfCplt
     /tmp/ccTsJCXT.s:3865   .text:0000000000000d46 TIM_DMAError
     /tmp/ccTsJCXT.s:709    .text:000000000000022c $t
     /tmp/ccTsJCXT.s:716    .text:000000000000022c HAL_TIM_Base_Stop_DMA
     /tmp/ccTsJCXT.s:776    .text:0000000000000268 HAL_TIM_OC_MspInit
     /tmp/ccTsJCXT.s:793    .text:000000000000026a HAL_TIM_OC_MspDeInit
     /tmp/ccTsJCXT.s:810    .text:000000000000026c HAL_TIM_OC_DeInit
     /tmp/ccTsJCXT.s:868    .text:00000000000002a6 HAL_TIM_PWM_MspInit
     /tmp/ccTsJCXT.s:885    .text:00000000000002a8 HAL_TIM_PWM_MspDeInit
     /tmp/ccTsJCXT.s:902    .text:00000000000002aa HAL_TIM_PWM_DeInit
     /tmp/ccTsJCXT.s:960    .text:00000000000002e4 HAL_TIM_IC_MspInit
     /tmp/ccTsJCXT.s:977    .text:00000000000002e6 HAL_TIM_IC_MspDeInit
     /tmp/ccTsJCXT.s:994    .text:00000000000002e8 HAL_TIM_IC_DeInit
     /tmp/ccTsJCXT.s:1052   .text:0000000000000322 HAL_TIM_OnePulse_MspInit
     /tmp/ccTsJCXT.s:1069   .text:0000000000000324 HAL_TIM_OnePulse_MspDeInit
     /tmp/ccTsJCXT.s:1086   .text:0000000000000326 HAL_TIM_OnePulse_DeInit
     /tmp/ccTsJCXT.s:1144   .text:0000000000000360 HAL_TIM_OnePulse_Start
     /tmp/ccTsJCXT.s:1197   .text:0000000000000394 $d
     /tmp/ccTsJCXT.s:1201   .text:0000000000000398 $t
     /tmp/ccTsJCXT.s:1208   .text:0000000000000398 HAL_TIM_OnePulse_Stop
     /tmp/ccTsJCXT.s:1283   .text:00000000000003f4 $d
     /tmp/ccTsJCXT.s:1287   .text:00000000000003f8 $t
     /tmp/ccTsJCXT.s:1294   .text:00000000000003f8 HAL_TIM_OnePulse_Start_IT
     /tmp/ccTsJCXT.s:1355   .text:000000000000043c $d
     /tmp/ccTsJCXT.s:1359   .text:0000000000000440 $t
     /tmp/ccTsJCXT.s:1366   .text:0000000000000440 HAL_TIM_OnePulse_Stop_IT
     /tmp/ccTsJCXT.s:1448   .text:00000000000004ac $d
     /tmp/ccTsJCXT.s:1452   .text:00000000000004b0 $t
     /tmp/ccTsJCXT.s:1459   .text:00000000000004b0 HAL_TIM_Encoder_MspInit
     /tmp/ccTsJCXT.s:1476   .text:00000000000004b2 HAL_TIM_Encoder_MspDeInit
     /tmp/ccTsJCXT.s:1493   .text:00000000000004b4 HAL_TIM_Encoder_DeInit
     /tmp/ccTsJCXT.s:1551   .text:00000000000004ee HAL_TIM_Encoder_Start
     /tmp/ccTsJCXT.s:1631   .text:0000000000000532 HAL_TIM_Encoder_Stop
     /tmp/ccTsJCXT.s:1713   .text:000000000000057a HAL_TIM_Encoder_Start_IT
     /tmp/ccTsJCXT.s:1819   .text:00000000000005e8 HAL_TIM_Encoder_Stop_IT
ARM GAS  /tmp/ccTsJCXT.s 			page 538


     /tmp/ccTsJCXT.s:1938   .text:000000000000065c HAL_TIM_Encoder_Start_DMA
     /tmp/ccTsJCXT.s:2199   .text:00000000000007a0 $d
     /tmp/ccTsJCXT.s:3123   .text:0000000000000ae6 TIM_DMACaptureCplt
     /tmp/ccTsJCXT.s:3213   .text:0000000000000b24 TIM_DMACaptureHalfCplt
     /tmp/ccTsJCXT.s:2205   .text:00000000000007ac $t
     /tmp/ccTsJCXT.s:2212   .text:00000000000007ac HAL_TIM_Encoder_Stop_DMA
     /tmp/ccTsJCXT.s:2368   .text:000000000000083e HAL_TIM_DMABurst_WriteStart
     /tmp/ccTsJCXT.s:2524   .text:00000000000008f4 $d
     /tmp/ccTsJCXT.s:3303   .text:0000000000000b62 TIM_DMADelayPulseCplt
     /tmp/ccTsJCXT.s:3393   .text:0000000000000ba0 TIM_DMADelayPulseHalfCplt
     /tmp/ccTsJCXT.s:3763   .text:0000000000000d22 TIM_DMATriggerCplt
     /tmp/ccTsJCXT.s:3812   .text:0000000000000d34 TIM_DMATriggerHalfCplt
     /tmp/ccTsJCXT.s:2536   .text:0000000000000918 $t
     /tmp/ccTsJCXT.s:2543   .text:0000000000000918 HAL_TIM_DMABurst_ReadStart
     /tmp/ccTsJCXT.s:2698   .text:00000000000009d0 $d
     /tmp/ccTsJCXT.s:2710   .text:00000000000009f4 $t
     /tmp/ccTsJCXT.s:2717   .text:00000000000009f4 HAL_TIM_DMABurst_ReadStop
     /tmp/ccTsJCXT.s:2821   .text:0000000000000a54 HAL_TIM_DMABurst_WriteStop
     /tmp/ccTsJCXT.s:2838   .text:0000000000000a58 HAL_TIM_GenerateEvent
     /tmp/ccTsJCXT.s:2878   .text:0000000000000a7c HAL_TIM_ConfigTI1Input
     /tmp/ccTsJCXT.s:2914   .text:0000000000000a8c HAL_TIM_ReadCapturedValue
     /tmp/ccTsJCXT.s:2927   .text:0000000000000a94 $d
     /tmp/ccTsJCXT.s:2989   .text:0000000000000abe HAL_TIM_PeriodElapsedCallback
     /tmp/ccTsJCXT.s:3039   .text:0000000000000ad0 HAL_TIM_PeriodElapsedHalfCpltCallback
     /tmp/ccTsJCXT.s:3089   .text:0000000000000ae2 HAL_TIM_OC_DelayElapsedCallback
     /tmp/ccTsJCXT.s:3106   .text:0000000000000ae4 HAL_TIM_IC_CaptureCallback
     /tmp/ccTsJCXT.s:3196   .text:0000000000000b22 HAL_TIM_IC_CaptureHalfCpltCallback
     /tmp/ccTsJCXT.s:3286   .text:0000000000000b60 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/ccTsJCXT.s:3376   .text:0000000000000b9e HAL_TIM_PWM_PulseFinishedHalfCpltCallback
     /tmp/ccTsJCXT.s:3466   .text:0000000000000bdc HAL_TIM_TriggerCallback
     /tmp/ccTsJCXT.s:3483   .text:0000000000000bde HAL_TIM_IRQHandler
     /tmp/ccTsJCXT.s:3796   .text:0000000000000d32 HAL_TIM_TriggerHalfCpltCallback
     /tmp/ccTsJCXT.s:3846   .text:0000000000000d44 HAL_TIM_ErrorCallback
     /tmp/ccTsJCXT.s:3899   .text:0000000000000d56 HAL_TIM_Base_GetState
     /tmp/ccTsJCXT.s:3917   .text:0000000000000d5c HAL_TIM_OC_GetState
     /tmp/ccTsJCXT.s:3935   .text:0000000000000d62 HAL_TIM_PWM_GetState
     /tmp/ccTsJCXT.s:3953   .text:0000000000000d68 HAL_TIM_IC_GetState
     /tmp/ccTsJCXT.s:3971   .text:0000000000000d6e HAL_TIM_OnePulse_GetState
     /tmp/ccTsJCXT.s:3989   .text:0000000000000d74 HAL_TIM_Encoder_GetState
     /tmp/ccTsJCXT.s:4012   .text:0000000000000d7a TIM_Base_SetConfig
     /tmp/ccTsJCXT.s:4101   .text:0000000000000dd4 $d
     /tmp/ccTsJCXT.s:4106   .text:0000000000000ddc $t
     /tmp/ccTsJCXT.s:4113   .text:0000000000000ddc HAL_TIM_Base_Init
     /tmp/ccTsJCXT.s:4173   .text:0000000000000e10 HAL_TIM_OC_Init
     /tmp/ccTsJCXT.s:4233   .text:0000000000000e44 HAL_TIM_PWM_Init
     /tmp/ccTsJCXT.s:4293   .text:0000000000000e78 HAL_TIM_IC_Init
     /tmp/ccTsJCXT.s:4353   .text:0000000000000eac HAL_TIM_OnePulse_Init
     /tmp/ccTsJCXT.s:4426   .text:0000000000000ef2 HAL_TIM_Encoder_Init
     /tmp/ccTsJCXT.s:4564   .text:0000000000000f88 TIM_OC2_SetConfig
     /tmp/ccTsJCXT.s:4653   .text:0000000000000fdc $d
     /tmp/ccTsJCXT.s:4657   .text:0000000000000fe0 $t
     /tmp/ccTsJCXT.s:4664   .text:0000000000000fe0 HAL_TIM_OC_ConfigChannel
     /tmp/ccTsJCXT.s:4699   .text:0000000000001004 $d
     /tmp/ccTsJCXT.s:4762   .text:000000000000103c HAL_TIM_PWM_ConfigChannel
     /tmp/ccTsJCXT.s:4796   .text:000000000000105e $d
     /tmp/ccTsJCXT.s:4929   .text:0000000000001100 TIM_TI1_SetConfig
     /tmp/ccTsJCXT.s:5010   .text:0000000000001148 $d
ARM GAS  /tmp/ccTsJCXT.s 			page 539


     /tmp/ccTsJCXT.s:5014   .text:000000000000114c $t
     /tmp/ccTsJCXT.s:5021   .text:000000000000114c HAL_TIM_IC_ConfigChannel
     /tmp/ccTsJCXT.s:5295   .text:000000000000125c HAL_TIM_OnePulse_ConfigChannel
     /tmp/ccTsJCXT.s:5521   .text:0000000000001350 TIM_ETR_SetConfig
     /tmp/ccTsJCXT.s:5560   .text:0000000000001364 HAL_TIM_ConfigOCrefClear
     /tmp/ccTsJCXT.s:5606   .text:0000000000001392 $d
     /tmp/ccTsJCXT.s:5739   .text:0000000000001430 HAL_TIM_ConfigClockSource
     /tmp/ccTsJCXT.s:6050   .text:0000000000001558 TIM_SlaveTimer_SetConfig
     /tmp/ccTsJCXT.s:6242   .text:00000000000015fc HAL_TIM_SlaveConfigSynchro
     /tmp/ccTsJCXT.s:6317   .text:000000000000164a HAL_TIM_SlaveConfigSynchro_IT
     /tmp/ccTsJCXT.s:6392   .text:0000000000001698 TIM_CCxChannelCmd
     /tmp/ccTsJCXT.s:6433   .text:00000000000016b4 HAL_TIM_OC_Stop
     /tmp/ccTsJCXT.s:6493   .text:0000000000001704 $d
     /tmp/ccTsJCXT.s:6497   .text:0000000000001708 $t
     /tmp/ccTsJCXT.s:6504   .text:0000000000001708 HAL_TIM_PWM_Start
     /tmp/ccTsJCXT.s:6555   .text:000000000000173c $d
     /tmp/ccTsJCXT.s:6559   .text:0000000000001740 $t
     /tmp/ccTsJCXT.s:6566   .text:0000000000001740 HAL_TIM_OC_Start
     /tmp/ccTsJCXT.s:6583   .text:0000000000001744 HAL_TIM_PWM_Stop
     /tmp/ccTsJCXT.s:6649   .text:000000000000179c $d
     /tmp/ccTsJCXT.s:6653   .text:00000000000017a0 $t
     /tmp/ccTsJCXT.s:6660   .text:00000000000017a0 HAL_TIM_PWM_Start_IT
     /tmp/ccTsJCXT.s:6679   .text:00000000000017ac $d
     /tmp/ccTsJCXT.s:6757   .text:0000000000001810 $d
     /tmp/ccTsJCXT.s:6761   .text:0000000000001814 $t
     /tmp/ccTsJCXT.s:6768   .text:0000000000001814 HAL_TIM_OC_Start_IT
     /tmp/ccTsJCXT.s:6785   .text:0000000000001818 HAL_TIM_PWM_Stop_IT
     /tmp/ccTsJCXT.s:6805   .text:0000000000001824 $d
     /tmp/ccTsJCXT.s:6892   .text:00000000000018a8 $d
     /tmp/ccTsJCXT.s:6896   .text:00000000000018ac $t
     /tmp/ccTsJCXT.s:6903   .text:00000000000018ac HAL_TIM_OC_Stop_IT
     /tmp/ccTsJCXT.s:6920   .text:00000000000018b0 HAL_TIM_PWM_Start_DMA
     /tmp/ccTsJCXT.s:6975   .text:00000000000018e0 $d
     /tmp/ccTsJCXT.s:7123   .text:00000000000019b0 $d
     /tmp/ccTsJCXT.s:7130   .text:00000000000019c0 $t
     /tmp/ccTsJCXT.s:7137   .text:00000000000019c0 HAL_TIM_OC_Start_DMA
     /tmp/ccTsJCXT.s:7154   .text:00000000000019c4 HAL_TIM_PWM_Stop_DMA
     /tmp/ccTsJCXT.s:7177   .text:00000000000019d2 $d
     /tmp/ccTsJCXT.s:7292   .text:0000000000001a70 $d
     /tmp/ccTsJCXT.s:7296   .text:0000000000001a74 $t
     /tmp/ccTsJCXT.s:7303   .text:0000000000001a74 HAL_TIM_OC_Stop_DMA
     /tmp/ccTsJCXT.s:7320   .text:0000000000001a78 HAL_TIM_IC_Start
     /tmp/ccTsJCXT.s:7370   .text:0000000000001a9c HAL_TIM_IC_Stop
     /tmp/ccTsJCXT.s:7418   .text:0000000000001aca HAL_TIM_IC_Start_IT
     /tmp/ccTsJCXT.s:7437   .text:0000000000001ad6 $d
     /tmp/ccTsJCXT.s:7514   .text:0000000000001b2c HAL_TIM_IC_Stop_IT
     /tmp/ccTsJCXT.s:7533   .text:0000000000001b38 $d
     /tmp/ccTsJCXT.s:7609   .text:0000000000001b98 HAL_TIM_IC_Start_DMA
     /tmp/ccTsJCXT.s:7659   .text:0000000000001bc6 $d
     /tmp/ccTsJCXT.s:7799   .text:0000000000001c88 $d
     /tmp/ccTsJCXT.s:7805   .text:0000000000001c94 $t
     /tmp/ccTsJCXT.s:7812   .text:0000000000001c94 HAL_TIM_IC_Stop_DMA
     /tmp/ccTsJCXT.s:7834   .text:0000000000001ca2 $d
                     .debug_frame:0000000000000010 $d
     /tmp/ccTsJCXT.s:2940   .text:0000000000000aa1 $d
     /tmp/ccTsJCXT.s:2940   .text:0000000000000aa2 $t
     /tmp/ccTsJCXT.s:4712   .text:0000000000001011 $d
ARM GAS  /tmp/ccTsJCXT.s 			page 540


     /tmp/ccTsJCXT.s:4712   .text:0000000000001012 $t
     /tmp/ccTsJCXT.s:4809   .text:000000000000106b $d
     /tmp/ccTsJCXT.s:4809   .text:000000000000106c $t
     /tmp/ccTsJCXT.s:5620   .text:000000000000139f $d
     /tmp/ccTsJCXT.s:5620   .text:00000000000013a0 $t
     /tmp/ccTsJCXT.s:6692   .text:00000000000017b9 $d
     /tmp/ccTsJCXT.s:6692   .text:00000000000017ba $t
     /tmp/ccTsJCXT.s:6818   .text:0000000000001831 $d
     /tmp/ccTsJCXT.s:6818   .text:0000000000001832 $t
     /tmp/ccTsJCXT.s:6988   .text:00000000000018ed $d
     /tmp/ccTsJCXT.s:6988   .text:00000000000018ee $t
     /tmp/ccTsJCXT.s:7190   .text:00000000000019df $d
     /tmp/ccTsJCXT.s:7190   .text:00000000000019e0 $t
     /tmp/ccTsJCXT.s:7450   .text:0000000000001ae3 $d
     /tmp/ccTsJCXT.s:7450   .text:0000000000001ae4 $t
     /tmp/ccTsJCXT.s:7546   .text:0000000000001b45 $d
     /tmp/ccTsJCXT.s:7546   .text:0000000000001b46 $t
     /tmp/ccTsJCXT.s:7672   .text:0000000000001bd3 $d
     /tmp/ccTsJCXT.s:7672   .text:0000000000001bd4 $t
     /tmp/ccTsJCXT.s:7847   .text:0000000000001caf $d
     /tmp/ccTsJCXT.s:7847   .text:0000000000001cb0 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
TIMEx_DMACommutationCplt
TIMEx_DMACommutationHalfCplt
HAL_TIMEx_BreakCallback
HAL_TIMEx_CommutCallback
