ARM GAS  /tmp/ccq2vSAC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"stm32f1xx_hal_pcd.c"
  12              	@ GNU C11 (15:6.3.1+svn253039-1build1) version 6.3.1 20170620 (arm-none-eabi)
  13              	@	compiled by GNU C version 7.2.0, GMP version 6.1.2, MPFR version 4.0.1-rc1, MPC version 1.1.0, is
  14              	@ warning: MPFR header version 4.0.1-rc1 differs from library version 4.0.1.
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I ./inc -I ./inc/Legacy -I ../cmsisstm32f1xx/inc
  17              	@ -I ../cmsiscore/inc -imultilib thumb/v7-m -D__USES_INITFINI__
  18              	@ -D STM32F103x6 -D RUN_FROM_FLASH=1 -D __c src/stm32f1xx_hal_pcd.c
  19              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip bin/stm32f1xx_hal_pcd.o -g
  20              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  32              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  33              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  34              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  35              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  36              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  39              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  40              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  41              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  42              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  43              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  44              	@ -freg-struct-return -freorder-blocks -freorder-functions
  45              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  46              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  47              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  48              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  49              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  50              	@ -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  51              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  53              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  54              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  55              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  56              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  57              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
ARM GAS  /tmp/ccq2vSAC.s 			page 2


  58              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  59              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  60              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  61              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  62              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  63              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  64              	@ -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.align	1
  70              		.weak	HAL_PCD_MspInit
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	HAL_PCD_MspInit, %function
  76              	HAL_PCD_MspInit:
  77              	.LFB115:
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 7047     		bx	lr	@
  83              		.cfi_endproc
  84              	.LFE115:
  85              		.size	HAL_PCD_MspInit, .-HAL_PCD_MspInit
  86              		.align	1
  87              		.global	HAL_PCD_Init
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  92              		.type	HAL_PCD_Init, %function
  93              	HAL_PCD_Init:
  94              	.LFB65:
  95              		.file 1 "src/stm32f1xx_hal_pcd.c"
   1:src/stm32f1xx_hal_pcd.c **** /**
   2:src/stm32f1xx_hal_pcd.c ****   ******************************************************************************
   3:src/stm32f1xx_hal_pcd.c ****   * @file    stm32f1xx_hal_pcd.c
   4:src/stm32f1xx_hal_pcd.c ****   * @author  MCD Application Team
   5:src/stm32f1xx_hal_pcd.c ****   * @brief   PCD HAL module driver.
   6:src/stm32f1xx_hal_pcd.c ****   *          This file provides firmware functions to manage the following
   7:src/stm32f1xx_hal_pcd.c ****   *          functionalities of the USB Peripheral Controller:
   8:src/stm32f1xx_hal_pcd.c ****   *           + Initialization and de-initialization functions
   9:src/stm32f1xx_hal_pcd.c ****   *           + IO operation functions
  10:src/stm32f1xx_hal_pcd.c ****   *           + Peripheral Control functions
  11:src/stm32f1xx_hal_pcd.c ****   *           + Peripheral State functions
  12:src/stm32f1xx_hal_pcd.c ****   *
  13:src/stm32f1xx_hal_pcd.c ****   @verbatim
  14:src/stm32f1xx_hal_pcd.c ****   ==============================================================================
  15:src/stm32f1xx_hal_pcd.c ****                     ##### How to use this driver #####
  16:src/stm32f1xx_hal_pcd.c ****   ==============================================================================
  17:src/stm32f1xx_hal_pcd.c ****     [..]
  18:src/stm32f1xx_hal_pcd.c ****       The PCD HAL driver can be used as follows:
  19:src/stm32f1xx_hal_pcd.c **** 
ARM GAS  /tmp/ccq2vSAC.s 			page 3


  20:src/stm32f1xx_hal_pcd.c ****      (#) Declare a PCD_HandleTypeDef handle structure, for example:
  21:src/stm32f1xx_hal_pcd.c ****          PCD_HandleTypeDef  hpcd;
  22:src/stm32f1xx_hal_pcd.c **** 
  23:src/stm32f1xx_hal_pcd.c ****      (#) Fill parameters of Init structure in HCD handle
  24:src/stm32f1xx_hal_pcd.c **** 
  25:src/stm32f1xx_hal_pcd.c ****      (#) Call HAL_PCD_Init() API to initialize the PCD peripheral (Core, Device core, ...)
  26:src/stm32f1xx_hal_pcd.c **** 
  27:src/stm32f1xx_hal_pcd.c ****      (#) Initialize the PCD low level resources through the HAL_PCD_MspInit() API:
  28:src/stm32f1xx_hal_pcd.c ****          (##) Enable the PCD/USB Low Level interface clock using
  29:src/stm32f1xx_hal_pcd.c ****               (+++) __HAL_RCC_USB_CLK_ENABLE(); For USB Device only FS peripheral
  30:src/stm32f1xx_hal_pcd.c **** 
  31:src/stm32f1xx_hal_pcd.c ****          (##) Initialize the related GPIO clocks
  32:src/stm32f1xx_hal_pcd.c ****          (##) Configure PCD pin-out
  33:src/stm32f1xx_hal_pcd.c ****          (##) Configure PCD NVIC interrupt
  34:src/stm32f1xx_hal_pcd.c **** 
  35:src/stm32f1xx_hal_pcd.c ****      (#)Associate the Upper USB device stack to the HAL PCD Driver:
  36:src/stm32f1xx_hal_pcd.c ****          (##) hpcd.pData = pdev;
  37:src/stm32f1xx_hal_pcd.c **** 
  38:src/stm32f1xx_hal_pcd.c ****      (#)Enable PCD transmission and reception:
  39:src/stm32f1xx_hal_pcd.c ****          (##) HAL_PCD_Start();
  40:src/stm32f1xx_hal_pcd.c **** 
  41:src/stm32f1xx_hal_pcd.c ****   @endverbatim
  42:src/stm32f1xx_hal_pcd.c ****   ******************************************************************************
  43:src/stm32f1xx_hal_pcd.c ****   * @attention
  44:src/stm32f1xx_hal_pcd.c ****   *
  45:src/stm32f1xx_hal_pcd.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  46:src/stm32f1xx_hal_pcd.c ****   * All rights reserved.</center></h2>
  47:src/stm32f1xx_hal_pcd.c ****   *
  48:src/stm32f1xx_hal_pcd.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  49:src/stm32f1xx_hal_pcd.c ****   * the "License"; You may not use this file except in compliance with the
  50:src/stm32f1xx_hal_pcd.c ****   * License. You may obtain a copy of the License at:
  51:src/stm32f1xx_hal_pcd.c ****   *                        opensource.org/licenses/BSD-3-Clause
  52:src/stm32f1xx_hal_pcd.c ****   *
  53:src/stm32f1xx_hal_pcd.c ****   ******************************************************************************
  54:src/stm32f1xx_hal_pcd.c ****   */
  55:src/stm32f1xx_hal_pcd.c **** 
  56:src/stm32f1xx_hal_pcd.c **** /* Includes ------------------------------------------------------------------*/
  57:src/stm32f1xx_hal_pcd.c **** #include "stm32f1xx_hal.h"
  58:src/stm32f1xx_hal_pcd.c **** 
  59:src/stm32f1xx_hal_pcd.c **** /** @addtogroup STM32F1xx_HAL_Driver
  60:src/stm32f1xx_hal_pcd.c ****   * @{
  61:src/stm32f1xx_hal_pcd.c ****   */
  62:src/stm32f1xx_hal_pcd.c **** 
  63:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD PCD
  64:src/stm32f1xx_hal_pcd.c ****   * @brief PCD HAL module driver
  65:src/stm32f1xx_hal_pcd.c ****   * @{
  66:src/stm32f1xx_hal_pcd.c ****   */
  67:src/stm32f1xx_hal_pcd.c **** 
  68:src/stm32f1xx_hal_pcd.c **** #ifdef HAL_PCD_MODULE_ENABLED
  69:src/stm32f1xx_hal_pcd.c **** 
  70:src/stm32f1xx_hal_pcd.c **** #if defined (USB) || defined (USB_OTG_FS)
  71:src/stm32f1xx_hal_pcd.c **** 
  72:src/stm32f1xx_hal_pcd.c **** /* Private types -------------------------------------------------------------*/
  73:src/stm32f1xx_hal_pcd.c **** /* Private variables ---------------------------------------------------------*/
  74:src/stm32f1xx_hal_pcd.c **** /* Private constants ---------------------------------------------------------*/
  75:src/stm32f1xx_hal_pcd.c **** /* Private macros ------------------------------------------------------------*/
  76:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Private_Macros PCD Private Macros
ARM GAS  /tmp/ccq2vSAC.s 			page 4


  77:src/stm32f1xx_hal_pcd.c ****   * @{
  78:src/stm32f1xx_hal_pcd.c ****   */
  79:src/stm32f1xx_hal_pcd.c **** #define PCD_MIN(a, b)  (((a) < (b)) ? (a) : (b))
  80:src/stm32f1xx_hal_pcd.c **** #define PCD_MAX(a, b)  (((a) > (b)) ? (a) : (b))
  81:src/stm32f1xx_hal_pcd.c **** /**
  82:src/stm32f1xx_hal_pcd.c ****   * @}
  83:src/stm32f1xx_hal_pcd.c ****   */
  84:src/stm32f1xx_hal_pcd.c **** 
  85:src/stm32f1xx_hal_pcd.c **** /* Private functions prototypes ----------------------------------------------*/
  86:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Private_Functions PCD Private Functions
  87:src/stm32f1xx_hal_pcd.c ****   * @{
  88:src/stm32f1xx_hal_pcd.c ****   */
  89:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
  90:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum);
  91:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum);
  92:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum);
  93:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
  94:src/stm32f1xx_hal_pcd.c **** 
  95:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
  96:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_ISR_Handler(PCD_HandleTypeDef *hpcd);
  97:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB) */
  98:src/stm32f1xx_hal_pcd.c **** /**
  99:src/stm32f1xx_hal_pcd.c ****   * @}
 100:src/stm32f1xx_hal_pcd.c ****   */
 101:src/stm32f1xx_hal_pcd.c **** 
 102:src/stm32f1xx_hal_pcd.c **** /* Exported functions --------------------------------------------------------*/
 103:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions PCD Exported Functions
 104:src/stm32f1xx_hal_pcd.c ****   * @{
 105:src/stm32f1xx_hal_pcd.c ****   */
 106:src/stm32f1xx_hal_pcd.c **** 
 107:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group1 Initialization and de-initialization functions
 108:src/stm32f1xx_hal_pcd.c ****  *  @brief    Initialization and Configuration functions
 109:src/stm32f1xx_hal_pcd.c ****  *
 110:src/stm32f1xx_hal_pcd.c **** @verbatim
 111:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
 112:src/stm32f1xx_hal_pcd.c ****             ##### Initialization and de-initialization functions #####
 113:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
 114:src/stm32f1xx_hal_pcd.c ****     [..]  This section provides functions allowing to:
 115:src/stm32f1xx_hal_pcd.c **** 
 116:src/stm32f1xx_hal_pcd.c **** @endverbatim
 117:src/stm32f1xx_hal_pcd.c ****   * @{
 118:src/stm32f1xx_hal_pcd.c ****   */
 119:src/stm32f1xx_hal_pcd.c **** 
 120:src/stm32f1xx_hal_pcd.c **** /**
 121:src/stm32f1xx_hal_pcd.c ****   * @brief  Initializes the PCD according to the specified
 122:src/stm32f1xx_hal_pcd.c ****   *         parameters in the PCD_InitTypeDef and initialize the associated handle.
 123:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 124:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 125:src/stm32f1xx_hal_pcd.c ****   */
 126:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
 127:src/stm32f1xx_hal_pcd.c **** {
  96              		.loc 1 127 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL0:
 101              		.loc 1 127 0
ARM GAS  /tmp/ccq2vSAC.s 			page 5


 102 0002 F0B5     		push	{r4, r5, r6, r7, lr}	@
 103              	.LCFI0:
 104              		.cfi_def_cfa_offset 20
 105              		.cfi_offset 4, -20
 106              		.cfi_offset 5, -16
 107              		.cfi_offset 6, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 128:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
 129:src/stm32f1xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx;
 130:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
 131:src/stm32f1xx_hal_pcd.c ****   uint8_t i;
 132:src/stm32f1xx_hal_pcd.c **** 
 133:src/stm32f1xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 134:src/stm32f1xx_hal_pcd.c ****   if (hpcd == NULL)
 110              		.loc 1 134 0
 111 0004 0446     		mov	r4, r0	@ hpcd, hpcd
 127:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
 112              		.loc 1 127 0
 113 0006 87B0     		sub	sp, sp, #28	@,,
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 48
 116              		.loc 1 134 0
 117 0008 10B3     		cbz	r0, .L11	@ hpcd,
 135:src/stm32f1xx_hal_pcd.c ****   {
 136:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 137:src/stm32f1xx_hal_pcd.c ****   }
 138:src/stm32f1xx_hal_pcd.c **** 
 139:src/stm32f1xx_hal_pcd.c ****   /* Check the parameters */
 140:src/stm32f1xx_hal_pcd.c ****   assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));
 141:src/stm32f1xx_hal_pcd.c **** 
 142:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
 143:src/stm32f1xx_hal_pcd.c ****   USBx = hpcd->Instance;
 144:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
 145:src/stm32f1xx_hal_pcd.c **** 
 146:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_RESET)
 118              		.loc 1 146 0
 119 000a 90F82932 		ldrb	r3, [r0, #553]	@ zero_extendqisi2	@ hpcd_8(D)->State, hpcd_8(D)->State
 120 000e 03F0FF02 		and	r2, r3, #255	@ _10, hpcd_8(D)->State,
 121 0012 1BB9     		cbnz	r3, .L4	@ hpcd_8(D)->State,
 147:src/stm32f1xx_hal_pcd.c ****   {
 148:src/stm32f1xx_hal_pcd.c ****     /* Allocate lock resource and initialize it */
 149:src/stm32f1xx_hal_pcd.c ****     hpcd->Lock = HAL_UNLOCKED;
 122              		.loc 1 149 0
 123 0014 80F82822 		strb	r2, [r0, #552]	@ _10, hpcd_8(D)->Lock
 150:src/stm32f1xx_hal_pcd.c **** 
 151:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 152:src/stm32f1xx_hal_pcd.c ****     hpcd->SOFCallback = HAL_PCD_SOFCallback;
 153:src/stm32f1xx_hal_pcd.c ****     hpcd->SetupStageCallback = HAL_PCD_SetupStageCallback;
 154:src/stm32f1xx_hal_pcd.c ****     hpcd->ResetCallback = HAL_PCD_ResetCallback;
 155:src/stm32f1xx_hal_pcd.c ****     hpcd->SuspendCallback = HAL_PCD_SuspendCallback;
 156:src/stm32f1xx_hal_pcd.c ****     hpcd->ResumeCallback = HAL_PCD_ResumeCallback;
 157:src/stm32f1xx_hal_pcd.c ****     hpcd->ConnectCallback = HAL_PCD_ConnectCallback;
 158:src/stm32f1xx_hal_pcd.c ****     hpcd->DisconnectCallback = HAL_PCD_DisconnectCallback;
 159:src/stm32f1xx_hal_pcd.c ****     hpcd->DataOutStageCallback = HAL_PCD_DataOutStageCallback;
 160:src/stm32f1xx_hal_pcd.c ****     hpcd->DataInStageCallback = HAL_PCD_DataInStageCallback;
 161:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOOUTIncompleteCallback = HAL_PCD_ISOOUTIncompleteCallback;
ARM GAS  /tmp/ccq2vSAC.s 			page 6


 162:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOINIncompleteCallback = HAL_PCD_ISOINIncompleteCallback;
 163:src/stm32f1xx_hal_pcd.c **** 
 164:src/stm32f1xx_hal_pcd.c ****     if (hpcd->MspInitCallback == NULL)
 165:src/stm32f1xx_hal_pcd.c ****     {
 166:src/stm32f1xx_hal_pcd.c ****       hpcd->MspInitCallback = HAL_PCD_MspInit;
 167:src/stm32f1xx_hal_pcd.c ****     }
 168:src/stm32f1xx_hal_pcd.c **** 
 169:src/stm32f1xx_hal_pcd.c ****     /* Init the low level hardware */
 170:src/stm32f1xx_hal_pcd.c ****     hpcd->MspInitCallback(hpcd);
 171:src/stm32f1xx_hal_pcd.c **** #else
 172:src/stm32f1xx_hal_pcd.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 173:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_MspInit(hpcd);
 124              		.loc 1 173 0
 125 0018 FFF7FEFF 		bl	HAL_PCD_MspInit	@
 126              	.LVL1:
 127              	.L4:
 174:src/stm32f1xx_hal_pcd.c **** #endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
 175:src/stm32f1xx_hal_pcd.c ****   }
 176:src/stm32f1xx_hal_pcd.c **** 
 177:src/stm32f1xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_BUSY;
 178:src/stm32f1xx_hal_pcd.c **** 
 179:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
 180:src/stm32f1xx_hal_pcd.c ****   /* Disable DMA mode for FS instance */
 181:src/stm32f1xx_hal_pcd.c ****   if ((USBx->CID & (0x1U << 8)) == 0U)
 182:src/stm32f1xx_hal_pcd.c ****   {
 183:src/stm32f1xx_hal_pcd.c ****     hpcd->Init.dma_enable = 0U;
 184:src/stm32f1xx_hal_pcd.c ****   }
 185:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
 186:src/stm32f1xx_hal_pcd.c **** 
 187:src/stm32f1xx_hal_pcd.c ****   /* Disable the Interrupts */
 188:src/stm32f1xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 128              		.loc 1 188 0
 129 001c 2546     		mov	r5, r4	@ tmp141, hpcd
 177:src/stm32f1xx_hal_pcd.c **** 
 130              		.loc 1 177 0
 131 001e 0323     		movs	r3, #3	@ tmp138,
 189:src/stm32f1xx_hal_pcd.c **** 
 190:src/stm32f1xx_hal_pcd.c ****   /*Init the Core (common init.) */
 191:src/stm32f1xx_hal_pcd.c ****   if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 132              		.loc 1 191 0
 133 0020 6E46     		mov	r6, sp	@ tmp140,
 188:src/stm32f1xx_hal_pcd.c **** 
 134              		.loc 1 188 0
 135 0022 55F8100B 		ldr	r0, [r5], #16	@, hpcd_8(D)->Instance
 177:src/stm32f1xx_hal_pcd.c **** 
 136              		.loc 1 177 0
 137 0026 84F82932 		strb	r3, [r4, #553]	@ tmp138, hpcd_8(D)->State
 188:src/stm32f1xx_hal_pcd.c **** 
 138              		.loc 1 188 0
 139 002a FFF7FEFF 		bl	USB_DisableGlobalInt	@
 140              	.LVL2:
 141              		.loc 1 191 0
 142 002e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp141,,,,
 143 0030 0FC6     		stmia	r6!, {r0, r1, r2, r3}	@ tmp140,,,,
 144 0032 2B68     		ldr	r3, [r5]	@ hpcd_8(D)->Init, hpcd_8(D)->Init
 145 0034 2546     		mov	r5, r4	@ tmp217, hpcd
 146 0036 3360     		str	r3, [r6]	@ hpcd_8(D)->Init,
ARM GAS  /tmp/ccq2vSAC.s 			page 7


 147 0038 271D     		adds	r7, r4, #4	@ tmp143, hpcd,
 148 003a 97E80E00 		ldm	r7, {r1, r2, r3}	@ tmp143,,,
 149 003e 55F8100B 		ldr	r0, [r5], #16	@, hpcd_8(D)->Instance
 150 0042 FFF7FEFF 		bl	USB_CoreInit	@
 151              	.LVL3:
 152 0046 0646     		mov	r6, r0	@ tmp144,
 153 0048 20B1     		cbz	r0, .L5	@ tmp144,
 192:src/stm32f1xx_hal_pcd.c ****   {
 193:src/stm32f1xx_hal_pcd.c ****     hpcd->State = HAL_PCD_STATE_ERROR;
 154              		.loc 1 193 0
 155 004a 0223     		movs	r3, #2	@ tmp145,
 156 004c 84F82932 		strb	r3, [r4, #553]	@ tmp145, hpcd_8(D)->State
 157              	.L11:
 136:src/stm32f1xx_hal_pcd.c ****   }
 158              		.loc 1 136 0
 159 0050 0125     		movs	r5, #1	@ <retval>,
 160 0052 48E0     		b	.L3	@
 161              	.L5:
 194:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 195:src/stm32f1xx_hal_pcd.c ****   }
 196:src/stm32f1xx_hal_pcd.c **** 
 197:src/stm32f1xx_hal_pcd.c ****   /* Force Device Mode*/
 198:src/stm32f1xx_hal_pcd.c ****   (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
 162              		.loc 1 198 0
 163 0054 0146     		mov	r1, r0	@, tmp144
 164 0056 2068     		ldr	r0, [r4]	@, hpcd_8(D)->Instance
 165 0058 FFF7FEFF 		bl	USB_SetCurrentMode	@
 166              	.LVL4:
 199:src/stm32f1xx_hal_pcd.c **** 
 200:src/stm32f1xx_hal_pcd.c ****   /* Init endpoints structures */
 201:src/stm32f1xx_hal_pcd.c ****   for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 167              		.loc 1 201 0
 168 005c 3046     		mov	r0, r6	@ ivtmp.52, tmp144
 202:src/stm32f1xx_hal_pcd.c ****   {
 203:src/stm32f1xx_hal_pcd.c ****     /* Init ep structure */
 204:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].is_in = 1U;
 169              		.loc 1 204 0
 170 005e 4FF0010E 		mov	lr, #1	@ tmp221,
 201:src/stm32f1xx_hal_pcd.c ****   {
 171              		.loc 1 201 0
 172 0062 6168     		ldr	r1, [r4, #4]	@ _23, hpcd_8(D)->Init.dev_endpoints
 173              	.LVL5:
 174              	.L6:
 175 0064 C3B2     		uxtb	r3, r0	@ i, ivtmp.52
 176              	.LVL6:
 201:src/stm32f1xx_hal_pcd.c ****   {
 177              		.loc 1 201 0 is_stmt 0 discriminator 1
 178 0066 9942     		cmp	r1, r3	@ _23, i
 179 0068 00F10100 		add	r0, r0, #1	@ ivtmp.52, ivtmp.52,
 180 006c 17D8     		bhi	.L7	@,
 181 006e 0022     		movs	r2, #0	@ ivtmp.45,
 205:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].num = i;
 206:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].tx_fifo_num = i;
 207:src/stm32f1xx_hal_pcd.c ****     /* Control until ep is activated */
 208:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 209:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].maxpacket = 0U;
 210:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].xfer_buff = 0U;
ARM GAS  /tmp/ccq2vSAC.s 			page 8


 211:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].xfer_len = 0U;
 212:src/stm32f1xx_hal_pcd.c ****   }
 213:src/stm32f1xx_hal_pcd.c **** 
 214:src/stm32f1xx_hal_pcd.c ****   for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 215:src/stm32f1xx_hal_pcd.c ****   {
 216:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].is_in = 0U;
 182              		.loc 1 216 0 is_stmt 1 discriminator 1
 183 0070 1046     		mov	r0, r2	@ tmp220, ivtmp.45
 184              	.LVL7:
 185              	.L8:
 186 0072 D3B2     		uxtb	r3, r2	@ i, ivtmp.45
 187              	.LVL8:
 214:src/stm32f1xx_hal_pcd.c ****   {
 188              		.loc 1 214 0 discriminator 1
 189 0074 9942     		cmp	r1, r3	@ _23, i
 190 0076 02F10102 		add	r2, r2, #1	@ ivtmp.45, ivtmp.45,
 191 007a 1DD8     		bhi	.L9	@,
 217:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].num = i;
 218:src/stm32f1xx_hal_pcd.c ****     /* Control until ep is activated */
 219:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 220:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].maxpacket = 0U;
 221:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].xfer_buff = 0U;
 222:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].xfer_len = 0U;
 223:src/stm32f1xx_hal_pcd.c ****   }
 224:src/stm32f1xx_hal_pcd.c **** 
 225:src/stm32f1xx_hal_pcd.c ****   /* Init Device */
 226:src/stm32f1xx_hal_pcd.c ****   if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 192              		.loc 1 226 0
 193 007c 6E46     		mov	r6, sp	@ tmp205,
 194 007e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp206,,,,
 195              	.LVL9:
 196 0080 0FC6     		stmia	r6!, {r0, r1, r2, r3}	@ tmp205,,,,
 197 0082 2B68     		ldr	r3, [r5]	@ hpcd_8(D)->Init, hpcd_8(D)->Init
 198 0084 3360     		str	r3, [r6]	@ hpcd_8(D)->Init,
 199 0086 97E80E00 		ldm	r7, {r1, r2, r3}	@ tmp143,,,
 200 008a 2068     		ldr	r0, [r4]	@, hpcd_8(D)->Instance
 201 008c FFF7FEFF 		bl	USB_DevInit	@
 202              	.LVL10:
 203 0090 0123     		movs	r3, #1	@ tmp219,
 204 0092 0546     		mov	r5, r0	@ <retval>,
 205 0094 00B3     		cbz	r0, .L10	@ <retval>,
 227:src/stm32f1xx_hal_pcd.c ****   {
 228:src/stm32f1xx_hal_pcd.c ****     hpcd->State = HAL_PCD_STATE_ERROR;
 206              		.loc 1 228 0
 207 0096 0222     		movs	r2, #2	@ tmp210,
 208 0098 84F82922 		strb	r2, [r4, #553]	@ tmp210, hpcd_8(D)->State
 209 009c D8E7     		b	.L11	@
 210              	.LVL11:
 211              	.L7:
 204:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].num = i;
 212              		.loc 1 204 0 discriminator 3
 213 009e 04EB4312 		add	r2, r4, r3, lsl #5	@ tmp148, hpcd, i,
 214 00a2 82F829E0 		strb	lr, [r2, #41]	@ tmp221, hpcd_8(D)->IN_ep[_24].is_in
 205:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].tx_fifo_num = i;
 215              		.loc 1 205 0 discriminator 3
 216 00a6 82F82830 		strb	r3, [r2, #40]	@ i, hpcd_8(D)->IN_ep[_24].num
 206:src/stm32f1xx_hal_pcd.c ****     /* Control until ep is activated */
ARM GAS  /tmp/ccq2vSAC.s 			page 9


 217              		.loc 1 206 0 discriminator 3
 218 00aa D386     		strh	r3, [r2, #54]	@ movhi	@ i, hpcd_8(D)->IN_ep[_24].tx_fifo_num
 208:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].maxpacket = 0U;
 219              		.loc 1 208 0 discriminator 3
 220 00ac 82F82B60 		strb	r6, [r2, #43]	@ tmp222, hpcd_8(D)->IN_ep[_24].type
 209:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].xfer_buff = 0U;
 221              		.loc 1 209 0 discriminator 3
 222 00b0 9663     		str	r6, [r2, #56]	@ tmp222, hpcd_8(D)->IN_ep[_24].maxpacket
 210:src/stm32f1xx_hal_pcd.c ****     hpcd->IN_ep[i].xfer_len = 0U;
 223              		.loc 1 210 0 discriminator 3
 224 00b2 D663     		str	r6, [r2, #60]	@ tmp222, hpcd_8(D)->IN_ep[_24].xfer_buff
 211:src/stm32f1xx_hal_pcd.c ****   }
 225              		.loc 1 211 0 discriminator 3
 226 00b4 1664     		str	r6, [r2, #64]	@ tmp222, hpcd_8(D)->IN_ep[_24].xfer_len
 227              	.LVL12:
 228 00b6 D5E7     		b	.L6	@
 229              	.LVL13:
 230              	.L9:
 216:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].num = i;
 231              		.loc 1 216 0 discriminator 3
 232 00b8 04EB4316 		add	r6, r4, r3, lsl #5	@ tmp179, hpcd, i,
 217:src/stm32f1xx_hal_pcd.c ****     /* Control until ep is activated */
 233              		.loc 1 217 0 discriminator 3
 234 00bc 86F82831 		strb	r3, [r6, #296]	@ i, hpcd_8(D)->OUT_ep[_36].num
 222:src/stm32f1xx_hal_pcd.c ****   }
 235              		.loc 1 222 0 discriminator 3
 236 00c0 0A33     		adds	r3, r3, #10	@ tmp200, i,
 237              	.LVL14:
 238 00c2 5B01     		lsls	r3, r3, #5	@ tmp201, tmp200,
 216:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].num = i;
 239              		.loc 1 216 0 discriminator 3
 240 00c4 86F82901 		strb	r0, [r6, #297]	@ tmp220, hpcd_8(D)->OUT_ep[_36].is_in
 219:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].maxpacket = 0U;
 241              		.loc 1 219 0 discriminator 3
 242 00c8 86F82B01 		strb	r0, [r6, #299]	@ tmp220, hpcd_8(D)->OUT_ep[_36].type
 220:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].xfer_buff = 0U;
 243              		.loc 1 220 0 discriminator 3
 244 00cc C6F83801 		str	r0, [r6, #312]	@ tmp220, hpcd_8(D)->OUT_ep[_36].maxpacket
 221:src/stm32f1xx_hal_pcd.c ****     hpcd->OUT_ep[i].xfer_len = 0U;
 245              		.loc 1 221 0 discriminator 3
 246 00d0 C6F83C01 		str	r0, [r6, #316]	@ tmp220, hpcd_8(D)->OUT_ep[_36].xfer_buff
 222:src/stm32f1xx_hal_pcd.c ****   }
 247              		.loc 1 222 0 discriminator 3
 248 00d4 E050     		str	r0, [r4, r3]	@ tmp220, hpcd_8(D)->OUT_ep[_36].xfer_len
 249              	.LVL15:
 250 00d6 CCE7     		b	.L8	@
 251              	.LVL16:
 252              	.L10:
 229:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 230:src/stm32f1xx_hal_pcd.c ****   }
 231:src/stm32f1xx_hal_pcd.c **** 
 232:src/stm32f1xx_hal_pcd.c ****   hpcd->USB_Address = 0U;
 253              		.loc 1 232 0
 254 00d8 84F82400 		strb	r0, [r4, #36]	@ <retval>, hpcd_8(D)->USB_Address
 233:src/stm32f1xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_READY;
 255              		.loc 1 233 0
 256 00dc 84F82932 		strb	r3, [r4, #553]	@ tmp219, hpcd_8(D)->State
ARM GAS  /tmp/ccq2vSAC.s 			page 10


 234:src/stm32f1xx_hal_pcd.c ****   (void)USB_DevDisconnect(hpcd->Instance);
 257              		.loc 1 234 0
 258 00e0 2068     		ldr	r0, [r4]	@, hpcd_8(D)->Instance
 259 00e2 FFF7FEFF 		bl	USB_DevDisconnect	@
 260              	.LVL17:
 261              	.L3:
 235:src/stm32f1xx_hal_pcd.c **** 
 236:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 237:src/stm32f1xx_hal_pcd.c **** }
 262              		.loc 1 237 0
 263 00e6 2846     		mov	r0, r5	@, <retval>
 264 00e8 07B0     		add	sp, sp, #28	@,,
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 20
 267              		@ sp needed	@
 268 00ea F0BD     		pop	{r4, r5, r6, r7, pc}	@
 269              		.cfi_endproc
 270              	.LFE65:
 271              		.size	HAL_PCD_Init, .-HAL_PCD_Init
 272              		.align	1
 273              		.weak	HAL_PCD_MspDeInit
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 278              		.type	HAL_PCD_MspDeInit, %function
 279              	HAL_PCD_MspDeInit:
 280              	.LFB113:
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 00ec 7047     		bx	lr	@
 286              		.cfi_endproc
 287              	.LFE113:
 288              		.size	HAL_PCD_MspDeInit, .-HAL_PCD_MspDeInit
 289              		.align	1
 290              		.global	HAL_PCD_Start
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 295              		.type	HAL_PCD_Start, %function
 296              	HAL_PCD_Start:
 297              	.LFB69:
 238:src/stm32f1xx_hal_pcd.c **** 
 239:src/stm32f1xx_hal_pcd.c **** /**
 240:src/stm32f1xx_hal_pcd.c ****   * @brief  DeInitializes the PCD peripheral.
 241:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 242:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 243:src/stm32f1xx_hal_pcd.c ****   */
 244:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DeInit(PCD_HandleTypeDef *hpcd)
 245:src/stm32f1xx_hal_pcd.c **** {
 246:src/stm32f1xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 247:src/stm32f1xx_hal_pcd.c ****   if (hpcd == NULL)
 248:src/stm32f1xx_hal_pcd.c ****   {
 249:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccq2vSAC.s 			page 11


 250:src/stm32f1xx_hal_pcd.c ****   }
 251:src/stm32f1xx_hal_pcd.c **** 
 252:src/stm32f1xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_BUSY;
 253:src/stm32f1xx_hal_pcd.c **** 
 254:src/stm32f1xx_hal_pcd.c ****   /* Stop Device */
 255:src/stm32f1xx_hal_pcd.c ****   (void)HAL_PCD_Stop(hpcd);
 256:src/stm32f1xx_hal_pcd.c **** 
 257:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 258:src/stm32f1xx_hal_pcd.c ****   if (hpcd->MspDeInitCallback == NULL)
 259:src/stm32f1xx_hal_pcd.c ****   {
 260:src/stm32f1xx_hal_pcd.c ****     hpcd->MspDeInitCallback = HAL_PCD_MspDeInit; /* Legacy weak MspDeInit  */
 261:src/stm32f1xx_hal_pcd.c ****   }
 262:src/stm32f1xx_hal_pcd.c **** 
 263:src/stm32f1xx_hal_pcd.c ****   /* DeInit the low level hardware */
 264:src/stm32f1xx_hal_pcd.c ****   hpcd->MspDeInitCallback(hpcd);
 265:src/stm32f1xx_hal_pcd.c **** #else
 266:src/stm32f1xx_hal_pcd.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 267:src/stm32f1xx_hal_pcd.c ****   HAL_PCD_MspDeInit(hpcd);
 268:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 269:src/stm32f1xx_hal_pcd.c **** 
 270:src/stm32f1xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_RESET;
 271:src/stm32f1xx_hal_pcd.c **** 
 272:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 273:src/stm32f1xx_hal_pcd.c **** }
 274:src/stm32f1xx_hal_pcd.c **** 
 275:src/stm32f1xx_hal_pcd.c **** /**
 276:src/stm32f1xx_hal_pcd.c ****   * @brief  Initializes the PCD MSP.
 277:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 278:src/stm32f1xx_hal_pcd.c ****   * @retval None
 279:src/stm32f1xx_hal_pcd.c ****   */
 280:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
 281:src/stm32f1xx_hal_pcd.c **** {
 282:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 283:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
 284:src/stm32f1xx_hal_pcd.c **** 
 285:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 286:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_MspInit could be implemented in the user file
 287:src/stm32f1xx_hal_pcd.c ****    */
 288:src/stm32f1xx_hal_pcd.c **** }
 289:src/stm32f1xx_hal_pcd.c **** 
 290:src/stm32f1xx_hal_pcd.c **** /**
 291:src/stm32f1xx_hal_pcd.c ****   * @brief  DeInitializes PCD MSP.
 292:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 293:src/stm32f1xx_hal_pcd.c ****   * @retval None
 294:src/stm32f1xx_hal_pcd.c ****   */
 295:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd)
 296:src/stm32f1xx_hal_pcd.c **** {
 297:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 298:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
 299:src/stm32f1xx_hal_pcd.c **** 
 300:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 301:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_MspDeInit could be implemented in the user file
 302:src/stm32f1xx_hal_pcd.c ****    */
 303:src/stm32f1xx_hal_pcd.c **** }
 304:src/stm32f1xx_hal_pcd.c **** 
 305:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 306:src/stm32f1xx_hal_pcd.c **** /**
ARM GAS  /tmp/ccq2vSAC.s 			page 12


 307:src/stm32f1xx_hal_pcd.c ****   * @brief  Register a User USB PCD Callback
 308:src/stm32f1xx_hal_pcd.c ****   *         To be used instead of the weak predefined callback
 309:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd USB PCD handle
 310:src/stm32f1xx_hal_pcd.c ****   * @param  CallbackID ID of the callback to be registered
 311:src/stm32f1xx_hal_pcd.c ****   *         This parameter can be one of the following values:
 312:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SOF_CB_ID USB PCD SOF callback ID
 313:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SETUPSTAGE_CB_ID USB PCD Setup callback ID
 314:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_RESET_CB_ID USB PCD Reset callback ID
 315:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SUSPEND_CB_ID USB PCD Suspend callback ID
 316:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_RESUME_CB_ID USB PCD Resume callback ID
 317:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_CONNECT_CB_ID USB PCD Connect callback ID
 318:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_DISCONNECT_CB_ID OTG PCD Disconnect callback ID
 319:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_MSPINIT_CB_ID MspDeInit callback ID
 320:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_MSPDEINIT_CB_ID MspDeInit callback ID
 321:src/stm32f1xx_hal_pcd.c ****   * @param  pCallback pointer to the Callback function
 322:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 323:src/stm32f1xx_hal_pcd.c ****   */
 324:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_RegisterCallback(PCD_HandleTypeDef *hpcd, HAL_PCD_CallbackIDTypeDef Callb
 325:src/stm32f1xx_hal_pcd.c **** {
 326:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 327:src/stm32f1xx_hal_pcd.c **** 
 328:src/stm32f1xx_hal_pcd.c ****   if (pCallback == NULL)
 329:src/stm32f1xx_hal_pcd.c ****   {
 330:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 331:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 332:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 333:src/stm32f1xx_hal_pcd.c ****   }
 334:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 335:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 336:src/stm32f1xx_hal_pcd.c **** 
 337:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 338:src/stm32f1xx_hal_pcd.c ****   {
 339:src/stm32f1xx_hal_pcd.c ****     switch (CallbackID)
 340:src/stm32f1xx_hal_pcd.c ****     {
 341:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SOF_CB_ID :
 342:src/stm32f1xx_hal_pcd.c ****         hpcd->SOFCallback = pCallback;
 343:src/stm32f1xx_hal_pcd.c ****         break;
 344:src/stm32f1xx_hal_pcd.c **** 
 345:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SETUPSTAGE_CB_ID :
 346:src/stm32f1xx_hal_pcd.c ****         hpcd->SetupStageCallback = pCallback;
 347:src/stm32f1xx_hal_pcd.c ****         break;
 348:src/stm32f1xx_hal_pcd.c **** 
 349:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_RESET_CB_ID :
 350:src/stm32f1xx_hal_pcd.c ****         hpcd->ResetCallback = pCallback;
 351:src/stm32f1xx_hal_pcd.c ****         break;
 352:src/stm32f1xx_hal_pcd.c **** 
 353:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SUSPEND_CB_ID :
 354:src/stm32f1xx_hal_pcd.c ****         hpcd->SuspendCallback = pCallback;
 355:src/stm32f1xx_hal_pcd.c ****         break;
 356:src/stm32f1xx_hal_pcd.c **** 
 357:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_RESUME_CB_ID :
 358:src/stm32f1xx_hal_pcd.c ****         hpcd->ResumeCallback = pCallback;
 359:src/stm32f1xx_hal_pcd.c ****         break;
 360:src/stm32f1xx_hal_pcd.c **** 
 361:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_CONNECT_CB_ID :
 362:src/stm32f1xx_hal_pcd.c ****         hpcd->ConnectCallback = pCallback;
 363:src/stm32f1xx_hal_pcd.c ****         break;
ARM GAS  /tmp/ccq2vSAC.s 			page 13


 364:src/stm32f1xx_hal_pcd.c **** 
 365:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_DISCONNECT_CB_ID :
 366:src/stm32f1xx_hal_pcd.c ****         hpcd->DisconnectCallback = pCallback;
 367:src/stm32f1xx_hal_pcd.c ****         break;
 368:src/stm32f1xx_hal_pcd.c **** 
 369:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPINIT_CB_ID :
 370:src/stm32f1xx_hal_pcd.c ****         hpcd->MspInitCallback = pCallback;
 371:src/stm32f1xx_hal_pcd.c ****         break;
 372:src/stm32f1xx_hal_pcd.c **** 
 373:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPDEINIT_CB_ID :
 374:src/stm32f1xx_hal_pcd.c ****         hpcd->MspDeInitCallback = pCallback;
 375:src/stm32f1xx_hal_pcd.c ****         break;
 376:src/stm32f1xx_hal_pcd.c **** 
 377:src/stm32f1xx_hal_pcd.c ****       default :
 378:src/stm32f1xx_hal_pcd.c ****         /* Update the error code */
 379:src/stm32f1xx_hal_pcd.c ****         hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 380:src/stm32f1xx_hal_pcd.c ****         /* Return error status */
 381:src/stm32f1xx_hal_pcd.c ****         status =  HAL_ERROR;
 382:src/stm32f1xx_hal_pcd.c ****         break;
 383:src/stm32f1xx_hal_pcd.c ****     }
 384:src/stm32f1xx_hal_pcd.c ****   }
 385:src/stm32f1xx_hal_pcd.c ****   else if (hpcd->State == HAL_PCD_STATE_RESET)
 386:src/stm32f1xx_hal_pcd.c ****   {
 387:src/stm32f1xx_hal_pcd.c ****     switch (CallbackID)
 388:src/stm32f1xx_hal_pcd.c ****     {
 389:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPINIT_CB_ID :
 390:src/stm32f1xx_hal_pcd.c ****         hpcd->MspInitCallback = pCallback;
 391:src/stm32f1xx_hal_pcd.c ****         break;
 392:src/stm32f1xx_hal_pcd.c **** 
 393:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPDEINIT_CB_ID :
 394:src/stm32f1xx_hal_pcd.c ****         hpcd->MspDeInitCallback = pCallback;
 395:src/stm32f1xx_hal_pcd.c ****         break;
 396:src/stm32f1xx_hal_pcd.c **** 
 397:src/stm32f1xx_hal_pcd.c ****       default :
 398:src/stm32f1xx_hal_pcd.c ****         /* Update the error code */
 399:src/stm32f1xx_hal_pcd.c ****         hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 400:src/stm32f1xx_hal_pcd.c ****         /* Return error status */
 401:src/stm32f1xx_hal_pcd.c ****         status =  HAL_ERROR;
 402:src/stm32f1xx_hal_pcd.c ****         break;
 403:src/stm32f1xx_hal_pcd.c ****     }
 404:src/stm32f1xx_hal_pcd.c ****   }
 405:src/stm32f1xx_hal_pcd.c ****   else
 406:src/stm32f1xx_hal_pcd.c ****   {
 407:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 408:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 409:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 410:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 411:src/stm32f1xx_hal_pcd.c ****   }
 412:src/stm32f1xx_hal_pcd.c **** 
 413:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 414:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 415:src/stm32f1xx_hal_pcd.c ****   return status;
 416:src/stm32f1xx_hal_pcd.c **** }
 417:src/stm32f1xx_hal_pcd.c **** 
 418:src/stm32f1xx_hal_pcd.c **** /**
 419:src/stm32f1xx_hal_pcd.c ****   * @brief  Unregister an USB PCD Callback
 420:src/stm32f1xx_hal_pcd.c ****   *         USB PCD callabck is redirected to the weak predefined callback
ARM GAS  /tmp/ccq2vSAC.s 			page 14


 421:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd USB PCD handle
 422:src/stm32f1xx_hal_pcd.c ****   * @param  CallbackID ID of the callback to be unregistered
 423:src/stm32f1xx_hal_pcd.c ****   *         This parameter can be one of the following values:
 424:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SOF_CB_ID USB PCD SOF callback ID
 425:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SETUPSTAGE_CB_ID USB PCD Setup callback ID
 426:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_RESET_CB_ID USB PCD Reset callback ID
 427:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_SUSPEND_CB_ID USB PCD Suspend callback ID
 428:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_RESUME_CB_ID USB PCD Resume callback ID
 429:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_CONNECT_CB_ID USB PCD Connect callback ID
 430:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_DISCONNECT_CB_ID OTG PCD Disconnect callback ID
 431:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_MSPINIT_CB_ID MspDeInit callback ID
 432:src/stm32f1xx_hal_pcd.c ****   *          @arg @ref HAL_PCD_MSPDEINIT_CB_ID MspDeInit callback ID
 433:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 434:src/stm32f1xx_hal_pcd.c ****   */
 435:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_UnRegisterCallback(PCD_HandleTypeDef *hpcd, HAL_PCD_CallbackIDTypeDef Cal
 436:src/stm32f1xx_hal_pcd.c **** {
 437:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 438:src/stm32f1xx_hal_pcd.c **** 
 439:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 440:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 441:src/stm32f1xx_hal_pcd.c **** 
 442:src/stm32f1xx_hal_pcd.c ****   /* Setup Legacy weak Callbacks  */
 443:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 444:src/stm32f1xx_hal_pcd.c ****   {
 445:src/stm32f1xx_hal_pcd.c ****     switch (CallbackID)
 446:src/stm32f1xx_hal_pcd.c ****     {
 447:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SOF_CB_ID :
 448:src/stm32f1xx_hal_pcd.c ****         hpcd->SOFCallback = HAL_PCD_SOFCallback;
 449:src/stm32f1xx_hal_pcd.c ****         break;
 450:src/stm32f1xx_hal_pcd.c **** 
 451:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SETUPSTAGE_CB_ID :
 452:src/stm32f1xx_hal_pcd.c ****         hpcd->SetupStageCallback = HAL_PCD_SetupStageCallback;
 453:src/stm32f1xx_hal_pcd.c ****         break;
 454:src/stm32f1xx_hal_pcd.c **** 
 455:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_RESET_CB_ID :
 456:src/stm32f1xx_hal_pcd.c ****         hpcd->ResetCallback = HAL_PCD_ResetCallback;
 457:src/stm32f1xx_hal_pcd.c ****         break;
 458:src/stm32f1xx_hal_pcd.c **** 
 459:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_SUSPEND_CB_ID :
 460:src/stm32f1xx_hal_pcd.c ****         hpcd->SuspendCallback = HAL_PCD_SuspendCallback;
 461:src/stm32f1xx_hal_pcd.c ****         break;
 462:src/stm32f1xx_hal_pcd.c **** 
 463:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_RESUME_CB_ID :
 464:src/stm32f1xx_hal_pcd.c ****         hpcd->ResumeCallback = HAL_PCD_ResumeCallback;
 465:src/stm32f1xx_hal_pcd.c ****         break;
 466:src/stm32f1xx_hal_pcd.c **** 
 467:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_CONNECT_CB_ID :
 468:src/stm32f1xx_hal_pcd.c ****         hpcd->ConnectCallback = HAL_PCD_ConnectCallback;
 469:src/stm32f1xx_hal_pcd.c ****         break;
 470:src/stm32f1xx_hal_pcd.c **** 
 471:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_DISCONNECT_CB_ID :
 472:src/stm32f1xx_hal_pcd.c ****         hpcd->DisconnectCallback = HAL_PCD_DisconnectCallback;
 473:src/stm32f1xx_hal_pcd.c ****         break;
 474:src/stm32f1xx_hal_pcd.c **** 
 475:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPINIT_CB_ID :
 476:src/stm32f1xx_hal_pcd.c ****         hpcd->MspInitCallback = HAL_PCD_MspInit;
 477:src/stm32f1xx_hal_pcd.c ****         break;
ARM GAS  /tmp/ccq2vSAC.s 			page 15


 478:src/stm32f1xx_hal_pcd.c **** 
 479:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPDEINIT_CB_ID :
 480:src/stm32f1xx_hal_pcd.c ****         hpcd->MspDeInitCallback = HAL_PCD_MspDeInit;
 481:src/stm32f1xx_hal_pcd.c ****         break;
 482:src/stm32f1xx_hal_pcd.c **** 
 483:src/stm32f1xx_hal_pcd.c ****       default :
 484:src/stm32f1xx_hal_pcd.c ****         /* Update the error code */
 485:src/stm32f1xx_hal_pcd.c ****         hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 486:src/stm32f1xx_hal_pcd.c **** 
 487:src/stm32f1xx_hal_pcd.c ****         /* Return error status */
 488:src/stm32f1xx_hal_pcd.c ****         status =  HAL_ERROR;
 489:src/stm32f1xx_hal_pcd.c ****         break;
 490:src/stm32f1xx_hal_pcd.c ****     }
 491:src/stm32f1xx_hal_pcd.c ****   }
 492:src/stm32f1xx_hal_pcd.c ****   else if (hpcd->State == HAL_PCD_STATE_RESET)
 493:src/stm32f1xx_hal_pcd.c ****   {
 494:src/stm32f1xx_hal_pcd.c ****     switch (CallbackID)
 495:src/stm32f1xx_hal_pcd.c ****     {
 496:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPINIT_CB_ID :
 497:src/stm32f1xx_hal_pcd.c ****         hpcd->MspInitCallback = HAL_PCD_MspInit;
 498:src/stm32f1xx_hal_pcd.c ****         break;
 499:src/stm32f1xx_hal_pcd.c **** 
 500:src/stm32f1xx_hal_pcd.c ****       case HAL_PCD_MSPDEINIT_CB_ID :
 501:src/stm32f1xx_hal_pcd.c ****         hpcd->MspDeInitCallback = HAL_PCD_MspDeInit;
 502:src/stm32f1xx_hal_pcd.c ****         break;
 503:src/stm32f1xx_hal_pcd.c **** 
 504:src/stm32f1xx_hal_pcd.c ****       default :
 505:src/stm32f1xx_hal_pcd.c ****         /* Update the error code */
 506:src/stm32f1xx_hal_pcd.c ****         hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 507:src/stm32f1xx_hal_pcd.c **** 
 508:src/stm32f1xx_hal_pcd.c ****         /* Return error status */
 509:src/stm32f1xx_hal_pcd.c ****         status =  HAL_ERROR;
 510:src/stm32f1xx_hal_pcd.c ****         break;
 511:src/stm32f1xx_hal_pcd.c ****     }
 512:src/stm32f1xx_hal_pcd.c ****   }
 513:src/stm32f1xx_hal_pcd.c ****   else
 514:src/stm32f1xx_hal_pcd.c ****   {
 515:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 516:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 517:src/stm32f1xx_hal_pcd.c **** 
 518:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 519:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 520:src/stm32f1xx_hal_pcd.c ****   }
 521:src/stm32f1xx_hal_pcd.c **** 
 522:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 523:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 524:src/stm32f1xx_hal_pcd.c ****   return status;
 525:src/stm32f1xx_hal_pcd.c **** }
 526:src/stm32f1xx_hal_pcd.c **** 
 527:src/stm32f1xx_hal_pcd.c **** /**
 528:src/stm32f1xx_hal_pcd.c ****   * @brief  Register USB PCD Data OUT Stage Callback
 529:src/stm32f1xx_hal_pcd.c ****   *         To be used instead of the weak HAL_PCD_DataOutStageCallback() predefined callback
 530:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 531:src/stm32f1xx_hal_pcd.c ****   * @param  pCallback pointer to the USB PCD Data OUT Stage Callback function
 532:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 533:src/stm32f1xx_hal_pcd.c ****   */
 534:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_RegisterDataOutStageCallback(PCD_HandleTypeDef *hpcd, pPCD_DataOutStageCa
ARM GAS  /tmp/ccq2vSAC.s 			page 16


 535:src/stm32f1xx_hal_pcd.c **** {
 536:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 537:src/stm32f1xx_hal_pcd.c **** 
 538:src/stm32f1xx_hal_pcd.c ****   if (pCallback == NULL)
 539:src/stm32f1xx_hal_pcd.c ****   {
 540:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 541:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 542:src/stm32f1xx_hal_pcd.c **** 
 543:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 544:src/stm32f1xx_hal_pcd.c ****   }
 545:src/stm32f1xx_hal_pcd.c **** 
 546:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 547:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 548:src/stm32f1xx_hal_pcd.c **** 
 549:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 550:src/stm32f1xx_hal_pcd.c ****   {
 551:src/stm32f1xx_hal_pcd.c ****     hpcd->DataOutStageCallback = pCallback;
 552:src/stm32f1xx_hal_pcd.c ****   }
 553:src/stm32f1xx_hal_pcd.c ****   else
 554:src/stm32f1xx_hal_pcd.c ****   {
 555:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 556:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 557:src/stm32f1xx_hal_pcd.c **** 
 558:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 559:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 560:src/stm32f1xx_hal_pcd.c ****   }
 561:src/stm32f1xx_hal_pcd.c **** 
 562:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 563:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 564:src/stm32f1xx_hal_pcd.c **** 
 565:src/stm32f1xx_hal_pcd.c ****   return status;
 566:src/stm32f1xx_hal_pcd.c **** }
 567:src/stm32f1xx_hal_pcd.c **** 
 568:src/stm32f1xx_hal_pcd.c **** /**
 569:src/stm32f1xx_hal_pcd.c ****   * @brief  UnRegister the USB PCD Data OUT Stage Callback
 570:src/stm32f1xx_hal_pcd.c ****   *         USB PCD Data OUT Stage Callback is redirected to the weak HAL_PCD_DataOutStageCallback(
 571:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 572:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 573:src/stm32f1xx_hal_pcd.c ****   */
 574:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_UnRegisterDataOutStageCallback(PCD_HandleTypeDef *hpcd)
 575:src/stm32f1xx_hal_pcd.c **** {
 576:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 577:src/stm32f1xx_hal_pcd.c **** 
 578:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 579:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 580:src/stm32f1xx_hal_pcd.c **** 
 581:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 582:src/stm32f1xx_hal_pcd.c ****   {
 583:src/stm32f1xx_hal_pcd.c ****     hpcd->DataOutStageCallback = HAL_PCD_DataOutStageCallback; /* Legacy weak DataOutStageCallback 
 584:src/stm32f1xx_hal_pcd.c ****   }
 585:src/stm32f1xx_hal_pcd.c ****   else
 586:src/stm32f1xx_hal_pcd.c ****   {
 587:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 588:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 589:src/stm32f1xx_hal_pcd.c **** 
 590:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 591:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
ARM GAS  /tmp/ccq2vSAC.s 			page 17


 592:src/stm32f1xx_hal_pcd.c ****   }
 593:src/stm32f1xx_hal_pcd.c **** 
 594:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 595:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 596:src/stm32f1xx_hal_pcd.c **** 
 597:src/stm32f1xx_hal_pcd.c ****   return status;
 598:src/stm32f1xx_hal_pcd.c **** }
 599:src/stm32f1xx_hal_pcd.c **** 
 600:src/stm32f1xx_hal_pcd.c **** /**
 601:src/stm32f1xx_hal_pcd.c ****   * @brief  Register USB PCD Data IN Stage Callback
 602:src/stm32f1xx_hal_pcd.c ****   *         To be used instead of the weak HAL_PCD_DataInStageCallback() predefined callback
 603:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 604:src/stm32f1xx_hal_pcd.c ****   * @param  pCallback pointer to the USB PCD Data IN Stage Callback function
 605:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 606:src/stm32f1xx_hal_pcd.c ****   */
 607:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_RegisterDataInStageCallback(PCD_HandleTypeDef *hpcd, pPCD_DataInStageCall
 608:src/stm32f1xx_hal_pcd.c **** {
 609:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 610:src/stm32f1xx_hal_pcd.c **** 
 611:src/stm32f1xx_hal_pcd.c ****   if (pCallback == NULL)
 612:src/stm32f1xx_hal_pcd.c ****   {
 613:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 614:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 615:src/stm32f1xx_hal_pcd.c **** 
 616:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 617:src/stm32f1xx_hal_pcd.c ****   }
 618:src/stm32f1xx_hal_pcd.c **** 
 619:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 620:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 621:src/stm32f1xx_hal_pcd.c **** 
 622:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 623:src/stm32f1xx_hal_pcd.c ****   {
 624:src/stm32f1xx_hal_pcd.c ****     hpcd->DataInStageCallback = pCallback;
 625:src/stm32f1xx_hal_pcd.c ****   }
 626:src/stm32f1xx_hal_pcd.c ****   else
 627:src/stm32f1xx_hal_pcd.c ****   {
 628:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 629:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 630:src/stm32f1xx_hal_pcd.c **** 
 631:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 632:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 633:src/stm32f1xx_hal_pcd.c ****   }
 634:src/stm32f1xx_hal_pcd.c **** 
 635:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 636:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 637:src/stm32f1xx_hal_pcd.c **** 
 638:src/stm32f1xx_hal_pcd.c ****   return status;
 639:src/stm32f1xx_hal_pcd.c **** }
 640:src/stm32f1xx_hal_pcd.c **** 
 641:src/stm32f1xx_hal_pcd.c **** /**
 642:src/stm32f1xx_hal_pcd.c ****   * @brief  UnRegister the USB PCD Data IN Stage Callback
 643:src/stm32f1xx_hal_pcd.c ****   *         USB PCD Data OUT Stage Callback is redirected to the weak HAL_PCD_DataInStageCallback()
 644:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 645:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 646:src/stm32f1xx_hal_pcd.c ****   */
 647:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_UnRegisterDataInStageCallback(PCD_HandleTypeDef *hpcd)
 648:src/stm32f1xx_hal_pcd.c **** {
ARM GAS  /tmp/ccq2vSAC.s 			page 18


 649:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 650:src/stm32f1xx_hal_pcd.c **** 
 651:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 652:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 653:src/stm32f1xx_hal_pcd.c **** 
 654:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 655:src/stm32f1xx_hal_pcd.c ****   {
 656:src/stm32f1xx_hal_pcd.c ****     hpcd->DataInStageCallback = HAL_PCD_DataInStageCallback; /* Legacy weak DataInStageCallback  */
 657:src/stm32f1xx_hal_pcd.c ****   }
 658:src/stm32f1xx_hal_pcd.c ****   else
 659:src/stm32f1xx_hal_pcd.c ****   {
 660:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 661:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 662:src/stm32f1xx_hal_pcd.c **** 
 663:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 664:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 665:src/stm32f1xx_hal_pcd.c ****   }
 666:src/stm32f1xx_hal_pcd.c **** 
 667:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 668:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 669:src/stm32f1xx_hal_pcd.c **** 
 670:src/stm32f1xx_hal_pcd.c ****   return status;
 671:src/stm32f1xx_hal_pcd.c **** }
 672:src/stm32f1xx_hal_pcd.c **** 
 673:src/stm32f1xx_hal_pcd.c **** /**
 674:src/stm32f1xx_hal_pcd.c ****   * @brief  Register USB PCD Iso OUT incomplete Callback
 675:src/stm32f1xx_hal_pcd.c ****   *         To be used instead of the weak HAL_PCD_ISOOUTIncompleteCallback() predefined callback
 676:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 677:src/stm32f1xx_hal_pcd.c ****   * @param  pCallback pointer to the USB PCD Iso OUT incomplete Callback function
 678:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 679:src/stm32f1xx_hal_pcd.c ****   */
 680:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_RegisterIsoOutIncpltCallback(PCD_HandleTypeDef *hpcd, pPCD_IsoOutIncpltCa
 681:src/stm32f1xx_hal_pcd.c **** {
 682:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 683:src/stm32f1xx_hal_pcd.c **** 
 684:src/stm32f1xx_hal_pcd.c ****   if (pCallback == NULL)
 685:src/stm32f1xx_hal_pcd.c ****   {
 686:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 687:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 688:src/stm32f1xx_hal_pcd.c **** 
 689:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 690:src/stm32f1xx_hal_pcd.c ****   }
 691:src/stm32f1xx_hal_pcd.c **** 
 692:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 693:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 694:src/stm32f1xx_hal_pcd.c **** 
 695:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 696:src/stm32f1xx_hal_pcd.c ****   {
 697:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOOUTIncompleteCallback = pCallback;
 698:src/stm32f1xx_hal_pcd.c ****   }
 699:src/stm32f1xx_hal_pcd.c ****   else
 700:src/stm32f1xx_hal_pcd.c ****   {
 701:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 702:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 703:src/stm32f1xx_hal_pcd.c **** 
 704:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 705:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
ARM GAS  /tmp/ccq2vSAC.s 			page 19


 706:src/stm32f1xx_hal_pcd.c ****   }
 707:src/stm32f1xx_hal_pcd.c **** 
 708:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 709:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 710:src/stm32f1xx_hal_pcd.c **** 
 711:src/stm32f1xx_hal_pcd.c ****   return status;
 712:src/stm32f1xx_hal_pcd.c **** }
 713:src/stm32f1xx_hal_pcd.c **** 
 714:src/stm32f1xx_hal_pcd.c **** /**
 715:src/stm32f1xx_hal_pcd.c ****   * @brief  UnRegister the USB PCD Iso OUT incomplete Callback
 716:src/stm32f1xx_hal_pcd.c ****   *         USB PCD Iso OUT incomplete Callback is redirected to the weak HAL_PCD_ISOOUTIncompleteC
 717:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 718:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 719:src/stm32f1xx_hal_pcd.c ****   */
 720:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_UnRegisterIsoOutIncpltCallback(PCD_HandleTypeDef *hpcd)
 721:src/stm32f1xx_hal_pcd.c **** {
 722:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 723:src/stm32f1xx_hal_pcd.c **** 
 724:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 725:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 726:src/stm32f1xx_hal_pcd.c **** 
 727:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 728:src/stm32f1xx_hal_pcd.c ****   {
 729:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOOUTIncompleteCallback = HAL_PCD_ISOOUTIncompleteCallback; /* Legacy weak ISOOUTIncompl
 730:src/stm32f1xx_hal_pcd.c ****   }
 731:src/stm32f1xx_hal_pcd.c ****   else
 732:src/stm32f1xx_hal_pcd.c ****   {
 733:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 734:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 735:src/stm32f1xx_hal_pcd.c **** 
 736:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 737:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 738:src/stm32f1xx_hal_pcd.c ****   }
 739:src/stm32f1xx_hal_pcd.c **** 
 740:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 741:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 742:src/stm32f1xx_hal_pcd.c **** 
 743:src/stm32f1xx_hal_pcd.c ****   return status;
 744:src/stm32f1xx_hal_pcd.c **** }
 745:src/stm32f1xx_hal_pcd.c **** 
 746:src/stm32f1xx_hal_pcd.c **** /**
 747:src/stm32f1xx_hal_pcd.c ****   * @brief  Register USB PCD Iso IN incomplete Callback
 748:src/stm32f1xx_hal_pcd.c ****   *         To be used instead of the weak HAL_PCD_ISOINIncompleteCallback() predefined callback
 749:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 750:src/stm32f1xx_hal_pcd.c ****   * @param  pCallback pointer to the USB PCD Iso IN incomplete Callback function
 751:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 752:src/stm32f1xx_hal_pcd.c ****   */
 753:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_RegisterIsoInIncpltCallback(PCD_HandleTypeDef *hpcd, pPCD_IsoInIncpltCall
 754:src/stm32f1xx_hal_pcd.c **** {
 755:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 756:src/stm32f1xx_hal_pcd.c **** 
 757:src/stm32f1xx_hal_pcd.c ****   if (pCallback == NULL)
 758:src/stm32f1xx_hal_pcd.c ****   {
 759:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 760:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 761:src/stm32f1xx_hal_pcd.c **** 
 762:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccq2vSAC.s 			page 20


 763:src/stm32f1xx_hal_pcd.c ****   }
 764:src/stm32f1xx_hal_pcd.c **** 
 765:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 766:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 767:src/stm32f1xx_hal_pcd.c **** 
 768:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 769:src/stm32f1xx_hal_pcd.c ****   {
 770:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOINIncompleteCallback = pCallback;
 771:src/stm32f1xx_hal_pcd.c ****   }
 772:src/stm32f1xx_hal_pcd.c ****   else
 773:src/stm32f1xx_hal_pcd.c ****   {
 774:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 775:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 776:src/stm32f1xx_hal_pcd.c **** 
 777:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 778:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 779:src/stm32f1xx_hal_pcd.c ****   }
 780:src/stm32f1xx_hal_pcd.c **** 
 781:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 782:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 783:src/stm32f1xx_hal_pcd.c **** 
 784:src/stm32f1xx_hal_pcd.c ****   return status;
 785:src/stm32f1xx_hal_pcd.c **** }
 786:src/stm32f1xx_hal_pcd.c **** 
 787:src/stm32f1xx_hal_pcd.c **** /**
 788:src/stm32f1xx_hal_pcd.c ****   * @brief  UnRegister the USB PCD Iso IN incomplete Callback
 789:src/stm32f1xx_hal_pcd.c ****   *         USB PCD Iso IN incomplete Callback is redirected to the weak HAL_PCD_ISOINIncompleteCal
 790:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 791:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 792:src/stm32f1xx_hal_pcd.c ****   */
 793:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_UnRegisterIsoInIncpltCallback(PCD_HandleTypeDef *hpcd)
 794:src/stm32f1xx_hal_pcd.c **** {
 795:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef status = HAL_OK;
 796:src/stm32f1xx_hal_pcd.c **** 
 797:src/stm32f1xx_hal_pcd.c ****   /* Process locked */
 798:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 799:src/stm32f1xx_hal_pcd.c **** 
 800:src/stm32f1xx_hal_pcd.c ****   if (hpcd->State == HAL_PCD_STATE_READY)
 801:src/stm32f1xx_hal_pcd.c ****   {
 802:src/stm32f1xx_hal_pcd.c ****     hpcd->ISOINIncompleteCallback = HAL_PCD_ISOINIncompleteCallback; /* Legacy weak ISOINIncomplete
 803:src/stm32f1xx_hal_pcd.c ****   }
 804:src/stm32f1xx_hal_pcd.c ****   else
 805:src/stm32f1xx_hal_pcd.c ****   {
 806:src/stm32f1xx_hal_pcd.c ****     /* Update the error code */
 807:src/stm32f1xx_hal_pcd.c ****     hpcd->ErrorCode |= HAL_PCD_ERROR_INVALID_CALLBACK;
 808:src/stm32f1xx_hal_pcd.c **** 
 809:src/stm32f1xx_hal_pcd.c ****     /* Return error status */
 810:src/stm32f1xx_hal_pcd.c ****     status =  HAL_ERROR;
 811:src/stm32f1xx_hal_pcd.c ****   }
 812:src/stm32f1xx_hal_pcd.c **** 
 813:src/stm32f1xx_hal_pcd.c ****   /* Release Lock */
 814:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 815:src/stm32f1xx_hal_pcd.c **** 
 816:src/stm32f1xx_hal_pcd.c ****   return status;
 817:src/stm32f1xx_hal_pcd.c **** }
 818:src/stm32f1xx_hal_pcd.c **** 
 819:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccq2vSAC.s 			page 21


 820:src/stm32f1xx_hal_pcd.c **** 
 821:src/stm32f1xx_hal_pcd.c **** /**
 822:src/stm32f1xx_hal_pcd.c ****   * @}
 823:src/stm32f1xx_hal_pcd.c ****   */
 824:src/stm32f1xx_hal_pcd.c **** 
 825:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group2 Input and Output operation functions
 826:src/stm32f1xx_hal_pcd.c ****  *  @brief   Data transfers functions
 827:src/stm32f1xx_hal_pcd.c ****  *
 828:src/stm32f1xx_hal_pcd.c **** @verbatim
 829:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
 830:src/stm32f1xx_hal_pcd.c ****                       ##### IO operation functions #####
 831:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
 832:src/stm32f1xx_hal_pcd.c ****     [..]
 833:src/stm32f1xx_hal_pcd.c ****     This subsection provides a set of functions allowing to manage the PCD data
 834:src/stm32f1xx_hal_pcd.c ****     transfers.
 835:src/stm32f1xx_hal_pcd.c **** 
 836:src/stm32f1xx_hal_pcd.c **** @endverbatim
 837:src/stm32f1xx_hal_pcd.c ****   * @{
 838:src/stm32f1xx_hal_pcd.c ****   */
 839:src/stm32f1xx_hal_pcd.c **** 
 840:src/stm32f1xx_hal_pcd.c **** /**
 841:src/stm32f1xx_hal_pcd.c ****   * @brief  Start the USB device
 842:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 843:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 844:src/stm32f1xx_hal_pcd.c ****   */
 845:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
 846:src/stm32f1xx_hal_pcd.c **** {
 298              		.loc 1 846 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL18:
 847:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 303              		.loc 1 847 0
 304 00ee 90F82832 		ldrb	r3, [r0, #552]	@ zero_extendqisi2	@ hpcd_4(D)->Lock, hpcd_4(D)->Lock
 846:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 305              		.loc 1 846 0
 306 00f2 10B5     		push	{r4, lr}	@
 307              	.LCFI3:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311              		.loc 1 847 0
 312 00f4 012B     		cmp	r3, #1	@ hpcd_4(D)->Lock,
 846:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 313              		.loc 1 846 0
 314 00f6 0446     		mov	r4, r0	@ hpcd, hpcd
 315              		.loc 1 847 0
 316 00f8 0ED0     		beq	.L15	@,
 317              		.loc 1 847 0 is_stmt 0 discriminator 2
 318 00fa 0121     		movs	r1, #1	@ tmp116,
 319 00fc 80F82812 		strb	r1, [r0, #552]	@ tmp116, hpcd_4(D)->Lock
 848:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
 849:src/stm32f1xx_hal_pcd.c ****   HAL_PCDEx_SetConnectionState(hpcd, 1U);
 320              		.loc 1 849 0 is_stmt 1 discriminator 2
 321 0100 FFF7FEFF 		bl	HAL_PCDEx_SetConnectionState	@
 322              	.LVL19:
ARM GAS  /tmp/ccq2vSAC.s 			page 22


 850:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB) */
 851:src/stm32f1xx_hal_pcd.c ****   (void)USB_DevConnect(hpcd->Instance);
 323              		.loc 1 851 0 discriminator 2
 324 0104 2068     		ldr	r0, [r4]	@, hpcd_4(D)->Instance
 325 0106 FFF7FEFF 		bl	USB_DevConnect	@
 326              	.LVL20:
 852:src/stm32f1xx_hal_pcd.c ****   __HAL_PCD_ENABLE(hpcd);
 327              		.loc 1 852 0 discriminator 2
 328 010a 2068     		ldr	r0, [r4]	@, hpcd_4(D)->Instance
 329 010c FFF7FEFF 		bl	USB_EnableGlobalInt	@
 330              	.LVL21:
 853:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 331              		.loc 1 853 0 discriminator 2
 332 0110 0020     		movs	r0, #0	@ tmp118,
 333 0112 84F82802 		strb	r0, [r4, #552]	@ tmp118, hpcd_4(D)->Lock
 854:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 334              		.loc 1 854 0 discriminator 2
 335 0116 10BD     		pop	{r4, pc}	@
 336              	.LVL22:
 337              	.L15:
 847:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
 338              		.loc 1 847 0
 339 0118 0220     		movs	r0, #2	@ <retval>,
 340              	.LVL23:
 855:src/stm32f1xx_hal_pcd.c **** }
 341              		.loc 1 855 0
 342 011a 10BD     		pop	{r4, pc}	@
 343              		.cfi_endproc
 344              	.LFE69:
 345              		.size	HAL_PCD_Start, .-HAL_PCD_Start
 346              		.align	1
 347              		.global	HAL_PCD_Stop
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 352              		.type	HAL_PCD_Stop, %function
 353              	HAL_PCD_Stop:
 354              	.LFB70:
 856:src/stm32f1xx_hal_pcd.c **** 
 857:src/stm32f1xx_hal_pcd.c **** /**
 858:src/stm32f1xx_hal_pcd.c ****   * @brief  Stop the USB device.
 859:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 860:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 861:src/stm32f1xx_hal_pcd.c ****   */
 862:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Stop(PCD_HandleTypeDef *hpcd)
 863:src/stm32f1xx_hal_pcd.c **** {
 355              		.loc 1 863 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL24:
 864:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 360              		.loc 1 864 0
 361 011c 90F82832 		ldrb	r3, [r0, #552]	@ zero_extendqisi2	@ hpcd_3(D)->Lock, hpcd_3(D)->Lock
 863:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 362              		.loc 1 863 0
ARM GAS  /tmp/ccq2vSAC.s 			page 23


 363 0120 70B5     		push	{r4, r5, r6, lr}	@
 364              	.LCFI4:
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 4, -16
 367              		.cfi_offset 5, -12
 368              		.cfi_offset 6, -8
 369              		.cfi_offset 14, -4
 370              		.loc 1 864 0
 371 0122 012B     		cmp	r3, #1	@ hpcd_3(D)->Lock,
 863:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 372              		.loc 1 863 0
 373 0124 0446     		mov	r4, r0	@ hpcd, hpcd
 374              		.loc 1 864 0
 375 0126 16D0     		beq	.L19	@,
 376              		.loc 1 864 0 is_stmt 0 discriminator 2
 377 0128 0126     		movs	r6, #1	@ tmp117,
 378 012a 80F82862 		strb	r6, [r0, #552]	@ tmp117, hpcd_3(D)->Lock
 865:src/stm32f1xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 379              		.loc 1 865 0 is_stmt 1 discriminator 2
 380 012e 0068     		ldr	r0, [r0]	@, hpcd_3(D)->Instance
 381              	.LVL25:
 382 0130 FFF7FEFF 		bl	USB_DisableGlobalInt	@
 383              	.LVL26:
 866:src/stm32f1xx_hal_pcd.c **** 
 867:src/stm32f1xx_hal_pcd.c ****   if (USB_StopDevice(hpcd->Instance) != HAL_OK)
 384              		.loc 1 867 0 discriminator 2
 385 0134 2068     		ldr	r0, [r4]	@, hpcd_3(D)->Instance
 386 0136 FFF7FEFF 		bl	USB_StopDevice	@
 387              	.LVL27:
 388 013a 0546     		mov	r5, r0	@ <retval>,
 389 013c 28B1     		cbz	r0, .L18	@ <retval>,
 868:src/stm32f1xx_hal_pcd.c ****   {
 869:src/stm32f1xx_hal_pcd.c ****     __HAL_UNLOCK(hpcd);
 390              		.loc 1 869 0
 391 013e 0023     		movs	r3, #0	@ tmp120,
 870:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 392              		.loc 1 870 0
 393 0140 3546     		mov	r5, r6	@ <retval>, tmp117
 869:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
 394              		.loc 1 869 0
 395 0142 84F82832 		strb	r3, [r4, #552]	@ tmp120, hpcd_3(D)->Lock
 396              	.L17:
 871:src/stm32f1xx_hal_pcd.c ****   }
 872:src/stm32f1xx_hal_pcd.c **** 
 873:src/stm32f1xx_hal_pcd.c ****   (void)USB_DevDisconnect(hpcd->Instance);
 874:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 875:src/stm32f1xx_hal_pcd.c **** 
 876:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 877:src/stm32f1xx_hal_pcd.c **** }
 397              		.loc 1 877 0
 398 0146 2846     		mov	r0, r5	@, <retval>
 399 0148 70BD     		pop	{r4, r5, r6, pc}	@
 400              	.LVL28:
 401              	.L18:
 402              	.LBB4:
 403              	.LBB5:
 873:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
ARM GAS  /tmp/ccq2vSAC.s 			page 24


 404              		.loc 1 873 0
 405 014a 2068     		ldr	r0, [r4]	@, hpcd_3(D)->Instance
 406 014c FFF7FEFF 		bl	USB_DevDisconnect	@
 407              	.LVL29:
 874:src/stm32f1xx_hal_pcd.c **** 
 408              		.loc 1 874 0
 409 0150 84F82852 		strb	r5, [r4, #552]	@ <retval>, hpcd_3(D)->Lock
 410              	.LVL30:
 411 0154 F7E7     		b	.L17	@
 412              	.LVL31:
 413              	.L19:
 414              	.LBE5:
 415              	.LBE4:
 864:src/stm32f1xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 416              		.loc 1 864 0
 417 0156 0225     		movs	r5, #2	@ <retval>,
 418 0158 F5E7     		b	.L17	@
 419              		.cfi_endproc
 420              	.LFE70:
 421              		.size	HAL_PCD_Stop, .-HAL_PCD_Stop
 422              		.align	1
 423              		.global	HAL_PCD_DeInit
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu softvfp
 428              		.type	HAL_PCD_DeInit, %function
 429              	HAL_PCD_DeInit:
 430              	.LFB66:
 245:src/stm32f1xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 431              		.loc 1 245 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL32:
 436 015a 10B5     		push	{r4, lr}	@
 437              	.LCFI5:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 247:src/stm32f1xx_hal_pcd.c ****   {
 441              		.loc 1 247 0
 442 015c 0446     		mov	r4, r0	@ hpcd, hpcd
 443 015e 58B1     		cbz	r0, .L22	@ hpcd,
 252:src/stm32f1xx_hal_pcd.c **** 
 444              		.loc 1 252 0
 445 0160 0323     		movs	r3, #3	@ tmp112,
 446 0162 80F82932 		strb	r3, [r0, #553]	@ tmp112, hpcd_3(D)->State
 255:src/stm32f1xx_hal_pcd.c **** 
 447              		.loc 1 255 0
 448 0166 FFF7FEFF 		bl	HAL_PCD_Stop	@
 449              	.LVL33:
 267:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 450              		.loc 1 267 0
 451 016a 2046     		mov	r0, r4	@, hpcd
 452 016c FFF7FEFF 		bl	HAL_PCD_MspDeInit	@
 453              	.LVL34:
ARM GAS  /tmp/ccq2vSAC.s 			page 25


 270:src/stm32f1xx_hal_pcd.c **** 
 454              		.loc 1 270 0
 455 0170 0020     		movs	r0, #0	@ tmp114,
 456 0172 84F82902 		strb	r0, [r4, #553]	@ tmp114, hpcd_3(D)->State
 272:src/stm32f1xx_hal_pcd.c **** }
 457              		.loc 1 272 0
 458 0176 10BD     		pop	{r4, pc}	@
 459              	.LVL35:
 460              	.L22:
 249:src/stm32f1xx_hal_pcd.c ****   }
 461              		.loc 1 249 0
 462 0178 0120     		movs	r0, #1	@ <retval>,
 463              	.LVL36:
 273:src/stm32f1xx_hal_pcd.c **** 
 464              		.loc 1 273 0
 465 017a 10BD     		pop	{r4, pc}	@
 466              		.cfi_endproc
 467              	.LFE66:
 468              		.size	HAL_PCD_DeInit, .-HAL_PCD_DeInit
 469              		.align	1
 470              		.weak	HAL_PCD_DataOutStageCallback
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu softvfp
 475              		.type	HAL_PCD_DataOutStageCallback, %function
 476              	HAL_PCD_DataOutStageCallback:
 477              	.LFB121:
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 017c 7047     		bx	lr	@
 483              		.cfi_endproc
 484              	.LFE121:
 485              		.size	HAL_PCD_DataOutStageCallback, .-HAL_PCD_DataOutStageCallback
 486              		.align	1
 487              		.weak	HAL_PCD_DataInStageCallback
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu softvfp
 492              		.type	HAL_PCD_DataInStageCallback, %function
 493              	HAL_PCD_DataInStageCallback:
 494              	.LFB119:
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 017e 7047     		bx	lr	@
 500              		.cfi_endproc
 501              	.LFE119:
 502              		.size	HAL_PCD_DataInStageCallback, .-HAL_PCD_DataInStageCallback
 503              		.align	1
 504              		.weak	HAL_PCD_SetupStageCallback
 505              		.syntax unified
 506              		.thumb
ARM GAS  /tmp/ccq2vSAC.s 			page 26


 507              		.thumb_func
 508              		.fpu softvfp
 509              		.type	HAL_PCD_SetupStageCallback, %function
 510              	HAL_PCD_SetupStageCallback:
 511              	.LFB111:
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516 0180 7047     		bx	lr	@
 517              		.cfi_endproc
 518              	.LFE111:
 519              		.size	HAL_PCD_SetupStageCallback, .-HAL_PCD_SetupStageCallback
 520              		.align	1
 521              		.weak	HAL_PCD_SOFCallback
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu softvfp
 526              		.type	HAL_PCD_SOFCallback, %function
 527              	HAL_PCD_SOFCallback:
 528              	.LFB109:
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0182 7047     		bx	lr	@
 534              		.cfi_endproc
 535              	.LFE109:
 536              		.size	HAL_PCD_SOFCallback, .-HAL_PCD_SOFCallback
 537              		.align	1
 538              		.weak	HAL_PCD_ResetCallback
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 543              		.type	HAL_PCD_ResetCallback, %function
 544              	HAL_PCD_ResetCallback:
 545              	.LFB107:
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0184 7047     		bx	lr	@
 551              		.cfi_endproc
 552              	.LFE107:
 553              		.size	HAL_PCD_ResetCallback, .-HAL_PCD_ResetCallback
 554              		.align	1
 555              		.weak	HAL_PCD_SuspendCallback
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 560              		.type	HAL_PCD_SuspendCallback, %function
 561              	HAL_PCD_SuspendCallback:
 562              	.LFB105:
 563              		.cfi_startproc
ARM GAS  /tmp/ccq2vSAC.s 			page 27


 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0186 7047     		bx	lr	@
 568              		.cfi_endproc
 569              	.LFE105:
 570              		.size	HAL_PCD_SuspendCallback, .-HAL_PCD_SuspendCallback
 571              		.align	1
 572              		.weak	HAL_PCD_ResumeCallback
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 577              		.type	HAL_PCD_ResumeCallback, %function
 578              	HAL_PCD_ResumeCallback:
 579              	.LFB103:
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584 0188 7047     		bx	lr	@
 585              		.cfi_endproc
 586              	.LFE103:
 587              		.size	HAL_PCD_ResumeCallback, .-HAL_PCD_ResumeCallback
 588              		.align	1
 589              		.weak	HAL_PCD_ISOOUTIncompleteCallback
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu softvfp
 594              		.type	HAL_PCD_ISOOUTIncompleteCallback, %function
 595              	HAL_PCD_ISOOUTIncompleteCallback:
 596              	.LFB117:
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 018a 7047     		bx	lr	@
 602              		.cfi_endproc
 603              	.LFE117:
 604              		.size	HAL_PCD_ISOOUTIncompleteCallback, .-HAL_PCD_ISOOUTIncompleteCallback
 605              		.align	1
 606              		.weak	HAL_PCD_ISOINIncompleteCallback
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu softvfp
 611              		.type	HAL_PCD_ISOINIncompleteCallback, %function
 612              	HAL_PCD_ISOINIncompleteCallback:
 613              	.LFB80:
 878:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
 879:src/stm32f1xx_hal_pcd.c **** /**
 880:src/stm32f1xx_hal_pcd.c ****   * @brief  Handles PCD interrupt request.
 881:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
 882:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
 883:src/stm32f1xx_hal_pcd.c ****   */
 884:src/stm32f1xx_hal_pcd.c **** void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
ARM GAS  /tmp/ccq2vSAC.s 			page 28


 885:src/stm32f1xx_hal_pcd.c **** {
 886:src/stm32f1xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 887:src/stm32f1xx_hal_pcd.c ****   uint32_t USBx_BASE = (uint32_t)USBx;
 888:src/stm32f1xx_hal_pcd.c ****   uint32_t i, ep_intr, epint, epnum;
 889:src/stm32f1xx_hal_pcd.c ****   uint32_t fifoemptymsk, temp;
 890:src/stm32f1xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 891:src/stm32f1xx_hal_pcd.c **** 
 892:src/stm32f1xx_hal_pcd.c ****   /* ensure that we are in device mode */
 893:src/stm32f1xx_hal_pcd.c ****   if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 894:src/stm32f1xx_hal_pcd.c ****   {
 895:src/stm32f1xx_hal_pcd.c ****     /* avoid spurious interrupt */
 896:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 897:src/stm32f1xx_hal_pcd.c ****     {
 898:src/stm32f1xx_hal_pcd.c ****       return;
 899:src/stm32f1xx_hal_pcd.c ****     }
 900:src/stm32f1xx_hal_pcd.c **** 
 901:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 902:src/stm32f1xx_hal_pcd.c ****     {
 903:src/stm32f1xx_hal_pcd.c ****       /* incorrect mode, acknowledge the interrupt */
 904:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 905:src/stm32f1xx_hal_pcd.c ****     }
 906:src/stm32f1xx_hal_pcd.c **** 
 907:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 908:src/stm32f1xx_hal_pcd.c ****     {
 909:src/stm32f1xx_hal_pcd.c ****       epnum = 0U;
 910:src/stm32f1xx_hal_pcd.c **** 
 911:src/stm32f1xx_hal_pcd.c ****       /* Read in the device interrupt bits */
 912:src/stm32f1xx_hal_pcd.c ****       ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 913:src/stm32f1xx_hal_pcd.c **** 
 914:src/stm32f1xx_hal_pcd.c ****       while (ep_intr != 0U)
 915:src/stm32f1xx_hal_pcd.c ****       {
 916:src/stm32f1xx_hal_pcd.c ****         if ((ep_intr & 0x1U) != 0U)
 917:src/stm32f1xx_hal_pcd.c ****         {
 918:src/stm32f1xx_hal_pcd.c ****           epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 919:src/stm32f1xx_hal_pcd.c **** 
 920:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 921:src/stm32f1xx_hal_pcd.c ****           {
 922:src/stm32f1xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 923:src/stm32f1xx_hal_pcd.c ****             (void)PCD_EP_OutXfrComplete_int(hpcd, epnum);
 924:src/stm32f1xx_hal_pcd.c ****           }
 925:src/stm32f1xx_hal_pcd.c **** 
 926:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 927:src/stm32f1xx_hal_pcd.c ****           {
 928:src/stm32f1xx_hal_pcd.c ****             /* Class B setup phase done for previous decoded setup */
 929:src/stm32f1xx_hal_pcd.c ****             (void)PCD_EP_OutSetupPacket_int(hpcd, epnum);
 930:src/stm32f1xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 931:src/stm32f1xx_hal_pcd.c ****           }
 932:src/stm32f1xx_hal_pcd.c **** 
 933:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 934:src/stm32f1xx_hal_pcd.c ****           {
 935:src/stm32f1xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 936:src/stm32f1xx_hal_pcd.c ****           }
 937:src/stm32f1xx_hal_pcd.c **** 
 938:src/stm32f1xx_hal_pcd.c ****           /* Clear Status Phase Received interrupt */
 939:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 940:src/stm32f1xx_hal_pcd.c ****           {
 941:src/stm32f1xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
ARM GAS  /tmp/ccq2vSAC.s 			page 29


 942:src/stm32f1xx_hal_pcd.c ****           }
 943:src/stm32f1xx_hal_pcd.c **** 
 944:src/stm32f1xx_hal_pcd.c ****           /* Clear OUT NAK interrupt */
 945:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 946:src/stm32f1xx_hal_pcd.c ****           {
 947:src/stm32f1xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 948:src/stm32f1xx_hal_pcd.c ****           }
 949:src/stm32f1xx_hal_pcd.c ****         }
 950:src/stm32f1xx_hal_pcd.c ****         epnum++;
 951:src/stm32f1xx_hal_pcd.c ****         ep_intr >>= 1U;
 952:src/stm32f1xx_hal_pcd.c ****       }
 953:src/stm32f1xx_hal_pcd.c ****     }
 954:src/stm32f1xx_hal_pcd.c **** 
 955:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 956:src/stm32f1xx_hal_pcd.c ****     {
 957:src/stm32f1xx_hal_pcd.c ****       /* Read in the device interrupt bits */
 958:src/stm32f1xx_hal_pcd.c ****       ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 959:src/stm32f1xx_hal_pcd.c **** 
 960:src/stm32f1xx_hal_pcd.c ****       epnum = 0U;
 961:src/stm32f1xx_hal_pcd.c **** 
 962:src/stm32f1xx_hal_pcd.c ****       while (ep_intr != 0U)
 963:src/stm32f1xx_hal_pcd.c ****       {
 964:src/stm32f1xx_hal_pcd.c ****         if ((ep_intr & 0x1U) != 0U) /* In ITR */
 965:src/stm32f1xx_hal_pcd.c ****         {
 966:src/stm32f1xx_hal_pcd.c ****           epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 967:src/stm32f1xx_hal_pcd.c **** 
 968:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 969:src/stm32f1xx_hal_pcd.c ****           {
 970:src/stm32f1xx_hal_pcd.c ****             fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 971:src/stm32f1xx_hal_pcd.c ****             USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 972:src/stm32f1xx_hal_pcd.c **** 
 973:src/stm32f1xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 974:src/stm32f1xx_hal_pcd.c **** 
 975:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 976:src/stm32f1xx_hal_pcd.c ****             hpcd->DataInStageCallback(hpcd, (uint8_t)epnum);
 977:src/stm32f1xx_hal_pcd.c **** #else
 978:src/stm32f1xx_hal_pcd.c ****             HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 979:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 980:src/stm32f1xx_hal_pcd.c ****           }
 981:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 982:src/stm32f1xx_hal_pcd.c ****           {
 983:src/stm32f1xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 984:src/stm32f1xx_hal_pcd.c ****           }
 985:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 986:src/stm32f1xx_hal_pcd.c ****           {
 987:src/stm32f1xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 988:src/stm32f1xx_hal_pcd.c ****           }
 989:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 990:src/stm32f1xx_hal_pcd.c ****           {
 991:src/stm32f1xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 992:src/stm32f1xx_hal_pcd.c ****           }
 993:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 994:src/stm32f1xx_hal_pcd.c ****           {
 995:src/stm32f1xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 996:src/stm32f1xx_hal_pcd.c ****           }
 997:src/stm32f1xx_hal_pcd.c ****           if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 998:src/stm32f1xx_hal_pcd.c ****           {
ARM GAS  /tmp/ccq2vSAC.s 			page 30


 999:src/stm32f1xx_hal_pcd.c ****             (void)PCD_WriteEmptyTxFifo(hpcd, epnum);
1000:src/stm32f1xx_hal_pcd.c ****           }
1001:src/stm32f1xx_hal_pcd.c ****         }
1002:src/stm32f1xx_hal_pcd.c ****         epnum++;
1003:src/stm32f1xx_hal_pcd.c ****         ep_intr >>= 1U;
1004:src/stm32f1xx_hal_pcd.c ****       }
1005:src/stm32f1xx_hal_pcd.c ****     }
1006:src/stm32f1xx_hal_pcd.c **** 
1007:src/stm32f1xx_hal_pcd.c ****     /* Handle Resume Interrupt */
1008:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
1009:src/stm32f1xx_hal_pcd.c ****     {
1010:src/stm32f1xx_hal_pcd.c ****       /* Clear the Remote Wake-up Signaling */
1011:src/stm32f1xx_hal_pcd.c ****       USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
1012:src/stm32f1xx_hal_pcd.c **** 
1013:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1014:src/stm32f1xx_hal_pcd.c ****       hpcd->ResumeCallback(hpcd);
1015:src/stm32f1xx_hal_pcd.c **** #else
1016:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_ResumeCallback(hpcd);
1017:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1018:src/stm32f1xx_hal_pcd.c **** 
1019:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
1020:src/stm32f1xx_hal_pcd.c ****     }
1021:src/stm32f1xx_hal_pcd.c **** 
1022:src/stm32f1xx_hal_pcd.c ****     /* Handle Suspend Interrupt */
1023:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
1024:src/stm32f1xx_hal_pcd.c ****     {
1025:src/stm32f1xx_hal_pcd.c ****       if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
1026:src/stm32f1xx_hal_pcd.c ****       {
1027:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1028:src/stm32f1xx_hal_pcd.c ****         hpcd->SuspendCallback(hpcd);
1029:src/stm32f1xx_hal_pcd.c **** #else
1030:src/stm32f1xx_hal_pcd.c ****         HAL_PCD_SuspendCallback(hpcd);
1031:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1032:src/stm32f1xx_hal_pcd.c ****       }
1033:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
1034:src/stm32f1xx_hal_pcd.c ****     }
1035:src/stm32f1xx_hal_pcd.c ****     /* Handle Reset Interrupt */
1036:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
1037:src/stm32f1xx_hal_pcd.c ****     {
1038:src/stm32f1xx_hal_pcd.c ****       USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
1039:src/stm32f1xx_hal_pcd.c ****       (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
1040:src/stm32f1xx_hal_pcd.c **** 
1041:src/stm32f1xx_hal_pcd.c ****       for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
1042:src/stm32f1xx_hal_pcd.c ****       {
1043:src/stm32f1xx_hal_pcd.c ****         USBx_INEP(i)->DIEPINT = 0xFB7FU;
1044:src/stm32f1xx_hal_pcd.c ****         USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
1045:src/stm32f1xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
1046:src/stm32f1xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
1047:src/stm32f1xx_hal_pcd.c ****       }
1048:src/stm32f1xx_hal_pcd.c ****       USBx_DEVICE->DAINTMSK |= 0x10001U;
1049:src/stm32f1xx_hal_pcd.c **** 
1050:src/stm32f1xx_hal_pcd.c ****       if (hpcd->Init.use_dedicated_ep1 != 0U)
1051:src/stm32f1xx_hal_pcd.c ****       {
1052:src/stm32f1xx_hal_pcd.c ****         USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
1053:src/stm32f1xx_hal_pcd.c ****                                    USB_OTG_DOEPMSK_XFRCM |
1054:src/stm32f1xx_hal_pcd.c ****                                    USB_OTG_DOEPMSK_EPDM;
1055:src/stm32f1xx_hal_pcd.c **** 
ARM GAS  /tmp/ccq2vSAC.s 			page 31


1056:src/stm32f1xx_hal_pcd.c ****         USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
1057:src/stm32f1xx_hal_pcd.c ****                                   USB_OTG_DIEPMSK_XFRCM |
1058:src/stm32f1xx_hal_pcd.c ****                                   USB_OTG_DIEPMSK_EPDM;
1059:src/stm32f1xx_hal_pcd.c ****       }
1060:src/stm32f1xx_hal_pcd.c ****       else
1061:src/stm32f1xx_hal_pcd.c ****       {
1062:src/stm32f1xx_hal_pcd.c ****         USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
1063:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DOEPMSK_XFRCM |
1064:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DOEPMSK_EPDM |
1065:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DOEPMSK_OTEPSPRM |
1066:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DOEPMSK_NAKM;
1067:src/stm32f1xx_hal_pcd.c **** 
1068:src/stm32f1xx_hal_pcd.c ****         USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
1069:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DIEPMSK_XFRCM |
1070:src/stm32f1xx_hal_pcd.c ****                                 USB_OTG_DIEPMSK_EPDM;
1071:src/stm32f1xx_hal_pcd.c ****       }
1072:src/stm32f1xx_hal_pcd.c **** 
1073:src/stm32f1xx_hal_pcd.c ****       /* Set Default Address to 0 */
1074:src/stm32f1xx_hal_pcd.c ****       USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
1075:src/stm32f1xx_hal_pcd.c **** 
1076:src/stm32f1xx_hal_pcd.c ****       /* setup EP0 to receive SETUP packets */
1077:src/stm32f1xx_hal_pcd.c ****       (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t *)hpcd->Setup);
1078:src/stm32f1xx_hal_pcd.c **** 
1079:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
1080:src/stm32f1xx_hal_pcd.c ****     }
1081:src/stm32f1xx_hal_pcd.c **** 
1082:src/stm32f1xx_hal_pcd.c ****     /* Handle Enumeration done Interrupt */
1083:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
1084:src/stm32f1xx_hal_pcd.c ****     {
1085:src/stm32f1xx_hal_pcd.c ****       (void)USB_ActivateSetup(hpcd->Instance);
1086:src/stm32f1xx_hal_pcd.c ****       hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
1087:src/stm32f1xx_hal_pcd.c **** 
1088:src/stm32f1xx_hal_pcd.c ****       /* Set USB Turnaround time */
1089:src/stm32f1xx_hal_pcd.c ****       (void)USB_SetTurnaroundTime(hpcd->Instance,
1090:src/stm32f1xx_hal_pcd.c ****                                   HAL_RCC_GetHCLKFreq(),
1091:src/stm32f1xx_hal_pcd.c ****                                   (uint8_t)hpcd->Init.speed);
1092:src/stm32f1xx_hal_pcd.c **** 
1093:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1094:src/stm32f1xx_hal_pcd.c ****       hpcd->ResetCallback(hpcd);
1095:src/stm32f1xx_hal_pcd.c **** #else
1096:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_ResetCallback(hpcd);
1097:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1098:src/stm32f1xx_hal_pcd.c **** 
1099:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
1100:src/stm32f1xx_hal_pcd.c ****     }
1101:src/stm32f1xx_hal_pcd.c **** 
1102:src/stm32f1xx_hal_pcd.c ****     /* Handle RxQLevel Interrupt */
1103:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
1104:src/stm32f1xx_hal_pcd.c ****     {
1105:src/stm32f1xx_hal_pcd.c ****       USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
1106:src/stm32f1xx_hal_pcd.c **** 
1107:src/stm32f1xx_hal_pcd.c ****       temp = USBx->GRXSTSP;
1108:src/stm32f1xx_hal_pcd.c **** 
1109:src/stm32f1xx_hal_pcd.c ****       ep = &hpcd->OUT_ep[temp & USB_OTG_GRXSTSP_EPNUM];
1110:src/stm32f1xx_hal_pcd.c **** 
1111:src/stm32f1xx_hal_pcd.c ****       if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
1112:src/stm32f1xx_hal_pcd.c ****       {
ARM GAS  /tmp/ccq2vSAC.s 			page 32


1113:src/stm32f1xx_hal_pcd.c ****         if ((temp & USB_OTG_GRXSTSP_BCNT) != 0U)
1114:src/stm32f1xx_hal_pcd.c ****         {
1115:src/stm32f1xx_hal_pcd.c ****           (void)USB_ReadPacket(USBx, ep->xfer_buff,
1116:src/stm32f1xx_hal_pcd.c ****                                (uint16_t)((temp & USB_OTG_GRXSTSP_BCNT) >> 4));
1117:src/stm32f1xx_hal_pcd.c **** 
1118:src/stm32f1xx_hal_pcd.c ****           ep->xfer_buff += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
1119:src/stm32f1xx_hal_pcd.c ****           ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
1120:src/stm32f1xx_hal_pcd.c ****         }
1121:src/stm32f1xx_hal_pcd.c ****       }
1122:src/stm32f1xx_hal_pcd.c ****       else if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_SETUP_UPDT)
1123:src/stm32f1xx_hal_pcd.c ****       {
1124:src/stm32f1xx_hal_pcd.c ****         (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
1125:src/stm32f1xx_hal_pcd.c ****         ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
1126:src/stm32f1xx_hal_pcd.c ****       }
1127:src/stm32f1xx_hal_pcd.c ****       else
1128:src/stm32f1xx_hal_pcd.c ****       {
1129:src/stm32f1xx_hal_pcd.c ****         /* ... */
1130:src/stm32f1xx_hal_pcd.c ****       }
1131:src/stm32f1xx_hal_pcd.c ****       USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
1132:src/stm32f1xx_hal_pcd.c ****     }
1133:src/stm32f1xx_hal_pcd.c **** 
1134:src/stm32f1xx_hal_pcd.c ****     /* Handle SOF Interrupt */
1135:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
1136:src/stm32f1xx_hal_pcd.c ****     {
1137:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1138:src/stm32f1xx_hal_pcd.c ****       hpcd->SOFCallback(hpcd);
1139:src/stm32f1xx_hal_pcd.c **** #else
1140:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_SOFCallback(hpcd);
1141:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1142:src/stm32f1xx_hal_pcd.c **** 
1143:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
1144:src/stm32f1xx_hal_pcd.c ****     }
1145:src/stm32f1xx_hal_pcd.c **** 
1146:src/stm32f1xx_hal_pcd.c ****     /* Handle Incomplete ISO IN Interrupt */
1147:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
1148:src/stm32f1xx_hal_pcd.c ****     {
1149:src/stm32f1xx_hal_pcd.c ****       /* Keep application checking the corresponding Iso IN endpoint
1150:src/stm32f1xx_hal_pcd.c ****       causing the incomplete Interrupt */
1151:src/stm32f1xx_hal_pcd.c ****       epnum = 0U;
1152:src/stm32f1xx_hal_pcd.c **** 
1153:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1154:src/stm32f1xx_hal_pcd.c ****       hpcd->ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
1155:src/stm32f1xx_hal_pcd.c **** #else
1156:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
1157:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1158:src/stm32f1xx_hal_pcd.c **** 
1159:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
1160:src/stm32f1xx_hal_pcd.c ****     }
1161:src/stm32f1xx_hal_pcd.c **** 
1162:src/stm32f1xx_hal_pcd.c ****     /* Handle Incomplete ISO OUT Interrupt */
1163:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
1164:src/stm32f1xx_hal_pcd.c ****     {
1165:src/stm32f1xx_hal_pcd.c ****       /* Keep application checking the corresponding Iso OUT endpoint
1166:src/stm32f1xx_hal_pcd.c ****       causing the incomplete Interrupt */
1167:src/stm32f1xx_hal_pcd.c ****       epnum = 0U;
1168:src/stm32f1xx_hal_pcd.c **** 
1169:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccq2vSAC.s 			page 33


1170:src/stm32f1xx_hal_pcd.c ****       hpcd->ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
1171:src/stm32f1xx_hal_pcd.c **** #else
1172:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
1173:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1174:src/stm32f1xx_hal_pcd.c **** 
1175:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
1176:src/stm32f1xx_hal_pcd.c ****     }
1177:src/stm32f1xx_hal_pcd.c **** 
1178:src/stm32f1xx_hal_pcd.c ****     /* Handle Connection event Interrupt */
1179:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
1180:src/stm32f1xx_hal_pcd.c ****     {
1181:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1182:src/stm32f1xx_hal_pcd.c ****       hpcd->ConnectCallback(hpcd);
1183:src/stm32f1xx_hal_pcd.c **** #else
1184:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_ConnectCallback(hpcd);
1185:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1186:src/stm32f1xx_hal_pcd.c **** 
1187:src/stm32f1xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
1188:src/stm32f1xx_hal_pcd.c ****     }
1189:src/stm32f1xx_hal_pcd.c **** 
1190:src/stm32f1xx_hal_pcd.c ****     /* Handle Disconnection event Interrupt */
1191:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
1192:src/stm32f1xx_hal_pcd.c ****     {
1193:src/stm32f1xx_hal_pcd.c ****       temp = hpcd->Instance->GOTGINT;
1194:src/stm32f1xx_hal_pcd.c **** 
1195:src/stm32f1xx_hal_pcd.c ****       if ((temp & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
1196:src/stm32f1xx_hal_pcd.c ****       {
1197:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1198:src/stm32f1xx_hal_pcd.c ****         hpcd->DisconnectCallback(hpcd);
1199:src/stm32f1xx_hal_pcd.c **** #else
1200:src/stm32f1xx_hal_pcd.c ****         HAL_PCD_DisconnectCallback(hpcd);
1201:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1202:src/stm32f1xx_hal_pcd.c ****       }
1203:src/stm32f1xx_hal_pcd.c ****       hpcd->Instance->GOTGINT |= temp;
1204:src/stm32f1xx_hal_pcd.c ****     }
1205:src/stm32f1xx_hal_pcd.c ****   }
1206:src/stm32f1xx_hal_pcd.c **** }
1207:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
1208:src/stm32f1xx_hal_pcd.c **** 
1209:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
1210:src/stm32f1xx_hal_pcd.c **** /**
1211:src/stm32f1xx_hal_pcd.c ****   * @brief  This function handles PCD interrupt request.
1212:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1213:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1214:src/stm32f1xx_hal_pcd.c ****   */
1215:src/stm32f1xx_hal_pcd.c **** void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
1216:src/stm32f1xx_hal_pcd.c **** {
1217:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_CTR))
1218:src/stm32f1xx_hal_pcd.c ****   {
1219:src/stm32f1xx_hal_pcd.c ****     /* servicing of the endpoint correct transfer interrupt */
1220:src/stm32f1xx_hal_pcd.c ****     /* clear of the CTR flag into the sub */
1221:src/stm32f1xx_hal_pcd.c ****     (void)PCD_EP_ISR_Handler(hpcd);
1222:src/stm32f1xx_hal_pcd.c ****   }
1223:src/stm32f1xx_hal_pcd.c **** 
1224:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_RESET))
1225:src/stm32f1xx_hal_pcd.c ****   {
1226:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_RESET);
ARM GAS  /tmp/ccq2vSAC.s 			page 34


1227:src/stm32f1xx_hal_pcd.c **** 
1228:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1229:src/stm32f1xx_hal_pcd.c ****     hpcd->ResetCallback(hpcd);
1230:src/stm32f1xx_hal_pcd.c **** #else
1231:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_ResetCallback(hpcd);
1232:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1233:src/stm32f1xx_hal_pcd.c **** 
1234:src/stm32f1xx_hal_pcd.c ****     (void)HAL_PCD_SetAddress(hpcd, 0U);
1235:src/stm32f1xx_hal_pcd.c ****   }
1236:src/stm32f1xx_hal_pcd.c **** 
1237:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_PMAOVR))
1238:src/stm32f1xx_hal_pcd.c ****   {
1239:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_PMAOVR);
1240:src/stm32f1xx_hal_pcd.c ****   }
1241:src/stm32f1xx_hal_pcd.c **** 
1242:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_ERR))
1243:src/stm32f1xx_hal_pcd.c ****   {
1244:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_ERR);
1245:src/stm32f1xx_hal_pcd.c ****   }
1246:src/stm32f1xx_hal_pcd.c **** 
1247:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_WKUP))
1248:src/stm32f1xx_hal_pcd.c ****   {
1249:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR &= (uint16_t) ~(USB_CNTR_LP_MODE);
1250:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR &= (uint16_t) ~(USB_CNTR_FSUSP);
1251:src/stm32f1xx_hal_pcd.c **** 
1252:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1253:src/stm32f1xx_hal_pcd.c ****     hpcd->ResumeCallback(hpcd);
1254:src/stm32f1xx_hal_pcd.c **** #else
1255:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_ResumeCallback(hpcd);
1256:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1257:src/stm32f1xx_hal_pcd.c **** 
1258:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_WKUP);
1259:src/stm32f1xx_hal_pcd.c ****   }
1260:src/stm32f1xx_hal_pcd.c **** 
1261:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_SUSP))
1262:src/stm32f1xx_hal_pcd.c ****   {
1263:src/stm32f1xx_hal_pcd.c ****     /* Force low-power mode in the macrocell */
1264:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR |= USB_CNTR_FSUSP;
1265:src/stm32f1xx_hal_pcd.c **** 
1266:src/stm32f1xx_hal_pcd.c ****     /* clear of the ISTR bit must be done after setting of CNTR_FSUSP */
1267:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_SUSP);
1268:src/stm32f1xx_hal_pcd.c **** 
1269:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR |= USB_CNTR_LP_MODE;
1270:src/stm32f1xx_hal_pcd.c **** 
1271:src/stm32f1xx_hal_pcd.c ****     /* WA: Clear Wakeup flag if raised with suspend signal */
1272:src/stm32f1xx_hal_pcd.c ****     if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_WKUP))
1273:src/stm32f1xx_hal_pcd.c ****     {
1274:src/stm32f1xx_hal_pcd.c ****        __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_WKUP);
1275:src/stm32f1xx_hal_pcd.c ****     }
1276:src/stm32f1xx_hal_pcd.c **** 
1277:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1278:src/stm32f1xx_hal_pcd.c ****     hpcd->SuspendCallback(hpcd);
1279:src/stm32f1xx_hal_pcd.c **** #else
1280:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_SuspendCallback(hpcd);
1281:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1282:src/stm32f1xx_hal_pcd.c ****   }
1283:src/stm32f1xx_hal_pcd.c **** 
ARM GAS  /tmp/ccq2vSAC.s 			page 35


1284:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_SOF))
1285:src/stm32f1xx_hal_pcd.c ****   {
1286:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_SOF);
1287:src/stm32f1xx_hal_pcd.c **** 
1288:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1289:src/stm32f1xx_hal_pcd.c ****     hpcd->SOFCallback(hpcd);
1290:src/stm32f1xx_hal_pcd.c **** #else
1291:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_SOFCallback(hpcd);
1292:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1293:src/stm32f1xx_hal_pcd.c ****   }
1294:src/stm32f1xx_hal_pcd.c **** 
1295:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_ESOF))
1296:src/stm32f1xx_hal_pcd.c ****   {
1297:src/stm32f1xx_hal_pcd.c ****     /* clear ESOF flag in ISTR */
1298:src/stm32f1xx_hal_pcd.c ****     __HAL_PCD_CLEAR_FLAG(hpcd, USB_ISTR_ESOF);
1299:src/stm32f1xx_hal_pcd.c ****   }
1300:src/stm32f1xx_hal_pcd.c **** }
1301:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB) */
1302:src/stm32f1xx_hal_pcd.c **** 
1303:src/stm32f1xx_hal_pcd.c **** /**
1304:src/stm32f1xx_hal_pcd.c ****   * @brief  Data OUT stage callback.
1305:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1306:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1307:src/stm32f1xx_hal_pcd.c ****   * @retval None
1308:src/stm32f1xx_hal_pcd.c ****   */
1309:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
1310:src/stm32f1xx_hal_pcd.c **** {
1311:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1312:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1313:src/stm32f1xx_hal_pcd.c ****   UNUSED(epnum);
1314:src/stm32f1xx_hal_pcd.c **** 
1315:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1316:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_DataOutStageCallback could be implemented in the user file
1317:src/stm32f1xx_hal_pcd.c ****    */
1318:src/stm32f1xx_hal_pcd.c **** }
1319:src/stm32f1xx_hal_pcd.c **** 
1320:src/stm32f1xx_hal_pcd.c **** /**
1321:src/stm32f1xx_hal_pcd.c ****   * @brief  Data IN stage callback
1322:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1323:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1324:src/stm32f1xx_hal_pcd.c ****   * @retval None
1325:src/stm32f1xx_hal_pcd.c ****   */
1326:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
1327:src/stm32f1xx_hal_pcd.c **** {
1328:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1329:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1330:src/stm32f1xx_hal_pcd.c ****   UNUSED(epnum);
1331:src/stm32f1xx_hal_pcd.c **** 
1332:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1333:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_DataInStageCallback could be implemented in the user file
1334:src/stm32f1xx_hal_pcd.c ****    */
1335:src/stm32f1xx_hal_pcd.c **** }
1336:src/stm32f1xx_hal_pcd.c **** /**
1337:src/stm32f1xx_hal_pcd.c ****   * @brief  Setup stage callback
1338:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1339:src/stm32f1xx_hal_pcd.c ****   * @retval None
1340:src/stm32f1xx_hal_pcd.c ****   */
ARM GAS  /tmp/ccq2vSAC.s 			page 36


1341:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
1342:src/stm32f1xx_hal_pcd.c **** {
1343:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1344:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1345:src/stm32f1xx_hal_pcd.c **** 
1346:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1347:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_SetupStageCallback could be implemented in the user file
1348:src/stm32f1xx_hal_pcd.c ****    */
1349:src/stm32f1xx_hal_pcd.c **** }
1350:src/stm32f1xx_hal_pcd.c **** 
1351:src/stm32f1xx_hal_pcd.c **** /**
1352:src/stm32f1xx_hal_pcd.c ****   * @brief  USB Start Of Frame callback.
1353:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1354:src/stm32f1xx_hal_pcd.c ****   * @retval None
1355:src/stm32f1xx_hal_pcd.c ****   */
1356:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
1357:src/stm32f1xx_hal_pcd.c **** {
1358:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1359:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1360:src/stm32f1xx_hal_pcd.c **** 
1361:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1362:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_SOFCallback could be implemented in the user file
1363:src/stm32f1xx_hal_pcd.c ****    */
1364:src/stm32f1xx_hal_pcd.c **** }
1365:src/stm32f1xx_hal_pcd.c **** 
1366:src/stm32f1xx_hal_pcd.c **** /**
1367:src/stm32f1xx_hal_pcd.c ****   * @brief  USB Reset callback.
1368:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1369:src/stm32f1xx_hal_pcd.c ****   * @retval None
1370:src/stm32f1xx_hal_pcd.c ****   */
1371:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
1372:src/stm32f1xx_hal_pcd.c **** {
1373:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1374:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1375:src/stm32f1xx_hal_pcd.c **** 
1376:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1377:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_ResetCallback could be implemented in the user file
1378:src/stm32f1xx_hal_pcd.c ****    */
1379:src/stm32f1xx_hal_pcd.c **** }
1380:src/stm32f1xx_hal_pcd.c **** 
1381:src/stm32f1xx_hal_pcd.c **** /**
1382:src/stm32f1xx_hal_pcd.c ****   * @brief  Suspend event callback.
1383:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1384:src/stm32f1xx_hal_pcd.c ****   * @retval None
1385:src/stm32f1xx_hal_pcd.c ****   */
1386:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
1387:src/stm32f1xx_hal_pcd.c **** {
1388:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1389:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1390:src/stm32f1xx_hal_pcd.c **** 
1391:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1392:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_SuspendCallback could be implemented in the user file
1393:src/stm32f1xx_hal_pcd.c ****    */
1394:src/stm32f1xx_hal_pcd.c **** }
1395:src/stm32f1xx_hal_pcd.c **** 
1396:src/stm32f1xx_hal_pcd.c **** /**
1397:src/stm32f1xx_hal_pcd.c ****   * @brief  Resume event callback.
ARM GAS  /tmp/ccq2vSAC.s 			page 37


1398:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1399:src/stm32f1xx_hal_pcd.c ****   * @retval None
1400:src/stm32f1xx_hal_pcd.c ****   */
1401:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
1402:src/stm32f1xx_hal_pcd.c **** {
1403:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1404:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1405:src/stm32f1xx_hal_pcd.c **** 
1406:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1407:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_ResumeCallback could be implemented in the user file
1408:src/stm32f1xx_hal_pcd.c ****    */
1409:src/stm32f1xx_hal_pcd.c **** }
1410:src/stm32f1xx_hal_pcd.c **** 
1411:src/stm32f1xx_hal_pcd.c **** /**
1412:src/stm32f1xx_hal_pcd.c ****   * @brief  Incomplete ISO OUT callback.
1413:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1414:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1415:src/stm32f1xx_hal_pcd.c ****   * @retval None
1416:src/stm32f1xx_hal_pcd.c ****   */
1417:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
1418:src/stm32f1xx_hal_pcd.c **** {
1419:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1420:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1421:src/stm32f1xx_hal_pcd.c ****   UNUSED(epnum);
1422:src/stm32f1xx_hal_pcd.c **** 
1423:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1424:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_ISOOUTIncompleteCallback could be implemented in the user file
1425:src/stm32f1xx_hal_pcd.c ****    */
1426:src/stm32f1xx_hal_pcd.c **** }
1427:src/stm32f1xx_hal_pcd.c **** 
1428:src/stm32f1xx_hal_pcd.c **** /**
1429:src/stm32f1xx_hal_pcd.c ****   * @brief  Incomplete ISO IN callback.
1430:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1431:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1432:src/stm32f1xx_hal_pcd.c ****   * @retval None
1433:src/stm32f1xx_hal_pcd.c ****   */
1434:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
1435:src/stm32f1xx_hal_pcd.c **** {
 614              		.loc 1 1435 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL37:
 620 018c 7047     		bx	lr	@
 621              		.cfi_endproc
 622              	.LFE80:
 623              		.size	HAL_PCD_ISOINIncompleteCallback, .-HAL_PCD_ISOINIncompleteCallback
 624              		.align	1
 625              		.weak	HAL_PCD_ConnectCallback
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu softvfp
 630              		.type	HAL_PCD_ConnectCallback, %function
 631              	HAL_PCD_ConnectCallback:
 632              	.LFB101:
ARM GAS  /tmp/ccq2vSAC.s 			page 38


 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 018e 7047     		bx	lr	@
 638              		.cfi_endproc
 639              	.LFE101:
 640              		.size	HAL_PCD_ConnectCallback, .-HAL_PCD_ConnectCallback
 641              		.align	1
 642              		.weak	HAL_PCD_DisconnectCallback
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu softvfp
 647              		.type	HAL_PCD_DisconnectCallback, %function
 648              	HAL_PCD_DisconnectCallback:
 649              	.LFB82:
1436:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1437:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1438:src/stm32f1xx_hal_pcd.c ****   UNUSED(epnum);
1439:src/stm32f1xx_hal_pcd.c **** 
1440:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1441:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_ISOINIncompleteCallback could be implemented in the user file
1442:src/stm32f1xx_hal_pcd.c ****    */
1443:src/stm32f1xx_hal_pcd.c **** }
1444:src/stm32f1xx_hal_pcd.c **** 
1445:src/stm32f1xx_hal_pcd.c **** /**
1446:src/stm32f1xx_hal_pcd.c ****   * @brief  Connection event callback.
1447:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1448:src/stm32f1xx_hal_pcd.c ****   * @retval None
1449:src/stm32f1xx_hal_pcd.c ****   */
1450:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
1451:src/stm32f1xx_hal_pcd.c **** {
1452:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1453:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1454:src/stm32f1xx_hal_pcd.c **** 
1455:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1456:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_ConnectCallback could be implemented in the user file
1457:src/stm32f1xx_hal_pcd.c ****    */
1458:src/stm32f1xx_hal_pcd.c **** }
1459:src/stm32f1xx_hal_pcd.c **** 
1460:src/stm32f1xx_hal_pcd.c **** /**
1461:src/stm32f1xx_hal_pcd.c ****   * @brief  Disconnection event callback.
1462:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1463:src/stm32f1xx_hal_pcd.c ****   * @retval None
1464:src/stm32f1xx_hal_pcd.c ****   */
1465:src/stm32f1xx_hal_pcd.c **** __weak void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
1466:src/stm32f1xx_hal_pcd.c **** {
 650              		.loc 1 1466 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL38:
 656 0190 7047     		bx	lr	@
 657              		.cfi_endproc
 658              	.LFE82:
ARM GAS  /tmp/ccq2vSAC.s 			page 39


 659              		.size	HAL_PCD_DisconnectCallback, .-HAL_PCD_DisconnectCallback
 660              		.align	1
 661              		.global	HAL_PCD_DevConnect
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 666              		.type	HAL_PCD_DevConnect, %function
 667              	HAL_PCD_DevConnect:
 668              	.LFB83:
1467:src/stm32f1xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
1468:src/stm32f1xx_hal_pcd.c ****   UNUSED(hpcd);
1469:src/stm32f1xx_hal_pcd.c **** 
1470:src/stm32f1xx_hal_pcd.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1471:src/stm32f1xx_hal_pcd.c ****             the HAL_PCD_DisconnectCallback could be implemented in the user file
1472:src/stm32f1xx_hal_pcd.c ****    */
1473:src/stm32f1xx_hal_pcd.c **** }
1474:src/stm32f1xx_hal_pcd.c **** 
1475:src/stm32f1xx_hal_pcd.c **** /**
1476:src/stm32f1xx_hal_pcd.c ****   * @}
1477:src/stm32f1xx_hal_pcd.c ****   */
1478:src/stm32f1xx_hal_pcd.c **** 
1479:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group3 Peripheral Control functions
1480:src/stm32f1xx_hal_pcd.c ****  *  @brief   management functions
1481:src/stm32f1xx_hal_pcd.c ****  *
1482:src/stm32f1xx_hal_pcd.c **** @verbatim
1483:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
1484:src/stm32f1xx_hal_pcd.c ****                       ##### Peripheral Control functions #####
1485:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
1486:src/stm32f1xx_hal_pcd.c ****     [..]
1487:src/stm32f1xx_hal_pcd.c ****     This subsection provides a set of functions allowing to control the PCD data
1488:src/stm32f1xx_hal_pcd.c ****     transfers.
1489:src/stm32f1xx_hal_pcd.c **** 
1490:src/stm32f1xx_hal_pcd.c **** @endverbatim
1491:src/stm32f1xx_hal_pcd.c ****   * @{
1492:src/stm32f1xx_hal_pcd.c ****   */
1493:src/stm32f1xx_hal_pcd.c **** 
1494:src/stm32f1xx_hal_pcd.c **** /**
1495:src/stm32f1xx_hal_pcd.c ****   * @brief  Connect the USB device
1496:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1497:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1498:src/stm32f1xx_hal_pcd.c ****   */
1499:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DevConnect(PCD_HandleTypeDef *hpcd)
1500:src/stm32f1xx_hal_pcd.c **** {
 669              		.loc 1 1500 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              	.LVL39:
1501:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 674              		.loc 1 1501 0
 675 0192 90F82832 		ldrb	r3, [r0, #552]	@ zero_extendqisi2	@ hpcd_4(D)->Lock, hpcd_4(D)->Lock
1500:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 676              		.loc 1 1500 0
 677 0196 10B5     		push	{r4, lr}	@
 678              	.LCFI6:
 679              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccq2vSAC.s 			page 40


 680              		.cfi_offset 4, -8
 681              		.cfi_offset 14, -4
 682              		.loc 1 1501 0
 683 0198 012B     		cmp	r3, #1	@ hpcd_4(D)->Lock,
1500:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 684              		.loc 1 1500 0
 685 019a 0446     		mov	r4, r0	@ hpcd, hpcd
 686              		.loc 1 1501 0
 687 019c 0BD0     		beq	.L36	@,
 688              		.loc 1 1501 0 is_stmt 0 discriminator 2
 689 019e 0121     		movs	r1, #1	@ tmp115,
 690 01a0 80F82812 		strb	r1, [r0, #552]	@ tmp115, hpcd_4(D)->Lock
1502:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
1503:src/stm32f1xx_hal_pcd.c ****   HAL_PCDEx_SetConnectionState(hpcd, 1U);
 691              		.loc 1 1503 0 is_stmt 1 discriminator 2
 692 01a4 FFF7FEFF 		bl	HAL_PCDEx_SetConnectionState	@
 693              	.LVL40:
1504:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB) */
1505:src/stm32f1xx_hal_pcd.c ****   (void)USB_DevConnect(hpcd->Instance);
 694              		.loc 1 1505 0 discriminator 2
 695 01a8 2068     		ldr	r0, [r4]	@, hpcd_4(D)->Instance
 696 01aa FFF7FEFF 		bl	USB_DevConnect	@
 697              	.LVL41:
1506:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 698              		.loc 1 1506 0 discriminator 2
 699 01ae 0020     		movs	r0, #0	@ tmp117,
 700 01b0 84F82802 		strb	r0, [r4, #552]	@ tmp117, hpcd_4(D)->Lock
1507:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 701              		.loc 1 1507 0 discriminator 2
 702 01b4 10BD     		pop	{r4, pc}	@
 703              	.LVL42:
 704              	.L36:
1501:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
 705              		.loc 1 1501 0
 706 01b6 0220     		movs	r0, #2	@ <retval>,
 707              	.LVL43:
1508:src/stm32f1xx_hal_pcd.c **** }
 708              		.loc 1 1508 0
 709 01b8 10BD     		pop	{r4, pc}	@
 710              		.cfi_endproc
 711              	.LFE83:
 712              		.size	HAL_PCD_DevConnect, .-HAL_PCD_DevConnect
 713              		.align	1
 714              		.global	HAL_PCD_DevDisconnect
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu softvfp
 719              		.type	HAL_PCD_DevDisconnect, %function
 720              	HAL_PCD_DevDisconnect:
 721              	.LFB84:
1509:src/stm32f1xx_hal_pcd.c **** 
1510:src/stm32f1xx_hal_pcd.c **** /**
1511:src/stm32f1xx_hal_pcd.c ****   * @brief  Disconnect the USB device.
1512:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1513:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1514:src/stm32f1xx_hal_pcd.c ****   */
ARM GAS  /tmp/ccq2vSAC.s 			page 41


1515:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DevDisconnect(PCD_HandleTypeDef *hpcd)
1516:src/stm32f1xx_hal_pcd.c **** {
 722              		.loc 1 1516 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL44:
1517:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 727              		.loc 1 1517 0
 728 01ba 90F82832 		ldrb	r3, [r0, #552]	@ zero_extendqisi2	@ hpcd_4(D)->Lock, hpcd_4(D)->Lock
1516:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 729              		.loc 1 1516 0
 730 01be 10B5     		push	{r4, lr}	@
 731              	.LCFI7:
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 4, -8
 734              		.cfi_offset 14, -4
 735              		.loc 1 1517 0
 736 01c0 012B     		cmp	r3, #1	@ hpcd_4(D)->Lock,
1516:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 737              		.loc 1 1516 0
 738 01c2 0446     		mov	r4, r0	@ hpcd, hpcd
 739              		.loc 1 1517 0
 740 01c4 0CD0     		beq	.L39	@,
 741              		.loc 1 1517 0 is_stmt 0 discriminator 2
 742 01c6 0123     		movs	r3, #1	@ tmp115,
1518:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
1519:src/stm32f1xx_hal_pcd.c ****   HAL_PCDEx_SetConnectionState(hpcd, 0U);
 743              		.loc 1 1519 0 is_stmt 1 discriminator 2
 744 01c8 0021     		movs	r1, #0	@,
1517:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
 745              		.loc 1 1517 0 discriminator 2
 746 01ca 80F82832 		strb	r3, [r0, #552]	@ tmp115, hpcd_4(D)->Lock
 747              		.loc 1 1519 0 discriminator 2
 748 01ce FFF7FEFF 		bl	HAL_PCDEx_SetConnectionState	@
 749              	.LVL45:
1520:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB) */
1521:src/stm32f1xx_hal_pcd.c ****   (void)USB_DevDisconnect(hpcd->Instance);
 750              		.loc 1 1521 0 discriminator 2
 751 01d2 2068     		ldr	r0, [r4]	@, hpcd_4(D)->Instance
 752 01d4 FFF7FEFF 		bl	USB_DevDisconnect	@
 753              	.LVL46:
1522:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 754              		.loc 1 1522 0 discriminator 2
 755 01d8 0020     		movs	r0, #0	@ tmp117,
 756 01da 84F82802 		strb	r0, [r4, #552]	@ tmp117, hpcd_4(D)->Lock
1523:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 757              		.loc 1 1523 0 discriminator 2
 758 01de 10BD     		pop	{r4, pc}	@
 759              	.LVL47:
 760              	.L39:
1517:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
 761              		.loc 1 1517 0
 762 01e0 0220     		movs	r0, #2	@ <retval>,
 763              	.LVL48:
1524:src/stm32f1xx_hal_pcd.c **** }
 764              		.loc 1 1524 0
ARM GAS  /tmp/ccq2vSAC.s 			page 42


 765 01e2 10BD     		pop	{r4, pc}	@
 766              		.cfi_endproc
 767              	.LFE84:
 768              		.size	HAL_PCD_DevDisconnect, .-HAL_PCD_DevDisconnect
 769              		.align	1
 770              		.global	HAL_PCD_SetAddress
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu softvfp
 775              		.type	HAL_PCD_SetAddress, %function
 776              	HAL_PCD_SetAddress:
 777              	.LFB85:
1525:src/stm32f1xx_hal_pcd.c **** 
1526:src/stm32f1xx_hal_pcd.c **** /**
1527:src/stm32f1xx_hal_pcd.c ****   * @brief  Set the USB Device address.
1528:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1529:src/stm32f1xx_hal_pcd.c ****   * @param  address new device address
1530:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1531:src/stm32f1xx_hal_pcd.c ****   */
1532:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
1533:src/stm32f1xx_hal_pcd.c **** {
 778              		.loc 1 1533 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL49:
1534:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 783              		.loc 1 1534 0
 784 01e4 90F82822 		ldrb	r2, [r0, #552]	@ zero_extendqisi2	@ hpcd_3(D)->Lock, hpcd_3(D)->Lock
1533:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 785              		.loc 1 1533 0
 786 01e8 10B5     		push	{r4, lr}	@
 787              	.LCFI8:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 4, -8
 790              		.cfi_offset 14, -4
 791              		.loc 1 1534 0
 792 01ea 012A     		cmp	r2, #1	@ hpcd_3(D)->Lock,
1533:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 793              		.loc 1 1533 0
 794 01ec 0446     		mov	r4, r0	@ hpcd, hpcd
 795              		.loc 1 1534 0
 796 01ee 0BD0     		beq	.L42	@,
 797              	.LVL50:
 798              	.LBB8:
 799              	.LBB9:
 800 01f0 0122     		movs	r2, #1	@ tmp116,
 801 01f2 80F82822 		strb	r2, [r0, #552]	@ tmp116, hpcd_3(D)->Lock
1535:src/stm32f1xx_hal_pcd.c ****   hpcd->USB_Address = address;
 802              		.loc 1 1535 0
 803 01f6 84F82410 		strb	r1, [r4, #36]	@ address, hpcd_3(D)->USB_Address
1536:src/stm32f1xx_hal_pcd.c ****   (void)USB_SetDevAddress(hpcd->Instance, address);
 804              		.loc 1 1536 0
 805 01fa 0068     		ldr	r0, [r0]	@, hpcd_3(D)->Instance
 806              	.LVL51:
 807 01fc FFF7FEFF 		bl	USB_SetDevAddress	@
ARM GAS  /tmp/ccq2vSAC.s 			page 43


 808              	.LVL52:
1537:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 809              		.loc 1 1537 0
 810 0200 0020     		movs	r0, #0	@ tmp119,
 811 0202 84F82802 		strb	r0, [r4, #552]	@ tmp119, hpcd_3(D)->Lock
 812              	.LVL53:
 813 0206 10BD     		pop	{r4, pc}	@
 814              	.LVL54:
 815              	.L42:
 816              	.LBE9:
 817              	.LBE8:
1534:src/stm32f1xx_hal_pcd.c ****   hpcd->USB_Address = address;
 818              		.loc 1 1534 0
 819 0208 0220     		movs	r0, #2	@ <retval>,
 820              	.LVL55:
1538:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1539:src/stm32f1xx_hal_pcd.c **** }
 821              		.loc 1 1539 0
 822 020a 10BD     		pop	{r4, pc}	@
 823              		.cfi_endproc
 824              	.LFE85:
 825              		.size	HAL_PCD_SetAddress, .-HAL_PCD_SetAddress
 826              		.align	1
 827              		.global	HAL_PCD_EP_Open
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu softvfp
 832              		.type	HAL_PCD_EP_Open, %function
 833              	HAL_PCD_EP_Open:
 834              	.LFB86:
1540:src/stm32f1xx_hal_pcd.c **** /**
1541:src/stm32f1xx_hal_pcd.c ****   * @brief  Open and configure an endpoint.
1542:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1543:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1544:src/stm32f1xx_hal_pcd.c ****   * @param  ep_mps endpoint max packet size
1545:src/stm32f1xx_hal_pcd.c ****   * @param  ep_type endpoint type
1546:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1547:src/stm32f1xx_hal_pcd.c ****   */
1548:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint16_t ep_mps, uint8_
1549:src/stm32f1xx_hal_pcd.c **** {
 835              		.loc 1 1549 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL56:
 840 020c 70B5     		push	{r4, r5, r6, lr}	@
 841              	.LCFI9:
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 4, -16
 844              		.cfi_offset 5, -12
 845              		.cfi_offset 6, -8
 846              		.cfi_offset 14, -4
1550:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef  ret = HAL_OK;
1551:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1552:src/stm32f1xx_hal_pcd.c **** 
1553:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & 0x80U) == 0x80U)
ARM GAS  /tmp/ccq2vSAC.s 			page 44


 847              		.loc 1 1553 0
 848 020e 11F0800F 		tst	r1, #128	@ ep_addr,
1549:src/stm32f1xx_hal_pcd.c ****   HAL_StatusTypeDef  ret = HAL_OK;
 849              		.loc 1 1549 0
 850 0212 0446     		mov	r4, r0	@ hpcd, hpcd
 851 0214 01F00700 		and	r0, r1, #7	@ tmp161, ep_addr,
 852              	.LVL57:
1554:src/stm32f1xx_hal_pcd.c ****   {
1555:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 853              		.loc 1 1555 0
 854 0218 4FEA4015 		lsl	r5, r0, #5	@ tmp133, tmp161,
1553:src/stm32f1xx_hal_pcd.c ****   {
 855              		.loc 1 1553 0
 856 021c 1FD0     		beq	.L44	@,
1556:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 857              		.loc 1 1556 0
 858 021e 0126     		movs	r6, #1	@ tmp138,
1555:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 859              		.loc 1 1555 0
 860 0220 05F12801 		add	r1, r5, #40	@ tmp134, tmp133,
 861              	.LVL58:
 862              		.loc 1 1556 0
 863 0224 2544     		add	r5, r5, r4	@ tmp136, hpcd
1555:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 864              		.loc 1 1555 0
 865 0226 2144     		add	r1, r1, r4	@ ep, hpcd
 866              	.LVL59:
 867              		.loc 1 1556 0
 868 0228 85F82960 		strb	r6, [r5, #41]	@ tmp138, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_10].is_in
 869              	.L45:
1557:src/stm32f1xx_hal_pcd.c ****   }
1558:src/stm32f1xx_hal_pcd.c ****   else
1559:src/stm32f1xx_hal_pcd.c ****   {
1560:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
1561:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
1562:src/stm32f1xx_hal_pcd.c ****   }
1563:src/stm32f1xx_hal_pcd.c **** 
1564:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
1565:src/stm32f1xx_hal_pcd.c ****   ep->maxpacket = ep_mps;
 870              		.loc 1 1565 0
 871 022c 0A61     		str	r2, [r1, #16]	@ ep_mps, ep_1->maxpacket
1566:src/stm32f1xx_hal_pcd.c ****   ep->type = ep_type;
1567:src/stm32f1xx_hal_pcd.c **** 
1568:src/stm32f1xx_hal_pcd.c ****   if (ep->is_in != 0U)
 872              		.loc 1 1568 0
 873 022e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ ep_1->is_in, ep_1->is_in
 874              	.LVL60:
1564:src/stm32f1xx_hal_pcd.c ****   ep->maxpacket = ep_mps;
 875              		.loc 1 1564 0
 876 0230 C0B2     		uxtb	r0, r0	@ _18, tmp161
 877 0232 0870     		strb	r0, [r1]	@ _18, ep_1->num
1566:src/stm32f1xx_hal_pcd.c ****   ep->type = ep_type;
 878              		.loc 1 1566 0
 879 0234 CB70     		strb	r3, [r1, #3]	@ ep_type, ep_1->type
 880              		.loc 1 1568 0
 881 0236 02B1     		cbz	r2, .L46	@ ep_1->is_in,
1569:src/stm32f1xx_hal_pcd.c ****   {
ARM GAS  /tmp/ccq2vSAC.s 			page 45


1570:src/stm32f1xx_hal_pcd.c ****     /* Assign a Tx FIFO */
1571:src/stm32f1xx_hal_pcd.c ****     ep->tx_fifo_num = ep->num;
 882              		.loc 1 1571 0
 883 0238 C881     		strh	r0, [r1, #14]	@ movhi	@ _18, ep_1->tx_fifo_num
 884              	.L46:
1572:src/stm32f1xx_hal_pcd.c ****   }
1573:src/stm32f1xx_hal_pcd.c ****   /* Set initial data PID. */
1574:src/stm32f1xx_hal_pcd.c ****   if (ep_type == EP_TYPE_BULK)
 885              		.loc 1 1574 0
 886 023a 022B     		cmp	r3, #2	@ ep_type,
1575:src/stm32f1xx_hal_pcd.c ****   {
1576:src/stm32f1xx_hal_pcd.c ****     ep->data_pid_start = 0U;
 887              		.loc 1 1576 0
 888 023c 04BF     		itt	eq
 889 023e 0023     		moveq	r3, #0	@ tmp153,
 890              	.LVL61:
 891 0240 0B71     		strbeq	r3, [r1, #4]	@ tmp153, ep_1->data_pid_start
1577:src/stm32f1xx_hal_pcd.c ****   }
1578:src/stm32f1xx_hal_pcd.c **** 
1579:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 892              		.loc 1 1579 0
 893 0242 94F82832 		ldrb	r3, [r4, #552]	@ zero_extendqisi2	@ hpcd_11(D)->Lock, hpcd_11(D)->Lock
 894 0246 012B     		cmp	r3, #1	@ hpcd_11(D)->Lock,
 895 0248 11D0     		beq	.L49	@,
 896              		.loc 1 1579 0 is_stmt 0 discriminator 2
 897 024a 0123     		movs	r3, #1	@ tmp156,
1580:src/stm32f1xx_hal_pcd.c ****   (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 898              		.loc 1 1580 0 is_stmt 1 discriminator 2
 899 024c 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
1579:src/stm32f1xx_hal_pcd.c ****   (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 900              		.loc 1 1579 0 discriminator 2
 901 024e 84F82832 		strb	r3, [r4, #552]	@ tmp156, hpcd_11(D)->Lock
 902              	.LVL62:
 903              		.loc 1 1580 0 discriminator 2
 904 0252 FFF7FEFF 		bl	USB_ActivateEndpoint	@
 905              	.LVL63:
1581:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 906              		.loc 1 1581 0 discriminator 2
 907 0256 0020     		movs	r0, #0	@ tmp158,
 908 0258 84F82802 		strb	r0, [r4, #552]	@ tmp158, hpcd_11(D)->Lock
1582:src/stm32f1xx_hal_pcd.c **** 
1583:src/stm32f1xx_hal_pcd.c ****   return ret;
 909              		.loc 1 1583 0 discriminator 2
 910 025c 70BD     		pop	{r4, r5, r6, pc}	@
 911              	.LVL64:
 912              	.L44:
1561:src/stm32f1xx_hal_pcd.c ****   }
 913              		.loc 1 1561 0
 914 025e 0026     		movs	r6, #0	@ tmp146,
1560:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
 915              		.loc 1 1560 0
 916 0260 05F59471 		add	r1, r5, #296	@ tmp142, tmp141,
 917              	.LVL65:
1561:src/stm32f1xx_hal_pcd.c ****   }
 918              		.loc 1 1561 0
 919 0264 2544     		add	r5, r5, r4	@ tmp144, hpcd
1560:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
ARM GAS  /tmp/ccq2vSAC.s 			page 46


 920              		.loc 1 1560 0
 921 0266 2144     		add	r1, r1, r4	@ ep, hpcd
 922              	.LVL66:
1561:src/stm32f1xx_hal_pcd.c ****   }
 923              		.loc 1 1561 0
 924 0268 85F82961 		strb	r6, [r5, #297]	@ tmp146, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_15].is_in
 925 026c DEE7     		b	.L45	@
 926              	.LVL67:
 927              	.L49:
1579:src/stm32f1xx_hal_pcd.c ****   (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 928              		.loc 1 1579 0
 929 026e 0220     		movs	r0, #2	@ <retval>,
1584:src/stm32f1xx_hal_pcd.c **** }
 930              		.loc 1 1584 0
 931 0270 70BD     		pop	{r4, r5, r6, pc}	@
 932              		.cfi_endproc
 933              	.LFE86:
 934              		.size	HAL_PCD_EP_Open, .-HAL_PCD_EP_Open
 935              		.align	1
 936              		.global	HAL_PCD_EP_Close
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu softvfp
 941              		.type	HAL_PCD_EP_Close, %function
 942              	HAL_PCD_EP_Close:
 943              	.LFB87:
1585:src/stm32f1xx_hal_pcd.c **** 
1586:src/stm32f1xx_hal_pcd.c **** /**
1587:src/stm32f1xx_hal_pcd.c ****   * @brief  Deactivate an endpoint.
1588:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1589:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1590:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1591:src/stm32f1xx_hal_pcd.c ****   */
1592:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1593:src/stm32f1xx_hal_pcd.c **** {
 944              		.loc 1 1593 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              	.LVL68:
 949 0272 01F00703 		and	r3, r1, #7	@ tmp151, ep_addr,
1594:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1595:src/stm32f1xx_hal_pcd.c **** 
1596:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & 0x80U) == 0x80U)
 950              		.loc 1 1596 0
 951 0276 11F0800F 		tst	r1, #128	@ ep_addr,
1593:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 952              		.loc 1 1593 0
 953 027a 10B5     		push	{r4, lr}	@
 954              	.LCFI10:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 4, -8
 957              		.cfi_offset 14, -4
1597:src/stm32f1xx_hal_pcd.c ****   {
1598:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 958              		.loc 1 1598 0
ARM GAS  /tmp/ccq2vSAC.s 			page 47


 959 027c 4FEA4312 		lsl	r2, r3, #5	@ tmp128, tmp151,
1593:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 960              		.loc 1 1593 0
 961 0280 0446     		mov	r4, r0	@ hpcd, hpcd
1596:src/stm32f1xx_hal_pcd.c ****   {
 962              		.loc 1 1596 0
 963 0282 15D0     		beq	.L54	@,
 964              		.loc 1 1598 0
 965 0284 02F12801 		add	r1, r2, #40	@ tmp129, tmp128,
 966              	.LVL69:
 967 0288 0144     		add	r1, r1, r0	@ ep, hpcd
 968              	.LVL70:
1599:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 969              		.loc 1 1599 0
 970 028a 0244     		add	r2, r2, r0	@ tmp131, hpcd
 971 028c 0120     		movs	r0, #1	@ tmp133,
 972              	.LVL71:
 973 028e 82F82900 		strb	r0, [r2, #41]	@ tmp133, MEM[(struct PCD_EPTypeDef *)hpcd_8(D)].IN_ep[_7].is_in
 974              	.L55:
1600:src/stm32f1xx_hal_pcd.c ****   }
1601:src/stm32f1xx_hal_pcd.c ****   else
1602:src/stm32f1xx_hal_pcd.c ****   {
1603:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
1604:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
1605:src/stm32f1xx_hal_pcd.c ****   }
1606:src/stm32f1xx_hal_pcd.c ****   ep->num   = ep_addr & EP_ADDR_MSK;
 975              		.loc 1 1606 0
 976 0292 0B70     		strb	r3, [r1]	@ tmp151, ep_1->num
1607:src/stm32f1xx_hal_pcd.c **** 
1608:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 977              		.loc 1 1608 0
 978 0294 94F82832 		ldrb	r3, [r4, #552]	@ zero_extendqisi2	@ hpcd_8(D)->Lock, hpcd_8(D)->Lock
 979 0298 012B     		cmp	r3, #1	@ hpcd_8(D)->Lock,
 980 029a 11D0     		beq	.L57	@,
 981              		.loc 1 1608 0 is_stmt 0 discriminator 2
 982 029c 0123     		movs	r3, #1	@ tmp146,
1609:src/stm32f1xx_hal_pcd.c ****   (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 983              		.loc 1 1609 0 is_stmt 1 discriminator 2
 984 029e 2068     		ldr	r0, [r4]	@, hpcd_8(D)->Instance
1608:src/stm32f1xx_hal_pcd.c ****   (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 985              		.loc 1 1608 0 discriminator 2
 986 02a0 84F82832 		strb	r3, [r4, #552]	@ tmp146, hpcd_8(D)->Lock
 987              		.loc 1 1609 0 discriminator 2
 988 02a4 FFF7FEFF 		bl	USB_DeactivateEndpoint	@
 989              	.LVL72:
1610:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 990              		.loc 1 1610 0 discriminator 2
 991 02a8 0020     		movs	r0, #0	@ tmp148,
 992 02aa 84F82802 		strb	r0, [r4, #552]	@ tmp148, hpcd_8(D)->Lock
1611:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
 993              		.loc 1 1611 0 discriminator 2
 994 02ae 10BD     		pop	{r4, pc}	@
 995              	.LVL73:
 996              	.L54:
1603:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
 997              		.loc 1 1603 0
 998 02b0 02F59471 		add	r1, r2, #296	@ tmp137, tmp136,
ARM GAS  /tmp/ccq2vSAC.s 			page 48


 999              	.LVL74:
 1000 02b4 0144     		add	r1, r1, r0	@ ep, hpcd
 1001              	.LVL75:
1604:src/stm32f1xx_hal_pcd.c ****   }
 1002              		.loc 1 1604 0
 1003 02b6 0244     		add	r2, r2, r0	@ tmp139, hpcd
 1004 02b8 0020     		movs	r0, #0	@ tmp141,
 1005              	.LVL76:
 1006 02ba 82F82901 		strb	r0, [r2, #297]	@ tmp141, MEM[(struct PCD_EPTypeDef *)hpcd_8(D)].OUT_ep[_12].is_in
 1007 02be E8E7     		b	.L55	@
 1008              	.L57:
1608:src/stm32f1xx_hal_pcd.c ****   (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 1009              		.loc 1 1608 0
 1010 02c0 0220     		movs	r0, #2	@ <retval>,
1612:src/stm32f1xx_hal_pcd.c **** }
 1011              		.loc 1 1612 0
 1012 02c2 10BD     		pop	{r4, pc}	@
 1013              		.cfi_endproc
 1014              	.LFE87:
 1015              		.size	HAL_PCD_EP_Close, .-HAL_PCD_EP_Close
 1016              		.align	1
 1017              		.global	HAL_PCD_EP_Receive
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu softvfp
 1022              		.type	HAL_PCD_EP_Receive, %function
 1023              	HAL_PCD_EP_Receive:
 1024              	.LFB88:
1613:src/stm32f1xx_hal_pcd.c **** 
1614:src/stm32f1xx_hal_pcd.c **** 
1615:src/stm32f1xx_hal_pcd.c **** /**
1616:src/stm32f1xx_hal_pcd.c ****   * @brief  Receive an amount of data.
1617:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1618:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1619:src/stm32f1xx_hal_pcd.c ****   * @param  pBuf pointer to the reception buffer
1620:src/stm32f1xx_hal_pcd.c ****   * @param  len amount of data to be received
1621:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1622:src/stm32f1xx_hal_pcd.c ****   */
1623:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint3
1624:src/stm32f1xx_hal_pcd.c **** {
 1025              		.loc 1 1624 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              	.LVL77:
 1030 02c4 70B5     		push	{r4, r5, r6, lr}	@
 1031              	.LCFI11:
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 4, -16
 1034              		.cfi_offset 5, -12
 1035              		.cfi_offset 6, -8
 1036              		.cfi_offset 14, -4
1625:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1626:src/stm32f1xx_hal_pcd.c **** 
1627:src/stm32f1xx_hal_pcd.c ****   ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
1628:src/stm32f1xx_hal_pcd.c **** 
ARM GAS  /tmp/ccq2vSAC.s 			page 49


1629:src/stm32f1xx_hal_pcd.c ****   /*setup and start the Xfer */
1630:src/stm32f1xx_hal_pcd.c ****   ep->xfer_buff = pBuf;
1631:src/stm32f1xx_hal_pcd.c ****   ep->xfer_len = len;
1632:src/stm32f1xx_hal_pcd.c ****   ep->xfer_count = 0U;
 1037              		.loc 1 1632 0
 1038 02c6 0026     		movs	r6, #0	@ tmp126,
 1039 02c8 01F00701 		and	r1, r1, #7	@ _18, ep_addr,
 1040              	.LVL78:
 1041 02cc 4D01     		lsls	r5, r1, #5	@ _19, _18,
 1042              	.LVL79:
1630:src/stm32f1xx_hal_pcd.c ****   ep->xfer_len = len;
 1043              		.loc 1 1630 0
 1044 02ce 4419     		adds	r4, r0, r5	@ tmp124, hpcd, _19
1633:src/stm32f1xx_hal_pcd.c ****   ep->is_in = 0U;
1634:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1045              		.loc 1 1634 0
 1046 02d0 84F82811 		strb	r1, [r4, #296]	@ _18, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].OUT_ep[_3].num
1627:src/stm32f1xx_hal_pcd.c **** 
 1047              		.loc 1 1627 0
 1048 02d4 05F59471 		add	r1, r5, #296	@ tmp136, _19,
1635:src/stm32f1xx_hal_pcd.c **** 
1636:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & EP_ADDR_MSK) == 0U)
1637:src/stm32f1xx_hal_pcd.c ****   {
1638:src/stm32f1xx_hal_pcd.c ****     (void)USB_EP0StartXfer(hpcd->Instance, ep);
1639:src/stm32f1xx_hal_pcd.c ****   }
1640:src/stm32f1xx_hal_pcd.c ****   else
1641:src/stm32f1xx_hal_pcd.c ****   {
1642:src/stm32f1xx_hal_pcd.c ****     (void)USB_EPStartXfer(hpcd->Instance, ep);
 1049              		.loc 1 1642 0
 1050 02d8 0144     		add	r1, r1, r0	@, hpcd
1630:src/stm32f1xx_hal_pcd.c ****   ep->xfer_len = len;
 1051              		.loc 1 1630 0
 1052 02da C4F83C21 		str	r2, [r4, #316]	@ pBuf, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].OUT_ep[_3].xfer_buff
1631:src/stm32f1xx_hal_pcd.c ****   ep->xfer_count = 0U;
 1053              		.loc 1 1631 0
 1054 02de C4F84031 		str	r3, [r4, #320]	@ len, MEM[(struct PCD_EPTypeDef *)_14 + 320B]
1632:src/stm32f1xx_hal_pcd.c ****   ep->is_in = 0U;
 1055              		.loc 1 1632 0
 1056 02e2 C4F84461 		str	r6, [r4, #324]	@ tmp126, MEM[(struct PCD_EPTypeDef *)_14 + 324B]
1633:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1057              		.loc 1 1633 0
 1058 02e6 84F82961 		strb	r6, [r4, #297]	@ tmp126, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].OUT_ep[_3].is_in
 1059              		.loc 1 1642 0
 1060 02ea 0068     		ldr	r0, [r0]	@, hpcd_4(D)->Instance
 1061              	.LVL80:
 1062 02ec FFF7FEFF 		bl	USB_EPStartXfer	@
 1063              	.LVL81:
1643:src/stm32f1xx_hal_pcd.c ****   }
1644:src/stm32f1xx_hal_pcd.c **** 
1645:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1646:src/stm32f1xx_hal_pcd.c **** }
 1064              		.loc 1 1646 0
 1065 02f0 3046     		mov	r0, r6	@, tmp126
 1066 02f2 70BD     		pop	{r4, r5, r6, pc}	@
 1067              		.cfi_endproc
 1068              	.LFE88:
 1069              		.size	HAL_PCD_EP_Receive, .-HAL_PCD_EP_Receive
ARM GAS  /tmp/ccq2vSAC.s 			page 50


 1070              		.align	1
 1071              		.global	HAL_PCD_EP_GetRxCount
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu softvfp
 1076              		.type	HAL_PCD_EP_GetRxCount, %function
 1077              	HAL_PCD_EP_GetRxCount:
 1078              	.LFB89:
1647:src/stm32f1xx_hal_pcd.c **** 
1648:src/stm32f1xx_hal_pcd.c **** /**
1649:src/stm32f1xx_hal_pcd.c ****   * @brief  Get Received Data Size
1650:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1651:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1652:src/stm32f1xx_hal_pcd.c ****   * @retval Data Size
1653:src/stm32f1xx_hal_pcd.c ****   */
1654:src/stm32f1xx_hal_pcd.c **** uint32_t HAL_PCD_EP_GetRxCount(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1655:src/stm32f1xx_hal_pcd.c **** {
 1079              		.loc 1 1655 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084              	.LVL82:
1656:src/stm32f1xx_hal_pcd.c ****   return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
 1085              		.loc 1 1656 0
 1086 02f4 01F00701 		and	r1, r1, #7	@ tmp117, ep_addr,
 1087              	.LVL83:
 1088 02f8 00EB4111 		add	r1, r0, r1, lsl #5	@ tmp120, hpcd, tmp117,
1657:src/stm32f1xx_hal_pcd.c **** }
 1089              		.loc 1 1657 0
 1090 02fc D1F84401 		ldr	r0, [r1, #324]	@, hpcd_4(D)->OUT_ep[_2].xfer_count
 1091              	.LVL84:
 1092 0300 7047     		bx	lr	@
 1093              		.cfi_endproc
 1094              	.LFE89:
 1095              		.size	HAL_PCD_EP_GetRxCount, .-HAL_PCD_EP_GetRxCount
 1096              		.align	1
 1097              		.global	HAL_PCD_EP_Transmit
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu softvfp
 1102              		.type	HAL_PCD_EP_Transmit, %function
 1103              	HAL_PCD_EP_Transmit:
 1104              	.LFB90:
1658:src/stm32f1xx_hal_pcd.c **** /**
1659:src/stm32f1xx_hal_pcd.c ****   * @brief  Send an amount of data
1660:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1661:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1662:src/stm32f1xx_hal_pcd.c ****   * @param  pBuf pointer to the transmission buffer
1663:src/stm32f1xx_hal_pcd.c ****   * @param  len amount of data to be sent
1664:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1665:src/stm32f1xx_hal_pcd.c ****   */
1666:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint
1667:src/stm32f1xx_hal_pcd.c **** {
 1105              		.loc 1 1667 0
ARM GAS  /tmp/ccq2vSAC.s 			page 51


 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              	.LVL85:
 1110 0302 01F00701 		and	r1, r1, #7	@ _18, ep_addr,
 1111              	.LVL86:
 1112 0306 70B5     		push	{r4, r5, r6, lr}	@
 1113              	.LCFI12:
 1114              		.cfi_def_cfa_offset 16
 1115              		.cfi_offset 4, -16
 1116              		.cfi_offset 5, -12
 1117              		.cfi_offset 6, -8
 1118              		.cfi_offset 14, -4
 1119 0308 4D01     		lsls	r5, r1, #5	@ _19, _18,
 1120              	.LVL87:
1668:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1669:src/stm32f1xx_hal_pcd.c **** 
1670:src/stm32f1xx_hal_pcd.c ****   ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
1671:src/stm32f1xx_hal_pcd.c **** 
1672:src/stm32f1xx_hal_pcd.c ****   /*setup and start the Xfer */
1673:src/stm32f1xx_hal_pcd.c ****   ep->xfer_buff = pBuf;
 1121              		.loc 1 1673 0
 1122 030a 4419     		adds	r4, r0, r5	@ tmp124, hpcd, _19
1674:src/stm32f1xx_hal_pcd.c ****   ep->xfer_len = len;
 1123              		.loc 1 1674 0
 1124 030c 2364     		str	r3, [r4, #64]	@ len, MEM[(struct PCD_EPTypeDef *)_14 + 64B]
1675:src/stm32f1xx_hal_pcd.c ****   ep->xfer_count = 0U;
 1125              		.loc 1 1675 0
 1126 030e 0026     		movs	r6, #0	@ tmp126,
1676:src/stm32f1xx_hal_pcd.c ****   ep->is_in = 1U;
 1127              		.loc 1 1676 0
 1128 0310 0123     		movs	r3, #1	@ tmp130,
 1129              	.LVL88:
1677:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1130              		.loc 1 1677 0
 1131 0312 84F82810 		strb	r1, [r4, #40]	@ _18, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].IN_ep[_3].num
1670:src/stm32f1xx_hal_pcd.c **** 
 1132              		.loc 1 1670 0
 1133 0316 05F12801 		add	r1, r5, #40	@ tmp136, _19,
1678:src/stm32f1xx_hal_pcd.c **** 
1679:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & EP_ADDR_MSK) == 0U)
1680:src/stm32f1xx_hal_pcd.c ****   {
1681:src/stm32f1xx_hal_pcd.c ****     (void)USB_EP0StartXfer(hpcd->Instance, ep);
1682:src/stm32f1xx_hal_pcd.c ****   }
1683:src/stm32f1xx_hal_pcd.c ****   else
1684:src/stm32f1xx_hal_pcd.c ****   {
1685:src/stm32f1xx_hal_pcd.c ****     (void)USB_EPStartXfer(hpcd->Instance, ep);
 1134              		.loc 1 1685 0
 1135 031a 0144     		add	r1, r1, r0	@, hpcd
1673:src/stm32f1xx_hal_pcd.c ****   ep->xfer_len = len;
 1136              		.loc 1 1673 0
 1137 031c E263     		str	r2, [r4, #60]	@ pBuf, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].IN_ep[_3].xfer_buff
1675:src/stm32f1xx_hal_pcd.c ****   ep->is_in = 1U;
 1138              		.loc 1 1675 0
 1139 031e 6664     		str	r6, [r4, #68]	@ tmp126, MEM[(struct PCD_EPTypeDef *)_14 + 68B]
1676:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1140              		.loc 1 1676 0
ARM GAS  /tmp/ccq2vSAC.s 			page 52


 1141 0320 84F82930 		strb	r3, [r4, #41]	@ tmp130, MEM[(struct PCD_EPTypeDef *)hpcd_4(D)].IN_ep[_3].is_in
 1142              		.loc 1 1685 0
 1143 0324 0068     		ldr	r0, [r0]	@, hpcd_4(D)->Instance
 1144              	.LVL89:
 1145 0326 FFF7FEFF 		bl	USB_EPStartXfer	@
 1146              	.LVL90:
1686:src/stm32f1xx_hal_pcd.c ****   }
1687:src/stm32f1xx_hal_pcd.c **** 
1688:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1689:src/stm32f1xx_hal_pcd.c **** }
 1147              		.loc 1 1689 0
 1148 032a 3046     		mov	r0, r6	@, tmp126
 1149 032c 70BD     		pop	{r4, r5, r6, pc}	@
 1150              		.cfi_endproc
 1151              	.LFE90:
 1152              		.size	HAL_PCD_EP_Transmit, .-HAL_PCD_EP_Transmit
 1153              		.align	1
 1154              		.global	HAL_PCD_IRQHandler
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1158              		.fpu softvfp
 1159              		.type	HAL_PCD_IRQHandler, %function
 1160              	HAL_PCD_IRQHandler:
 1161              	.LFB71:
1216:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_CTR))
 1162              		.loc 1 1216 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              	.LVL91:
 1167 032e 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1168              	.LCFI13:
 1169              		.cfi_def_cfa_offset 40
 1170              		.cfi_offset 3, -40
 1171              		.cfi_offset 4, -36
 1172              		.cfi_offset 5, -32
 1173              		.cfi_offset 6, -28
 1174              		.cfi_offset 7, -24
 1175              		.cfi_offset 8, -20
 1176              		.cfi_offset 9, -16
 1177              		.cfi_offset 10, -12
 1178              		.cfi_offset 11, -8
 1179              		.cfi_offset 14, -4
1216:src/stm32f1xx_hal_pcd.c ****   if (__HAL_PCD_GET_FLAG(hpcd, USB_ISTR_CTR))
 1180              		.loc 1 1216 0
 1181 0332 0446     		mov	r4, r0	@ hpcd, hpcd
1217:src/stm32f1xx_hal_pcd.c ****   {
 1182              		.loc 1 1217 0
 1183 0334 0068     		ldr	r0, [r0]	@, hpcd_11(D)->Instance
 1184              	.LVL92:
 1185 0336 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1186              	.LVL93:
 1187 033a 0204     		lsls	r2, r0, #16	@,,
 1188 033c 00F11082 		bmi	.L62	@,
 1189              	.L86:
1224:src/stm32f1xx_hal_pcd.c ****   {
ARM GAS  /tmp/ccq2vSAC.s 			page 53


 1190              		.loc 1 1224 0
 1191 0340 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1192 0342 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1193              	.LVL94:
 1194 0346 4305     		lsls	r3, r0, #21	@,,
 1195 0348 0FD5     		bpl	.L64	@,
1226:src/stm32f1xx_hal_pcd.c **** 
 1196              		.loc 1 1226 0
 1197 034a 2268     		ldr	r2, [r4]	@ _21, hpcd_11(D)->Instance
1231:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1198              		.loc 1 1231 0
 1199 034c 2046     		mov	r0, r4	@, hpcd
1226:src/stm32f1xx_hal_pcd.c **** 
 1200              		.loc 1 1226 0
 1201 034e B2F84430 		ldrh	r3, [r2, #68]	@, _21->ISTR
 1202 0352 23F48063 		bic	r3, r3, #1024	@ _23, _21->ISTR,
 1203 0356 1B04     		lsls	r3, r3, #16	@ _23, _23,
 1204 0358 1B0C     		lsrs	r3, r3, #16	@ _23, _23,
 1205 035a A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _23, _21->ISTR
1231:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1206              		.loc 1 1231 0
 1207 035e FFF7FEFF 		bl	HAL_PCD_ResetCallback	@
 1208              	.LVL95:
1234:src/stm32f1xx_hal_pcd.c ****   }
 1209              		.loc 1 1234 0
 1210 0362 0021     		movs	r1, #0	@,
 1211 0364 2046     		mov	r0, r4	@, hpcd
 1212 0366 FFF7FEFF 		bl	HAL_PCD_SetAddress	@
 1213              	.LVL96:
 1214              	.L64:
1237:src/stm32f1xx_hal_pcd.c ****   {
 1215              		.loc 1 1237 0
 1216 036a 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1217 036c FFF7FEFF 		bl	USB_ReadInterrupts	@
 1218              	.LVL97:
 1219 0370 4704     		lsls	r7, r0, #17	@,,
 1220 0372 08D5     		bpl	.L87	@,
1239:src/stm32f1xx_hal_pcd.c ****   }
 1221              		.loc 1 1239 0
 1222 0374 2268     		ldr	r2, [r4]	@ _31, hpcd_11(D)->Instance
 1223 0376 B2F84430 		ldrh	r3, [r2, #68]	@, _31->ISTR
 1224 037a 23F48043 		bic	r3, r3, #16384	@ _33, _31->ISTR,
 1225 037e 1B04     		lsls	r3, r3, #16	@ _33, _33,
 1226 0380 1B0C     		lsrs	r3, r3, #16	@ _33, _33,
 1227 0382 A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _33, _31->ISTR
 1228              	.L87:
1242:src/stm32f1xx_hal_pcd.c ****   {
 1229              		.loc 1 1242 0
 1230 0386 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1231 0388 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1232              	.LVL98:
 1233 038c 8604     		lsls	r6, r0, #18	@,,
 1234 038e 08D5     		bpl	.L88	@,
1244:src/stm32f1xx_hal_pcd.c ****   }
 1235              		.loc 1 1244 0
 1236 0390 2268     		ldr	r2, [r4]	@ _39, hpcd_11(D)->Instance
 1237 0392 B2F84430 		ldrh	r3, [r2, #68]	@, _39->ISTR
ARM GAS  /tmp/ccq2vSAC.s 			page 54


 1238 0396 23F40053 		bic	r3, r3, #8192	@ _41, _39->ISTR,
 1239 039a 1B04     		lsls	r3, r3, #16	@ _41, _41,
 1240 039c 1B0C     		lsrs	r3, r3, #16	@ _41, _41,
 1241 039e A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _41, _39->ISTR
 1242              	.L88:
1247:src/stm32f1xx_hal_pcd.c ****   {
 1243              		.loc 1 1247 0
 1244 03a2 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1245 03a4 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1246              	.LVL99:
 1247 03a8 C504     		lsls	r5, r0, #19	@,,
 1248 03aa 1CD5     		bpl	.L89	@,
1249:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR &= (uint16_t) ~(USB_CNTR_FSUSP);
 1249              		.loc 1 1249 0
 1250 03ac 2268     		ldr	r2, [r4]	@ _47, hpcd_11(D)->Instance
1255:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1251              		.loc 1 1255 0
 1252 03ae 2046     		mov	r0, r4	@, hpcd
1249:src/stm32f1xx_hal_pcd.c ****     hpcd->Instance->CNTR &= (uint16_t) ~(USB_CNTR_FSUSP);
 1253              		.loc 1 1249 0
 1254 03b0 B2F84030 		ldrh	r3, [r2, #64]	@, _47->CNTR
 1255 03b4 23F00403 		bic	r3, r3, #4	@ _49, _47->CNTR,
 1256 03b8 1B04     		lsls	r3, r3, #16	@ _49, _49,
 1257 03ba 1B0C     		lsrs	r3, r3, #16	@ _49, _49,
 1258 03bc A2F84030 		strh	r3, [r2, #64]	@ movhi	@ _49, _47->CNTR
1250:src/stm32f1xx_hal_pcd.c **** 
 1259              		.loc 1 1250 0
 1260 03c0 B2F84030 		ldrh	r3, [r2, #64]	@, _47->CNTR
 1261 03c4 23F00803 		bic	r3, r3, #8	@ _52, _47->CNTR,
 1262 03c8 1B04     		lsls	r3, r3, #16	@ _52, _52,
 1263 03ca 1B0C     		lsrs	r3, r3, #16	@ _52, _52,
 1264 03cc A2F84030 		strh	r3, [r2, #64]	@ movhi	@ _52, _47->CNTR
1255:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1265              		.loc 1 1255 0
 1266 03d0 FFF7FEFF 		bl	HAL_PCD_ResumeCallback	@
 1267              	.LVL100:
1258:src/stm32f1xx_hal_pcd.c ****   }
 1268              		.loc 1 1258 0
 1269 03d4 2268     		ldr	r2, [r4]	@ _55, hpcd_11(D)->Instance
 1270 03d6 B2F84430 		ldrh	r3, [r2, #68]	@, _55->ISTR
 1271 03da 23F48053 		bic	r3, r3, #4096	@ _57, _55->ISTR,
 1272 03de 1B04     		lsls	r3, r3, #16	@ _57, _57,
 1273 03e0 1B0C     		lsrs	r3, r3, #16	@ _57, _57,
 1274 03e2 A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _57, _55->ISTR
 1275              	.L89:
1261:src/stm32f1xx_hal_pcd.c ****   {
 1276              		.loc 1 1261 0
 1277 03e6 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1278 03e8 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1279              	.LVL101:
 1280 03ec 0005     		lsls	r0, r0, #20	@,,
 1281 03ee 26D5     		bpl	.L90	@,
1264:src/stm32f1xx_hal_pcd.c **** 
 1282              		.loc 1 1264 0
 1283 03f0 2068     		ldr	r0, [r4]	@ _63, hpcd_11(D)->Instance
 1284 03f2 B0F84030 		ldrh	r3, [r0, #64]	@, _63->CNTR
 1285 03f6 9BB2     		uxth	r3, r3	@ _64, _63->CNTR
ARM GAS  /tmp/ccq2vSAC.s 			page 55


 1286 03f8 43F00803 		orr	r3, r3, #8	@ _65, _64,
 1287 03fc A0F84030 		strh	r3, [r0, #64]	@ movhi	@ _65, _63->CNTR
1267:src/stm32f1xx_hal_pcd.c **** 
 1288              		.loc 1 1267 0
 1289 0400 B0F84430 		ldrh	r3, [r0, #68]	@, _63->ISTR
 1290 0404 23F40063 		bic	r3, r3, #2048	@ _68, _63->ISTR,
 1291 0408 1B04     		lsls	r3, r3, #16	@ _68, _68,
 1292 040a 1B0C     		lsrs	r3, r3, #16	@ _68, _68,
 1293 040c A0F84430 		strh	r3, [r0, #68]	@ movhi	@ _68, _63->ISTR
1269:src/stm32f1xx_hal_pcd.c **** 
 1294              		.loc 1 1269 0
 1295 0410 B0F84030 		ldrh	r3, [r0, #64]	@, _63->CNTR
 1296 0414 9BB2     		uxth	r3, r3	@ _70, _63->CNTR
 1297 0416 43F00403 		orr	r3, r3, #4	@ _71, _70,
 1298 041a A0F84030 		strh	r3, [r0, #64]	@ movhi	@ _71, _63->CNTR
1272:src/stm32f1xx_hal_pcd.c ****     {
 1299              		.loc 1 1272 0
 1300 041e FFF7FEFF 		bl	USB_ReadInterrupts	@
 1301              	.LVL102:
 1302 0422 C104     		lsls	r1, r0, #19	@,,
 1303 0424 08D5     		bpl	.L91	@,
1274:src/stm32f1xx_hal_pcd.c ****     }
 1304              		.loc 1 1274 0
 1305 0426 2268     		ldr	r2, [r4]	@ _76, hpcd_11(D)->Instance
 1306 0428 B2F84430 		ldrh	r3, [r2, #68]	@, _76->ISTR
 1307 042c 23F48053 		bic	r3, r3, #4096	@ _78, _76->ISTR,
 1308 0430 1B04     		lsls	r3, r3, #16	@ _78, _78,
 1309 0432 1B0C     		lsrs	r3, r3, #16	@ _78, _78,
 1310 0434 A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _78, _76->ISTR
 1311              	.L91:
1280:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1312              		.loc 1 1280 0
 1313 0438 2046     		mov	r0, r4	@, hpcd
 1314 043a FFF7FEFF 		bl	HAL_PCD_SuspendCallback	@
 1315              	.LVL103:
 1316              	.L90:
1284:src/stm32f1xx_hal_pcd.c ****   {
 1317              		.loc 1 1284 0
 1318 043e 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1319 0440 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1320              	.LVL104:
 1321 0444 8205     		lsls	r2, r0, #22	@,,
 1322 0446 0BD5     		bpl	.L92	@,
1286:src/stm32f1xx_hal_pcd.c **** 
 1323              		.loc 1 1286 0
 1324 0448 2268     		ldr	r2, [r4]	@ _85, hpcd_11(D)->Instance
1291:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 1325              		.loc 1 1291 0
 1326 044a 2046     		mov	r0, r4	@, hpcd
1286:src/stm32f1xx_hal_pcd.c **** 
 1327              		.loc 1 1286 0
 1328 044c B2F84430 		ldrh	r3, [r2, #68]	@, _85->ISTR
 1329 0450 23F40073 		bic	r3, r3, #512	@ _87, _85->ISTR,
 1330 0454 1B04     		lsls	r3, r3, #16	@ _87, _87,
 1331 0456 1B0C     		lsrs	r3, r3, #16	@ _87, _87,
 1332 0458 A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _87, _85->ISTR
1291:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccq2vSAC.s 			page 56


 1333              		.loc 1 1291 0
 1334 045c FFF7FEFF 		bl	HAL_PCD_SOFCallback	@
 1335              	.LVL105:
 1336              	.L92:
1295:src/stm32f1xx_hal_pcd.c ****   {
 1337              		.loc 1 1295 0
 1338 0460 2068     		ldr	r0, [r4]	@, hpcd_11(D)->Instance
 1339 0462 FFF7FEFF 		bl	USB_ReadInterrupts	@
 1340              	.LVL106:
 1341 0466 C305     		lsls	r3, r0, #23	@,,
 1342 0468 08D5     		bpl	.L61	@,
1298:src/stm32f1xx_hal_pcd.c ****   }
 1343              		.loc 1 1298 0
 1344 046a 2268     		ldr	r2, [r4]	@ _94, hpcd_11(D)->Instance
 1345 046c B2F84430 		ldrh	r3, [r2, #68]	@, _94->ISTR
 1346 0470 23F48073 		bic	r3, r3, #256	@ _96, _94->ISTR,
 1347 0474 1B04     		lsls	r3, r3, #16	@ _96, _96,
 1348 0476 1B0C     		lsrs	r3, r3, #16	@ _96, _96,
 1349 0478 A2F84430 		strh	r3, [r2, #68]	@ movhi	@ _96, _94->ISTR
 1350              	.L61:
 1351 047c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 1352              	.LVL107:
 1353              	.L85:
 1354              	.LBB21:
 1355              	.LBB22:
1690:src/stm32f1xx_hal_pcd.c **** 
1691:src/stm32f1xx_hal_pcd.c **** /**
1692:src/stm32f1xx_hal_pcd.c ****   * @brief  Set a STALL condition over an endpoint
1693:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1694:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1695:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1696:src/stm32f1xx_hal_pcd.c ****   */
1697:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1698:src/stm32f1xx_hal_pcd.c **** {
1699:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1700:src/stm32f1xx_hal_pcd.c **** 
1701:src/stm32f1xx_hal_pcd.c ****   if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
1702:src/stm32f1xx_hal_pcd.c ****   {
1703:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
1704:src/stm32f1xx_hal_pcd.c ****   }
1705:src/stm32f1xx_hal_pcd.c **** 
1706:src/stm32f1xx_hal_pcd.c ****   if ((0x80U & ep_addr) == 0x80U)
1707:src/stm32f1xx_hal_pcd.c ****   {
1708:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
1709:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
1710:src/stm32f1xx_hal_pcd.c ****   }
1711:src/stm32f1xx_hal_pcd.c ****   else
1712:src/stm32f1xx_hal_pcd.c ****   {
1713:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr];
1714:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
1715:src/stm32f1xx_hal_pcd.c ****   }
1716:src/stm32f1xx_hal_pcd.c **** 
1717:src/stm32f1xx_hal_pcd.c ****   ep->is_stall = 1U;
1718:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
1719:src/stm32f1xx_hal_pcd.c **** 
1720:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1721:src/stm32f1xx_hal_pcd.c **** 
ARM GAS  /tmp/ccq2vSAC.s 			page 57


1722:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPSetStall(hpcd->Instance, ep);
1723:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & EP_ADDR_MSK) == 0U)
1724:src/stm32f1xx_hal_pcd.c ****   {
1725:src/stm32f1xx_hal_pcd.c ****     (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t *)hpcd->Setup);
1726:src/stm32f1xx_hal_pcd.c ****   }
1727:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1728:src/stm32f1xx_hal_pcd.c **** 
1729:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1730:src/stm32f1xx_hal_pcd.c **** }
1731:src/stm32f1xx_hal_pcd.c **** 
1732:src/stm32f1xx_hal_pcd.c **** /**
1733:src/stm32f1xx_hal_pcd.c ****   * @brief  Clear a STALL condition over in an endpoint
1734:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1735:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1736:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1737:src/stm32f1xx_hal_pcd.c ****   */
1738:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1739:src/stm32f1xx_hal_pcd.c **** {
1740:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
1741:src/stm32f1xx_hal_pcd.c **** 
1742:src/stm32f1xx_hal_pcd.c ****   if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
1743:src/stm32f1xx_hal_pcd.c ****   {
1744:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
1745:src/stm32f1xx_hal_pcd.c ****   }
1746:src/stm32f1xx_hal_pcd.c **** 
1747:src/stm32f1xx_hal_pcd.c ****   if ((0x80U & ep_addr) == 0x80U)
1748:src/stm32f1xx_hal_pcd.c ****   {
1749:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
1750:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
1751:src/stm32f1xx_hal_pcd.c ****   }
1752:src/stm32f1xx_hal_pcd.c ****   else
1753:src/stm32f1xx_hal_pcd.c ****   {
1754:src/stm32f1xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
1755:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
1756:src/stm32f1xx_hal_pcd.c ****   }
1757:src/stm32f1xx_hal_pcd.c **** 
1758:src/stm32f1xx_hal_pcd.c ****   ep->is_stall = 0U;
1759:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
1760:src/stm32f1xx_hal_pcd.c **** 
1761:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1762:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPClearStall(hpcd->Instance, ep);
1763:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1764:src/stm32f1xx_hal_pcd.c **** 
1765:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1766:src/stm32f1xx_hal_pcd.c **** }
1767:src/stm32f1xx_hal_pcd.c **** 
1768:src/stm32f1xx_hal_pcd.c **** /**
1769:src/stm32f1xx_hal_pcd.c ****   * @brief  Flush an endpoint
1770:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1771:src/stm32f1xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1772:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1773:src/stm32f1xx_hal_pcd.c ****   */
1774:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Flush(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1775:src/stm32f1xx_hal_pcd.c **** {
1776:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1777:src/stm32f1xx_hal_pcd.c **** 
1778:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & 0x80U) == 0x80U)
ARM GAS  /tmp/ccq2vSAC.s 			page 58


1779:src/stm32f1xx_hal_pcd.c ****   {
1780:src/stm32f1xx_hal_pcd.c ****     (void)USB_FlushTxFifo(hpcd->Instance, (uint32_t)ep_addr & EP_ADDR_MSK);
1781:src/stm32f1xx_hal_pcd.c ****   }
1782:src/stm32f1xx_hal_pcd.c ****   else
1783:src/stm32f1xx_hal_pcd.c ****   {
1784:src/stm32f1xx_hal_pcd.c ****     (void)USB_FlushRxFifo(hpcd->Instance);
1785:src/stm32f1xx_hal_pcd.c ****   }
1786:src/stm32f1xx_hal_pcd.c **** 
1787:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1788:src/stm32f1xx_hal_pcd.c **** 
1789:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1790:src/stm32f1xx_hal_pcd.c **** }
1791:src/stm32f1xx_hal_pcd.c **** 
1792:src/stm32f1xx_hal_pcd.c **** /**
1793:src/stm32f1xx_hal_pcd.c ****   * @brief  Activate remote wakeup signalling
1794:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1795:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1796:src/stm32f1xx_hal_pcd.c ****   */
1797:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_ActivateRemoteWakeup(PCD_HandleTypeDef *hpcd)
1798:src/stm32f1xx_hal_pcd.c **** {
1799:src/stm32f1xx_hal_pcd.c ****   return (USB_ActivateRemoteWakeup(hpcd->Instance));
1800:src/stm32f1xx_hal_pcd.c **** }
1801:src/stm32f1xx_hal_pcd.c **** 
1802:src/stm32f1xx_hal_pcd.c **** /**
1803:src/stm32f1xx_hal_pcd.c ****   * @brief  De-activate remote wakeup signalling.
1804:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1805:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1806:src/stm32f1xx_hal_pcd.c ****   */
1807:src/stm32f1xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DeActivateRemoteWakeup(PCD_HandleTypeDef *hpcd)
1808:src/stm32f1xx_hal_pcd.c **** {
1809:src/stm32f1xx_hal_pcd.c ****   return (USB_DeActivateRemoteWakeup(hpcd->Instance));
1810:src/stm32f1xx_hal_pcd.c **** }
1811:src/stm32f1xx_hal_pcd.c **** 
1812:src/stm32f1xx_hal_pcd.c **** /**
1813:src/stm32f1xx_hal_pcd.c ****   * @}
1814:src/stm32f1xx_hal_pcd.c ****   */
1815:src/stm32f1xx_hal_pcd.c **** 
1816:src/stm32f1xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group4 Peripheral State functions
1817:src/stm32f1xx_hal_pcd.c ****  *  @brief   Peripheral State functions
1818:src/stm32f1xx_hal_pcd.c ****  *
1819:src/stm32f1xx_hal_pcd.c **** @verbatim
1820:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
1821:src/stm32f1xx_hal_pcd.c ****                       ##### Peripheral State functions #####
1822:src/stm32f1xx_hal_pcd.c ****  ===============================================================================
1823:src/stm32f1xx_hal_pcd.c ****     [..]
1824:src/stm32f1xx_hal_pcd.c ****     This subsection permits to get in run-time the status of the peripheral
1825:src/stm32f1xx_hal_pcd.c ****     and the data flow.
1826:src/stm32f1xx_hal_pcd.c **** 
1827:src/stm32f1xx_hal_pcd.c **** @endverbatim
1828:src/stm32f1xx_hal_pcd.c ****   * @{
1829:src/stm32f1xx_hal_pcd.c ****   */
1830:src/stm32f1xx_hal_pcd.c **** 
1831:src/stm32f1xx_hal_pcd.c **** /**
1832:src/stm32f1xx_hal_pcd.c ****   * @brief  Return the PCD handle state.
1833:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1834:src/stm32f1xx_hal_pcd.c ****   * @retval HAL state
1835:src/stm32f1xx_hal_pcd.c ****   */
ARM GAS  /tmp/ccq2vSAC.s 			page 59


1836:src/stm32f1xx_hal_pcd.c **** PCD_StateTypeDef HAL_PCD_GetState(PCD_HandleTypeDef *hpcd)
1837:src/stm32f1xx_hal_pcd.c **** {
1838:src/stm32f1xx_hal_pcd.c ****   return hpcd->State;
1839:src/stm32f1xx_hal_pcd.c **** }
1840:src/stm32f1xx_hal_pcd.c **** 
1841:src/stm32f1xx_hal_pcd.c **** /**
1842:src/stm32f1xx_hal_pcd.c ****   * @}
1843:src/stm32f1xx_hal_pcd.c ****   */
1844:src/stm32f1xx_hal_pcd.c **** 
1845:src/stm32f1xx_hal_pcd.c **** /**
1846:src/stm32f1xx_hal_pcd.c ****   * @}
1847:src/stm32f1xx_hal_pcd.c ****   */
1848:src/stm32f1xx_hal_pcd.c **** 
1849:src/stm32f1xx_hal_pcd.c **** /* Private functions ---------------------------------------------------------*/
1850:src/stm32f1xx_hal_pcd.c **** /** @addtogroup PCD_Private_Functions
1851:src/stm32f1xx_hal_pcd.c ****   * @{
1852:src/stm32f1xx_hal_pcd.c ****   */
1853:src/stm32f1xx_hal_pcd.c **** #if defined (USB_OTG_FS)
1854:src/stm32f1xx_hal_pcd.c **** /**
1855:src/stm32f1xx_hal_pcd.c ****   * @brief  Check FIFO for the next packet to be loaded.
1856:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1857:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1858:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1859:src/stm32f1xx_hal_pcd.c ****   */
1860:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
1861:src/stm32f1xx_hal_pcd.c **** {
1862:src/stm32f1xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
1863:src/stm32f1xx_hal_pcd.c ****   uint32_t USBx_BASE = (uint32_t)USBx;
1864:src/stm32f1xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1865:src/stm32f1xx_hal_pcd.c ****   uint32_t len;
1866:src/stm32f1xx_hal_pcd.c ****   uint32_t len32b;
1867:src/stm32f1xx_hal_pcd.c ****   uint32_t fifoemptymsk;
1868:src/stm32f1xx_hal_pcd.c **** 
1869:src/stm32f1xx_hal_pcd.c ****   ep = &hpcd->IN_ep[epnum];
1870:src/stm32f1xx_hal_pcd.c **** 
1871:src/stm32f1xx_hal_pcd.c ****   if (ep->xfer_count > ep->xfer_len)
1872:src/stm32f1xx_hal_pcd.c ****   {
1873:src/stm32f1xx_hal_pcd.c ****     return HAL_ERROR;
1874:src/stm32f1xx_hal_pcd.c ****   }
1875:src/stm32f1xx_hal_pcd.c **** 
1876:src/stm32f1xx_hal_pcd.c ****   len = ep->xfer_len - ep->xfer_count;
1877:src/stm32f1xx_hal_pcd.c **** 
1878:src/stm32f1xx_hal_pcd.c ****   if (len > ep->maxpacket)
1879:src/stm32f1xx_hal_pcd.c ****   {
1880:src/stm32f1xx_hal_pcd.c ****     len = ep->maxpacket;
1881:src/stm32f1xx_hal_pcd.c ****   }
1882:src/stm32f1xx_hal_pcd.c **** 
1883:src/stm32f1xx_hal_pcd.c ****   len32b = (len + 3U) / 4U;
1884:src/stm32f1xx_hal_pcd.c **** 
1885:src/stm32f1xx_hal_pcd.c ****   while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
1886:src/stm32f1xx_hal_pcd.c ****          (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
1887:src/stm32f1xx_hal_pcd.c ****   {
1888:src/stm32f1xx_hal_pcd.c ****     /* Write the FIFO */
1889:src/stm32f1xx_hal_pcd.c ****     len = ep->xfer_len - ep->xfer_count;
1890:src/stm32f1xx_hal_pcd.c **** 
1891:src/stm32f1xx_hal_pcd.c ****     if (len > ep->maxpacket)
1892:src/stm32f1xx_hal_pcd.c ****     {
ARM GAS  /tmp/ccq2vSAC.s 			page 60


1893:src/stm32f1xx_hal_pcd.c ****       len = ep->maxpacket;
1894:src/stm32f1xx_hal_pcd.c ****     }
1895:src/stm32f1xx_hal_pcd.c ****     len32b = (len + 3U) / 4U;
1896:src/stm32f1xx_hal_pcd.c **** 
1897:src/stm32f1xx_hal_pcd.c ****     (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len);
1898:src/stm32f1xx_hal_pcd.c **** 
1899:src/stm32f1xx_hal_pcd.c ****     ep->xfer_buff  += len;
1900:src/stm32f1xx_hal_pcd.c ****     ep->xfer_count += len;
1901:src/stm32f1xx_hal_pcd.c ****   }
1902:src/stm32f1xx_hal_pcd.c **** 
1903:src/stm32f1xx_hal_pcd.c ****   if (ep->xfer_len <= ep->xfer_count)
1904:src/stm32f1xx_hal_pcd.c ****   {
1905:src/stm32f1xx_hal_pcd.c ****     fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
1906:src/stm32f1xx_hal_pcd.c ****     USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
1907:src/stm32f1xx_hal_pcd.c ****   }
1908:src/stm32f1xx_hal_pcd.c **** 
1909:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1910:src/stm32f1xx_hal_pcd.c **** }
1911:src/stm32f1xx_hal_pcd.c **** 
1912:src/stm32f1xx_hal_pcd.c **** 
1913:src/stm32f1xx_hal_pcd.c **** /**
1914:src/stm32f1xx_hal_pcd.c ****   * @brief  process EP OUT transfer complete interrupt.
1915:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1916:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1917:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1918:src/stm32f1xx_hal_pcd.c ****   */
1919:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
1920:src/stm32f1xx_hal_pcd.c **** {
1921:src/stm32f1xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
1922:src/stm32f1xx_hal_pcd.c ****   uint32_t USBx_BASE = (uint32_t)USBx;
1923:src/stm32f1xx_hal_pcd.c ****   uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
1924:src/stm32f1xx_hal_pcd.c ****   uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
1925:src/stm32f1xx_hal_pcd.c **** 
1926:src/stm32f1xx_hal_pcd.c ****   if (gSNPSiD == USB_OTG_CORE_ID_310A)
1927:src/stm32f1xx_hal_pcd.c ****   {
1928:src/stm32f1xx_hal_pcd.c ****     /* StupPktRcvd = 1 this is a setup packet */
1929:src/stm32f1xx_hal_pcd.c ****     if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
1930:src/stm32f1xx_hal_pcd.c ****     {
1931:src/stm32f1xx_hal_pcd.c ****       CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
1932:src/stm32f1xx_hal_pcd.c ****     }
1933:src/stm32f1xx_hal_pcd.c ****     else
1934:src/stm32f1xx_hal_pcd.c ****     {
1935:src/stm32f1xx_hal_pcd.c ****       if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
1936:src/stm32f1xx_hal_pcd.c ****       {
1937:src/stm32f1xx_hal_pcd.c ****         CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
1938:src/stm32f1xx_hal_pcd.c ****       }
1939:src/stm32f1xx_hal_pcd.c **** 
1940:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1941:src/stm32f1xx_hal_pcd.c ****       hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
1942:src/stm32f1xx_hal_pcd.c **** #else
1943:src/stm32f1xx_hal_pcd.c ****       HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
1944:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1945:src/stm32f1xx_hal_pcd.c ****     }
1946:src/stm32f1xx_hal_pcd.c ****   }
1947:src/stm32f1xx_hal_pcd.c ****   else
1948:src/stm32f1xx_hal_pcd.c ****   {
1949:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccq2vSAC.s 			page 61


1950:src/stm32f1xx_hal_pcd.c ****     hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
1951:src/stm32f1xx_hal_pcd.c **** #else
1952:src/stm32f1xx_hal_pcd.c ****     HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
1953:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1954:src/stm32f1xx_hal_pcd.c ****   }
1955:src/stm32f1xx_hal_pcd.c **** 
1956:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1957:src/stm32f1xx_hal_pcd.c **** }
1958:src/stm32f1xx_hal_pcd.c **** 
1959:src/stm32f1xx_hal_pcd.c **** 
1960:src/stm32f1xx_hal_pcd.c **** /**
1961:src/stm32f1xx_hal_pcd.c ****   * @brief  process EP OUT setup packet received interrupt.
1962:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1963:src/stm32f1xx_hal_pcd.c ****   * @param  epnum endpoint number
1964:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1965:src/stm32f1xx_hal_pcd.c ****   */
1966:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
1967:src/stm32f1xx_hal_pcd.c **** {
1968:src/stm32f1xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
1969:src/stm32f1xx_hal_pcd.c ****   uint32_t USBx_BASE = (uint32_t)USBx;
1970:src/stm32f1xx_hal_pcd.c ****   uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
1971:src/stm32f1xx_hal_pcd.c ****   uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
1972:src/stm32f1xx_hal_pcd.c **** 
1973:src/stm32f1xx_hal_pcd.c **** 
1974:src/stm32f1xx_hal_pcd.c ****   if ((gSNPSiD == USB_OTG_CORE_ID_310A) &&
1975:src/stm32f1xx_hal_pcd.c ****       ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
1976:src/stm32f1xx_hal_pcd.c ****   {
1977:src/stm32f1xx_hal_pcd.c ****     CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
1978:src/stm32f1xx_hal_pcd.c ****   }
1979:src/stm32f1xx_hal_pcd.c **** 
1980:src/stm32f1xx_hal_pcd.c ****   /* Inform the upper layer that a setup packet is available */
1981:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
1982:src/stm32f1xx_hal_pcd.c ****   hpcd->SetupStageCallback(hpcd);
1983:src/stm32f1xx_hal_pcd.c **** #else
1984:src/stm32f1xx_hal_pcd.c ****   HAL_PCD_SetupStageCallback(hpcd);
1985:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
1986:src/stm32f1xx_hal_pcd.c **** 
1987:src/stm32f1xx_hal_pcd.c ****   return HAL_OK;
1988:src/stm32f1xx_hal_pcd.c **** }
1989:src/stm32f1xx_hal_pcd.c **** #endif /* defined (USB_OTG_FS) */
1990:src/stm32f1xx_hal_pcd.c **** 
1991:src/stm32f1xx_hal_pcd.c **** #if defined (USB)
1992:src/stm32f1xx_hal_pcd.c **** /**
1993:src/stm32f1xx_hal_pcd.c ****   * @brief  This function handles PCD Endpoint interrupt request.
1994:src/stm32f1xx_hal_pcd.c ****   * @param  hpcd PCD handle
1995:src/stm32f1xx_hal_pcd.c ****   * @retval HAL status
1996:src/stm32f1xx_hal_pcd.c ****   */
1997:src/stm32f1xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_EP_ISR_Handler(PCD_HandleTypeDef *hpcd)
1998:src/stm32f1xx_hal_pcd.c **** {
1999:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
2000:src/stm32f1xx_hal_pcd.c ****   uint16_t count;
2001:src/stm32f1xx_hal_pcd.c ****   uint16_t wIstr;
2002:src/stm32f1xx_hal_pcd.c ****   uint16_t wEPVal;
2003:src/stm32f1xx_hal_pcd.c ****   uint8_t epindex;
2004:src/stm32f1xx_hal_pcd.c **** 
2005:src/stm32f1xx_hal_pcd.c ****   /* stay in loop while pending interrupts */
2006:src/stm32f1xx_hal_pcd.c ****   while ((hpcd->Instance->ISTR & USB_ISTR_CTR) != 0U)
ARM GAS  /tmp/ccq2vSAC.s 			page 62


2007:src/stm32f1xx_hal_pcd.c ****   {
2008:src/stm32f1xx_hal_pcd.c ****     wIstr = hpcd->Instance->ISTR;
 1356              		.loc 1 2008 0
 1357 0480 B0F84410 		ldrh	r1, [r0, #68]	@, _98->ISTR
 1358 0484 89B2     		uxth	r1, r1	@ wIstr, _98->ISTR
 1359              	.LVL108:
2009:src/stm32f1xx_hal_pcd.c ****     /* extract highest priority endpoint number */
2010:src/stm32f1xx_hal_pcd.c ****     epindex = (uint8_t)(wIstr & USB_ISTR_EP_ID);
2011:src/stm32f1xx_hal_pcd.c **** 
2012:src/stm32f1xx_hal_pcd.c ****     if (epindex == 0U)
 1360              		.loc 1 2012 0
 1361 0486 11F00F06 		ands	r6, r1, #15	@ epindex, wIstr,
 1362 048a 40F0B780 		bne	.L65	@,
 1363              	.LBB23:
2013:src/stm32f1xx_hal_pcd.c ****     {
2014:src/stm32f1xx_hal_pcd.c ****       /* Decode and service control endpoint interrupt */
2015:src/stm32f1xx_hal_pcd.c **** 
2016:src/stm32f1xx_hal_pcd.c ****       /* DIR bit = origin of the interrupt */
2017:src/stm32f1xx_hal_pcd.c ****       if ((wIstr & USB_ISTR_DIR) == 0U)
2018:src/stm32f1xx_hal_pcd.c ****       {
2019:src/stm32f1xx_hal_pcd.c ****         /* DIR = 0 */
2020:src/stm32f1xx_hal_pcd.c **** 
2021:src/stm32f1xx_hal_pcd.c ****         /* DIR = 0      => IN  int */
2022:src/stm32f1xx_hal_pcd.c ****         /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
2023:src/stm32f1xx_hal_pcd.c ****         PCD_CLEAR_TX_EP_CTR(hpcd->Instance, PCD_ENDP0);
 1364              		.loc 1 2023 0
 1365 048e 0388     		ldrh	r3, [r0]	@,* _98
 1366              	.LBE23:
2017:src/stm32f1xx_hal_pcd.c ****       {
 1367              		.loc 1 2017 0
 1368 0490 11F01001 		ands	r1, r1, #16	@ tmp394, wIstr,
 1369              	.LVL109:
 1370              	.LBB24:
 1371              		.loc 1 2023 0
 1372 0494 9BB2     		uxth	r3, r3	@ _103, _98->EP0R
 1373              	.LBE24:
2017:src/stm32f1xx_hal_pcd.c ****       {
 1374              		.loc 1 2017 0
 1375 0496 2CD1     		bne	.L66	@,
 1376              	.LVL110:
 1377              	.LBB25:
 1378              		.loc 1 2023 0
 1379 0498 03EA0903 		and	r3, r3, r9	@ tmp396, _103, tmp719
 1380              	.LVL111:
 1381 049c 43F40043 		orr	r3, r3, #32768	@ _105, tmp396,
 1382 04a0 0380     		strh	r3, [r0]	@ movhi	@ _105, _98->EP0R
 1383              	.LVL112:
 1384              	.LBE25:
2024:src/stm32f1xx_hal_pcd.c ****         ep = &hpcd->IN_ep[0];
2025:src/stm32f1xx_hal_pcd.c **** 
2026:src/stm32f1xx_hal_pcd.c ****         ep->xfer_count = PCD_GET_EP_TX_CNT(hpcd->Instance, ep->num);
 1385              		.loc 1 2026 0
 1386 04a2 B0F85030 		ldrh	r3, [r0, #80]	@, _98->BTABLE
 1387 04a6 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].num, MEM[(st
 1388 04aa 9BB2     		uxth	r3, r3	@ _106, _98->BTABLE
 1389 04ac 03EBC203 		add	r3, r3, r2, lsl #3	@ tmp406, _106, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].num,
 1390 04b0 00EB4300 		add	r0, r0, r3, lsl #1	@ tmp408, _98, tmp406,
ARM GAS  /tmp/ccq2vSAC.s 			page 63


 1391 04b4 B0F80434 		ldrh	r3, [r0, #1028]	@, *_117
2027:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += ep->xfer_count;
 1392              		.loc 1 2027 0
 1393 04b8 E26B     		ldr	r2, [r4, #60]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_buff, MEM[(struct PCD_EPTyp
2026:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += ep->xfer_count;
 1394              		.loc 1 2026 0
 1395 04ba C3F30903 		ubfx	r3, r3, #0, #10	@ _120, *_117,,
 1396 04be 6364     		str	r3, [r4, #68]	@ _120, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_count
 1397              		.loc 1 2027 0
 1398 04c0 1344     		add	r3, r3, r2	@ tmp413, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_buff
 1399 04c2 E363     		str	r3, [r4, #60]	@ tmp413, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_buff
2028:src/stm32f1xx_hal_pcd.c **** 
2029:src/stm32f1xx_hal_pcd.c ****         /* TX COMPLETE */
2030:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
2031:src/stm32f1xx_hal_pcd.c ****         hpcd->DataInStageCallback(hpcd, 0U);
2032:src/stm32f1xx_hal_pcd.c **** #else
2033:src/stm32f1xx_hal_pcd.c ****         HAL_PCD_DataInStageCallback(hpcd, 0U);
 1400              		.loc 1 2033 0
 1401 04c4 2046     		mov	r0, r4	@, hpcd
 1402 04c6 FFF7FEFF 		bl	HAL_PCD_DataInStageCallback	@
 1403              	.LVL113:
2034:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
2035:src/stm32f1xx_hal_pcd.c **** 
2036:src/stm32f1xx_hal_pcd.c ****         if ((hpcd->USB_Address > 0U) && (ep->xfer_len == 0U))
 1404              		.loc 1 2036 0
 1405 04ca 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2	@ hpcd_11(D)->USB_Address, hpcd_11(D)->USB_Address
 1406 04ce 53B1     		cbz	r3, .L124	@ hpcd_11(D)->USB_Address,
 1407 04d0 226C     		ldr	r2, [r4, #64]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_len, MEM[(struct PCD_EPType
 1408 04d2 42B9     		cbnz	r2, .L124	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_len,
2037:src/stm32f1xx_hal_pcd.c ****         {
2038:src/stm32f1xx_hal_pcd.c ****           hpcd->Instance->DADDR = ((uint16_t)hpcd->USB_Address | USB_DADDR_EF);
 1409              		.loc 1 2038 0
 1410 04d4 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2	@ hpcd_11(D)->USB_Address, hpcd_11(D)->USB_Address
 1411 04d8 2168     		ldr	r1, [r4]	@ _125, hpcd_11(D)->Instance
 1412 04da 43F08003 		orr	r3, r3, #128	@ _128, hpcd_11(D)->USB_Address,
 1413 04de A1F84C30 		strh	r3, [r1, #76]	@ movhi	@ _128, _125->DADDR
2039:src/stm32f1xx_hal_pcd.c ****           hpcd->USB_Address = 0U;
 1414              		.loc 1 2039 0
 1415 04e2 84F82420 		strb	r2, [r4, #36]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 40B].xfer_len, hpcd_11(D)->USB_Addre
 1416              	.LVL114:
 1417              	.L124:
2006:src/stm32f1xx_hal_pcd.c ****   {
 1418              		.loc 1 2006 0
 1419 04e6 2068     		ldr	r0, [r4]	@ _98, hpcd_11(D)->Instance
 1420 04e8 B0F84430 		ldrh	r3, [r0, #68]	@, _98->ISTR
 1421 04ec 1B04     		lsls	r3, r3, #16	@, _98->ISTR,
 1422 04ee C7D4     		bmi	.L85	@,
 1423 04f0 26E7     		b	.L86	@
 1424              	.L66:
 1425              	.LVL115:
2040:src/stm32f1xx_hal_pcd.c ****         }
2041:src/stm32f1xx_hal_pcd.c ****       }
2042:src/stm32f1xx_hal_pcd.c ****       else
2043:src/stm32f1xx_hal_pcd.c ****       {
2044:src/stm32f1xx_hal_pcd.c ****         /* DIR = 1 */
2045:src/stm32f1xx_hal_pcd.c **** 
2046:src/stm32f1xx_hal_pcd.c ****         /* DIR = 1 & CTR_RX       => SETUP or OUT int */
ARM GAS  /tmp/ccq2vSAC.s 			page 64


2047:src/stm32f1xx_hal_pcd.c ****         /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
2048:src/stm32f1xx_hal_pcd.c ****         ep = &hpcd->OUT_ep[0];
2049:src/stm32f1xx_hal_pcd.c ****         wEPVal = PCD_GET_ENDPOINT(hpcd->Instance, PCD_ENDP0);
2050:src/stm32f1xx_hal_pcd.c **** 
2051:src/stm32f1xx_hal_pcd.c ****         if ((wEPVal & USB_EP_SETUP) != 0U)
 1426              		.loc 1 2051 0
 1427 04f2 13F40065 		ands	r5, r3, #2048	@ tmp431, wEPVal,
 1428 04f6 21D0     		beq	.L70	@,
2052:src/stm32f1xx_hal_pcd.c ****         {
2053:src/stm32f1xx_hal_pcd.c ****           /* Get SETUP Packet*/
2054:src/stm32f1xx_hal_pcd.c ****           ep->xfer_count = PCD_GET_EP_RX_CNT(hpcd->Instance, ep->num);
 1429              		.loc 1 2054 0
 1430 04f8 B0F85030 		ldrh	r3, [r0, #80]	@, _98->BTABLE
 1431              	.LVL116:
 1432 04fc 94F82821 		ldrb	r2, [r4, #296]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].num, MEM[(
 1433 0500 9BB2     		uxth	r3, r3	@ _131, _98->BTABLE
 1434 0502 03EBC203 		add	r3, r3, r2, lsl #3	@ tmp436, _131, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].num,
 1435 0506 00EB4303 		add	r3, r0, r3, lsl #1	@ tmp438, _98, tmp436,
 1436 050a B3F80C34 		ldrh	r3, [r3, #1036]	@, *_142
2055:src/stm32f1xx_hal_pcd.c **** 
2056:src/stm32f1xx_hal_pcd.c ****           USB_ReadPMA(hpcd->Instance, (uint8_t *)hpcd->Setup,
 1437              		.loc 1 2056 0
 1438 050e B4F82E21 		ldrh	r2, [r4, #302]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].pmaadress
 1439 0512 C3F30903 		ubfx	r3, r3, #0, #10	@ _144, *_142,,
2054:src/stm32f1xx_hal_pcd.c **** 
 1440              		.loc 1 2054 0
 1441 0516 C4F84431 		str	r3, [r4, #324]	@ _144, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_count
 1442              		.loc 1 2056 0
 1443 051a 04F50C71 		add	r1, r4, #560	@, hpcd,
 1444 051e FFF7FEFF 		bl	USB_ReadPMA	@
 1445              	.LVL117:
 1446              	.LBB26:
2057:src/stm32f1xx_hal_pcd.c ****                       ep->pmaadress, (uint16_t)ep->xfer_count);
2058:src/stm32f1xx_hal_pcd.c **** 
2059:src/stm32f1xx_hal_pcd.c ****           /* SETUP bit kept frozen while CTR_RX = 1*/
2060:src/stm32f1xx_hal_pcd.c ****           PCD_CLEAR_RX_EP_CTR(hpcd->Instance, PCD_ENDP0);
 1447              		.loc 1 2060 0
 1448 0522 2268     		ldr	r2, [r4]	@ _148, hpcd_11(D)->Instance
 1449              	.LBE26:
2061:src/stm32f1xx_hal_pcd.c **** 
2062:src/stm32f1xx_hal_pcd.c ****           /* Process SETUP Packet*/
2063:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
2064:src/stm32f1xx_hal_pcd.c ****           hpcd->SetupStageCallback(hpcd);
2065:src/stm32f1xx_hal_pcd.c **** #else
2066:src/stm32f1xx_hal_pcd.c ****           HAL_PCD_SetupStageCallback(hpcd);
 1450              		.loc 1 2066 0
 1451 0524 2046     		mov	r0, r4	@, hpcd
 1452              	.LBB27:
2060:src/stm32f1xx_hal_pcd.c **** 
 1453              		.loc 1 2060 0
 1454 0526 1388     		ldrh	r3, [r2]	@, _148->EP0R
 1455              	.LVL118:
 1456 0528 23F07003 		bic	r3, r3, #112	@ tmp448, _148->EP0R,
 1457              	.LVL119:
 1458 052c 1B05     		lsls	r3, r3, #20	@ tmp448, tmp448,
 1459 052e 1B0D     		lsrs	r3, r3, #20	@ tmp448, tmp448,
 1460 0530 43F08003 		orr	r3, r3, #128	@ _151, tmp448,
ARM GAS  /tmp/ccq2vSAC.s 			page 65


 1461 0534 1380     		strh	r3, [r2]	@ movhi	@ _151, _148->EP0R
 1462              	.LBE27:
 1463              		.loc 1 2066 0
 1464 0536 FFF7FEFF 		bl	HAL_PCD_SetupStageCallback	@
 1465              	.LVL120:
 1466 053a D4E7     		b	.L124	@
 1467              	.LVL121:
 1468              	.L70:
2067:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
2068:src/stm32f1xx_hal_pcd.c ****         }
2069:src/stm32f1xx_hal_pcd.c **** 
2070:src/stm32f1xx_hal_pcd.c ****         else if ((wEPVal & USB_EP_CTR_RX) != 0U)
 1469              		.loc 1 2070 0
 1470 053c 1F04     		lsls	r7, r3, #16	@, wEPVal,
 1471 053e D2D5     		bpl	.L124	@,
 1472              	.LBB28:
2071:src/stm32f1xx_hal_pcd.c ****         {
2072:src/stm32f1xx_hal_pcd.c ****           PCD_CLEAR_RX_EP_CTR(hpcd->Instance, PCD_ENDP0);
 1473              		.loc 1 2072 0
 1474 0540 0388     		ldrh	r3, [r0]	@, _98->EP0R
 1475              	.LVL122:
 1476 0542 23F07003 		bic	r3, r3, #112	@ tmp456, _98->EP0R,
 1477              	.LVL123:
 1478 0546 1B05     		lsls	r3, r3, #20	@ tmp456, tmp456,
 1479 0548 1B0D     		lsrs	r3, r3, #20	@ tmp456, tmp456,
 1480 054a 43F08003 		orr	r3, r3, #128	@ _155, tmp456,
 1481 054e 0380     		strh	r3, [r0]	@ movhi	@ _155, _98->EP0R
 1482              	.LBE28:
2073:src/stm32f1xx_hal_pcd.c **** 
2074:src/stm32f1xx_hal_pcd.c ****           /* Get Control Data OUT Packet*/
2075:src/stm32f1xx_hal_pcd.c ****           ep->xfer_count = PCD_GET_EP_RX_CNT(hpcd->Instance, ep->num);
 1483              		.loc 1 2075 0
 1484 0550 B0F85030 		ldrh	r3, [r0, #80]	@, _98->BTABLE
 1485 0554 94F82821 		ldrb	r2, [r4, #296]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].num, MEM[(
 1486 0558 9BB2     		uxth	r3, r3	@ _156, _98->BTABLE
 1487 055a 03EBC203 		add	r3, r3, r2, lsl #3	@ tmp464, _156, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].num,
 1488 055e 00EB4303 		add	r3, r0, r3, lsl #1	@ tmp466, _98, tmp464,
 1489 0562 B3F80C34 		ldrh	r3, [r3, #1036]	@, *_167
 1490 0566 C3F30903 		ubfx	r3, r3, #0, #10	@ _169, *_167,,
 1491 056a C4F84431 		str	r3, [r4, #324]	@ _169, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_count
2076:src/stm32f1xx_hal_pcd.c **** 
2077:src/stm32f1xx_hal_pcd.c ****           if ((ep->xfer_count != 0U) && (ep->xfer_buff != 0U))
 1492              		.loc 1 2077 0
 1493 056e 8BB1     		cbz	r3, .L71	@ _169,
 1494 0570 D4F83C11 		ldr	r1, [r4, #316]	@ _171, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_buff
 1495 0574 71B1     		cbz	r1, .L71	@ _171,
2078:src/stm32f1xx_hal_pcd.c ****           {
2079:src/stm32f1xx_hal_pcd.c ****             USB_ReadPMA(hpcd->Instance, ep->xfer_buff,
 1496              		.loc 1 2079 0
 1497 0576 B4F82E21 		ldrh	r2, [r4, #302]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].pmaadress
 1498 057a FFF7FEFF 		bl	USB_ReadPMA	@
 1499              	.LVL124:
2080:src/stm32f1xx_hal_pcd.c ****                         ep->pmaadress, (uint16_t)ep->xfer_count);
2081:src/stm32f1xx_hal_pcd.c **** 
2082:src/stm32f1xx_hal_pcd.c ****             ep->xfer_buff += ep->xfer_count;
 1500              		.loc 1 2082 0
 1501 057e D4F83C31 		ldr	r3, [r4, #316]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_buff, MEM[(struct PCD_EPT
ARM GAS  /tmp/ccq2vSAC.s 			page 66


 1502 0582 D4F84421 		ldr	r2, [r4, #324]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_count, MEM[(struct PCD_EP
2083:src/stm32f1xx_hal_pcd.c **** 
2084:src/stm32f1xx_hal_pcd.c ****             /* Process Control Data OUT Packet*/
2085:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
2086:src/stm32f1xx_hal_pcd.c ****             hpcd->DataOutStageCallback(hpcd, 0U);
2087:src/stm32f1xx_hal_pcd.c **** #else
2088:src/stm32f1xx_hal_pcd.c ****             HAL_PCD_DataOutStageCallback(hpcd, 0U);
 1503              		.loc 1 2088 0
 1504 0586 2946     		mov	r1, r5	@, tmp431
2082:src/stm32f1xx_hal_pcd.c **** 
 1505              		.loc 1 2082 0
 1506 0588 1344     		add	r3, r3, r2	@ tmp472, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_count
 1507 058a C4F83C31 		str	r3, [r4, #316]	@ tmp472, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].xfer_buff
 1508              		.loc 1 2088 0
 1509 058e 2046     		mov	r0, r4	@, hpcd
 1510 0590 FFF7FEFF 		bl	HAL_PCD_DataOutStageCallback	@
 1511              	.LVL125:
 1512              	.L71:
 1513              	.LBB29:
2089:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
2090:src/stm32f1xx_hal_pcd.c ****           }
2091:src/stm32f1xx_hal_pcd.c **** 
2092:src/stm32f1xx_hal_pcd.c ****           PCD_SET_EP_RX_CNT(hpcd->Instance, PCD_ENDP0, ep->maxpacket);
 1514              		.loc 1 2092 0
 1515 0594 2168     		ldr	r1, [r4]	@ _176, hpcd_11(D)->Instance
 1516              	.LVL126:
 1517              	.LBB30:
 1518 0596 D4F83851 		ldr	r5, [r4, #312]	@ _183, MEM[(struct PCD_EPTypeDef *)hpcd_11(D) + 296B].maxpacket
 1519              	.LBE30:
 1520 059a B1F85030 		ldrh	r3, [r1, #80]	@, _176->BTABLE
 1521 059e 01F20C40 		addw	r0, r1, #1036	@ tmp477, _176,
 1522 05a2 9BB2     		uxth	r3, r3	@ _178, _176->BTABLE
 1523              	.LVL127:
 1524              	.LBB31:
 1525 05a4 CDB9     		cbnz	r5, .L72	@ _183,
 1526 05a6 C25A     		ldrh	r2, [r0, r3]	@, *_wRegVal_182
 1527 05a8 22F4F842 		bic	r2, r2, #31744	@ _185, *_wRegVal_182,
 1528 05ac 1204     		lsls	r2, r2, #16	@ _185, _185,
 1529 05ae 120C     		lsrs	r2, r2, #16	@ _185, _185,
 1530 05b0 C252     		strh	r2, [r0, r3]	@ movhi	@ _185, *_wRegVal_182
 1531 05b2 C25A     		ldrh	r2, [r0, r3]	@, *_wRegVal_182
 1532 05b4 92B2     		uxth	r2, r2	@ _186, *_wRegVal_182
 1533 05b6 42F40042 		orr	r2, r2, #32768	@ _187, _186,
 1534              	.L140:
 1535 05ba C252     		strh	r2, [r0, r3]	@ movhi	@ _200,* _178
 1536              	.LBE31:
 1537              	.LBE29:
 1538              	.LBB33:
2093:src/stm32f1xx_hal_pcd.c ****           PCD_SET_EP_RX_STATUS(hpcd->Instance, PCD_ENDP0, USB_EP_RX_VALID);
 1539              		.loc 1 2093 0
 1540 05bc 0B88     		ldrh	r3, [r1]	@, _176->EP0R
 1541              	.LVL128:
 1542 05be 23F48043 		bic	r3, r3, #16384	@ _wRegVal, _176->EP0R,
 1543 05c2 23F07003 		bic	r3, r3, #112	@ _wRegVal, _wRegVal,
 1544 05c6 1B04     		lsls	r3, r3, #16	@ _wRegVal, _wRegVal,
 1545 05c8 1B0C     		lsrs	r3, r3, #16	@ _wRegVal, _wRegVal,
 1546              	.LVL129:
ARM GAS  /tmp/ccq2vSAC.s 			page 67


 1547 05ca 83F44053 		eor	r3, r3, #12288	@ tmp499, _wRegVal,
 1548              	.LVL130:
 1549 05ce 43F40043 		orr	r3, r3, #32768	@ _205, tmp499,
 1550              	.LVL131:
 1551 05d2 43F08003 		orr	r3, r3, #128	@ _205, _205,
 1552 05d6 0B80     		strh	r3, [r1]	@ movhi	@ _205, _176->EP0R
 1553 05d8 85E7     		b	.L124	@
 1554              	.LVL132:
 1555              	.L72:
 1556              	.LBE33:
 1557              	.LBB34:
 1558              	.LBB32:
2092:src/stm32f1xx_hal_pcd.c ****           PCD_SET_EP_RX_STATUS(hpcd->Instance, PCD_ENDP0, USB_EP_RX_VALID);
 1559              		.loc 1 2092 0
 1560 05da 3E2D     		cmp	r5, #62	@ _183,
 1561 05dc 06D8     		bhi	.L74	@,
 1562 05de 6A08     		lsrs	r2, r5, #1	@ wNBlocks, _183,
 1563              	.LVL133:
 1564 05e0 EE07     		lsls	r6, r5, #31	@, _183,
 1565 05e2 48BF     		it	mi
 1566 05e4 0132     		addmi	r2, r2, #1	@ wNBlocks, wNBlocks,
 1567              	.LVL134:
 1568 05e6 9202     		lsls	r2, r2, #10	@ tmp487, wNBlocks,
 1569              	.LVL135:
 1570              	.L141:
 1571 05e8 92B2     		uxth	r2, r2	@ _200, tmp493
 1572 05ea E6E7     		b	.L140	@
 1573              	.L74:
 1574 05ec 6A09     		lsrs	r2, r5, #5	@ wNBlocks, _183,
 1575              	.LVL136:
 1576 05ee ED06     		lsls	r5, r5, #27	@, _183,
 1577 05f0 08BF     		it	eq
 1578 05f2 02F1FF32 		addeq	r2, r2, #-1	@ wNBlocks, wNBlocks,
 1579              	.LVL137:
 1580 05f6 4AEA8222 		orr	r2, r10, r2, lsl #10	@ tmp493, tmp720, wNBlocks,
 1581              	.LVL138:
 1582 05fa F5E7     		b	.L141	@
 1583              	.LVL139:
 1584              	.L65:
 1585              	.LBE32:
 1586              	.LBE34:
2094:src/stm32f1xx_hal_pcd.c ****         }
2095:src/stm32f1xx_hal_pcd.c ****       }
2096:src/stm32f1xx_hal_pcd.c ****     }
2097:src/stm32f1xx_hal_pcd.c ****     else
2098:src/stm32f1xx_hal_pcd.c ****     {
2099:src/stm32f1xx_hal_pcd.c ****       /* Decode and service non control endpoints interrupt  */
2100:src/stm32f1xx_hal_pcd.c **** 
2101:src/stm32f1xx_hal_pcd.c ****       /* process related endpoint register */
2102:src/stm32f1xx_hal_pcd.c ****       wEPVal = PCD_GET_ENDPOINT(hpcd->Instance, epindex);
 1587              		.loc 1 2102 0
 1588 05fc 30F82680 		ldrh	r8, [r0, r6, lsl #2]	@, *_209
 1589 0600 1FFA88F8 		uxth	r8, r8	@ wEPVal, *_209
 1590              	.LVL140:
2103:src/stm32f1xx_hal_pcd.c ****       if ((wEPVal & USB_EP_CTR_RX) != 0U)
 1591              		.loc 1 2103 0
 1592 0604 18F4004F 		tst	r8, #32768	@ wEPVal,
ARM GAS  /tmp/ccq2vSAC.s 			page 68


 1593 0608 3DD0     		beq	.L77	@,
 1594              	.LBB35:
2104:src/stm32f1xx_hal_pcd.c ****       {
2105:src/stm32f1xx_hal_pcd.c ****         /* clear int flag */
2106:src/stm32f1xx_hal_pcd.c ****         PCD_CLEAR_RX_EP_CTR(hpcd->Instance, epindex);
 1595              		.loc 1 2106 0
 1596 060a 30F82630 		ldrh	r3, [r0, r6, lsl #2]	@, *_209
 1597              	.LVL141:
 1598              	.LBE35:
2107:src/stm32f1xx_hal_pcd.c ****         ep = &hpcd->OUT_ep[epindex];
2108:src/stm32f1xx_hal_pcd.c **** 
2109:src/stm32f1xx_hal_pcd.c ****         /* OUT double Buffering*/
2110:src/stm32f1xx_hal_pcd.c ****         if (ep->doublebuffer == 0U)
 1599              		.loc 1 2110 0
 1600 060e 7701     		lsls	r7, r6, #5	@ tmp514, epindex,
 1601              	.LBB36:
2106:src/stm32f1xx_hal_pcd.c ****         ep = &hpcd->OUT_ep[epindex];
 1602              		.loc 1 2106 0
 1603 0610 23F07003 		bic	r3, r3, #112	@ tmp510, *_209,
 1604              	.LVL142:
 1605 0614 1B05     		lsls	r3, r3, #20	@ tmp510, tmp510,
 1606 0616 1B0D     		lsrs	r3, r3, #20	@ tmp510, tmp510,
 1607 0618 43F08003 		orr	r3, r3, #128	@ _214, tmp510,
 1608 061c 20F82630 		strh	r3, [r0, r6, lsl #2]	@ movhi	@ _214, *_209
 1609              	.LVL143:
 1610              	.LBE36:
 1611              		.loc 1 2110 0
 1612 0620 E119     		adds	r1, r4, r7	@ tmp515, hpcd, tmp514
 1613              	.LVL144:
 1614 0622 91F83431 		ldrb	r3, [r1, #308]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].doub
 1615 0626 002B     		cmp	r3, #0	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].doublebuffer
 1616 0628 58D1     		bne	.L78	@
2111:src/stm32f1xx_hal_pcd.c ****         {
2112:src/stm32f1xx_hal_pcd.c ****           count = (uint16_t)PCD_GET_EP_RX_CNT(hpcd->Instance, ep->num);
 1617              		.loc 1 2112 0
 1618 062a B0F85030 		ldrh	r3, [r0, #80]	@, _98->BTABLE
 1619 062e 91F82821 		ldrb	r2, [r1, #296]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].num,
 1620 0632 9BB2     		uxth	r3, r3	@ _217, _98->BTABLE
 1621 0634 0633     		adds	r3, r3, #6	@ tmp525, _217,
 1622 0636 03EBC203 		add	r3, r3, r2, lsl #3	@ tmp526, tmp525, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].num,
 1623 063a 00EB4303 		add	r3, r0, r3, lsl #1	@ tmp527, _98, tmp526,
 1624 063e B3F80054 		ldrh	r5, [r3, #1024]	@, *_228
 1625 0642 C5F30905 		ubfx	r5, r5, #0, #10	@ count, *_228,,
 1626              	.LVL145:
2113:src/stm32f1xx_hal_pcd.c ****           if (count != 0U)
 1627              		.loc 1 2113 0
 1628 0646 35B1     		cbz	r5, .L79	@ count,
2114:src/stm32f1xx_hal_pcd.c ****           {
2115:src/stm32f1xx_hal_pcd.c ****             USB_ReadPMA(hpcd->Instance, ep->xfer_buff, ep->pmaadress, count);
 1629              		.loc 1 2115 0
 1630 0648 B1F82E21 		ldrh	r2, [r1, #302]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].pmaadress
 1631 064c 2B46     		mov	r3, r5	@, count
 1632 064e D1F83C11 		ldr	r1, [r1, #316]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].xfer_buff
 1633 0652 FFF7FEFF 		bl	USB_ReadPMA	@
 1634              	.LVL146:
 1635              	.L79:
 1636 0656 E119     		adds	r1, r4, r7	@ _414, hpcd, tmp514
ARM GAS  /tmp/ccq2vSAC.s 			page 69


2116:src/stm32f1xx_hal_pcd.c ****           }
2117:src/stm32f1xx_hal_pcd.c ****         }
2118:src/stm32f1xx_hal_pcd.c ****         else
2119:src/stm32f1xx_hal_pcd.c ****         {
2120:src/stm32f1xx_hal_pcd.c ****           if ((PCD_GET_ENDPOINT(hpcd->Instance, ep->num) & USB_EP_DTOG_RX) != 0U)
2121:src/stm32f1xx_hal_pcd.c ****           {
2122:src/stm32f1xx_hal_pcd.c ****             /*read from endpoint BUF0Addr buffer*/
2123:src/stm32f1xx_hal_pcd.c ****             count = (uint16_t)PCD_GET_EP_DBUF0_CNT(hpcd->Instance, ep->num);
2124:src/stm32f1xx_hal_pcd.c ****             if (count != 0U)
2125:src/stm32f1xx_hal_pcd.c ****             {
2126:src/stm32f1xx_hal_pcd.c ****               USB_ReadPMA(hpcd->Instance, ep->xfer_buff, ep->pmaaddr0, count);
2127:src/stm32f1xx_hal_pcd.c ****             }
2128:src/stm32f1xx_hal_pcd.c ****           }
2129:src/stm32f1xx_hal_pcd.c ****           else
2130:src/stm32f1xx_hal_pcd.c ****           {
2131:src/stm32f1xx_hal_pcd.c ****             /*read from endpoint BUF1Addr buffer*/
2132:src/stm32f1xx_hal_pcd.c ****             count = (uint16_t)PCD_GET_EP_DBUF1_CNT(hpcd->Instance, ep->num);
2133:src/stm32f1xx_hal_pcd.c ****             if (count != 0U)
2134:src/stm32f1xx_hal_pcd.c ****             {
2135:src/stm32f1xx_hal_pcd.c ****               USB_ReadPMA(hpcd->Instance, ep->xfer_buff, ep->pmaaddr1, count);
2136:src/stm32f1xx_hal_pcd.c ****             }
2137:src/stm32f1xx_hal_pcd.c ****           }
2138:src/stm32f1xx_hal_pcd.c ****           /* free EP OUT Buffer */
2139:src/stm32f1xx_hal_pcd.c ****           PCD_FreeUserBuffer(hpcd->Instance, ep->num, 0U);
2140:src/stm32f1xx_hal_pcd.c ****         }
2141:src/stm32f1xx_hal_pcd.c ****         /*multi-packet on the NON control OUT endpoint*/
2142:src/stm32f1xx_hal_pcd.c ****         ep->xfer_count += count;
 1637              		.loc 1 2142 0
 1638 0658 D1F84431 		ldr	r3, [r1, #324]	@ MEM[(struct PCD_EPTypeDef *)_414 + 324B], MEM[(struct PCD_EPTypeDef *)_414 + 
2143:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += count;
 1639              		.loc 1 2143 0
 1640 065c D1F83C21 		ldr	r2, [r1, #316]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].xfer_buff, MEM[(struct P
2142:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += count;
 1641              		.loc 1 2142 0
 1642 0660 2B44     		add	r3, r3, r5	@ tmp596, count
 1643 0662 C1F84431 		str	r3, [r1, #324]	@ tmp596, MEM[(struct PCD_EPTypeDef *)_414 + 324B]
2144:src/stm32f1xx_hal_pcd.c **** 
2145:src/stm32f1xx_hal_pcd.c ****         if ((ep->xfer_len == 0U) || (count < ep->maxpacket))
 1644              		.loc 1 2145 0
 1645 0666 D1F84031 		ldr	r3, [r1, #320]	@ _282, MEM[(struct PCD_EPTypeDef *)_414 + 320B]
2143:src/stm32f1xx_hal_pcd.c **** 
 1646              		.loc 1 2143 0
 1647 066a 2A44     		add	r2, r2, r5	@ _281, count
 1648 066c C1F83C21 		str	r2, [r1, #316]	@ _281, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].xfer_buff
 1649              		.loc 1 2145 0
 1650 0670 1BB1     		cbz	r3, .L82	@ _282,
 1651 0672 D1F83801 		ldr	r0, [r1, #312]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].maxpacket, MEM[(struct P
 1652 0676 8542     		cmp	r5, r0	@ count, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].maxpacket
 1653 0678 69D2     		bcs	.L83	@,
 1654              	.L82:
2146:src/stm32f1xx_hal_pcd.c ****         {
2147:src/stm32f1xx_hal_pcd.c ****           /* RX COMPLETE */
2148:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
2149:src/stm32f1xx_hal_pcd.c ****           hpcd->DataOutStageCallback(hpcd, ep->num);
2150:src/stm32f1xx_hal_pcd.c **** #else
2151:src/stm32f1xx_hal_pcd.c ****           HAL_PCD_DataOutStageCallback(hpcd, ep->num);
 1655              		.loc 1 2151 0
ARM GAS  /tmp/ccq2vSAC.s 			page 70


 1656 067a 2744     		add	r7, r7, r4	@ tmp610, hpcd
 1657 067c 97F82811 		ldrb	r1, [r7, #296]	@ zero_extendqisi2	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].num
 1658 0680 2046     		mov	r0, r4	@, hpcd
 1659 0682 FFF7FEFF 		bl	HAL_PCD_DataOutStageCallback	@
 1660              	.LVL147:
 1661              	.L77:
2152:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
2153:src/stm32f1xx_hal_pcd.c ****         }
2154:src/stm32f1xx_hal_pcd.c ****         else
2155:src/stm32f1xx_hal_pcd.c ****         {
2156:src/stm32f1xx_hal_pcd.c ****           (void)HAL_PCD_EP_Receive(hpcd, ep->num, ep->xfer_buff, ep->xfer_len);
2157:src/stm32f1xx_hal_pcd.c ****         }
2158:src/stm32f1xx_hal_pcd.c **** 
2159:src/stm32f1xx_hal_pcd.c ****       } /* if((wEPVal & EP_CTR_RX) */
2160:src/stm32f1xx_hal_pcd.c **** 
2161:src/stm32f1xx_hal_pcd.c ****       if ((wEPVal & USB_EP_CTR_TX) != 0U)
 1662              		.loc 1 2161 0
 1663 0686 18F0800F 		tst	r8, #128	@ wEPVal,
 1664 068a 3FF42CAF 		beq	.L124	@,
 1665              	.LVL148:
 1666              	.LBB37:
2162:src/stm32f1xx_hal_pcd.c ****       {
2163:src/stm32f1xx_hal_pcd.c ****         ep = &hpcd->IN_ep[epindex];
2164:src/stm32f1xx_hal_pcd.c **** 
2165:src/stm32f1xx_hal_pcd.c ****         /* clear int flag */
2166:src/stm32f1xx_hal_pcd.c ****         PCD_CLEAR_TX_EP_CTR(hpcd->Instance, epindex);
 1667              		.loc 1 2166 0
 1668 068e 2168     		ldr	r1, [r4]	@ _288, hpcd_11(D)->Instance
 1669              	.LBE37:
2167:src/stm32f1xx_hal_pcd.c **** 
2168:src/stm32f1xx_hal_pcd.c ****         /*multi-packet on the NON control IN endpoint*/
2169:src/stm32f1xx_hal_pcd.c ****         ep->xfer_count = PCD_GET_EP_TX_CNT(hpcd->Instance, ep->num);
2170:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += ep->xfer_count;
2171:src/stm32f1xx_hal_pcd.c **** 
2172:src/stm32f1xx_hal_pcd.c ****         /* Zero Length Packet? */
2173:src/stm32f1xx_hal_pcd.c ****         if (ep->xfer_len == 0U)
2174:src/stm32f1xx_hal_pcd.c ****         {
2175:src/stm32f1xx_hal_pcd.c ****           /* TX COMPLETE */
2176:src/stm32f1xx_hal_pcd.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
2177:src/stm32f1xx_hal_pcd.c ****           hpcd->DataInStageCallback(hpcd, ep->num);
2178:src/stm32f1xx_hal_pcd.c **** #else
2179:src/stm32f1xx_hal_pcd.c ****           HAL_PCD_DataInStageCallback(hpcd, ep->num);
 1670              		.loc 1 2179 0
 1671 0690 2046     		mov	r0, r4	@, hpcd
 1672              	.LBB38:
2166:src/stm32f1xx_hal_pcd.c **** 
 1673              		.loc 1 2166 0
 1674 0692 31F82620 		ldrh	r2, [r1, r6, lsl #2]	@, *_290
 1675 0696 92B2     		uxth	r2, r2	@ _291, *_290
 1676              	.LVL149:
 1677 0698 02EA0902 		and	r2, r2, r9	@ tmp621, _291, tmp719
 1678              	.LVL150:
 1679 069c 42F40042 		orr	r2, r2, #32768	@ _293, tmp621,
 1680 06a0 21F82620 		strh	r2, [r1, r6, lsl #2]	@ movhi	@ _293, *_290
 1681              	.LBE38:
2169:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += ep->xfer_count;
 1682              		.loc 1 2169 0
ARM GAS  /tmp/ccq2vSAC.s 			page 71


 1683 06a4 B1F85030 		ldrh	r3, [r1, #80]	@, _288->BTABLE
 1684 06a8 04EB4616 		add	r6, r4, r6, lsl #5	@ tmp630, hpcd, epindex,
 1685              	.LVL151:
 1686 06ac 96F82820 		ldrb	r2, [r6, #40]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].num, M
 1687 06b0 9BB2     		uxth	r3, r3	@ _294, _288->BTABLE
 1688 06b2 0233     		adds	r3, r3, #2	@ tmp634, _294,
 1689 06b4 03EBC203 		add	r3, r3, r2, lsl #3	@ tmp635, tmp634, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].num,
 1690 06b8 01EB4303 		add	r3, r1, r3, lsl #1	@ tmp636, _288, tmp635,
 1691 06bc B3F80024 		ldrh	r2, [r3, #1024]	@, *_305
2170:src/stm32f1xx_hal_pcd.c **** 
 1692              		.loc 1 2170 0
 1693 06c0 F36B     		ldr	r3, [r6, #60]	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].xfer_buff, MEM[(struct PCD
2169:src/stm32f1xx_hal_pcd.c ****         ep->xfer_buff += ep->xfer_count;
 1694              		.loc 1 2169 0
 1695 06c2 C2F30902 		ubfx	r2, r2, #0, #10	@ _308, *_305,,
 1696 06c6 7264     		str	r2, [r6, #68]	@ _308, MEM[(struct PCD_EPTypeDef *)_363 + 68B]
2170:src/stm32f1xx_hal_pcd.c **** 
 1697              		.loc 1 2170 0
 1698 06c8 1A44     		add	r2, r2, r3	@ _310, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].xfer_buff
2173:src/stm32f1xx_hal_pcd.c ****         {
 1699              		.loc 1 2173 0
 1700 06ca 336C     		ldr	r3, [r6, #64]	@ _311, MEM[(struct PCD_EPTypeDef *)_363 + 64B]
2170:src/stm32f1xx_hal_pcd.c **** 
 1701              		.loc 1 2170 0
 1702 06cc F263     		str	r2, [r6, #60]	@ _310, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].xfer_buff
 1703 06ce 96F82810 		ldrb	r1, [r6, #40]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].IN_ep[_287].num, M
2173:src/stm32f1xx_hal_pcd.c ****         {
 1704              		.loc 1 2173 0
 1705 06d2 002B     		cmp	r3, #0	@ _311
 1706 06d4 41D1     		bne	.L84	@
 1707              	.LVL152:
 1708              		.loc 1 2179 0
 1709 06d6 FFF7FEFF 		bl	HAL_PCD_DataInStageCallback	@
 1710              	.LVL153:
 1711 06da 04E7     		b	.L124	@
 1712              	.LVL154:
 1713              	.L78:
2120:src/stm32f1xx_hal_pcd.c ****           {
 1714              		.loc 1 2120 0
 1715 06dc 91F82831 		ldrb	r3, [r1, #296]	@ zero_extendqisi2	@ _234, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215
 1716 06e0 30F82320 		ldrh	r2, [r0, r3, lsl #2]	@, *_236
 1717 06e4 DB00     		lsls	r3, r3, #3	@ tmp718, _234,
 1718 06e6 12F4804F 		tst	r2, #16384	@ *_236,
2123:src/stm32f1xx_hal_pcd.c ****             if (count != 0U)
 1719              		.loc 1 2123 0
 1720 06ea B0F85020 		ldrh	r2, [r0, #80]	@,
 1721 06ee 92B2     		uxth	r2, r2	@ _239, _98->BTABLE
2120:src/stm32f1xx_hal_pcd.c ****           {
 1722              		.loc 1 2120 0
 1723 06f0 1FD0     		beq	.L80	@,
2123:src/stm32f1xx_hal_pcd.c ****             if (count != 0U)
 1724              		.loc 1 2123 0
 1725 06f2 0232     		adds	r2, r2, #2	@ tmp550, _239,
 1726 06f4 1344     		add	r3, r3, r2	@ tmp551, tmp550
 1727 06f6 00EB4303 		add	r3, r0, r3, lsl #1	@ tmp552, _98, tmp551,
 1728 06fa B3F80054 		ldrh	r5, [r3, #1024]	@, *_248
 1729 06fe C5F30905 		ubfx	r5, r5, #0, #10	@ count, *_248,,
ARM GAS  /tmp/ccq2vSAC.s 			page 72


 1730              	.LVL155:
2124:src/stm32f1xx_hal_pcd.c ****             {
 1731              		.loc 1 2124 0
 1732 0702 35B1     		cbz	r5, .L81	@ count,
2126:src/stm32f1xx_hal_pcd.c ****             }
 1733              		.loc 1 2126 0
 1734 0704 2B46     		mov	r3, r5	@, count
 1735 0706 B1F83021 		ldrh	r2, [r1, #304]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].pmaaddr0
 1736              	.L142:
2135:src/stm32f1xx_hal_pcd.c ****             }
 1737              		.loc 1 2135 0
 1738 070a D1F83C11 		ldr	r1, [r1, #316]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].xfer_buff
 1739 070e FFF7FEFF 		bl	USB_ReadPMA	@
 1740              	.LVL156:
 1741              	.L81:
 1742              	.LBB39:
2139:src/stm32f1xx_hal_pcd.c ****         }
 1743              		.loc 1 2139 0
 1744 0712 E319     		adds	r3, r4, r7	@ tmp582, hpcd, tmp514
 1745 0714 93F82811 		ldrb	r1, [r3, #296]	@ zero_extendqisi2	@ MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].num,
 1746 0718 2268     		ldr	r2, [r4]	@ hpcd_11(D)->Instance, hpcd_11(D)->Instance
 1747 071a 32F82130 		ldrh	r3, [r2, r1, lsl #2]	@, *_272
 1748 071e 9BB2     		uxth	r3, r3	@ _273, *_272
 1749              	.LVL157:
 1750 0720 03EA0B03 		and	r3, r3, fp	@ tmp588, _273, tmp721
 1751              	.LVL158:
 1752 0724 43F40043 		orr	r3, r3, #32768	@ _275, tmp588,
 1753 0728 43F0C003 		orr	r3, r3, #192	@ _275, _275,
 1754 072c 22F82130 		strh	r3, [r2, r1, lsl #2]	@ movhi	@ _275, *_272
 1755 0730 91E7     		b	.L79	@
 1756              	.LVL159:
 1757              	.L80:
 1758              	.LBE39:
2132:src/stm32f1xx_hal_pcd.c ****             if (count != 0U)
 1759              		.loc 1 2132 0
 1760 0732 0632     		adds	r2, r2, #6	@ tmp567, _253,
 1761 0734 1344     		add	r3, r3, r2	@ tmp568, tmp567
 1762 0736 00EB4303 		add	r3, r0, r3, lsl #1	@ tmp569, _98, tmp568,
 1763 073a B3F80054 		ldrh	r5, [r3, #1024]	@, *_262
 1764 073e C5F30905 		ubfx	r5, r5, #0, #10	@ count, *_262,,
 1765              	.LVL160:
2133:src/stm32f1xx_hal_pcd.c ****             {
 1766              		.loc 1 2133 0
 1767 0742 002D     		cmp	r5, #0	@ count
 1768 0744 E5D0     		beq	.L81	@
2135:src/stm32f1xx_hal_pcd.c ****             }
 1769              		.loc 1 2135 0
 1770 0746 2B46     		mov	r3, r5	@, count
 1771 0748 B1F83221 		ldrh	r2, [r1, #306]	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].pmaaddr1
 1772 074c DDE7     		b	.L142	@
 1773              	.L83:
2156:src/stm32f1xx_hal_pcd.c ****         }
 1774              		.loc 1 2156 0
 1775 074e 91F82811 		ldrb	r1, [r1, #296]	@ zero_extendqisi2	@, MEM[(struct PCD_EPTypeDef *)hpcd_11(D)].OUT_ep[_215].num
 1776 0752 2046     		mov	r0, r4	@, hpcd
 1777 0754 FFF7FEFF 		bl	HAL_PCD_EP_Receive	@
 1778              	.LVL161:
ARM GAS  /tmp/ccq2vSAC.s 			page 73


 1779 0758 95E7     		b	.L77	@
 1780              	.LVL162:
 1781              	.L84:
2180:src/stm32f1xx_hal_pcd.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
2181:src/stm32f1xx_hal_pcd.c ****         }
2182:src/stm32f1xx_hal_pcd.c ****         else
2183:src/stm32f1xx_hal_pcd.c ****         {
2184:src/stm32f1xx_hal_pcd.c ****           (void)HAL_PCD_EP_Transmit(hpcd, ep->num, ep->xfer_buff, ep->xfer_len);
 1782              		.loc 1 2184 0
 1783 075a FFF7FEFF 		bl	HAL_PCD_EP_Transmit	@
 1784              	.LVL163:
 1785 075e C2E6     		b	.L124	@
 1786              	.LVL164:
 1787              	.L62:
 1788              	.LBB40:
2166:src/stm32f1xx_hal_pcd.c **** 
 1789              		.loc 1 2166 0
 1790 0760 DFF80C90 		ldr	r9, .L143	@ tmp719,
 1791 0764 DFF80CA0 		ldr	r10, .L143+4	@ tmp720,
 1792              	.LBE40:
 1793              	.LBB41:
2139:src/stm32f1xx_hal_pcd.c ****         }
 1794              		.loc 1 2139 0
 1795 0768 DFF80CB0 		ldr	fp, .L143+8	@ tmp721,
 1796 076c BBE6     		b	.L124	@
 1797              	.L144:
 1798 076e 00BF     		.align	2
 1799              	.L143:
 1800 0770 0F8FFFFF 		.word	-28913
 1801 0774 0080FFFF 		.word	-32768
 1802 0778 8F8FFFFF 		.word	-28785
 1803              	.LBE41:
 1804              	.LBE22:
 1805              	.LBE21:
 1806              		.cfi_endproc
 1807              	.LFE71:
 1808              		.size	HAL_PCD_IRQHandler, .-HAL_PCD_IRQHandler
 1809              		.align	1
 1810              		.global	HAL_PCD_EP_SetStall
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu softvfp
 1815              		.type	HAL_PCD_EP_SetStall, %function
 1816              	HAL_PCD_EP_SetStall:
 1817              	.LFB91:
1698:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 1818              		.loc 1 1698 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              	.LVL165:
 1823 077c 38B5     		push	{r3, r4, r5, lr}	@
 1824              	.LCFI14:
 1825              		.cfi_def_cfa_offset 16
 1826              		.cfi_offset 3, -16
 1827              		.cfi_offset 4, -12
ARM GAS  /tmp/ccq2vSAC.s 			page 74


 1828              		.cfi_offset 5, -8
 1829              		.cfi_offset 14, -4
1701:src/stm32f1xx_hal_pcd.c ****   {
 1830              		.loc 1 1701 0
 1831 077e 4368     		ldr	r3, [r0, #4]	@ hpcd_9(D)->Init.dev_endpoints, hpcd_9(D)->Init.dev_endpoints
 1832 0780 01F00705 		and	r5, r1, #7	@ _11, ep_addr,
 1833 0784 9D42     		cmp	r5, r3	@ _11, hpcd_9(D)->Init.dev_endpoints
1698:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 1834              		.loc 1 1698 0
 1835 0786 0446     		mov	r4, r0	@ hpcd, hpcd
1701:src/stm32f1xx_hal_pcd.c ****   {
 1836              		.loc 1 1701 0
 1837 0788 28D8     		bhi	.L150	@,
1706:src/stm32f1xx_hal_pcd.c ****   {
 1838              		.loc 1 1706 0
 1839 078a 0B06     		lsls	r3, r1, #24	@, ep_addr,
 1840 078c 1DD5     		bpl	.L147	@,
1709:src/stm32f1xx_hal_pcd.c ****   }
 1841              		.loc 1 1709 0
 1842 078e 0122     		movs	r2, #1	@ tmp136,
1708:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 1843              		.loc 1 1708 0
 1844 0790 6B01     		lsls	r3, r5, #5	@ tmp131, _11,
 1845 0792 03F12801 		add	r1, r3, #40	@ tmp132, tmp131,
 1846              	.LVL166:
1709:src/stm32f1xx_hal_pcd.c ****   }
 1847              		.loc 1 1709 0
 1848 0796 0344     		add	r3, r3, r0	@ tmp134, hpcd
1708:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 1849              		.loc 1 1708 0
 1850 0798 0144     		add	r1, r1, r0	@ ep, hpcd
 1851              	.LVL167:
1709:src/stm32f1xx_hal_pcd.c ****   }
 1852              		.loc 1 1709 0
 1853 079a 83F82920 		strb	r2, [r3, #41]	@ tmp136, MEM[(struct PCD_EPTypeDef *)hpcd_9(D)].IN_ep[_7].is_in
 1854              	.L148:
1717:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1855              		.loc 1 1717 0
 1856 079e 0123     		movs	r3, #1	@ tmp145,
1718:src/stm32f1xx_hal_pcd.c **** 
 1857              		.loc 1 1718 0
 1858 07a0 0D70     		strb	r5, [r1]	@ _11, ep_1->num
1717:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1859              		.loc 1 1717 0
 1860 07a2 8B70     		strb	r3, [r1, #2]	@ tmp145, ep_1->is_stall
1720:src/stm32f1xx_hal_pcd.c **** 
 1861              		.loc 1 1720 0
 1862 07a4 94F82822 		ldrb	r2, [r4, #552]	@ zero_extendqisi2	@ hpcd_9(D)->Lock, hpcd_9(D)->Lock
 1863 07a8 9A42     		cmp	r2, r3	@ hpcd_9(D)->Lock,
 1864 07aa 19D0     		beq	.L151	@,
1720:src/stm32f1xx_hal_pcd.c **** 
 1865              		.loc 1 1720 0 is_stmt 0 discriminator 2
 1866 07ac 84F82832 		strb	r3, [r4, #552]	@ tmp145, hpcd_9(D)->Lock
1722:src/stm32f1xx_hal_pcd.c ****   if ((ep_addr & EP_ADDR_MSK) == 0U)
 1867              		.loc 1 1722 0 is_stmt 1 discriminator 2
 1868 07b0 2068     		ldr	r0, [r4]	@, hpcd_9(D)->Instance
 1869              	.LVL168:
ARM GAS  /tmp/ccq2vSAC.s 			page 75


 1870 07b2 FFF7FEFF 		bl	USB_EPSetStall	@
 1871              	.LVL169:
1723:src/stm32f1xx_hal_pcd.c ****   {
 1872              		.loc 1 1723 0 discriminator 2
 1873 07b6 25B9     		cbnz	r5, .L149	@ _11,
1725:src/stm32f1xx_hal_pcd.c ****   }
 1874              		.loc 1 1725 0
 1875 07b8 04F50C71 		add	r1, r4, #560	@, hpcd,
 1876 07bc 2068     		ldr	r0, [r4]	@, hpcd_9(D)->Instance
 1877 07be FFF7FEFF 		bl	USB_EP0_OutStart	@
 1878              	.LVL170:
 1879              	.L149:
1727:src/stm32f1xx_hal_pcd.c **** 
 1880              		.loc 1 1727 0
 1881 07c2 0020     		movs	r0, #0	@ tmp152,
 1882 07c4 84F82802 		strb	r0, [r4, #552]	@ tmp152, hpcd_9(D)->Lock
1729:src/stm32f1xx_hal_pcd.c **** }
 1883              		.loc 1 1729 0
 1884 07c8 38BD     		pop	{r3, r4, r5, pc}	@
 1885              	.LVL171:
 1886              	.L147:
1714:src/stm32f1xx_hal_pcd.c ****   }
 1887              		.loc 1 1714 0
 1888 07ca 0022     		movs	r2, #0	@ tmp143,
1713:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
 1889              		.loc 1 1713 0
 1890 07cc 4B01     		lsls	r3, r1, #5	@ tmp138, ep_addr,
 1891 07ce 03F59471 		add	r1, r3, #296	@ tmp139, tmp138,
 1892              	.LVL172:
1714:src/stm32f1xx_hal_pcd.c ****   }
 1893              		.loc 1 1714 0
 1894 07d2 0344     		add	r3, r3, r0	@ tmp141, hpcd
1713:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
 1895              		.loc 1 1713 0
 1896 07d4 0144     		add	r1, r1, r0	@ ep, hpcd
 1897              	.LVL173:
1714:src/stm32f1xx_hal_pcd.c ****   }
 1898              		.loc 1 1714 0
 1899 07d6 83F82921 		strb	r2, [r3, #297]	@ tmp143, MEM[(struct PCD_EPTypeDef *)hpcd_9(D)].OUT_ep[_15].is_in
 1900 07da E0E7     		b	.L148	@
 1901              	.LVL174:
 1902              	.L150:
1703:src/stm32f1xx_hal_pcd.c ****   }
 1903              		.loc 1 1703 0
 1904 07dc 0120     		movs	r0, #1	@ <retval>,
 1905              	.LVL175:
 1906 07de 38BD     		pop	{r3, r4, r5, pc}	@
 1907              	.LVL176:
 1908              	.L151:
1720:src/stm32f1xx_hal_pcd.c **** 
 1909              		.loc 1 1720 0
 1910 07e0 0220     		movs	r0, #2	@ <retval>,
 1911              	.LVL177:
1730:src/stm32f1xx_hal_pcd.c **** 
 1912              		.loc 1 1730 0
 1913 07e2 38BD     		pop	{r3, r4, r5, pc}	@
 1914              		.cfi_endproc
ARM GAS  /tmp/ccq2vSAC.s 			page 76


 1915              	.LFE91:
 1916              		.size	HAL_PCD_EP_SetStall, .-HAL_PCD_EP_SetStall
 1917              		.align	1
 1918              		.global	HAL_PCD_EP_ClrStall
 1919              		.syntax unified
 1920              		.thumb
 1921              		.thumb_func
 1922              		.fpu softvfp
 1923              		.type	HAL_PCD_EP_ClrStall, %function
 1924              	HAL_PCD_EP_ClrStall:
 1925              	.LFB92:
1739:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 1926              		.loc 1 1739 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              	.LVL178:
 1931 07e4 38B5     		push	{r3, r4, r5, lr}	@
 1932              	.LCFI15:
 1933              		.cfi_def_cfa_offset 16
 1934              		.cfi_offset 3, -16
 1935              		.cfi_offset 4, -12
 1936              		.cfi_offset 5, -8
 1937              		.cfi_offset 14, -4
1742:src/stm32f1xx_hal_pcd.c ****   {
 1938              		.loc 1 1742 0
 1939 07e6 4368     		ldr	r3, [r0, #4]	@ hpcd_8(D)->Init.dev_endpoints, hpcd_8(D)->Init.dev_endpoints
 1940 07e8 01F00F02 		and	r2, r1, #15	@ tmp130, ep_addr,
 1941 07ec 9A42     		cmp	r2, r3	@ tmp130, hpcd_8(D)->Init.dev_endpoints
1739:src/stm32f1xx_hal_pcd.c ****   PCD_EPTypeDef *ep;
 1942              		.loc 1 1739 0
 1943 07ee 0446     		mov	r4, r0	@ hpcd, hpcd
1742:src/stm32f1xx_hal_pcd.c ****   {
 1944              		.loc 1 1742 0
 1945 07f0 26D8     		bhi	.L156	@,
 1946 07f2 01F00703 		and	r3, r1, #7	@ tmp159, ep_addr,
1747:src/stm32f1xx_hal_pcd.c ****   {
 1947              		.loc 1 1747 0
 1948 07f6 11F0800F 		tst	r1, #128	@ ep_addr,
1749:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 1949              		.loc 1 1749 0
 1950 07fa 4FEA4312 		lsl	r2, r3, #5	@ tmp134, tmp159,
1747:src/stm32f1xx_hal_pcd.c ****   {
 1951              		.loc 1 1747 0
 1952 07fe 17D0     		beq	.L154	@,
1749:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 1U;
 1953              		.loc 1 1749 0
 1954 0800 02F12801 		add	r1, r2, #40	@ tmp135, tmp134,
 1955              	.LVL179:
 1956 0804 0144     		add	r1, r1, r0	@ ep, hpcd
 1957              	.LVL180:
1750:src/stm32f1xx_hal_pcd.c ****   }
 1958              		.loc 1 1750 0
 1959 0806 0244     		add	r2, r2, r0	@ tmp137, hpcd
 1960 0808 0120     		movs	r0, #1	@ tmp139,
 1961              	.LVL181:
 1962 080a 82F82900 		strb	r0, [r2, #41]	@ tmp139, MEM[(struct PCD_EPTypeDef *)hpcd_8(D)].IN_ep[_12].is_in
ARM GAS  /tmp/ccq2vSAC.s 			page 77


 1963              	.L155:
1758:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1964              		.loc 1 1758 0
 1965 080e 0025     		movs	r5, #0	@ tmp149,
1759:src/stm32f1xx_hal_pcd.c **** 
 1966              		.loc 1 1759 0
 1967 0810 0B70     		strb	r3, [r1]	@ tmp159, ep_1->num
1758:src/stm32f1xx_hal_pcd.c ****   ep->num = ep_addr & EP_ADDR_MSK;
 1968              		.loc 1 1758 0
 1969 0812 8D70     		strb	r5, [r1, #2]	@ tmp149, ep_1->is_stall
1761:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPClearStall(hpcd->Instance, ep);
 1970              		.loc 1 1761 0
 1971 0814 94F82832 		ldrb	r3, [r4, #552]	@ zero_extendqisi2	@ hpcd_8(D)->Lock, hpcd_8(D)->Lock
 1972 0818 012B     		cmp	r3, #1	@ hpcd_8(D)->Lock,
 1973 081a 13D0     		beq	.L157	@,
1761:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPClearStall(hpcd->Instance, ep);
 1974              		.loc 1 1761 0 is_stmt 0 discriminator 2
 1975 081c 0123     		movs	r3, #1	@ tmp154,
1762:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1976              		.loc 1 1762 0 is_stmt 1 discriminator 2
 1977 081e 2068     		ldr	r0, [r4]	@, hpcd_8(D)->Instance
1761:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPClearStall(hpcd->Instance, ep);
 1978              		.loc 1 1761 0 discriminator 2
 1979 0820 84F82832 		strb	r3, [r4, #552]	@ tmp154, hpcd_8(D)->Lock
1762:src/stm32f1xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1980              		.loc 1 1762 0 discriminator 2
 1981 0824 FFF7FEFF 		bl	USB_EPClearStall	@
 1982              	.LVL182:
1763:src/stm32f1xx_hal_pcd.c **** 
 1983              		.loc 1 1763 0 discriminator 2
 1984 0828 84F82852 		strb	r5, [r4, #552]	@ tmp149, hpcd_8(D)->Lock
1765:src/stm32f1xx_hal_pcd.c **** }
 1985              		.loc 1 1765 0 discriminator 2
 1986 082c 2846     		mov	r0, r5	@ <retval>, tmp149
 1987 082e 38BD     		pop	{r3, r4, r5, pc}	@
 1988              	.LVL183:
 1989              	.L154:
1754:src/stm32f1xx_hal_pcd.c ****     ep->is_in = 0U;
 1990              		.loc 1 1754 0
 1991 0830 02F59471 		add	r1, r2, #296	@ tmp143, tmp142,
 1992              	.LVL184:
 1993 0834 0144     		add	r1, r1, r0	@ ep, hpcd
 1994              	.LVL185:
1755:src/stm32f1xx_hal_pcd.c ****   }
 1995              		.loc 1 1755 0
 1996 0836 0244     		add	r2, r2, r0	@ tmp145, hpcd
 1997 0838 0020     		movs	r0, #0	@ tmp147,
 1998              	.LVL186:
 1999 083a 82F82901 		strb	r0, [r2, #297]	@ tmp147, MEM[(struct PCD_EPTypeDef *)hpcd_8(D)].OUT_ep[_15].is_in
 2000 083e E6E7     		b	.L155	@
 2001              	.LVL187:
 2002              	.L156:
1744:src/stm32f1xx_hal_pcd.c ****   }
 2003              		.loc 1 1744 0
 2004 0840 0120     		movs	r0, #1	@ <retval>,
 2005              	.LVL188:
 2006 0842 38BD     		pop	{r3, r4, r5, pc}	@
ARM GAS  /tmp/ccq2vSAC.s 			page 78


 2007              	.LVL189:
 2008              	.L157:
1761:src/stm32f1xx_hal_pcd.c ****   (void)USB_EPClearStall(hpcd->Instance, ep);
 2009              		.loc 1 1761 0
 2010 0844 0220     		movs	r0, #2	@ <retval>,
1766:src/stm32f1xx_hal_pcd.c **** 
 2011              		.loc 1 1766 0
 2012 0846 38BD     		pop	{r3, r4, r5, pc}	@
 2013              		.cfi_endproc
 2014              	.LFE92:
 2015              		.size	HAL_PCD_EP_ClrStall, .-HAL_PCD_EP_ClrStall
 2016              		.align	1
 2017              		.global	HAL_PCD_EP_Flush
 2018              		.syntax unified
 2019              		.thumb
 2020              		.thumb_func
 2021              		.fpu softvfp
 2022              		.type	HAL_PCD_EP_Flush, %function
 2023              	HAL_PCD_EP_Flush:
 2024              	.LFB93:
1775:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 2025              		.loc 1 1775 0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL190:
1776:src/stm32f1xx_hal_pcd.c **** 
 2030              		.loc 1 1776 0
 2031 0848 90F82832 		ldrb	r3, [r0, #552]	@ zero_extendqisi2	@ hpcd_5(D)->Lock, hpcd_5(D)->Lock
1775:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 2032              		.loc 1 1775 0
 2033 084c 10B5     		push	{r4, lr}	@
 2034              	.LCFI16:
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 4, -8
 2037              		.cfi_offset 14, -4
1776:src/stm32f1xx_hal_pcd.c **** 
 2038              		.loc 1 1776 0
 2039 084e 012B     		cmp	r3, #1	@ hpcd_5(D)->Lock,
1775:src/stm32f1xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 2040              		.loc 1 1775 0
 2041 0850 0446     		mov	r4, r0	@ hpcd, hpcd
1776:src/stm32f1xx_hal_pcd.c **** 
 2042              		.loc 1 1776 0
 2043 0852 11D0     		beq	.L162	@,
1776:src/stm32f1xx_hal_pcd.c **** 
 2044              		.loc 1 1776 0 is_stmt 0 discriminator 2
 2045 0854 0123     		movs	r3, #1	@ tmp120,
 2046 0856 80F82832 		strb	r3, [r0, #552]	@ tmp120, hpcd_5(D)->Lock
1778:src/stm32f1xx_hal_pcd.c ****   {
 2047              		.loc 1 1778 0 is_stmt 1 discriminator 2
 2048 085a 0B06     		lsls	r3, r1, #24	@, ep_addr,
 2049 085c 08D5     		bpl	.L160	@,
1780:src/stm32f1xx_hal_pcd.c ****   }
 2050              		.loc 1 1780 0
 2051 085e 01F00701 		and	r1, r1, #7	@, ep_addr,
 2052              	.LVL191:
ARM GAS  /tmp/ccq2vSAC.s 			page 79


 2053 0862 0068     		ldr	r0, [r0]	@, hpcd_5(D)->Instance
 2054              	.LVL192:
 2055 0864 FFF7FEFF 		bl	USB_FlushTxFifo	@
 2056              	.LVL193:
 2057              	.L161:
1787:src/stm32f1xx_hal_pcd.c **** 
 2058              		.loc 1 1787 0
 2059 0868 0020     		movs	r0, #0	@ tmp125,
 2060 086a 84F82802 		strb	r0, [r4, #552]	@ tmp125, hpcd_5(D)->Lock
1789:src/stm32f1xx_hal_pcd.c **** }
 2061              		.loc 1 1789 0
 2062 086e 10BD     		pop	{r4, pc}	@
 2063              	.LVL194:
 2064              	.L160:
1784:src/stm32f1xx_hal_pcd.c ****   }
 2065              		.loc 1 1784 0
 2066 0870 0068     		ldr	r0, [r0]	@, hpcd_5(D)->Instance
 2067              	.LVL195:
 2068 0872 FFF7FEFF 		bl	USB_FlushRxFifo	@
 2069              	.LVL196:
 2070 0876 F7E7     		b	.L161	@
 2071              	.LVL197:
 2072              	.L162:
1776:src/stm32f1xx_hal_pcd.c **** 
 2073              		.loc 1 1776 0
 2074 0878 0220     		movs	r0, #2	@ <retval>,
 2075              	.LVL198:
1790:src/stm32f1xx_hal_pcd.c **** 
 2076              		.loc 1 1790 0
 2077 087a 10BD     		pop	{r4, pc}	@
 2078              		.cfi_endproc
 2079              	.LFE93:
 2080              		.size	HAL_PCD_EP_Flush, .-HAL_PCD_EP_Flush
 2081              		.align	1
 2082              		.global	HAL_PCD_ActivateRemoteWakeup
 2083              		.syntax unified
 2084              		.thumb
 2085              		.thumb_func
 2086              		.fpu softvfp
 2087              		.type	HAL_PCD_ActivateRemoteWakeup, %function
 2088              	HAL_PCD_ActivateRemoteWakeup:
 2089              	.LFB94:
1798:src/stm32f1xx_hal_pcd.c ****   return (USB_ActivateRemoteWakeup(hpcd->Instance));
 2090              		.loc 1 1798 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 2094              		@ link register save eliminated.
 2095              	.LVL199:
1799:src/stm32f1xx_hal_pcd.c **** }
 2096              		.loc 1 1799 0
 2097 087c 0068     		ldr	r0, [r0]	@, hpcd_2(D)->Instance
 2098              	.LVL200:
 2099 087e FFF7FEBF 		b	USB_ActivateRemoteWakeup	@
 2100              	.LVL201:
 2101              		.cfi_endproc
 2102              	.LFE94:
ARM GAS  /tmp/ccq2vSAC.s 			page 80


 2103              		.size	HAL_PCD_ActivateRemoteWakeup, .-HAL_PCD_ActivateRemoteWakeup
 2104              		.align	1
 2105              		.global	HAL_PCD_DeActivateRemoteWakeup
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu softvfp
 2110              		.type	HAL_PCD_DeActivateRemoteWakeup, %function
 2111              	HAL_PCD_DeActivateRemoteWakeup:
 2112              	.LFB95:
1808:src/stm32f1xx_hal_pcd.c ****   return (USB_DeActivateRemoteWakeup(hpcd->Instance));
 2113              		.loc 1 1808 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 2118              	.LVL202:
1809:src/stm32f1xx_hal_pcd.c **** }
 2119              		.loc 1 1809 0
 2120 0882 0068     		ldr	r0, [r0]	@, hpcd_2(D)->Instance
 2121              	.LVL203:
 2122 0884 FFF7FEBF 		b	USB_DeActivateRemoteWakeup	@
 2123              	.LVL204:
 2124              		.cfi_endproc
 2125              	.LFE95:
 2126              		.size	HAL_PCD_DeActivateRemoteWakeup, .-HAL_PCD_DeActivateRemoteWakeup
 2127              		.align	1
 2128              		.global	HAL_PCD_GetState
 2129              		.syntax unified
 2130              		.thumb
 2131              		.thumb_func
 2132              		.fpu softvfp
 2133              		.type	HAL_PCD_GetState, %function
 2134              	HAL_PCD_GetState:
 2135              	.LFB96:
1837:src/stm32f1xx_hal_pcd.c ****   return hpcd->State;
 2136              		.loc 1 1837 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              		@ link register save eliminated.
 2141              	.LVL205:
1838:src/stm32f1xx_hal_pcd.c **** }
 2142              		.loc 1 1838 0
 2143 0888 90F82902 		ldrb	r0, [r0, #553]	@ zero_extendqisi2	@ hpcd_2(D)->State, hpcd_2(D)->State
 2144              	.LVL206:
1839:src/stm32f1xx_hal_pcd.c **** 
 2145              		.loc 1 1839 0
 2146 088c 7047     		bx	lr	@
 2147              		.cfi_endproc
 2148              	.LFE96:
 2149              		.size	HAL_PCD_GetState, .-HAL_PCD_GetState
 2150              	.Letext0:
 2151              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2152              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2153              		.file 4 "../cmsiscore/inc/core_cm3.h"
 2154              		.file 5 "../cmsisstm32f1xx/inc/system_stm32f1xx.h"
ARM GAS  /tmp/ccq2vSAC.s 			page 81


 2155              		.file 6 "../cmsisstm32f1xx/inc/stm32f103x6.h"
 2156              		.file 7 "./inc/stm32f1xx_hal_def.h"
 2157              		.file 8 "./inc/stm32f1xx_ll_usb.h"
 2158              		.file 9 "./inc/stm32f1xx_hal_pcd.h"
 2159              		.file 10 "./inc/stm32f1xx_hal.h"
 2160              		.file 11 "./inc/stm32f1xx_hal_pcd_ex.h"
 2161 088e 00BF     		.section	.debug_info,"",%progbits
 2162              	.Ldebug_info0:
 2163 0000 07140000 		.4byte	0x1407
 2164 0004 0200     		.2byte	0x2
 2165 0006 00000000 		.4byte	.Ldebug_abbrev0
 2166 000a 04       		.byte	0x4
 2167 000b 01       		.uleb128 0x1
 2168 000c 46030000 		.4byte	.LASF183
 2169 0010 0C       		.byte	0xc
 2170 0011 2C090000 		.4byte	.LASF184
 2171 0015 AD060000 		.4byte	.LASF185
 2172 0019 00000000 		.4byte	.Ltext0
 2173 001d 8E080000 		.4byte	.Letext0
 2174 0021 00000000 		.4byte	.Ldebug_line0
 2175 0025 02       		.uleb128 0x2
 2176 0026 01       		.byte	0x1
 2177 0027 06       		.byte	0x6
 2178 0028 7D010000 		.4byte	.LASF0
 2179 002c 03       		.uleb128 0x3
 2180 002d 8F000000 		.4byte	.LASF3
 2181 0031 02       		.byte	0x2
 2182 0032 1D       		.byte	0x1d
 2183 0033 37000000 		.4byte	0x37
 2184 0037 02       		.uleb128 0x2
 2185 0038 01       		.byte	0x1
 2186 0039 08       		.byte	0x8
 2187 003a E1060000 		.4byte	.LASF1
 2188 003e 02       		.uleb128 0x2
 2189 003f 02       		.byte	0x2
 2190 0040 05       		.byte	0x5
 2191 0041 23020000 		.4byte	.LASF2
 2192 0045 03       		.uleb128 0x3
 2193 0046 8A020000 		.4byte	.LASF4
 2194 004a 02       		.byte	0x2
 2195 004b 2B       		.byte	0x2b
 2196 004c 50000000 		.4byte	0x50
 2197 0050 02       		.uleb128 0x2
 2198 0051 02       		.byte	0x2
 2199 0052 07       		.byte	0x7
 2200 0053 47040000 		.4byte	.LASF5
 2201 0057 03       		.uleb128 0x3
 2202 0058 90080000 		.4byte	.LASF6
 2203 005c 02       		.byte	0x2
 2204 005d 3F       		.byte	0x3f
 2205 005e 62000000 		.4byte	0x62
 2206 0062 02       		.uleb128 0x2
 2207 0063 04       		.byte	0x4
 2208 0064 05       		.byte	0x5
 2209 0065 D0010000 		.4byte	.LASF7
 2210 0069 03       		.uleb128 0x3
 2211 006a 9A020000 		.4byte	.LASF8
ARM GAS  /tmp/ccq2vSAC.s 			page 82


 2212 006e 02       		.byte	0x2
 2213 006f 41       		.byte	0x41
 2214 0070 74000000 		.4byte	0x74
 2215 0074 02       		.uleb128 0x2
 2216 0075 04       		.byte	0x4
 2217 0076 07       		.byte	0x7
 2218 0077 EE030000 		.4byte	.LASF9
 2219 007b 02       		.uleb128 0x2
 2220 007c 08       		.byte	0x8
 2221 007d 05       		.byte	0x5
 2222 007e 6F010000 		.4byte	.LASF10
 2223 0082 02       		.uleb128 0x2
 2224 0083 08       		.byte	0x8
 2225 0084 07       		.byte	0x7
 2226 0085 C4000000 		.4byte	.LASF11
 2227 0089 04       		.uleb128 0x4
 2228 008a 04       		.byte	0x4
 2229 008b 05       		.byte	0x5
 2230 008c 696E7400 		.ascii	"int\000"
 2231 0090 02       		.uleb128 0x2
 2232 0091 04       		.byte	0x4
 2233 0092 07       		.byte	0x7
 2234 0093 39030000 		.4byte	.LASF12
 2235 0097 03       		.uleb128 0x3
 2236 0098 E3090000 		.4byte	.LASF13
 2237 009c 03       		.byte	0x3
 2238 009d 18       		.byte	0x18
 2239 009e 2C000000 		.4byte	0x2c
 2240 00a2 05       		.uleb128 0x5
 2241 00a3 97000000 		.4byte	0x97
 2242 00a7 06       		.uleb128 0x6
 2243 00a8 97000000 		.4byte	0x97
 2244 00ac 03       		.uleb128 0x3
 2245 00ad 39020000 		.4byte	.LASF14
 2246 00b1 03       		.byte	0x3
 2247 00b2 24       		.byte	0x24
 2248 00b3 45000000 		.4byte	0x45
 2249 00b7 05       		.uleb128 0x5
 2250 00b8 AC000000 		.4byte	0xac
 2251 00bc 03       		.uleb128 0x3
 2252 00bd D9060000 		.4byte	.LASF15
 2253 00c1 03       		.byte	0x3
 2254 00c2 2C       		.byte	0x2c
 2255 00c3 57000000 		.4byte	0x57
 2256 00c7 05       		.uleb128 0x5
 2257 00c8 BC000000 		.4byte	0xbc
 2258 00cc 03       		.uleb128 0x3
 2259 00cd 23090000 		.4byte	.LASF16
 2260 00d1 03       		.byte	0x3
 2261 00d2 30       		.byte	0x30
 2262 00d3 69000000 		.4byte	0x69
 2263 00d7 05       		.uleb128 0x5
 2264 00d8 CC000000 		.4byte	0xcc
 2265 00dc 02       		.uleb128 0x2
 2266 00dd 04       		.byte	0x4
 2267 00de 07       		.byte	0x7
 2268 00df 53050000 		.4byte	.LASF17
ARM GAS  /tmp/ccq2vSAC.s 			page 83


 2269 00e3 07       		.uleb128 0x7
 2270 00e4 F9060000 		.4byte	.LASF18
 2271 00e8 04       		.byte	0x4
 2272 00e9 4807     		.2byte	0x748
 2273 00eb C7000000 		.4byte	0xc7
 2274 00ef 01       		.byte	0x1
 2275 00f0 01       		.byte	0x1
 2276 00f1 08       		.uleb128 0x8
 2277 00f2 37060000 		.4byte	.LASF19
 2278 00f6 05       		.byte	0x5
 2279 00f7 33       		.byte	0x33
 2280 00f8 CC000000 		.4byte	0xcc
 2281 00fc 01       		.byte	0x1
 2282 00fd 01       		.byte	0x1
 2283 00fe 09       		.uleb128 0x9
 2284 00ff A7000000 		.4byte	0xa7
 2285 0103 0E010000 		.4byte	0x10e
 2286 0107 0A       		.uleb128 0xa
 2287 0108 DC000000 		.4byte	0xdc
 2288 010c 0F       		.byte	0xf
 2289 010d 00       		.byte	0
 2290 010e 06       		.uleb128 0x6
 2291 010f FE000000 		.4byte	0xfe
 2292 0113 08       		.uleb128 0x8
 2293 0114 02050000 		.4byte	.LASF20
 2294 0118 05       		.byte	0x5
 2295 0119 34       		.byte	0x34
 2296 011a 0E010000 		.4byte	0x10e
 2297 011e 01       		.byte	0x1
 2298 011f 01       		.byte	0x1
 2299 0120 09       		.uleb128 0x9
 2300 0121 A7000000 		.4byte	0xa7
 2301 0125 30010000 		.4byte	0x130
 2302 0129 0A       		.uleb128 0xa
 2303 012a DC000000 		.4byte	0xdc
 2304 012e 07       		.byte	0x7
 2305 012f 00       		.byte	0
 2306 0130 06       		.uleb128 0x6
 2307 0131 20010000 		.4byte	0x120
 2308 0135 08       		.uleb128 0x8
 2309 0136 A2000000 		.4byte	.LASF21
 2310 013a 05       		.byte	0x5
 2311 013b 35       		.byte	0x35
 2312 013c 30010000 		.4byte	0x130
 2313 0140 01       		.byte	0x1
 2314 0141 01       		.byte	0x1
 2315 0142 09       		.uleb128 0x9
 2316 0143 CC000000 		.4byte	0xcc
 2317 0147 52010000 		.4byte	0x152
 2318 014b 0A       		.uleb128 0xa
 2319 014c DC000000 		.4byte	0xdc
 2320 0150 0B       		.byte	0xb
 2321 0151 00       		.byte	0
 2322 0152 0B       		.uleb128 0xb
 2323 0153 54       		.byte	0x54
 2324 0154 06       		.byte	0x6
 2325 0155 0502     		.2byte	0x205
ARM GAS  /tmp/ccq2vSAC.s 			page 84


 2326 0157 E2020000 		.4byte	0x2e2
 2327 015b 0C       		.uleb128 0xc
 2328 015c 63090000 		.4byte	.LASF22
 2329 0160 06       		.byte	0x6
 2330 0161 0702     		.2byte	0x207
 2331 0163 B7000000 		.4byte	0xb7
 2332 0167 02       		.byte	0x2
 2333 0168 23       		.byte	0x23
 2334 0169 00       		.uleb128 0
 2335 016a 0C       		.uleb128 0xc
 2336 016b 47060000 		.4byte	.LASF23
 2337 016f 06       		.byte	0x6
 2338 0170 0802     		.2byte	0x208
 2339 0172 B7000000 		.4byte	0xb7
 2340 0176 02       		.byte	0x2
 2341 0177 23       		.byte	0x23
 2342 0178 02       		.uleb128 0x2
 2343 0179 0C       		.uleb128 0xc
 2344 017a 23000000 		.4byte	.LASF24
 2345 017e 06       		.byte	0x6
 2346 017f 0902     		.2byte	0x209
 2347 0181 B7000000 		.4byte	0xb7
 2348 0185 02       		.byte	0x2
 2349 0186 23       		.byte	0x23
 2350 0187 04       		.uleb128 0x4
 2351 0188 0C       		.uleb128 0xc
 2352 0189 51060000 		.4byte	.LASF25
 2353 018d 06       		.byte	0x6
 2354 018e 0A02     		.2byte	0x20a
 2355 0190 B7000000 		.4byte	0xb7
 2356 0194 02       		.byte	0x2
 2357 0195 23       		.byte	0x23
 2358 0196 06       		.uleb128 0x6
 2359 0197 0C       		.uleb128 0xc
 2360 0198 89010000 		.4byte	.LASF26
 2361 019c 06       		.byte	0x6
 2362 019d 0B02     		.2byte	0x20b
 2363 019f B7000000 		.4byte	0xb7
 2364 01a3 02       		.byte	0x2
 2365 01a4 23       		.byte	0x23
 2366 01a5 08       		.uleb128 0x8
 2367 01a6 0C       		.uleb128 0xc
 2368 01a7 5B060000 		.4byte	.LASF27
 2369 01ab 06       		.byte	0x6
 2370 01ac 0C02     		.2byte	0x20c
 2371 01ae B7000000 		.4byte	0xb7
 2372 01b2 02       		.byte	0x2
 2373 01b3 23       		.byte	0x23
 2374 01b4 0A       		.uleb128 0xa
 2375 01b5 0C       		.uleb128 0xc
 2376 01b6 1E000000 		.4byte	.LASF28
 2377 01ba 06       		.byte	0x6
 2378 01bb 0D02     		.2byte	0x20d
 2379 01bd B7000000 		.4byte	0xb7
 2380 01c1 02       		.byte	0x2
 2381 01c2 23       		.byte	0x23
 2382 01c3 0C       		.uleb128 0xc
ARM GAS  /tmp/ccq2vSAC.s 			page 85


 2383 01c4 0C       		.uleb128 0xc
 2384 01c5 C4070000 		.4byte	.LASF29
 2385 01c9 06       		.byte	0x6
 2386 01ca 0E02     		.2byte	0x20e
 2387 01cc B7000000 		.4byte	0xb7
 2388 01d0 02       		.byte	0x2
 2389 01d1 23       		.byte	0x23
 2390 01d2 0E       		.uleb128 0xe
 2391 01d3 0C       		.uleb128 0xc
 2392 01d4 64010000 		.4byte	.LASF30
 2393 01d8 06       		.byte	0x6
 2394 01d9 0F02     		.2byte	0x20f
 2395 01db B7000000 		.4byte	0xb7
 2396 01df 02       		.byte	0x2
 2397 01e0 23       		.byte	0x23
 2398 01e1 10       		.uleb128 0x10
 2399 01e2 0C       		.uleb128 0xc
 2400 01e3 71060000 		.4byte	.LASF31
 2401 01e7 06       		.byte	0x6
 2402 01e8 1002     		.2byte	0x210
 2403 01ea B7000000 		.4byte	0xb7
 2404 01ee 02       		.byte	0x2
 2405 01ef 23       		.byte	0x23
 2406 01f0 12       		.uleb128 0x12
 2407 01f1 0C       		.uleb128 0xc
 2408 01f2 BD050000 		.4byte	.LASF32
 2409 01f6 06       		.byte	0x6
 2410 01f7 1102     		.2byte	0x211
 2411 01f9 B7000000 		.4byte	0xb7
 2412 01fd 02       		.byte	0x2
 2413 01fe 23       		.byte	0x23
 2414 01ff 14       		.uleb128 0x14
 2415 0200 0C       		.uleb128 0xc
 2416 0201 7B060000 		.4byte	.LASF33
 2417 0205 06       		.byte	0x6
 2418 0206 1202     		.2byte	0x212
 2419 0208 B7000000 		.4byte	0xb7
 2420 020c 02       		.byte	0x2
 2421 020d 23       		.byte	0x23
 2422 020e 16       		.uleb128 0x16
 2423 020f 0C       		.uleb128 0xc
 2424 0210 2C070000 		.4byte	.LASF34
 2425 0214 06       		.byte	0x6
 2426 0215 1302     		.2byte	0x213
 2427 0217 B7000000 		.4byte	0xb7
 2428 021b 02       		.byte	0x2
 2429 021c 23       		.byte	0x23
 2430 021d 18       		.uleb128 0x18
 2431 021e 0C       		.uleb128 0xc
 2432 021f 85060000 		.4byte	.LASF35
 2433 0223 06       		.byte	0x6
 2434 0224 1402     		.2byte	0x214
 2435 0226 B7000000 		.4byte	0xb7
 2436 022a 02       		.byte	0x2
 2437 022b 23       		.byte	0x23
 2438 022c 1A       		.uleb128 0x1a
 2439 022d 0C       		.uleb128 0xc
ARM GAS  /tmp/ccq2vSAC.s 			page 86


 2440 022e 9B030000 		.4byte	.LASF36
 2441 0232 06       		.byte	0x6
 2442 0233 1502     		.2byte	0x215
 2443 0235 B7000000 		.4byte	0xb7
 2444 0239 02       		.byte	0x2
 2445 023a 23       		.byte	0x23
 2446 023b 1C       		.uleb128 0x1c
 2447 023c 0C       		.uleb128 0xc
 2448 023d 8F060000 		.4byte	.LASF37
 2449 0241 06       		.byte	0x6
 2450 0242 1602     		.2byte	0x216
 2451 0244 F2020000 		.4byte	0x2f2
 2452 0248 02       		.byte	0x2
 2453 0249 23       		.byte	0x23
 2454 024a 1E       		.uleb128 0x1e
 2455 024b 0C       		.uleb128 0xc
 2456 024c EA010000 		.4byte	.LASF38
 2457 0250 06       		.byte	0x6
 2458 0251 1702     		.2byte	0x217
 2459 0253 B7000000 		.4byte	0xb7
 2460 0257 02       		.byte	0x2
 2461 0258 23       		.byte	0x23
 2462 0259 40       		.uleb128 0x40
 2463 025a 0C       		.uleb128 0xc
 2464 025b 99060000 		.4byte	.LASF39
 2465 025f 06       		.byte	0x6
 2466 0260 1802     		.2byte	0x218
 2467 0262 B7000000 		.4byte	0xb7
 2468 0266 02       		.byte	0x2
 2469 0267 23       		.byte	0x23
 2470 0268 42       		.uleb128 0x42
 2471 0269 0C       		.uleb128 0xc
 2472 026a AB010000 		.4byte	.LASF40
 2473 026e 06       		.byte	0x6
 2474 026f 1902     		.2byte	0x219
 2475 0271 B7000000 		.4byte	0xb7
 2476 0275 02       		.byte	0x2
 2477 0276 23       		.byte	0x23
 2478 0277 44       		.uleb128 0x44
 2479 0278 0C       		.uleb128 0xc
 2480 0279 A3060000 		.4byte	.LASF41
 2481 027d 06       		.byte	0x6
 2482 027e 1A02     		.2byte	0x21a
 2483 0280 B7000000 		.4byte	0xb7
 2484 0284 02       		.byte	0x2
 2485 0285 23       		.byte	0x23
 2486 0286 46       		.uleb128 0x46
 2487 0287 0D       		.uleb128 0xd
 2488 0288 464E5200 		.ascii	"FNR\000"
 2489 028c 06       		.byte	0x6
 2490 028d 1B02     		.2byte	0x21b
 2491 028f B7000000 		.4byte	0xb7
 2492 0293 02       		.byte	0x2
 2493 0294 23       		.byte	0x23
 2494 0295 48       		.uleb128 0x48
 2495 0296 0C       		.uleb128 0xc
 2496 0297 4C080000 		.4byte	.LASF42
ARM GAS  /tmp/ccq2vSAC.s 			page 87


 2497 029b 06       		.byte	0x6
 2498 029c 1C02     		.2byte	0x21c
 2499 029e B7000000 		.4byte	0xb7
 2500 02a2 02       		.byte	0x2
 2501 02a3 23       		.byte	0x23
 2502 02a4 4A       		.uleb128 0x4a
 2503 02a5 0C       		.uleb128 0xc
 2504 02a6 06090000 		.4byte	.LASF43
 2505 02aa 06       		.byte	0x6
 2506 02ab 1D02     		.2byte	0x21d
 2507 02ad B7000000 		.4byte	0xb7
 2508 02b1 02       		.byte	0x2
 2509 02b2 23       		.byte	0x23
 2510 02b3 4C       		.uleb128 0x4c
 2511 02b4 0C       		.uleb128 0xc
 2512 02b5 6B080000 		.4byte	.LASF44
 2513 02b9 06       		.byte	0x6
 2514 02ba 1E02     		.2byte	0x21e
 2515 02bc B7000000 		.4byte	0xb7
 2516 02c0 02       		.byte	0x2
 2517 02c1 23       		.byte	0x23
 2518 02c2 4E       		.uleb128 0x4e
 2519 02c3 0C       		.uleb128 0xc
 2520 02c4 6C000000 		.4byte	.LASF45
 2521 02c8 06       		.byte	0x6
 2522 02c9 1F02     		.2byte	0x21f
 2523 02cb B7000000 		.4byte	0xb7
 2524 02cf 02       		.byte	0x2
 2525 02d0 23       		.byte	0x23
 2526 02d1 50       		.uleb128 0x50
 2527 02d2 0C       		.uleb128 0xc
 2528 02d3 EF060000 		.4byte	.LASF46
 2529 02d7 06       		.byte	0x6
 2530 02d8 2002     		.2byte	0x220
 2531 02da B7000000 		.4byte	0xb7
 2532 02de 02       		.byte	0x2
 2533 02df 23       		.byte	0x23
 2534 02e0 52       		.uleb128 0x52
 2535 02e1 00       		.byte	0
 2536 02e2 09       		.uleb128 0x9
 2537 02e3 B7000000 		.4byte	0xb7
 2538 02e7 F2020000 		.4byte	0x2f2
 2539 02eb 0A       		.uleb128 0xa
 2540 02ec DC000000 		.4byte	0xdc
 2541 02f0 10       		.byte	0x10
 2542 02f1 00       		.byte	0
 2543 02f2 05       		.uleb128 0x5
 2544 02f3 E2020000 		.4byte	0x2e2
 2545 02f7 0E       		.uleb128 0xe
 2546 02f8 1B0A0000 		.4byte	.LASF47
 2547 02fc 06       		.byte	0x6
 2548 02fd 2102     		.2byte	0x221
 2549 02ff 52010000 		.4byte	0x152
 2550 0303 02       		.uleb128 0x2
 2551 0304 08       		.byte	0x8
 2552 0305 04       		.byte	0x4
 2553 0306 10080000 		.4byte	.LASF48
ARM GAS  /tmp/ccq2vSAC.s 			page 88


 2554 030a 0F       		.uleb128 0xf
 2555 030b 01       		.byte	0x1
 2556 030c 37000000 		.4byte	0x37
 2557 0310 07       		.byte	0x7
 2558 0311 2A       		.byte	0x2a
 2559 0312 2F030000 		.4byte	0x32f
 2560 0316 10       		.uleb128 0x10
 2561 0317 21040000 		.4byte	.LASF49
 2562 031b 00       		.byte	0
 2563 031c 10       		.uleb128 0x10
 2564 031d 06080000 		.4byte	.LASF50
 2565 0321 01       		.byte	0x1
 2566 0322 10       		.uleb128 0x10
 2567 0323 99000000 		.4byte	.LASF51
 2568 0327 02       		.byte	0x2
 2569 0328 10       		.uleb128 0x10
 2570 0329 02030000 		.4byte	.LASF52
 2571 032d 03       		.byte	0x3
 2572 032e 00       		.byte	0
 2573 032f 03       		.uleb128 0x3
 2574 0330 E1040000 		.4byte	.LASF53
 2575 0334 07       		.byte	0x7
 2576 0335 2F       		.byte	0x2f
 2577 0336 0A030000 		.4byte	0x30a
 2578 033a 0F       		.uleb128 0xf
 2579 033b 01       		.byte	0x1
 2580 033c 37000000 		.4byte	0x37
 2581 0340 07       		.byte	0x7
 2582 0341 35       		.byte	0x35
 2583 0342 53030000 		.4byte	0x353
 2584 0346 10       		.uleb128 0x10
 2585 0347 FB090000 		.4byte	.LASF54
 2586 034b 00       		.byte	0
 2587 034c 10       		.uleb128 0x10
 2588 034d A9050000 		.4byte	.LASF55
 2589 0351 01       		.byte	0x1
 2590 0352 00       		.byte	0
 2591 0353 03       		.uleb128 0x3
 2592 0354 B0010000 		.4byte	.LASF56
 2593 0358 07       		.byte	0x7
 2594 0359 38       		.byte	0x38
 2595 035a 3A030000 		.4byte	0x33a
 2596 035e 11       		.uleb128 0x11
 2597 035f 04       		.byte	0x4
 2598 0360 12       		.uleb128 0x12
 2599 0361 04       		.byte	0x4
 2600 0362 97000000 		.4byte	0x97
 2601 0366 0F       		.uleb128 0xf
 2602 0367 01       		.byte	0x1
 2603 0368 37000000 		.4byte	0x37
 2604 036c 08       		.byte	0x8
 2605 036d D5       		.byte	0xd5
 2606 036e 79030000 		.4byte	0x379
 2607 0372 10       		.uleb128 0x10
 2608 0373 7D050000 		.4byte	.LASF57
 2609 0377 00       		.byte	0
 2610 0378 00       		.byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 89


 2611 0379 13       		.uleb128 0x13
 2612 037a 20       		.byte	0x20
 2613 037b 08       		.byte	0x8
 2614 037c DC       		.byte	0xdc
 2615 037d F2030000 		.4byte	0x3f2
 2616 0381 14       		.uleb128 0x14
 2617 0382 50010000 		.4byte	.LASF58
 2618 0386 08       		.byte	0x8
 2619 0387 DE       		.byte	0xde
 2620 0388 CC000000 		.4byte	0xcc
 2621 038c 02       		.byte	0x2
 2622 038d 23       		.byte	0x23
 2623 038e 00       		.uleb128 0
 2624 038f 14       		.uleb128 0x14
 2625 0390 F5090000 		.4byte	.LASF59
 2626 0394 08       		.byte	0x8
 2627 0395 E2       		.byte	0xe2
 2628 0396 CC000000 		.4byte	0xcc
 2629 039a 02       		.byte	0x2
 2630 039b 23       		.byte	0x23
 2631 039c 04       		.uleb128 0x4
 2632 039d 14       		.uleb128 0x14
 2633 039e A7080000 		.4byte	.LASF60
 2634 03a2 08       		.byte	0x8
 2635 03a3 E5       		.byte	0xe5
 2636 03a4 CC000000 		.4byte	0xcc
 2637 03a8 02       		.byte	0x2
 2638 03a9 23       		.byte	0x23
 2639 03aa 08       		.uleb128 0x8
 2640 03ab 14       		.uleb128 0x14
 2641 03ac 3C040000 		.4byte	.LASF61
 2642 03b0 08       		.byte	0x8
 2643 03b1 E7       		.byte	0xe7
 2644 03b2 CC000000 		.4byte	0xcc
 2645 03b6 02       		.byte	0x2
 2646 03b7 23       		.byte	0x23
 2647 03b8 0C       		.uleb128 0xc
 2648 03b9 14       		.uleb128 0x14
 2649 03ba 44090000 		.4byte	.LASF62
 2650 03be 08       		.byte	0x8
 2651 03bf EA       		.byte	0xea
 2652 03c0 CC000000 		.4byte	0xcc
 2653 03c4 02       		.byte	0x2
 2654 03c5 23       		.byte	0x23
 2655 03c6 10       		.uleb128 0x10
 2656 03c7 14       		.uleb128 0x14
 2657 03c8 2D0A0000 		.4byte	.LASF63
 2658 03cc 08       		.byte	0x8
 2659 03cd EC       		.byte	0xec
 2660 03ce CC000000 		.4byte	0xcc
 2661 03d2 02       		.byte	0x2
 2662 03d3 23       		.byte	0x23
 2663 03d4 14       		.uleb128 0x14
 2664 03d5 14       		.uleb128 0x14
 2665 03d6 68090000 		.4byte	.LASF64
 2666 03da 08       		.byte	0x8
 2667 03db EE       		.byte	0xee
ARM GAS  /tmp/ccq2vSAC.s 			page 90


 2668 03dc CC000000 		.4byte	0xcc
 2669 03e0 02       		.byte	0x2
 2670 03e1 23       		.byte	0x23
 2671 03e2 18       		.uleb128 0x18
 2672 03e3 14       		.uleb128 0x14
 2673 03e4 AC070000 		.4byte	.LASF65
 2674 03e8 08       		.byte	0x8
 2675 03e9 F0       		.byte	0xf0
 2676 03ea CC000000 		.4byte	0xcc
 2677 03ee 02       		.byte	0x2
 2678 03ef 23       		.byte	0x23
 2679 03f0 1C       		.uleb128 0x1c
 2680 03f1 00       		.byte	0
 2681 03f2 03       		.uleb128 0x3
 2682 03f3 8A070000 		.4byte	.LASF66
 2683 03f7 08       		.byte	0x8
 2684 03f8 F1       		.byte	0xf1
 2685 03f9 79030000 		.4byte	0x379
 2686 03fd 13       		.uleb128 0x13
 2687 03fe 20       		.byte	0x20
 2688 03ff 08       		.byte	0x8
 2689 0400 F3       		.byte	0xf3
 2690 0401 D4040000 		.4byte	0x4d4
 2691 0405 15       		.uleb128 0x15
 2692 0406 6E756D00 		.ascii	"num\000"
 2693 040a 08       		.byte	0x8
 2694 040b F5       		.byte	0xf5
 2695 040c 97000000 		.4byte	0x97
 2696 0410 02       		.byte	0x2
 2697 0411 23       		.byte	0x23
 2698 0412 00       		.uleb128 0
 2699 0413 14       		.uleb128 0x14
 2700 0414 5E010000 		.4byte	.LASF67
 2701 0418 08       		.byte	0x8
 2702 0419 F8       		.byte	0xf8
 2703 041a 97000000 		.4byte	0x97
 2704 041e 02       		.byte	0x2
 2705 041f 23       		.byte	0x23
 2706 0420 01       		.uleb128 0x1
 2707 0421 14       		.uleb128 0x14
 2708 0422 C2020000 		.4byte	.LASF68
 2709 0426 08       		.byte	0x8
 2710 0427 FB       		.byte	0xfb
 2711 0428 97000000 		.4byte	0x97
 2712 042c 02       		.byte	0x2
 2713 042d 23       		.byte	0x23
 2714 042e 02       		.uleb128 0x2
 2715 042f 14       		.uleb128 0x14
 2716 0430 B0000000 		.4byte	.LASF69
 2717 0434 08       		.byte	0x8
 2718 0435 FE       		.byte	0xfe
 2719 0436 97000000 		.4byte	0x97
 2720 043a 02       		.byte	0x2
 2721 043b 23       		.byte	0x23
 2722 043c 03       		.uleb128 0x3
 2723 043d 0C       		.uleb128 0xc
 2724 043e 5F070000 		.4byte	.LASF70
ARM GAS  /tmp/ccq2vSAC.s 			page 91


 2725 0442 08       		.byte	0x8
 2726 0443 0101     		.2byte	0x101
 2727 0445 97000000 		.4byte	0x97
 2728 0449 02       		.byte	0x2
 2729 044a 23       		.byte	0x23
 2730 044b 04       		.uleb128 0x4
 2731 044c 0C       		.uleb128 0xc
 2732 044d EB090000 		.4byte	.LASF71
 2733 0451 08       		.byte	0x8
 2734 0452 0401     		.2byte	0x104
 2735 0454 AC000000 		.4byte	0xac
 2736 0458 02       		.byte	0x2
 2737 0459 23       		.byte	0x23
 2738 045a 06       		.uleb128 0x6
 2739 045b 0C       		.uleb128 0xc
 2740 045c E1010000 		.4byte	.LASF72
 2741 0460 08       		.byte	0x8
 2742 0461 0701     		.2byte	0x107
 2743 0463 AC000000 		.4byte	0xac
 2744 0467 02       		.byte	0x2
 2745 0468 23       		.byte	0x23
 2746 0469 08       		.uleb128 0x8
 2747 046a 0C       		.uleb128 0xc
 2748 046b B4050000 		.4byte	.LASF73
 2749 046f 08       		.byte	0x8
 2750 0470 0A01     		.2byte	0x10a
 2751 0472 AC000000 		.4byte	0xac
 2752 0476 02       		.byte	0x2
 2753 0477 23       		.byte	0x23
 2754 0478 0A       		.uleb128 0xa
 2755 0479 0C       		.uleb128 0xc
 2756 047a 7D020000 		.4byte	.LASF74
 2757 047e 08       		.byte	0x8
 2758 047f 0D01     		.2byte	0x10d
 2759 0481 97000000 		.4byte	0x97
 2760 0485 02       		.byte	0x2
 2761 0486 23       		.byte	0x23
 2762 0487 0C       		.uleb128 0xc
 2763 0488 0C       		.uleb128 0xc
 2764 0489 DE080000 		.4byte	.LASF75
 2765 048d 08       		.byte	0x8
 2766 048e 1001     		.2byte	0x110
 2767 0490 AC000000 		.4byte	0xac
 2768 0494 02       		.byte	0x2
 2769 0495 23       		.byte	0x23
 2770 0496 0E       		.uleb128 0xe
 2771 0497 0C       		.uleb128 0xc
 2772 0498 13010000 		.4byte	.LASF76
 2773 049c 08       		.byte	0x8
 2774 049d 1401     		.2byte	0x114
 2775 049f CC000000 		.4byte	0xcc
 2776 04a3 02       		.byte	0x2
 2777 04a4 23       		.byte	0x23
 2778 04a5 10       		.uleb128 0x10
 2779 04a6 0C       		.uleb128 0xc
 2780 04a7 19090000 		.4byte	.LASF77
 2781 04ab 08       		.byte	0x8
ARM GAS  /tmp/ccq2vSAC.s 			page 92


 2782 04ac 1701     		.2byte	0x117
 2783 04ae 60030000 		.4byte	0x360
 2784 04b2 02       		.byte	0x2
 2785 04b3 23       		.byte	0x23
 2786 04b4 14       		.uleb128 0x14
 2787 04b5 0C       		.uleb128 0xc
 2788 04b6 74020000 		.4byte	.LASF78
 2789 04ba 08       		.byte	0x8
 2790 04bb 1901     		.2byte	0x119
 2791 04bd CC000000 		.4byte	0xcc
 2792 04c1 02       		.byte	0x2
 2793 04c2 23       		.byte	0x23
 2794 04c3 18       		.uleb128 0x18
 2795 04c4 0C       		.uleb128 0xc
 2796 04c5 18020000 		.4byte	.LASF79
 2797 04c9 08       		.byte	0x8
 2798 04ca 1B01     		.2byte	0x11b
 2799 04cc CC000000 		.4byte	0xcc
 2800 04d0 02       		.byte	0x2
 2801 04d1 23       		.byte	0x23
 2802 04d2 1C       		.uleb128 0x1c
 2803 04d3 00       		.byte	0
 2804 04d4 0E       		.uleb128 0xe
 2805 04d5 0E030000 		.4byte	.LASF80
 2806 04d9 08       		.byte	0x8
 2807 04da 1D01     		.2byte	0x11d
 2808 04dc FD030000 		.4byte	0x3fd
 2809 04e0 0F       		.uleb128 0xf
 2810 04e1 01       		.byte	0x1
 2811 04e2 37000000 		.4byte	0x37
 2812 04e6 09       		.byte	0x9
 2813 04e7 32       		.byte	0x32
 2814 04e8 0B050000 		.4byte	0x50b
 2815 04ec 10       		.uleb128 0x10
 2816 04ed 3E0A0000 		.4byte	.LASF81
 2817 04f1 00       		.byte	0
 2818 04f2 10       		.uleb128 0x10
 2819 04f3 28040000 		.4byte	.LASF82
 2820 04f7 01       		.byte	0x1
 2821 04f8 10       		.uleb128 0x10
 2822 04f9 4F090000 		.4byte	.LASF83
 2823 04fd 02       		.byte	0x2
 2824 04fe 10       		.uleb128 0x10
 2825 04ff 0B000000 		.4byte	.LASF84
 2826 0503 03       		.byte	0x3
 2827 0504 10       		.uleb128 0x10
 2828 0505 AC090000 		.4byte	.LASF85
 2829 0509 04       		.byte	0x4
 2830 050a 00       		.byte	0
 2831 050b 03       		.uleb128 0x3
 2832 050c BC040000 		.4byte	.LASF86
 2833 0510 09       		.byte	0x9
 2834 0511 38       		.byte	0x38
 2835 0512 E0040000 		.4byte	0x4e0
 2836 0516 05       		.uleb128 0x5
 2837 0517 0B050000 		.4byte	0x50b
 2838 051b 0F       		.uleb128 0xf
ARM GAS  /tmp/ccq2vSAC.s 			page 93


 2839 051c 01       		.byte	0x1
 2840 051d 37000000 		.4byte	0x37
 2841 0521 09       		.byte	0x9
 2842 0522 3C       		.byte	0x3c
 2843 0523 40050000 		.4byte	0x540
 2844 0527 10       		.uleb128 0x10
 2845 0528 A0030000 		.4byte	.LASF87
 2846 052c 00       		.byte	0
 2847 052d 10       		.uleb128 0x10
 2848 052e A7030000 		.4byte	.LASF88
 2849 0532 01       		.byte	0x1
 2850 0533 10       		.uleb128 0x10
 2851 0534 AE030000 		.4byte	.LASF89
 2852 0538 02       		.byte	0x2
 2853 0539 10       		.uleb128 0x10
 2854 053a DB000000 		.4byte	.LASF90
 2855 053e 03       		.byte	0x3
 2856 053f 00       		.byte	0
 2857 0540 03       		.uleb128 0x3
 2858 0541 88040000 		.4byte	.LASF91
 2859 0545 09       		.byte	0x9
 2860 0546 41       		.byte	0x41
 2861 0547 1B050000 		.4byte	0x51b
 2862 054b 03       		.uleb128 0x3
 2863 054c 65060000 		.4byte	.LASF92
 2864 0550 09       		.byte	0x9
 2865 0551 5D       		.byte	0x5d
 2866 0552 F7020000 		.4byte	0x2f7
 2867 0556 03       		.uleb128 0x3
 2868 0557 6E070000 		.4byte	.LASF93
 2869 055b 09       		.byte	0x9
 2870 055c 5E       		.byte	0x5e
 2871 055d F2030000 		.4byte	0x3f2
 2872 0561 03       		.uleb128 0x3
 2873 0562 5E000000 		.4byte	.LASF94
 2874 0566 09       		.byte	0x9
 2875 0567 5F       		.byte	0x5f
 2876 0568 D4040000 		.4byte	0x4d4
 2877 056c 16       		.uleb128 0x16
 2878 056d 6C02     		.2byte	0x26c
 2879 056f 09       		.byte	0x9
 2880 0570 68       		.byte	0x68
 2881 0571 26060000 		.4byte	0x626
 2882 0575 14       		.uleb128 0x14
 2883 0576 BB000000 		.4byte	.LASF95
 2884 057a 09       		.byte	0x9
 2885 057b 6B       		.byte	0x6b
 2886 057c 26060000 		.4byte	0x626
 2887 0580 02       		.byte	0x2
 2888 0581 23       		.byte	0x23
 2889 0582 00       		.uleb128 0
 2890 0583 14       		.uleb128 0x14
 2891 0584 38050000 		.4byte	.LASF96
 2892 0588 09       		.byte	0x9
 2893 0589 6C       		.byte	0x6c
 2894 058a 56050000 		.4byte	0x556
 2895 058e 02       		.byte	0x2
ARM GAS  /tmp/ccq2vSAC.s 			page 94


 2896 058f 23       		.byte	0x23
 2897 0590 04       		.uleb128 0x4
 2898 0591 14       		.uleb128 0x14
 2899 0592 7E070000 		.4byte	.LASF97
 2900 0596 09       		.byte	0x9
 2901 0597 6D       		.byte	0x6d
 2902 0598 A2000000 		.4byte	0xa2
 2903 059c 02       		.byte	0x2
 2904 059d 23       		.byte	0x23
 2905 059e 24       		.uleb128 0x24
 2906 059f 14       		.uleb128 0x14
 2907 05a0 B5000000 		.4byte	.LASF98
 2908 05a4 09       		.byte	0x9
 2909 05a5 73       		.byte	0x73
 2910 05a6 2C060000 		.4byte	0x62c
 2911 05aa 02       		.byte	0x2
 2912 05ab 23       		.byte	0x23
 2913 05ac 28       		.uleb128 0x28
 2914 05ad 14       		.uleb128 0x14
 2915 05ae 75080000 		.4byte	.LASF99
 2916 05b2 09       		.byte	0x9
 2917 05b3 74       		.byte	0x74
 2918 05b4 2C060000 		.4byte	0x62c
 2919 05b8 03       		.byte	0x3
 2920 05b9 23       		.byte	0x23
 2921 05ba A802     		.uleb128 0x128
 2922 05bc 14       		.uleb128 0x14
 2923 05bd 95020000 		.4byte	.LASF100
 2924 05c1 09       		.byte	0x9
 2925 05c2 76       		.byte	0x76
 2926 05c3 53030000 		.4byte	0x353
 2927 05c7 03       		.byte	0x3
 2928 05c8 23       		.byte	0x23
 2929 05c9 A804     		.uleb128 0x228
 2930 05cb 14       		.uleb128 0x14
 2931 05cc 46080000 		.4byte	.LASF101
 2932 05d0 09       		.byte	0x9
 2933 05d1 77       		.byte	0x77
 2934 05d2 16050000 		.4byte	0x516
 2935 05d6 03       		.byte	0x3
 2936 05d7 23       		.byte	0x23
 2937 05d8 A904     		.uleb128 0x229
 2938 05da 14       		.uleb128 0x14
 2939 05db 9D040000 		.4byte	.LASF102
 2940 05df 09       		.byte	0x9
 2941 05e0 78       		.byte	0x78
 2942 05e1 D7000000 		.4byte	0xd7
 2943 05e5 03       		.byte	0x3
 2944 05e6 23       		.byte	0x23
 2945 05e7 AC04     		.uleb128 0x22c
 2946 05e9 14       		.uleb128 0x14
 2947 05ea 69010000 		.4byte	.LASF103
 2948 05ee 09       		.byte	0x9
 2949 05ef 79       		.byte	0x79
 2950 05f0 42010000 		.4byte	0x142
 2951 05f4 03       		.byte	0x3
 2952 05f5 23       		.byte	0x23
ARM GAS  /tmp/ccq2vSAC.s 			page 95


 2953 05f6 B004     		.uleb128 0x230
 2954 05f8 14       		.uleb128 0x14
 2955 05f9 A1010000 		.4byte	.LASF104
 2956 05fd 09       		.byte	0x9
 2957 05fe 7A       		.byte	0x7a
 2958 05ff 40050000 		.4byte	0x540
 2959 0603 03       		.byte	0x3
 2960 0604 23       		.byte	0x23
 2961 0605 E004     		.uleb128 0x260
 2962 0607 14       		.uleb128 0x14
 2963 0608 9A080000 		.4byte	.LASF105
 2964 060c 09       		.byte	0x9
 2965 060d 7B       		.byte	0x7b
 2966 060e CC000000 		.4byte	0xcc
 2967 0612 03       		.byte	0x3
 2968 0613 23       		.byte	0x23
 2969 0614 E404     		.uleb128 0x264
 2970 0616 14       		.uleb128 0x14
 2971 0617 270A0000 		.4byte	.LASF106
 2972 061b 09       		.byte	0x9
 2973 061c 7D       		.byte	0x7d
 2974 061d 5E030000 		.4byte	0x35e
 2975 0621 03       		.byte	0x3
 2976 0622 23       		.byte	0x23
 2977 0623 E804     		.uleb128 0x268
 2978 0625 00       		.byte	0
 2979 0626 12       		.uleb128 0x12
 2980 0627 04       		.byte	0x4
 2981 0628 4B050000 		.4byte	0x54b
 2982 062c 09       		.uleb128 0x9
 2983 062d 61050000 		.4byte	0x561
 2984 0631 3C060000 		.4byte	0x63c
 2985 0635 0A       		.uleb128 0xa
 2986 0636 DC000000 		.4byte	0xdc
 2987 063a 07       		.byte	0x7
 2988 063b 00       		.byte	0
 2989 063c 03       		.uleb128 0x3
 2990 063d F0020000 		.4byte	.LASF107
 2991 0641 09       		.byte	0x9
 2992 0642 90       		.byte	0x90
 2993 0643 6C050000 		.4byte	0x56c
 2994 0647 0F       		.uleb128 0xf
 2995 0648 01       		.byte	0x1
 2996 0649 37000000 		.4byte	0x37
 2997 064d 0A       		.byte	0xa
 2998 064e 33       		.byte	0x33
 2999 064f 6C060000 		.4byte	0x66c
 3000 0653 10       		.uleb128 0x10
 3001 0654 56020000 		.4byte	.LASF108
 3002 0658 64       		.byte	0x64
 3003 0659 10       		.uleb128 0x10
 3004 065a 7C080000 		.4byte	.LASF109
 3005 065e 0A       		.byte	0xa
 3006 065f 10       		.uleb128 0x10
 3007 0660 00040000 		.4byte	.LASF110
 3008 0664 01       		.byte	0x1
 3009 0665 10       		.uleb128 0x10
ARM GAS  /tmp/ccq2vSAC.s 			page 96


 3010 0666 03060000 		.4byte	.LASF111
 3011 066a 01       		.byte	0x1
 3012 066b 00       		.byte	0
 3013 066c 03       		.uleb128 0x3
 3014 066d 28000000 		.4byte	.LASF112
 3015 0671 0A       		.byte	0xa
 3016 0672 38       		.byte	0x38
 3017 0673 47060000 		.4byte	0x647
 3018 0677 08       		.uleb128 0x8
 3019 0678 1C080000 		.4byte	.LASF113
 3020 067c 0A       		.byte	0xa
 3021 067d 3D       		.byte	0x3d
 3022 067e CC000000 		.4byte	0xcc
 3023 0682 01       		.byte	0x1
 3024 0683 01       		.byte	0x1
 3025 0684 08       		.uleb128 0x8
 3026 0685 69020000 		.4byte	.LASF114
 3027 0689 0A       		.byte	0xa
 3028 068a 3E       		.byte	0x3e
 3029 068b 6C060000 		.4byte	0x66c
 3030 068f 01       		.byte	0x1
 3031 0690 01       		.byte	0x1
 3032 0691 17       		.uleb128 0x17
 3033 0692 06070000 		.4byte	.LASF186
 3034 0696 01       		.byte	0x1
 3035 0697 CD07     		.2byte	0x7cd
 3036 0699 01       		.byte	0x1
 3037 069a 2F030000 		.4byte	0x32f
 3038 069e 01       		.byte	0x1
 3039 069f A3070000 		.4byte	0x7a3
 3040 06a3 18       		.uleb128 0x18
 3041 06a4 00000000 		.4byte	.LASF125
 3042 06a8 01       		.byte	0x1
 3043 06a9 CD07     		.2byte	0x7cd
 3044 06ab A3070000 		.4byte	0x7a3
 3045 06af 19       		.uleb128 0x19
 3046 06b0 657000   		.ascii	"ep\000"
 3047 06b3 01       		.byte	0x1
 3048 06b4 CF07     		.2byte	0x7cf
 3049 06b6 A9070000 		.4byte	0x7a9
 3050 06ba 1A       		.uleb128 0x1a
 3051 06bb 05000000 		.4byte	.LASF115
 3052 06bf 01       		.byte	0x1
 3053 06c0 D007     		.2byte	0x7d0
 3054 06c2 AC000000 		.4byte	0xac
 3055 06c6 1A       		.uleb128 0x1a
 3056 06c7 EF010000 		.4byte	.LASF116
 3057 06cb 01       		.byte	0x1
 3058 06cc D107     		.2byte	0x7d1
 3059 06ce AC000000 		.4byte	0xac
 3060 06d2 1A       		.uleb128 0x1a
 3061 06d3 3F080000 		.4byte	.LASF117
 3062 06d7 01       		.byte	0x1
 3063 06d8 D207     		.2byte	0x7d2
 3064 06da AC000000 		.4byte	0xac
 3065 06de 1A       		.uleb128 0x1a
 3066 06df EA080000 		.4byte	.LASF118
ARM GAS  /tmp/ccq2vSAC.s 			page 97


 3067 06e3 01       		.byte	0x1
 3068 06e4 D307     		.2byte	0x7d3
 3069 06e6 97000000 		.4byte	0x97
 3070 06ea 1B       		.uleb128 0x1b
 3071 06eb FC060000 		.4byte	0x6fc
 3072 06ef 1A       		.uleb128 0x1a
 3073 06f0 10050000 		.4byte	.LASF119
 3074 06f4 01       		.byte	0x1
 3075 06f5 E707     		.2byte	0x7e7
 3076 06f7 AC000000 		.4byte	0xac
 3077 06fb 00       		.byte	0
 3078 06fc 1B       		.uleb128 0x1b
 3079 06fd 0E070000 		.4byte	0x70e
 3080 0701 1A       		.uleb128 0x1a
 3081 0702 10050000 		.4byte	.LASF119
 3082 0706 01       		.byte	0x1
 3083 0707 0C08     		.2byte	0x80c
 3084 0709 AC000000 		.4byte	0xac
 3085 070d 00       		.byte	0
 3086 070e 1B       		.uleb128 0x1b
 3087 070f 20070000 		.4byte	0x720
 3088 0713 1A       		.uleb128 0x1a
 3089 0714 10050000 		.4byte	.LASF119
 3090 0718 01       		.byte	0x1
 3091 0719 1808     		.2byte	0x818
 3092 071b AC000000 		.4byte	0xac
 3093 071f 00       		.byte	0
 3094 0720 1B       		.uleb128 0x1b
 3095 0721 4C070000 		.4byte	0x74c
 3096 0725 1A       		.uleb128 0x1a
 3097 0726 19060000 		.4byte	.LASF120
 3098 072a 01       		.byte	0x1
 3099 072b 2C08     		.2byte	0x82c
 3100 072d CC000000 		.4byte	0xcc
 3101 0731 1A       		.uleb128 0x1a
 3102 0732 10050000 		.4byte	.LASF119
 3103 0736 01       		.byte	0x1
 3104 0737 2C08     		.2byte	0x82c
 3105 0739 AF070000 		.4byte	0x7af
 3106 073d 1C       		.uleb128 0x1c
 3107 073e 1A       		.uleb128 0x1a
 3108 073f 2F050000 		.4byte	.LASF121
 3109 0743 01       		.byte	0x1
 3110 0744 2C08     		.2byte	0x82c
 3111 0746 CC000000 		.4byte	0xcc
 3112 074a 00       		.byte	0
 3113 074b 00       		.byte	0
 3114 074c 1B       		.uleb128 0x1b
 3115 074d 5E070000 		.4byte	0x75e
 3116 0751 1A       		.uleb128 0x1a
 3117 0752 10050000 		.4byte	.LASF119
 3118 0756 01       		.byte	0x1
 3119 0757 2D08     		.2byte	0x82d
 3120 0759 AC000000 		.4byte	0xac
 3121 075d 00       		.byte	0
 3122 075e 1B       		.uleb128 0x1b
 3123 075f 70070000 		.4byte	0x770
ARM GAS  /tmp/ccq2vSAC.s 			page 98


 3124 0763 1A       		.uleb128 0x1a
 3125 0764 10050000 		.4byte	.LASF119
 3126 0768 01       		.byte	0x1
 3127 0769 3A08     		.2byte	0x83a
 3128 076b AC000000 		.4byte	0xac
 3129 076f 00       		.byte	0
 3130 0770 1B       		.uleb128 0x1b
 3131 0771 82070000 		.4byte	0x782
 3132 0775 1A       		.uleb128 0x1a
 3133 0776 D9010000 		.4byte	.LASF122
 3134 077a 01       		.byte	0x1
 3135 077b 5B08     		.2byte	0x85b
 3136 077d AC000000 		.4byte	0xac
 3137 0781 00       		.byte	0
 3138 0782 1B       		.uleb128 0x1b
 3139 0783 94070000 		.4byte	0x794
 3140 0787 1A       		.uleb128 0x1a
 3141 0788 D9010000 		.4byte	.LASF122
 3142 078c 01       		.byte	0x1
 3143 078d 5B08     		.2byte	0x85b
 3144 078f AC000000 		.4byte	0xac
 3145 0793 00       		.byte	0
 3146 0794 1C       		.uleb128 0x1c
 3147 0795 1A       		.uleb128 0x1a
 3148 0796 10050000 		.4byte	.LASF119
 3149 079a 01       		.byte	0x1
 3150 079b 7608     		.2byte	0x876
 3151 079d AC000000 		.4byte	0xac
 3152 07a1 00       		.byte	0
 3153 07a2 00       		.byte	0
 3154 07a3 12       		.uleb128 0x12
 3155 07a4 04       		.byte	0x4
 3156 07a5 3C060000 		.4byte	0x63c
 3157 07a9 12       		.uleb128 0x12
 3158 07aa 04       		.byte	0x4
 3159 07ab 61050000 		.4byte	0x561
 3160 07af 12       		.uleb128 0x12
 3161 07b0 04       		.byte	0x4
 3162 07b1 B7000000 		.4byte	0xb7
 3163 07b5 1D       		.uleb128 0x1d
 3164 07b6 01       		.byte	0x1
 3165 07b7 C2050000 		.4byte	.LASF123
 3166 07bb 01       		.byte	0x1
 3167 07bc 2C07     		.2byte	0x72c
 3168 07be 01       		.byte	0x1
 3169 07bf 0B050000 		.4byte	0x50b
 3170 07c3 88080000 		.4byte	.LFB96
 3171 07c7 8E080000 		.4byte	.LFE96
 3172 07cb 02       		.byte	0x2
 3173 07cc 7D       		.byte	0x7d
 3174 07cd 00       		.sleb128 0
 3175 07ce 01       		.byte	0x1
 3176 07cf E4070000 		.4byte	0x7e4
 3177 07d3 1E       		.uleb128 0x1e
 3178 07d4 00000000 		.4byte	.LASF125
 3179 07d8 01       		.byte	0x1
 3180 07d9 2C07     		.2byte	0x72c
ARM GAS  /tmp/ccq2vSAC.s 			page 99


 3181 07db A3070000 		.4byte	0x7a3
 3182 07df 00000000 		.4byte	.LLST73
 3183 07e3 00       		.byte	0
 3184 07e4 1D       		.uleb128 0x1d
 3185 07e5 01       		.byte	0x1
 3186 07e6 BF080000 		.4byte	.LASF124
 3187 07ea 01       		.byte	0x1
 3188 07eb 0F07     		.2byte	0x70f
 3189 07ed 01       		.byte	0x1
 3190 07ee 2F030000 		.4byte	0x32f
 3191 07f2 82080000 		.4byte	.LFB95
 3192 07f6 88080000 		.4byte	.LFE95
 3193 07fa 02       		.byte	0x2
 3194 07fb 7D       		.byte	0x7d
 3195 07fc 00       		.sleb128 0
 3196 07fd 01       		.byte	0x1
 3197 07fe 1D080000 		.4byte	0x81d
 3198 0802 1E       		.uleb128 0x1e
 3199 0803 00000000 		.4byte	.LASF125
 3200 0807 01       		.byte	0x1
 3201 0808 0F07     		.2byte	0x70f
 3202 080a A3070000 		.4byte	0x7a3
 3203 080e 21000000 		.4byte	.LLST72
 3204 0812 1F       		.uleb128 0x1f
 3205 0813 88080000 		.4byte	.LVL204
 3206 0817 01       		.byte	0x1
 3207 0818 D7120000 		.4byte	0x12d7
 3208 081c 00       		.byte	0
 3209 081d 1D       		.uleb128 0x1d
 3210 081e 01       		.byte	0x1
 3211 081f A5020000 		.4byte	.LASF126
 3212 0823 01       		.byte	0x1
 3213 0824 0507     		.2byte	0x705
 3214 0826 01       		.byte	0x1
 3215 0827 2F030000 		.4byte	0x32f
 3216 082b 7C080000 		.4byte	.LFB94
 3217 082f 82080000 		.4byte	.LFE94
 3218 0833 02       		.byte	0x2
 3219 0834 7D       		.byte	0x7d
 3220 0835 00       		.sleb128 0
 3221 0836 01       		.byte	0x1
 3222 0837 56080000 		.4byte	0x856
 3223 083b 1E       		.uleb128 0x1e
 3224 083c 00000000 		.4byte	.LASF125
 3225 0840 01       		.byte	0x1
 3226 0841 0507     		.2byte	0x705
 3227 0843 A3070000 		.4byte	0x7a3
 3228 0847 42000000 		.4byte	.LLST71
 3229 084b 1F       		.uleb128 0x1f
 3230 084c 82080000 		.4byte	.LVL201
 3231 0850 01       		.byte	0x1
 3232 0851 E5120000 		.4byte	0x12e5
 3233 0855 00       		.byte	0
 3234 0856 20       		.uleb128 0x20
 3235 0857 01       		.byte	0x1
 3236 0858 4D000000 		.4byte	.LASF127
 3237 085c 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 100


 3238 085d EE06     		.2byte	0x6ee
 3239 085f 01       		.byte	0x1
 3240 0860 2F030000 		.4byte	0x32f
 3241 0864 48080000 		.4byte	.LFB93
 3242 0868 7C080000 		.4byte	.LFE93
 3243 086c 63000000 		.4byte	.LLST68
 3244 0870 01       		.byte	0x1
 3245 0871 A8080000 		.4byte	0x8a8
 3246 0875 1E       		.uleb128 0x1e
 3247 0876 00000000 		.4byte	.LASF125
 3248 087a 01       		.byte	0x1
 3249 087b EE06     		.2byte	0x6ee
 3250 087d A3070000 		.4byte	0x7a3
 3251 0881 83000000 		.4byte	.LLST69
 3252 0885 1E       		.uleb128 0x1e
 3253 0886 9F080000 		.4byte	.LASF128
 3254 088a 01       		.byte	0x1
 3255 088b EE06     		.2byte	0x6ee
 3256 088d 97000000 		.4byte	0x97
 3257 0891 CD000000 		.4byte	.LLST70
 3258 0895 21       		.uleb128 0x21
 3259 0896 68080000 		.4byte	.LVL193
 3260 089a F3120000 		.4byte	0x12f3
 3261 089e 21       		.uleb128 0x21
 3262 089f 76080000 		.4byte	.LVL196
 3263 08a3 01130000 		.4byte	0x1301
 3264 08a7 00       		.byte	0
 3265 08a8 20       		.uleb128 0x20
 3266 08a9 01       		.byte	0x1
 3267 08aa CD040000 		.4byte	.LASF129
 3268 08ae 01       		.byte	0x1
 3269 08af CA06     		.2byte	0x6ca
 3270 08b1 01       		.byte	0x1
 3271 08b2 2F030000 		.4byte	0x32f
 3272 08b6 E4070000 		.4byte	.LFB92
 3273 08ba 48080000 		.4byte	.LFE92
 3274 08be 12010000 		.4byte	.LLST64
 3275 08c2 01       		.byte	0x1
 3276 08c3 00090000 		.4byte	0x900
 3277 08c7 1E       		.uleb128 0x1e
 3278 08c8 00000000 		.4byte	.LASF125
 3279 08cc 01       		.byte	0x1
 3280 08cd CA06     		.2byte	0x6ca
 3281 08cf A3070000 		.4byte	0x7a3
 3282 08d3 32010000 		.4byte	.LLST65
 3283 08d7 1E       		.uleb128 0x1e
 3284 08d8 9F080000 		.4byte	.LASF128
 3285 08dc 01       		.byte	0x1
 3286 08dd CA06     		.2byte	0x6ca
 3287 08df 97000000 		.4byte	0x97
 3288 08e3 7C010000 		.4byte	.LLST66
 3289 08e7 22       		.uleb128 0x22
 3290 08e8 657000   		.ascii	"ep\000"
 3291 08eb 01       		.byte	0x1
 3292 08ec CC06     		.2byte	0x6cc
 3293 08ee A9070000 		.4byte	0x7a9
 3294 08f2 CF010000 		.4byte	.LLST67
ARM GAS  /tmp/ccq2vSAC.s 			page 101


 3295 08f6 21       		.uleb128 0x21
 3296 08f7 28080000 		.4byte	.LVL182
 3297 08fb 0F130000 		.4byte	0x130f
 3298 08ff 00       		.byte	0
 3299 0900 20       		.uleb128 0x20
 3300 0901 01       		.byte	0x1
 3301 0902 F2080000 		.4byte	.LASF130
 3302 0906 01       		.byte	0x1
 3303 0907 A106     		.2byte	0x6a1
 3304 0909 01       		.byte	0x1
 3305 090a 2F030000 		.4byte	0x32f
 3306 090e 7C070000 		.4byte	.LFB91
 3307 0912 E4070000 		.4byte	.LFE91
 3308 0916 F8010000 		.4byte	.LLST60
 3309 091a 01       		.byte	0x1
 3310 091b 69090000 		.4byte	0x969
 3311 091f 1E       		.uleb128 0x1e
 3312 0920 00000000 		.4byte	.LASF125
 3313 0924 01       		.byte	0x1
 3314 0925 A106     		.2byte	0x6a1
 3315 0927 A3070000 		.4byte	0x7a3
 3316 092b 18020000 		.4byte	.LLST61
 3317 092f 1E       		.uleb128 0x1e
 3318 0930 9F080000 		.4byte	.LASF128
 3319 0934 01       		.byte	0x1
 3320 0935 A106     		.2byte	0x6a1
 3321 0937 97000000 		.4byte	0x97
 3322 093b 62020000 		.4byte	.LLST62
 3323 093f 22       		.uleb128 0x22
 3324 0940 657000   		.ascii	"ep\000"
 3325 0943 01       		.byte	0x1
 3326 0944 A306     		.2byte	0x6a3
 3327 0946 A9070000 		.4byte	0x7a9
 3328 094a B5020000 		.4byte	.LLST63
 3329 094e 21       		.uleb128 0x21
 3330 094f B6070000 		.4byte	.LVL169
 3331 0953 1D130000 		.4byte	0x131d
 3332 0957 23       		.uleb128 0x23
 3333 0958 C2070000 		.4byte	.LVL170
 3334 095c 2B130000 		.4byte	0x132b
 3335 0960 24       		.uleb128 0x24
 3336 0961 01       		.byte	0x1
 3337 0962 51       		.byte	0x51
 3338 0963 03       		.byte	0x3
 3339 0964 74       		.byte	0x74
 3340 0965 B004     		.sleb128 560
 3341 0967 00       		.byte	0
 3342 0968 00       		.byte	0
 3343 0969 20       		.uleb128 0x20
 3344 096a 01       		.byte	0x1
 3345 096b 42020000 		.4byte	.LASF131
 3346 096f 01       		.byte	0x1
 3347 0970 8206     		.2byte	0x682
 3348 0972 01       		.byte	0x1
 3349 0973 2F030000 		.4byte	0x32f
 3350 0977 02030000 		.4byte	.LFB90
 3351 097b 2E030000 		.4byte	.LFE90
ARM GAS  /tmp/ccq2vSAC.s 			page 102


 3352 097f DE020000 		.4byte	.LLST37
 3353 0983 01       		.byte	0x1
 3354 0984 EE090000 		.4byte	0x9ee
 3355 0988 1E       		.uleb128 0x1e
 3356 0989 00000000 		.4byte	.LASF125
 3357 098d 01       		.byte	0x1
 3358 098e 8206     		.2byte	0x682
 3359 0990 A3070000 		.4byte	0x7a3
 3360 0994 FE020000 		.4byte	.LLST38
 3361 0998 1E       		.uleb128 0x1e
 3362 0999 9F080000 		.4byte	.LASF128
 3363 099d 01       		.byte	0x1
 3364 099e 8206     		.2byte	0x682
 3365 09a0 97000000 		.4byte	0x97
 3366 09a4 1F030000 		.4byte	.LLST39
 3367 09a8 1E       		.uleb128 0x1e
 3368 09a9 0C090000 		.4byte	.LASF132
 3369 09ad 01       		.byte	0x1
 3370 09ae 8206     		.2byte	0x682
 3371 09b0 60030000 		.4byte	0x360
 3372 09b4 40030000 		.4byte	.LLST40
 3373 09b8 25       		.uleb128 0x25
 3374 09b9 6C656E00 		.ascii	"len\000"
 3375 09bd 01       		.byte	0x1
 3376 09be 8206     		.2byte	0x682
 3377 09c0 CC000000 		.4byte	0xcc
 3378 09c4 61030000 		.4byte	.LLST41
 3379 09c8 22       		.uleb128 0x22
 3380 09c9 657000   		.ascii	"ep\000"
 3381 09cc 01       		.byte	0x1
 3382 09cd 8406     		.2byte	0x684
 3383 09cf A9070000 		.4byte	0x7a9
 3384 09d3 8F030000 		.4byte	.LLST42
 3385 09d7 23       		.uleb128 0x23
 3386 09d8 2A030000 		.4byte	.LVL90
 3387 09dc 39130000 		.4byte	0x1339
 3388 09e0 24       		.uleb128 0x24
 3389 09e1 01       		.byte	0x1
 3390 09e2 51       		.byte	0x51
 3391 09e3 08       		.byte	0x8
 3392 09e4 75       		.byte	0x75
 3393 09e5 00       		.sleb128 0
 3394 09e6 F3       		.byte	0xf3
 3395 09e7 01       		.uleb128 0x1
 3396 09e8 50       		.byte	0x50
 3397 09e9 22       		.byte	0x22
 3398 09ea 23       		.byte	0x23
 3399 09eb 28       		.uleb128 0x28
 3400 09ec 00       		.byte	0
 3401 09ed 00       		.byte	0
 3402 09ee 1D       		.uleb128 0x1d
 3403 09ef 01       		.byte	0x1
 3404 09f0 B5030000 		.4byte	.LASF133
 3405 09f4 01       		.byte	0x1
 3406 09f5 7606     		.2byte	0x676
 3407 09f7 01       		.byte	0x1
 3408 09f8 CC000000 		.4byte	0xcc
ARM GAS  /tmp/ccq2vSAC.s 			page 103


 3409 09fc F4020000 		.4byte	.LFB89
 3410 0a00 02030000 		.4byte	.LFE89
 3411 0a04 02       		.byte	0x2
 3412 0a05 7D       		.byte	0x7d
 3413 0a06 00       		.sleb128 0
 3414 0a07 01       		.byte	0x1
 3415 0a08 2D0A0000 		.4byte	0xa2d
 3416 0a0c 1E       		.uleb128 0x1e
 3417 0a0d 00000000 		.4byte	.LASF125
 3418 0a11 01       		.byte	0x1
 3419 0a12 7606     		.2byte	0x676
 3420 0a14 A3070000 		.4byte	0x7a3
 3421 0a18 BC030000 		.4byte	.LLST35
 3422 0a1c 1E       		.uleb128 0x1e
 3423 0a1d 9F080000 		.4byte	.LASF128
 3424 0a21 01       		.byte	0x1
 3425 0a22 7606     		.2byte	0x676
 3426 0a24 97000000 		.4byte	0x97
 3427 0a28 DD030000 		.4byte	.LLST36
 3428 0a2c 00       		.byte	0
 3429 0a2d 20       		.uleb128 0x20
 3430 0a2e 01       		.byte	0x1
 3431 0a2f 4C070000 		.4byte	.LASF134
 3432 0a33 01       		.byte	0x1
 3433 0a34 5706     		.2byte	0x657
 3434 0a36 01       		.byte	0x1
 3435 0a37 2F030000 		.4byte	0x32f
 3436 0a3b C4020000 		.4byte	.LFB88
 3437 0a3f F4020000 		.4byte	.LFE88
 3438 0a43 FE030000 		.4byte	.LLST29
 3439 0a47 01       		.byte	0x1
 3440 0a48 B30A0000 		.4byte	0xab3
 3441 0a4c 1E       		.uleb128 0x1e
 3442 0a4d 00000000 		.4byte	.LASF125
 3443 0a51 01       		.byte	0x1
 3444 0a52 5706     		.2byte	0x657
 3445 0a54 A3070000 		.4byte	0x7a3
 3446 0a58 1E040000 		.4byte	.LLST30
 3447 0a5c 1E       		.uleb128 0x1e
 3448 0a5d 9F080000 		.4byte	.LASF128
 3449 0a61 01       		.byte	0x1
 3450 0a62 5706     		.2byte	0x657
 3451 0a64 97000000 		.4byte	0x97
 3452 0a68 3F040000 		.4byte	.LLST31
 3453 0a6c 1E       		.uleb128 0x1e
 3454 0a6d 0C090000 		.4byte	.LASF132
 3455 0a71 01       		.byte	0x1
 3456 0a72 5706     		.2byte	0x657
 3457 0a74 60030000 		.4byte	0x360
 3458 0a78 60040000 		.4byte	.LLST32
 3459 0a7c 25       		.uleb128 0x25
 3460 0a7d 6C656E00 		.ascii	"len\000"
 3461 0a81 01       		.byte	0x1
 3462 0a82 5706     		.2byte	0x657
 3463 0a84 CC000000 		.4byte	0xcc
 3464 0a88 81040000 		.4byte	.LLST33
 3465 0a8c 22       		.uleb128 0x22
ARM GAS  /tmp/ccq2vSAC.s 			page 104


 3466 0a8d 657000   		.ascii	"ep\000"
 3467 0a90 01       		.byte	0x1
 3468 0a91 5906     		.2byte	0x659
 3469 0a93 A9070000 		.4byte	0x7a9
 3470 0a97 A2040000 		.4byte	.LLST34
 3471 0a9b 23       		.uleb128 0x23
 3472 0a9c F0020000 		.4byte	.LVL81
 3473 0aa0 39130000 		.4byte	0x1339
 3474 0aa4 24       		.uleb128 0x24
 3475 0aa5 01       		.byte	0x1
 3476 0aa6 51       		.byte	0x51
 3477 0aa7 09       		.byte	0x9
 3478 0aa8 75       		.byte	0x75
 3479 0aa9 00       		.sleb128 0
 3480 0aaa F3       		.byte	0xf3
 3481 0aab 01       		.uleb128 0x1
 3482 0aac 50       		.byte	0x50
 3483 0aad 22       		.byte	0x22
 3484 0aae 23       		.byte	0x23
 3485 0aaf A802     		.uleb128 0x128
 3486 0ab1 00       		.byte	0
 3487 0ab2 00       		.byte	0
 3488 0ab3 20       		.uleb128 0x20
 3489 0ab4 01       		.byte	0x1
 3490 0ab5 07020000 		.4byte	.LASF135
 3491 0ab9 01       		.byte	0x1
 3492 0aba 3806     		.2byte	0x638
 3493 0abc 01       		.byte	0x1
 3494 0abd 2F030000 		.4byte	0x32f
 3495 0ac1 72020000 		.4byte	.LFB87
 3496 0ac5 C4020000 		.4byte	.LFE87
 3497 0ac9 D1040000 		.4byte	.LLST25
 3498 0acd 01       		.byte	0x1
 3499 0ace 0B0B0000 		.4byte	0xb0b
 3500 0ad2 1E       		.uleb128 0x1e
 3501 0ad3 00000000 		.4byte	.LASF125
 3502 0ad7 01       		.byte	0x1
 3503 0ad8 3806     		.2byte	0x638
 3504 0ada A3070000 		.4byte	0x7a3
 3505 0ade F1040000 		.4byte	.LLST26
 3506 0ae2 1E       		.uleb128 0x1e
 3507 0ae3 9F080000 		.4byte	.LASF128
 3508 0ae7 01       		.byte	0x1
 3509 0ae8 3806     		.2byte	0x638
 3510 0aea 97000000 		.4byte	0x97
 3511 0aee 25050000 		.4byte	.LLST27
 3512 0af2 22       		.uleb128 0x22
 3513 0af3 657000   		.ascii	"ep\000"
 3514 0af6 01       		.byte	0x1
 3515 0af7 3A06     		.2byte	0x63a
 3516 0af9 A9070000 		.4byte	0x7a9
 3517 0afd 5F050000 		.4byte	.LLST28
 3518 0b01 21       		.uleb128 0x21
 3519 0b02 A8020000 		.4byte	.LVL72
 3520 0b06 47130000 		.4byte	0x1347
 3521 0b0a 00       		.byte	0
 3522 0b0b 20       		.uleb128 0x20
ARM GAS  /tmp/ccq2vSAC.s 			page 105


 3523 0b0c 01       		.byte	0x1
 3524 0b0d D3050000 		.4byte	.LASF136
 3525 0b11 01       		.byte	0x1
 3526 0b12 0C06     		.2byte	0x60c
 3527 0b14 01       		.byte	0x1
 3528 0b15 2F030000 		.4byte	0x32f
 3529 0b19 0C020000 		.4byte	.LFB86
 3530 0b1d 72020000 		.4byte	.LFE86
 3531 0b21 7D050000 		.4byte	.LLST19
 3532 0b25 01       		.byte	0x1
 3533 0b26 900B0000 		.4byte	0xb90
 3534 0b2a 1E       		.uleb128 0x1e
 3535 0b2b 00000000 		.4byte	.LASF125
 3536 0b2f 01       		.byte	0x1
 3537 0b30 0C06     		.2byte	0x60c
 3538 0b32 A3070000 		.4byte	0x7a3
 3539 0b36 9D050000 		.4byte	.LLST20
 3540 0b3a 1E       		.uleb128 0x1e
 3541 0b3b 9F080000 		.4byte	.LASF128
 3542 0b3f 01       		.byte	0x1
 3543 0b40 0C06     		.2byte	0x60c
 3544 0b42 97000000 		.4byte	0x97
 3545 0b46 BB050000 		.4byte	.LLST21
 3546 0b4a 1E       		.uleb128 0x1e
 3547 0b4b 31070000 		.4byte	.LASF137
 3548 0b4f 01       		.byte	0x1
 3549 0b50 0C06     		.2byte	0x60c
 3550 0b52 AC000000 		.4byte	0xac
 3551 0b56 F5050000 		.4byte	.LLST22
 3552 0b5a 1E       		.uleb128 0x1e
 3553 0b5b 11090000 		.4byte	.LASF138
 3554 0b5f 01       		.byte	0x1
 3555 0b60 0C06     		.2byte	0x60c
 3556 0b62 97000000 		.4byte	0x97
 3557 0b66 2F060000 		.4byte	.LLST23
 3558 0b6a 26       		.uleb128 0x26
 3559 0b6b 72657400 		.ascii	"ret\000"
 3560 0b6f 01       		.byte	0x1
 3561 0b70 0E06     		.2byte	0x60e
 3562 0b72 2F030000 		.4byte	0x32f
 3563 0b76 00       		.byte	0
 3564 0b77 22       		.uleb128 0x22
 3565 0b78 657000   		.ascii	"ep\000"
 3566 0b7b 01       		.byte	0x1
 3567 0b7c 0F06     		.2byte	0x60f
 3568 0b7e A9070000 		.4byte	0x7a9
 3569 0b82 73060000 		.4byte	.LLST24
 3570 0b86 21       		.uleb128 0x21
 3571 0b87 56020000 		.4byte	.LVL63
 3572 0b8b 55130000 		.4byte	0x1355
 3573 0b8f 00       		.byte	0
 3574 0b90 27       		.uleb128 0x27
 3575 0b91 01       		.byte	0x1
 3576 0b92 080A0000 		.4byte	.LASF154
 3577 0b96 01       		.byte	0x1
 3578 0b97 FC05     		.2byte	0x5fc
 3579 0b99 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 106


 3580 0b9a 2F030000 		.4byte	0x32f
 3581 0b9e 01       		.byte	0x1
 3582 0b9f BC0B0000 		.4byte	0xbbc
 3583 0ba3 18       		.uleb128 0x18
 3584 0ba4 00000000 		.4byte	.LASF125
 3585 0ba8 01       		.byte	0x1
 3586 0ba9 FC05     		.2byte	0x5fc
 3587 0bab A3070000 		.4byte	0x7a3
 3588 0baf 18       		.uleb128 0x18
 3589 0bb0 75050000 		.4byte	.LASF139
 3590 0bb4 01       		.byte	0x1
 3591 0bb5 FC05     		.2byte	0x5fc
 3592 0bb7 97000000 		.4byte	0x97
 3593 0bbb 00       		.byte	0
 3594 0bbc 20       		.uleb128 0x20
 3595 0bbd 01       		.byte	0x1
 3596 0bbe 3D050000 		.4byte	.LASF140
 3597 0bc2 01       		.byte	0x1
 3598 0bc3 EB05     		.2byte	0x5eb
 3599 0bc5 01       		.byte	0x1
 3600 0bc6 2F030000 		.4byte	0x32f
 3601 0bca BA010000 		.4byte	.LFB84
 3602 0bce E4010000 		.4byte	.LFE84
 3603 0bd2 91060000 		.4byte	.LLST12
 3604 0bd6 01       		.byte	0x1
 3605 0bd7 0E0C0000 		.4byte	0xc0e
 3606 0bdb 1E       		.uleb128 0x1e
 3607 0bdc 00000000 		.4byte	.LASF125
 3608 0be0 01       		.byte	0x1
 3609 0be1 EB05     		.2byte	0x5eb
 3610 0be3 A3070000 		.4byte	0x7a3
 3611 0be7 B1060000 		.4byte	.LLST13
 3612 0beb 28       		.uleb128 0x28
 3613 0bec D2010000 		.4byte	.LVL45
 3614 0bf0 63130000 		.4byte	0x1363
 3615 0bf4 040C0000 		.4byte	0xc04
 3616 0bf8 24       		.uleb128 0x24
 3617 0bf9 01       		.byte	0x1
 3618 0bfa 50       		.byte	0x50
 3619 0bfb 02       		.byte	0x2
 3620 0bfc 74       		.byte	0x74
 3621 0bfd 00       		.sleb128 0
 3622 0bfe 24       		.uleb128 0x24
 3623 0bff 01       		.byte	0x1
 3624 0c00 51       		.byte	0x51
 3625 0c01 01       		.byte	0x1
 3626 0c02 30       		.byte	0x30
 3627 0c03 00       		.byte	0
 3628 0c04 21       		.uleb128 0x21
 3629 0c05 D8010000 		.4byte	.LVL46
 3630 0c09 70130000 		.4byte	0x1370
 3631 0c0d 00       		.byte	0
 3632 0c0e 20       		.uleb128 0x20
 3633 0c0f 01       		.byte	0x1
 3634 0c10 5A040000 		.4byte	.LASF141
 3635 0c14 01       		.byte	0x1
 3636 0c15 DB05     		.2byte	0x5db
ARM GAS  /tmp/ccq2vSAC.s 			page 107


 3637 0c17 01       		.byte	0x1
 3638 0c18 2F030000 		.4byte	0x32f
 3639 0c1c 92010000 		.4byte	.LFB83
 3640 0c20 BA010000 		.4byte	.LFE83
 3641 0c24 E5060000 		.4byte	.LLST10
 3642 0c28 01       		.byte	0x1
 3643 0c29 600C0000 		.4byte	0xc60
 3644 0c2d 1E       		.uleb128 0x1e
 3645 0c2e 00000000 		.4byte	.LASF125
 3646 0c32 01       		.byte	0x1
 3647 0c33 DB05     		.2byte	0x5db
 3648 0c35 A3070000 		.4byte	0x7a3
 3649 0c39 05070000 		.4byte	.LLST11
 3650 0c3d 28       		.uleb128 0x28
 3651 0c3e A8010000 		.4byte	.LVL40
 3652 0c42 63130000 		.4byte	0x1363
 3653 0c46 560C0000 		.4byte	0xc56
 3654 0c4a 24       		.uleb128 0x24
 3655 0c4b 01       		.byte	0x1
 3656 0c4c 50       		.byte	0x50
 3657 0c4d 02       		.byte	0x2
 3658 0c4e 74       		.byte	0x74
 3659 0c4f 00       		.sleb128 0
 3660 0c50 24       		.uleb128 0x24
 3661 0c51 01       		.byte	0x1
 3662 0c52 51       		.byte	0x51
 3663 0c53 01       		.byte	0x1
 3664 0c54 31       		.byte	0x31
 3665 0c55 00       		.byte	0
 3666 0c56 21       		.uleb128 0x21
 3667 0c57 AE010000 		.4byte	.LVL41
 3668 0c5b 7E130000 		.4byte	0x137e
 3669 0c5f 00       		.byte	0
 3670 0c60 29       		.uleb128 0x29
 3671 0c61 01       		.byte	0x1
 3672 0c62 73090000 		.4byte	.LASF142
 3673 0c66 01       		.byte	0x1
 3674 0c67 B905     		.2byte	0x5b9
 3675 0c69 01       		.byte	0x1
 3676 0c6a 01       		.byte	0x1
 3677 0c6b 7C0C0000 		.4byte	0xc7c
 3678 0c6f 18       		.uleb128 0x18
 3679 0c70 00000000 		.4byte	.LASF125
 3680 0c74 01       		.byte	0x1
 3681 0c75 B905     		.2byte	0x5b9
 3682 0c77 A3070000 		.4byte	0x7a3
 3683 0c7b 00       		.byte	0
 3684 0c7c 2A       		.uleb128 0x2a
 3685 0c7d 01       		.byte	0x1
 3686 0c7e CB020000 		.4byte	.LASF145
 3687 0c82 01       		.byte	0x1
 3688 0c83 AA05     		.2byte	0x5aa
 3689 0c85 01       		.byte	0x1
 3690 0c86 970C0000 		.4byte	0xc97
 3691 0c8a 18       		.uleb128 0x18
 3692 0c8b 00000000 		.4byte	.LASF125
 3693 0c8f 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 108


 3694 0c90 AA05     		.2byte	0x5aa
 3695 0c92 A3070000 		.4byte	0x7a3
 3696 0c96 00       		.byte	0
 3697 0c97 29       		.uleb128 0x29
 3698 0c98 01       		.byte	0x1
 3699 0c99 E3050000 		.4byte	.LASF143
 3700 0c9d 01       		.byte	0x1
 3701 0c9e 9A05     		.2byte	0x59a
 3702 0ca0 01       		.byte	0x1
 3703 0ca1 01       		.byte	0x1
 3704 0ca2 BF0C0000 		.4byte	0xcbf
 3705 0ca6 18       		.uleb128 0x18
 3706 0ca7 00000000 		.4byte	.LASF125
 3707 0cab 01       		.byte	0x1
 3708 0cac 9A05     		.2byte	0x59a
 3709 0cae A3070000 		.4byte	0x7a3
 3710 0cb2 18       		.uleb128 0x18
 3711 0cb3 CB030000 		.4byte	.LASF144
 3712 0cb7 01       		.byte	0x1
 3713 0cb8 9A05     		.2byte	0x59a
 3714 0cba 97000000 		.4byte	0x97
 3715 0cbe 00       		.byte	0
 3716 0cbf 2A       		.uleb128 0x2a
 3717 0cc0 01       		.byte	0x1
 3718 0cc1 C2090000 		.4byte	.LASF146
 3719 0cc5 01       		.byte	0x1
 3720 0cc6 8905     		.2byte	0x589
 3721 0cc8 01       		.byte	0x1
 3722 0cc9 E60C0000 		.4byte	0xce6
 3723 0ccd 18       		.uleb128 0x18
 3724 0cce 00000000 		.4byte	.LASF125
 3725 0cd2 01       		.byte	0x1
 3726 0cd3 8905     		.2byte	0x589
 3727 0cd5 A3070000 		.4byte	0x7a3
 3728 0cd9 18       		.uleb128 0x18
 3729 0cda CB030000 		.4byte	.LASF144
 3730 0cde 01       		.byte	0x1
 3731 0cdf 8905     		.2byte	0x589
 3732 0ce1 97000000 		.4byte	0x97
 3733 0ce5 00       		.byte	0
 3734 0ce6 2A       		.uleb128 0x2a
 3735 0ce7 01       		.byte	0x1
 3736 0ce8 2C010000 		.4byte	.LASF147
 3737 0cec 01       		.byte	0x1
 3738 0ced 7905     		.2byte	0x579
 3739 0cef 01       		.byte	0x1
 3740 0cf0 010D0000 		.4byte	0xd01
 3741 0cf4 18       		.uleb128 0x18
 3742 0cf5 00000000 		.4byte	.LASF125
 3743 0cf9 01       		.byte	0x1
 3744 0cfa 7905     		.2byte	0x579
 3745 0cfc A3070000 		.4byte	0x7a3
 3746 0d00 00       		.byte	0
 3747 0d01 2A       		.uleb128 0x2a
 3748 0d02 01       		.byte	0x1
 3749 0d03 27080000 		.4byte	.LASF148
 3750 0d07 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 109


 3751 0d08 6A05     		.2byte	0x56a
 3752 0d0a 01       		.byte	0x1
 3753 0d0b 1C0D0000 		.4byte	0xd1c
 3754 0d0f 18       		.uleb128 0x18
 3755 0d10 00000000 		.4byte	.LASF125
 3756 0d14 01       		.byte	0x1
 3757 0d15 6A05     		.2byte	0x56a
 3758 0d17 A3070000 		.4byte	0x7a3
 3759 0d1b 00       		.byte	0
 3760 0d1c 2A       		.uleb128 0x2a
 3761 0d1d 01       		.byte	0x1
 3762 0d1e 19050000 		.4byte	.LASF149
 3763 0d22 01       		.byte	0x1
 3764 0d23 5B05     		.2byte	0x55b
 3765 0d25 01       		.byte	0x1
 3766 0d26 370D0000 		.4byte	0xd37
 3767 0d2a 18       		.uleb128 0x18
 3768 0d2b 00000000 		.4byte	.LASF125
 3769 0d2f 01       		.byte	0x1
 3770 0d30 5B05     		.2byte	0x55b
 3771 0d32 A3070000 		.4byte	0x7a3
 3772 0d36 00       		.byte	0
 3773 0d37 2A       		.uleb128 0x2a
 3774 0d38 01       		.byte	0x1
 3775 0d39 38070000 		.4byte	.LASF150
 3776 0d3d 01       		.byte	0x1
 3777 0d3e 4C05     		.2byte	0x54c
 3778 0d40 01       		.byte	0x1
 3779 0d41 520D0000 		.4byte	0xd52
 3780 0d45 18       		.uleb128 0x18
 3781 0d46 00000000 		.4byte	.LASF125
 3782 0d4a 01       		.byte	0x1
 3783 0d4b 4C05     		.2byte	0x54c
 3784 0d4d A3070000 		.4byte	0x7a3
 3785 0d51 00       		.byte	0
 3786 0d52 2A       		.uleb128 0x2a
 3787 0d53 01       		.byte	0x1
 3788 0d54 520A0000 		.4byte	.LASF151
 3789 0d58 01       		.byte	0x1
 3790 0d59 3D05     		.2byte	0x53d
 3791 0d5b 01       		.byte	0x1
 3792 0d5c 6D0D0000 		.4byte	0xd6d
 3793 0d60 18       		.uleb128 0x18
 3794 0d61 00000000 		.4byte	.LASF125
 3795 0d65 01       		.byte	0x1
 3796 0d66 3D05     		.2byte	0x53d
 3797 0d68 A3070000 		.4byte	0x7a3
 3798 0d6c 00       		.byte	0
 3799 0d6d 2A       		.uleb128 0x2a
 3800 0d6e 01       		.byte	0x1
 3801 0d6f 73000000 		.4byte	.LASF152
 3802 0d73 01       		.byte	0x1
 3803 0d74 2E05     		.2byte	0x52e
 3804 0d76 01       		.byte	0x1
 3805 0d77 940D0000 		.4byte	0xd94
 3806 0d7b 18       		.uleb128 0x18
 3807 0d7c 00000000 		.4byte	.LASF125
ARM GAS  /tmp/ccq2vSAC.s 			page 110


 3808 0d80 01       		.byte	0x1
 3809 0d81 2E05     		.2byte	0x52e
 3810 0d83 A3070000 		.4byte	0x7a3
 3811 0d87 18       		.uleb128 0x18
 3812 0d88 CB030000 		.4byte	.LASF144
 3813 0d8c 01       		.byte	0x1
 3814 0d8d 2E05     		.2byte	0x52e
 3815 0d8f 97000000 		.4byte	0x97
 3816 0d93 00       		.byte	0
 3817 0d94 2A       		.uleb128 0x2a
 3818 0d95 01       		.byte	0x1
 3819 0d96 1C030000 		.4byte	.LASF153
 3820 0d9a 01       		.byte	0x1
 3821 0d9b 1D05     		.2byte	0x51d
 3822 0d9d 01       		.byte	0x1
 3823 0d9e BB0D0000 		.4byte	0xdbb
 3824 0da2 18       		.uleb128 0x18
 3825 0da3 00000000 		.4byte	.LASF125
 3826 0da7 01       		.byte	0x1
 3827 0da8 1D05     		.2byte	0x51d
 3828 0daa A3070000 		.4byte	0x7a3
 3829 0dae 18       		.uleb128 0x18
 3830 0daf CB030000 		.4byte	.LASF144
 3831 0db3 01       		.byte	0x1
 3832 0db4 1D05     		.2byte	0x51d
 3833 0db6 97000000 		.4byte	0x97
 3834 0dba 00       		.byte	0
 3835 0dbb 2B       		.uleb128 0x2b
 3836 0dbc 01       		.byte	0x1
 3837 0dbd 19070000 		.4byte	.LASF187
 3838 0dc1 01       		.byte	0x1
 3839 0dc2 BF04     		.2byte	0x4bf
 3840 0dc4 01       		.byte	0x1
 3841 0dc5 2E030000 		.4byte	.LFB71
 3842 0dc9 7C070000 		.4byte	.LFE71
 3843 0dcd 39070000 		.4byte	.LLST43
 3844 0dd1 01       		.byte	0x1
 3845 0dd2 6C100000 		.4byte	0x106c
 3846 0dd6 1E       		.uleb128 0x1e
 3847 0dd7 00000000 		.4byte	.LASF125
 3848 0ddb 01       		.byte	0x1
 3849 0ddc BF04     		.2byte	0x4bf
 3850 0dde A3070000 		.4byte	0x7a3
 3851 0de2 59070000 		.4byte	.LLST44
 3852 0de6 2C       		.uleb128 0x2c
 3853 0de7 91060000 		.4byte	0x691
 3854 0deb 80040000 		.4byte	.LBB21
 3855 0def 7C070000 		.4byte	.LBE21
 3856 0df3 01       		.byte	0x1
 3857 0df4 C504     		.2byte	0x4c5
 3858 0df6 B10F0000 		.4byte	0xfb1
 3859 0dfa 2D       		.uleb128 0x2d
 3860 0dfb A3060000 		.4byte	0x6a3
 3861 0dff 2E       		.uleb128 0x2e
 3862 0e00 80040000 		.4byte	.LBB22
 3863 0e04 7C070000 		.4byte	.LBE22
 3864 0e08 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccq2vSAC.s 			page 111


 3865 0e09 AF060000 		.4byte	0x6af
 3866 0e0d A3070000 		.4byte	.LLST45
 3867 0e11 2F       		.uleb128 0x2f
 3868 0e12 BA060000 		.4byte	0x6ba
 3869 0e16 F6070000 		.4byte	.LLST46
 3870 0e1a 2F       		.uleb128 0x2f
 3871 0e1b C6060000 		.4byte	0x6c6
 3872 0e1f 1F080000 		.4byte	.LLST47
 3873 0e23 2F       		.uleb128 0x2f
 3874 0e24 D2060000 		.4byte	0x6d2
 3875 0e28 3D080000 		.4byte	.LLST48
 3876 0e2c 2F       		.uleb128 0x2f
 3877 0e2d DE060000 		.4byte	0x6de
 3878 0e31 66080000 		.4byte	.LLST49
 3879 0e35 30       		.uleb128 0x30
 3880 0e36 00000000 		.4byte	.Ldebug_ranges0+0
 3881 0e3a 480E0000 		.4byte	0xe48
 3882 0e3e 2F       		.uleb128 0x2f
 3883 0e3f EF060000 		.4byte	0x6ef
 3884 0e43 8C080000 		.4byte	.LLST50
 3885 0e47 00       		.byte	0
 3886 0e48 30       		.uleb128 0x30
 3887 0e49 20000000 		.4byte	.Ldebug_ranges0+0x20
 3888 0e4d 5B0E0000 		.4byte	0xe5b
 3889 0e51 2F       		.uleb128 0x2f
 3890 0e52 01070000 		.4byte	0x701
 3891 0e56 A5080000 		.4byte	.LLST51
 3892 0e5a 00       		.byte	0
 3893 0e5b 31       		.uleb128 0x31
 3894 0e5c 40050000 		.4byte	.LBB28
 3895 0e60 50050000 		.4byte	.LBE28
 3896 0e64 720E0000 		.4byte	0xe72
 3897 0e68 2F       		.uleb128 0x2f
 3898 0e69 13070000 		.4byte	0x713
 3899 0e6d BE080000 		.4byte	.LLST52
 3900 0e71 00       		.byte	0
 3901 0e72 30       		.uleb128 0x30
 3902 0e73 38000000 		.4byte	.Ldebug_ranges0+0x38
 3903 0e77 9D0E0000 		.4byte	0xe9d
 3904 0e7b 2F       		.uleb128 0x2f
 3905 0e7c 25070000 		.4byte	0x725
 3906 0e80 D7080000 		.4byte	.LLST53
 3907 0e84 2F       		.uleb128 0x2f
 3908 0e85 31070000 		.4byte	0x731
 3909 0e89 12090000 		.4byte	.LLST54
 3910 0e8d 32       		.uleb128 0x32
 3911 0e8e 50000000 		.4byte	.Ldebug_ranges0+0x50
 3912 0e92 2F       		.uleb128 0x2f
 3913 0e93 3E070000 		.4byte	0x73e
 3914 0e97 3A090000 		.4byte	.LLST55
 3915 0e9b 00       		.byte	0
 3916 0e9c 00       		.byte	0
 3917 0e9d 31       		.uleb128 0x31
 3918 0e9e BC050000 		.4byte	.LBB33
 3919 0ea2 DA050000 		.4byte	.LBE33
 3920 0ea6 B40E0000 		.4byte	0xeb4
 3921 0eaa 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccq2vSAC.s 			page 112


 3922 0eab 51070000 		.4byte	0x751
 3923 0eaf 58090000 		.4byte	.LLST56
 3924 0eb3 00       		.byte	0
 3925 0eb4 30       		.uleb128 0x30
 3926 0eb5 70000000 		.4byte	.Ldebug_ranges0+0x70
 3927 0eb9 C70E0000 		.4byte	0xec7
 3928 0ebd 2F       		.uleb128 0x2f
 3929 0ebe 63070000 		.4byte	0x763
 3930 0ec2 86090000 		.4byte	.LLST57
 3931 0ec6 00       		.byte	0
 3932 0ec7 30       		.uleb128 0x30
 3933 0ec8 88000000 		.4byte	.Ldebug_ranges0+0x88
 3934 0ecc DA0E0000 		.4byte	0xeda
 3935 0ed0 2F       		.uleb128 0x2f
 3936 0ed1 95070000 		.4byte	0x795
 3937 0ed5 9F090000 		.4byte	.LLST58
 3938 0ed9 00       		.byte	0
 3939 0eda 30       		.uleb128 0x30
 3940 0edb A8000000 		.4byte	.Ldebug_ranges0+0xa8
 3941 0edf ED0E0000 		.4byte	0xeed
 3942 0ee3 2F       		.uleb128 0x2f
 3943 0ee4 75070000 		.4byte	0x775
 3944 0ee8 B8090000 		.4byte	.LLST59
 3945 0eec 00       		.byte	0
 3946 0eed 28       		.uleb128 0x28
 3947 0eee CA040000 		.4byte	.LVL113
 3948 0ef2 6D0D0000 		.4byte	0xd6d
 3949 0ef6 010F0000 		.4byte	0xf01
 3950 0efa 24       		.uleb128 0x24
 3951 0efb 01       		.byte	0x1
 3952 0efc 50       		.byte	0x50
 3953 0efd 02       		.byte	0x2
 3954 0efe 74       		.byte	0x74
 3955 0eff 00       		.sleb128 0
 3956 0f00 00       		.byte	0
 3957 0f01 28       		.uleb128 0x28
 3958 0f02 22050000 		.4byte	.LVL117
 3959 0f06 8C130000 		.4byte	0x138c
 3960 0f0a 160F0000 		.4byte	0xf16
 3961 0f0e 24       		.uleb128 0x24
 3962 0f0f 01       		.byte	0x1
 3963 0f10 51       		.byte	0x51
 3964 0f11 03       		.byte	0x3
 3965 0f12 74       		.byte	0x74
 3966 0f13 B004     		.sleb128 560
 3967 0f15 00       		.byte	0
 3968 0f16 28       		.uleb128 0x28
 3969 0f17 3A050000 		.4byte	.LVL120
 3970 0f1b 520D0000 		.4byte	0xd52
 3971 0f1f 2A0F0000 		.4byte	0xf2a
 3972 0f23 24       		.uleb128 0x24
 3973 0f24 01       		.byte	0x1
 3974 0f25 50       		.byte	0x50
 3975 0f26 02       		.byte	0x2
 3976 0f27 74       		.byte	0x74
 3977 0f28 00       		.sleb128 0
 3978 0f29 00       		.byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 113


 3979 0f2a 21       		.uleb128 0x21
 3980 0f2b 7E050000 		.4byte	.LVL124
 3981 0f2f 8C130000 		.4byte	0x138c
 3982 0f33 28       		.uleb128 0x28
 3983 0f34 94050000 		.4byte	.LVL125
 3984 0f38 940D0000 		.4byte	0xd94
 3985 0f3c 4D0F0000 		.4byte	0xf4d
 3986 0f40 24       		.uleb128 0x24
 3987 0f41 01       		.byte	0x1
 3988 0f42 50       		.byte	0x50
 3989 0f43 02       		.byte	0x2
 3990 0f44 74       		.byte	0x74
 3991 0f45 00       		.sleb128 0
 3992 0f46 24       		.uleb128 0x24
 3993 0f47 01       		.byte	0x1
 3994 0f48 51       		.byte	0x51
 3995 0f49 02       		.byte	0x2
 3996 0f4a 75       		.byte	0x75
 3997 0f4b 00       		.sleb128 0
 3998 0f4c 00       		.byte	0
 3999 0f4d 28       		.uleb128 0x28
 4000 0f4e 56060000 		.4byte	.LVL146
 4001 0f52 8C130000 		.4byte	0x138c
 4002 0f56 610F0000 		.4byte	0xf61
 4003 0f5a 24       		.uleb128 0x24
 4004 0f5b 01       		.byte	0x1
 4005 0f5c 53       		.byte	0x53
 4006 0f5d 02       		.byte	0x2
 4007 0f5e 75       		.byte	0x75
 4008 0f5f 00       		.sleb128 0
 4009 0f60 00       		.byte	0
 4010 0f61 28       		.uleb128 0x28
 4011 0f62 86060000 		.4byte	.LVL147
 4012 0f66 940D0000 		.4byte	0xd94
 4013 0f6a 750F0000 		.4byte	0xf75
 4014 0f6e 24       		.uleb128 0x24
 4015 0f6f 01       		.byte	0x1
 4016 0f70 50       		.byte	0x50
 4017 0f71 02       		.byte	0x2
 4018 0f72 74       		.byte	0x74
 4019 0f73 00       		.sleb128 0
 4020 0f74 00       		.byte	0
 4021 0f75 28       		.uleb128 0x28
 4022 0f76 DA060000 		.4byte	.LVL153
 4023 0f7a 6D0D0000 		.4byte	0xd6d
 4024 0f7e 890F0000 		.4byte	0xf89
 4025 0f82 24       		.uleb128 0x24
 4026 0f83 01       		.byte	0x1
 4027 0f84 50       		.byte	0x50
 4028 0f85 02       		.byte	0x2
 4029 0f86 74       		.byte	0x74
 4030 0f87 00       		.sleb128 0
 4031 0f88 00       		.byte	0
 4032 0f89 21       		.uleb128 0x21
 4033 0f8a 12070000 		.4byte	.LVL156
 4034 0f8e 8C130000 		.4byte	0x138c
 4035 0f92 28       		.uleb128 0x28
ARM GAS  /tmp/ccq2vSAC.s 			page 114


 4036 0f93 58070000 		.4byte	.LVL161
 4037 0f97 2D0A0000 		.4byte	0xa2d
 4038 0f9b A60F0000 		.4byte	0xfa6
 4039 0f9f 24       		.uleb128 0x24
 4040 0fa0 01       		.byte	0x1
 4041 0fa1 50       		.byte	0x50
 4042 0fa2 02       		.byte	0x2
 4043 0fa3 74       		.byte	0x74
 4044 0fa4 00       		.sleb128 0
 4045 0fa5 00       		.byte	0
 4046 0fa6 21       		.uleb128 0x21
 4047 0fa7 5E070000 		.4byte	.LVL163
 4048 0fab 69090000 		.4byte	0x969
 4049 0faf 00       		.byte	0
 4050 0fb0 00       		.byte	0
 4051 0fb1 21       		.uleb128 0x21
 4052 0fb2 3A030000 		.4byte	.LVL93
 4053 0fb6 9A130000 		.4byte	0x139a
 4054 0fba 21       		.uleb128 0x21
 4055 0fbb 46030000 		.4byte	.LVL94
 4056 0fbf 9A130000 		.4byte	0x139a
 4057 0fc3 28       		.uleb128 0x28
 4058 0fc4 62030000 		.4byte	.LVL95
 4059 0fc8 1C0D0000 		.4byte	0xd1c
 4060 0fcc D70F0000 		.4byte	0xfd7
 4061 0fd0 24       		.uleb128 0x24
 4062 0fd1 01       		.byte	0x1
 4063 0fd2 50       		.byte	0x50
 4064 0fd3 02       		.byte	0x2
 4065 0fd4 74       		.byte	0x74
 4066 0fd5 00       		.sleb128 0
 4067 0fd6 00       		.byte	0
 4068 0fd7 28       		.uleb128 0x28
 4069 0fd8 6A030000 		.4byte	.LVL96
 4070 0fdc 900B0000 		.4byte	0xb90
 4071 0fe0 F00F0000 		.4byte	0xff0
 4072 0fe4 24       		.uleb128 0x24
 4073 0fe5 01       		.byte	0x1
 4074 0fe6 50       		.byte	0x50
 4075 0fe7 02       		.byte	0x2
 4076 0fe8 74       		.byte	0x74
 4077 0fe9 00       		.sleb128 0
 4078 0fea 24       		.uleb128 0x24
 4079 0feb 01       		.byte	0x1
 4080 0fec 51       		.byte	0x51
 4081 0fed 01       		.byte	0x1
 4082 0fee 30       		.byte	0x30
 4083 0fef 00       		.byte	0
 4084 0ff0 21       		.uleb128 0x21
 4085 0ff1 70030000 		.4byte	.LVL97
 4086 0ff5 9A130000 		.4byte	0x139a
 4087 0ff9 21       		.uleb128 0x21
 4088 0ffa 8C030000 		.4byte	.LVL98
 4089 0ffe 9A130000 		.4byte	0x139a
 4090 1002 21       		.uleb128 0x21
 4091 1003 A8030000 		.4byte	.LVL99
 4092 1007 9A130000 		.4byte	0x139a
ARM GAS  /tmp/ccq2vSAC.s 			page 115


 4093 100b 28       		.uleb128 0x28
 4094 100c D4030000 		.4byte	.LVL100
 4095 1010 E60C0000 		.4byte	0xce6
 4096 1014 1F100000 		.4byte	0x101f
 4097 1018 24       		.uleb128 0x24
 4098 1019 01       		.byte	0x1
 4099 101a 50       		.byte	0x50
 4100 101b 02       		.byte	0x2
 4101 101c 74       		.byte	0x74
 4102 101d 00       		.sleb128 0
 4103 101e 00       		.byte	0
 4104 101f 21       		.uleb128 0x21
 4105 1020 EC030000 		.4byte	.LVL101
 4106 1024 9A130000 		.4byte	0x139a
 4107 1028 21       		.uleb128 0x21
 4108 1029 22040000 		.4byte	.LVL102
 4109 102d 9A130000 		.4byte	0x139a
 4110 1031 28       		.uleb128 0x28
 4111 1032 3E040000 		.4byte	.LVL103
 4112 1036 010D0000 		.4byte	0xd01
 4113 103a 45100000 		.4byte	0x1045
 4114 103e 24       		.uleb128 0x24
 4115 103f 01       		.byte	0x1
 4116 1040 50       		.byte	0x50
 4117 1041 02       		.byte	0x2
 4118 1042 74       		.byte	0x74
 4119 1043 00       		.sleb128 0
 4120 1044 00       		.byte	0
 4121 1045 21       		.uleb128 0x21
 4122 1046 44040000 		.4byte	.LVL104
 4123 104a 9A130000 		.4byte	0x139a
 4124 104e 28       		.uleb128 0x28
 4125 104f 60040000 		.4byte	.LVL105
 4126 1053 370D0000 		.4byte	0xd37
 4127 1057 62100000 		.4byte	0x1062
 4128 105b 24       		.uleb128 0x24
 4129 105c 01       		.byte	0x1
 4130 105d 50       		.byte	0x50
 4131 105e 02       		.byte	0x2
 4132 105f 74       		.byte	0x74
 4133 1060 00       		.sleb128 0
 4134 1061 00       		.byte	0
 4135 1062 21       		.uleb128 0x21
 4136 1063 66040000 		.4byte	.LVL106
 4137 1067 9A130000 		.4byte	0x139a
 4138 106b 00       		.byte	0
 4139 106c 27       		.uleb128 0x27
 4140 106d 01       		.byte	0x1
 4141 106e 43010000 		.4byte	.LASF155
 4142 1072 01       		.byte	0x1
 4143 1073 5E03     		.2byte	0x35e
 4144 1075 01       		.byte	0x1
 4145 1076 2F030000 		.4byte	0x32f
 4146 107a 01       		.byte	0x1
 4147 107b 8C100000 		.4byte	0x108c
 4148 107f 18       		.uleb128 0x18
 4149 1080 00000000 		.4byte	.LASF125
ARM GAS  /tmp/ccq2vSAC.s 			page 116


 4150 1084 01       		.byte	0x1
 4151 1085 5E03     		.2byte	0x35e
 4152 1087 A3070000 		.4byte	0x7a3
 4153 108b 00       		.byte	0
 4154 108c 20       		.uleb128 0x20
 4155 108d 01       		.byte	0x1
 4156 108e 13040000 		.4byte	.LASF156
 4157 1092 01       		.byte	0x1
 4158 1093 4D03     		.2byte	0x34d
 4159 1095 01       		.byte	0x1
 4160 1096 2F030000 		.4byte	0x32f
 4161 109a EE000000 		.4byte	.LFB69
 4162 109e 1C010000 		.4byte	.LFE69
 4163 10a2 D1090000 		.4byte	.LLST3
 4164 10a6 01       		.byte	0x1
 4165 10a7 E7100000 		.4byte	0x10e7
 4166 10ab 1E       		.uleb128 0x1e
 4167 10ac 00000000 		.4byte	.LASF125
 4168 10b0 01       		.byte	0x1
 4169 10b1 4D03     		.2byte	0x34d
 4170 10b3 A3070000 		.4byte	0x7a3
 4171 10b7 F1090000 		.4byte	.LLST4
 4172 10bb 28       		.uleb128 0x28
 4173 10bc 04010000 		.4byte	.LVL19
 4174 10c0 63130000 		.4byte	0x1363
 4175 10c4 D4100000 		.4byte	0x10d4
 4176 10c8 24       		.uleb128 0x24
 4177 10c9 01       		.byte	0x1
 4178 10ca 50       		.byte	0x50
 4179 10cb 02       		.byte	0x2
 4180 10cc 74       		.byte	0x74
 4181 10cd 00       		.sleb128 0
 4182 10ce 24       		.uleb128 0x24
 4183 10cf 01       		.byte	0x1
 4184 10d0 51       		.byte	0x51
 4185 10d1 01       		.byte	0x1
 4186 10d2 31       		.byte	0x31
 4187 10d3 00       		.byte	0
 4188 10d4 21       		.uleb128 0x21
 4189 10d5 0A010000 		.4byte	.LVL20
 4190 10d9 7E130000 		.4byte	0x137e
 4191 10dd 21       		.uleb128 0x21
 4192 10de 10010000 		.4byte	.LVL21
 4193 10e2 A8130000 		.4byte	0x13a8
 4194 10e6 00       		.byte	0
 4195 10e7 2A       		.uleb128 0x2a
 4196 10e8 01       		.byte	0x1
 4197 10e9 8E090000 		.4byte	.LASF157
 4198 10ed 01       		.byte	0x1
 4199 10ee 2701     		.2byte	0x127
 4200 10f0 01       		.byte	0x1
 4201 10f1 02110000 		.4byte	0x1102
 4202 10f5 18       		.uleb128 0x18
 4203 10f6 00000000 		.4byte	.LASF125
 4204 10fa 01       		.byte	0x1
 4205 10fb 2701     		.2byte	0x127
 4206 10fd A3070000 		.4byte	0x7a3
ARM GAS  /tmp/ccq2vSAC.s 			page 117


 4207 1101 00       		.byte	0
 4208 1102 2A       		.uleb128 0x2a
 4209 1103 01       		.byte	0x1
 4210 1104 AF080000 		.4byte	.LASF158
 4211 1108 01       		.byte	0x1
 4212 1109 1801     		.2byte	0x118
 4213 110b 01       		.byte	0x1
 4214 110c 1D110000 		.4byte	0x111d
 4215 1110 18       		.uleb128 0x18
 4216 1111 00000000 		.4byte	.LASF125
 4217 1115 01       		.byte	0x1
 4218 1116 1801     		.2byte	0x118
 4219 1118 A3070000 		.4byte	0x7a3
 4220 111c 00       		.byte	0
 4221 111d 33       		.uleb128 0x33
 4222 111e 01       		.byte	0x1
 4223 111f F3040000 		.4byte	.LASF159
 4224 1123 01       		.byte	0x1
 4225 1124 F4       		.byte	0xf4
 4226 1125 01       		.byte	0x1
 4227 1126 2F030000 		.4byte	0x32f
 4228 112a 5A010000 		.4byte	.LFB66
 4229 112e 7C010000 		.4byte	.LFE66
 4230 1132 250A0000 		.4byte	.LLST8
 4231 1136 01       		.byte	0x1
 4232 1137 6F110000 		.4byte	0x116f
 4233 113b 34       		.uleb128 0x34
 4234 113c 00000000 		.4byte	.LASF125
 4235 1140 01       		.byte	0x1
 4236 1141 F4       		.byte	0xf4
 4237 1142 A3070000 		.4byte	0x7a3
 4238 1146 450A0000 		.4byte	.LLST9
 4239 114a 28       		.uleb128 0x28
 4240 114b 6A010000 		.4byte	.LVL33
 4241 114f 6C100000 		.4byte	0x106c
 4242 1153 5E110000 		.4byte	0x115e
 4243 1157 24       		.uleb128 0x24
 4244 1158 01       		.byte	0x1
 4245 1159 50       		.byte	0x50
 4246 115a 02       		.byte	0x2
 4247 115b 74       		.byte	0x74
 4248 115c 00       		.sleb128 0
 4249 115d 00       		.byte	0
 4250 115e 23       		.uleb128 0x23
 4251 115f 70010000 		.4byte	.LVL34
 4252 1163 E7100000 		.4byte	0x10e7
 4253 1167 24       		.uleb128 0x24
 4254 1168 01       		.byte	0x1
 4255 1169 50       		.byte	0x50
 4256 116a 02       		.byte	0x2
 4257 116b 74       		.byte	0x74
 4258 116c 00       		.sleb128 0
 4259 116d 00       		.byte	0
 4260 116e 00       		.byte	0
 4261 116f 33       		.uleb128 0x33
 4262 1170 01       		.byte	0x1
 4263 1171 9C050000 		.4byte	.LASF160
ARM GAS  /tmp/ccq2vSAC.s 			page 118


 4264 1175 01       		.byte	0x1
 4265 1176 7E       		.byte	0x7e
 4266 1177 01       		.byte	0x1
 4267 1178 2F030000 		.4byte	0x32f
 4268 117c 02000000 		.4byte	.LFB65
 4269 1180 EC000000 		.4byte	.LFE65
 4270 1184 790A0000 		.4byte	.LLST0
 4271 1188 01       		.byte	0x1
 4272 1189 F6110000 		.4byte	0x11f6
 4273 118d 34       		.uleb128 0x34
 4274 118e 00000000 		.4byte	.LASF125
 4275 1192 01       		.byte	0x1
 4276 1193 7E       		.byte	0x7e
 4277 1194 A3070000 		.4byte	0x7a3
 4278 1198 B10A0000 		.4byte	.LLST1
 4279 119c 35       		.uleb128 0x35
 4280 119d 6900     		.ascii	"i\000"
 4281 119f 01       		.byte	0x1
 4282 11a0 83       		.byte	0x83
 4283 11a1 97000000 		.4byte	0x97
 4284 11a5 CF0A0000 		.4byte	.LLST2
 4285 11a9 28       		.uleb128 0x28
 4286 11aa 1C000000 		.4byte	.LVL1
 4287 11ae 02110000 		.4byte	0x1102
 4288 11b2 BD110000 		.4byte	0x11bd
 4289 11b6 24       		.uleb128 0x24
 4290 11b7 01       		.byte	0x1
 4291 11b8 50       		.byte	0x50
 4292 11b9 02       		.byte	0x2
 4293 11ba 74       		.byte	0x74
 4294 11bb 00       		.sleb128 0
 4295 11bc 00       		.byte	0
 4296 11bd 21       		.uleb128 0x21
 4297 11be 2E000000 		.4byte	.LVL2
 4298 11c2 B6130000 		.4byte	0x13b6
 4299 11c6 21       		.uleb128 0x21
 4300 11c7 46000000 		.4byte	.LVL3
 4301 11cb C4130000 		.4byte	0x13c4
 4302 11cf 28       		.uleb128 0x28
 4303 11d0 5C000000 		.4byte	.LVL4
 4304 11d4 D2130000 		.4byte	0x13d2
 4305 11d8 E3110000 		.4byte	0x11e3
 4306 11dc 24       		.uleb128 0x24
 4307 11dd 01       		.byte	0x1
 4308 11de 51       		.byte	0x51
 4309 11df 02       		.byte	0x2
 4310 11e0 76       		.byte	0x76
 4311 11e1 00       		.sleb128 0
 4312 11e2 00       		.byte	0
 4313 11e3 21       		.uleb128 0x21
 4314 11e4 90000000 		.4byte	.LVL10
 4315 11e8 E0130000 		.4byte	0x13e0
 4316 11ec 21       		.uleb128 0x21
 4317 11ed E6000000 		.4byte	.LVL17
 4318 11f1 70130000 		.4byte	0x1370
 4319 11f5 00       		.byte	0
 4320 11f6 36       		.uleb128 0x36
ARM GAS  /tmp/ccq2vSAC.s 			page 119


 4321 11f7 6C100000 		.4byte	0x106c
 4322 11fb 1C010000 		.4byte	.LFB70
 4323 11ff 5A010000 		.4byte	.LFE70
 4324 1203 320B0000 		.4byte	.LLST5
 4325 1207 01       		.byte	0x1
 4326 1208 48120000 		.4byte	0x1248
 4327 120c 37       		.uleb128 0x37
 4328 120d 7F100000 		.4byte	0x107f
 4329 1211 520B0000 		.4byte	.LLST6
 4330 1215 31       		.uleb128 0x31
 4331 1216 4A010000 		.4byte	.LBB4
 4332 121a 56010000 		.4byte	.LBE4
 4333 121e 35120000 		.4byte	0x1235
 4334 1222 37       		.uleb128 0x37
 4335 1223 7F100000 		.4byte	0x107f
 4336 1227 7B0B0000 		.4byte	.LLST7
 4337 122b 21       		.uleb128 0x21
 4338 122c 50010000 		.4byte	.LVL29
 4339 1230 70130000 		.4byte	0x1370
 4340 1234 00       		.byte	0
 4341 1235 21       		.uleb128 0x21
 4342 1236 34010000 		.4byte	.LVL26
 4343 123a B6130000 		.4byte	0x13b6
 4344 123e 21       		.uleb128 0x21
 4345 123f 3A010000 		.4byte	.LVL27
 4346 1243 EE130000 		.4byte	0x13ee
 4347 1247 00       		.byte	0
 4348 1248 38       		.uleb128 0x38
 4349 1249 970C0000 		.4byte	0xc97
 4350 124d 8C010000 		.4byte	.LFB80
 4351 1251 8E010000 		.4byte	.LFE80
 4352 1255 02       		.byte	0x2
 4353 1256 7D       		.byte	0x7d
 4354 1257 00       		.sleb128 0
 4355 1258 01       		.byte	0x1
 4356 1259 6C120000 		.4byte	0x126c
 4357 125d 39       		.uleb128 0x39
 4358 125e A60C0000 		.4byte	0xca6
 4359 1262 01       		.byte	0x1
 4360 1263 50       		.byte	0x50
 4361 1264 39       		.uleb128 0x39
 4362 1265 B20C0000 		.4byte	0xcb2
 4363 1269 01       		.byte	0x1
 4364 126a 51       		.byte	0x51
 4365 126b 00       		.byte	0
 4366 126c 38       		.uleb128 0x38
 4367 126d 600C0000 		.4byte	0xc60
 4368 1271 90010000 		.4byte	.LFB82
 4369 1275 92010000 		.4byte	.LFE82
 4370 1279 02       		.byte	0x2
 4371 127a 7D       		.byte	0x7d
 4372 127b 00       		.sleb128 0
 4373 127c 01       		.byte	0x1
 4374 127d 89120000 		.4byte	0x1289
 4375 1281 39       		.uleb128 0x39
 4376 1282 6F0C0000 		.4byte	0xc6f
 4377 1286 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 120


 4378 1287 50       		.byte	0x50
 4379 1288 00       		.byte	0
 4380 1289 36       		.uleb128 0x36
 4381 128a 900B0000 		.4byte	0xb90
 4382 128e E4010000 		.4byte	.LFB85
 4383 1292 0C020000 		.4byte	.LFE85
 4384 1296 8E0B0000 		.4byte	.LLST14
 4385 129a 01       		.byte	0x1
 4386 129b D7120000 		.4byte	0x12d7
 4387 129f 37       		.uleb128 0x37
 4388 12a0 A30B0000 		.4byte	0xba3
 4389 12a4 AE0B0000 		.4byte	.LLST15
 4390 12a8 37       		.uleb128 0x37
 4391 12a9 AF0B0000 		.4byte	0xbaf
 4392 12ad E20B0000 		.4byte	.LLST16
 4393 12b1 2E       		.uleb128 0x2e
 4394 12b2 F0010000 		.4byte	.LBB8
 4395 12b6 08020000 		.4byte	.LBE8
 4396 12ba 37       		.uleb128 0x37
 4397 12bb AF0B0000 		.4byte	0xbaf
 4398 12bf 0E0C0000 		.4byte	.LLST17
 4399 12c3 37       		.uleb128 0x37
 4400 12c4 A30B0000 		.4byte	0xba3
 4401 12c8 2F0C0000 		.4byte	.LLST18
 4402 12cc 21       		.uleb128 0x21
 4403 12cd 00020000 		.4byte	.LVL52
 4404 12d1 FC130000 		.4byte	0x13fc
 4405 12d5 00       		.byte	0
 4406 12d6 00       		.byte	0
 4407 12d7 3A       		.uleb128 0x3a
 4408 12d8 01       		.byte	0x1
 4409 12d9 01       		.byte	0x1
 4410 12da 6D040000 		.4byte	.LASF161
 4411 12de 6D040000 		.4byte	.LASF161
 4412 12e2 08       		.byte	0x8
 4413 12e3 6F02     		.2byte	0x26f
 4414 12e5 3A       		.uleb128 0x3a
 4415 12e6 01       		.byte	0x1
 4416 12e7 01       		.byte	0x1
 4417 12e8 5C050000 		.4byte	.LASF162
 4418 12ec 5C050000 		.4byte	.LASF162
 4419 12f0 08       		.byte	0x8
 4420 12f1 6E02     		.2byte	0x26e
 4421 12f3 3A       		.uleb128 0x3a
 4422 12f4 01       		.byte	0x1
 4423 12f5 01       		.byte	0x1
 4424 12f6 E5070000 		.4byte	.LASF163
 4425 12fa E5070000 		.4byte	.LASF163
 4426 12fe 08       		.byte	0x8
 4427 12ff 5A02     		.2byte	0x25a
 4428 1301 3A       		.uleb128 0x3a
 4429 1302 01       		.byte	0x1
 4430 1303 01       		.byte	0x1
 4431 1304 C0010000 		.4byte	.LASF164
 4432 1308 C0010000 		.4byte	.LASF164
 4433 130c 08       		.byte	0x8
 4434 130d 5902     		.2byte	0x259
ARM GAS  /tmp/ccq2vSAC.s 			page 121


 4435 130f 3A       		.uleb128 0x3a
 4436 1310 01       		.byte	0x1
 4437 1311 01       		.byte	0x1
 4438 1312 F5070000 		.4byte	.LASF165
 4439 1316 F5070000 		.4byte	.LASF165
 4440 131a 08       		.byte	0x8
 4441 131b 6102     		.2byte	0x261
 4442 131d 3A       		.uleb128 0x3a
 4443 131e 01       		.byte	0x1
 4444 131f 01       		.byte	0x1
 4445 1320 8D050000 		.4byte	.LASF166
 4446 1324 8D050000 		.4byte	.LASF166
 4447 1328 08       		.byte	0x8
 4448 1329 6002     		.2byte	0x260
 4449 132b 3A       		.uleb128 0x3a
 4450 132c 01       		.byte	0x1
 4451 132d 01       		.byte	0x1
 4452 132e 3C000000 		.4byte	.LASF167
 4453 1332 3C000000 		.4byte	.LASF167
 4454 1336 08       		.byte	0x8
 4455 1337 6602     		.2byte	0x266
 4456 1339 3A       		.uleb128 0x3a
 4457 133a 01       		.byte	0x1
 4458 133b 01       		.byte	0x1
 4459 133c F4000000 		.4byte	.LASF168
 4460 1340 F4000000 		.4byte	.LASF168
 4461 1344 08       		.byte	0x8
 4462 1345 5D02     		.2byte	0x25d
 4463 1347 3A       		.uleb128 0x3a
 4464 1348 01       		.byte	0x1
 4465 1349 01       		.byte	0x1
 4466 134a CE070000 		.4byte	.LASF169
 4467 134e CE070000 		.4byte	.LASF169
 4468 1352 08       		.byte	0x8
 4469 1353 5C02     		.2byte	0x25c
 4470 1355 3A       		.uleb128 0x3a
 4471 1356 01       		.byte	0x1
 4472 1357 01       		.byte	0x1
 4473 1358 A7040000 		.4byte	.LASF170
 4474 135c A7040000 		.4byte	.LASF170
 4475 1360 08       		.byte	0x8
 4476 1361 5B02     		.2byte	0x25b
 4477 1363 3B       		.uleb128 0x3b
 4478 1364 01       		.byte	0x1
 4479 1365 01       		.byte	0x1
 4480 1366 D1030000 		.4byte	.LASF171
 4481 136a D1030000 		.4byte	.LASF171
 4482 136e 0B       		.byte	0xb
 4483 136f 3D       		.byte	0x3d
 4484 1370 3A       		.uleb128 0x3a
 4485 1371 01       		.byte	0x1
 4486 1372 01       		.byte	0x1
 4487 1373 E2000000 		.4byte	.LASF172
 4488 1377 E2000000 		.4byte	.LASF172
 4489 137b 08       		.byte	0x8
 4490 137c 6402     		.2byte	0x264
 4491 137e 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccq2vSAC.s 			page 122


 4492 137f 01       		.byte	0x1
 4493 1380 01       		.byte	0x1
 4494 1381 04010000 		.4byte	.LASF173
 4495 1385 04010000 		.4byte	.LASF173
 4496 1389 08       		.byte	0x8
 4497 138a 6302     		.2byte	0x263
 4498 138c 3A       		.uleb128 0x3a
 4499 138d 01       		.byte	0x1
 4500 138e 01       		.byte	0x1
 4501 138f A0090000 		.4byte	.LASF174
 4502 1393 A0090000 		.4byte	.LASF174
 4503 1397 08       		.byte	0x8
 4504 1398 7102     		.2byte	0x271
 4505 139a 3A       		.uleb128 0x3a
 4506 139b 01       		.byte	0x1
 4507 139c 01       		.byte	0x1
 4508 139d 8E010000 		.4byte	.LASF175
 4509 13a1 8E010000 		.4byte	.LASF175
 4510 13a5 08       		.byte	0x8
 4511 13a6 6702     		.2byte	0x267
 4512 13a8 3A       		.uleb128 0x3a
 4513 13a9 01       		.byte	0x1
 4514 13aa 01       		.byte	0x1
 4515 13ab 23060000 		.4byte	.LASF176
 4516 13af 23060000 		.4byte	.LASF176
 4517 13b3 08       		.byte	0x8
 4518 13b4 5502     		.2byte	0x255
 4519 13b6 3A       		.uleb128 0x3a
 4520 13b7 01       		.byte	0x1
 4521 13b8 01       		.byte	0x1
 4522 13b9 56080000 		.4byte	.LASF177
 4523 13bd 56080000 		.4byte	.LASF177
 4524 13c1 08       		.byte	0x8
 4525 13c2 5602     		.2byte	0x256
 4526 13c4 3A       		.uleb128 0x3a
 4527 13c5 01       		.byte	0x1
 4528 13c6 01       		.byte	0x1
 4529 13c7 E3020000 		.4byte	.LASF178
 4530 13cb E3020000 		.4byte	.LASF178
 4531 13cf 08       		.byte	0x8
 4532 13d0 5302     		.2byte	0x253
 4533 13d2 3A       		.uleb128 0x3a
 4534 13d3 01       		.byte	0x1
 4535 13d4 01       		.byte	0x1
 4536 13d5 99070000 		.4byte	.LASF179
 4537 13d9 99070000 		.4byte	.LASF179
 4538 13dd 08       		.byte	0x8
 4539 13de 5702     		.2byte	0x257
 4540 13e0 3A       		.uleb128 0x3a
 4541 13e1 01       		.byte	0x1
 4542 13e2 01       		.byte	0x1
 4543 13e3 2D020000 		.4byte	.LASF180
 4544 13e7 2D020000 		.4byte	.LASF180
 4545 13eb 08       		.byte	0x8
 4546 13ec 5402     		.2byte	0x254
 4547 13ee 3A       		.uleb128 0x3a
 4548 13ef 01       		.byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 123


 4549 13f0 01       		.byte	0x1
 4550 13f1 1D010000 		.4byte	.LASF181
 4551 13f5 1D010000 		.4byte	.LASF181
 4552 13f9 08       		.byte	0x8
 4553 13fa 6502     		.2byte	0x265
 4554 13fc 3A       		.uleb128 0x3a
 4555 13fd 01       		.byte	0x1
 4556 13fe 01       		.byte	0x1
 4557 13ff F5010000 		.4byte	.LASF182
 4558 1403 F5010000 		.4byte	.LASF182
 4559 1407 08       		.byte	0x8
 4560 1408 6202     		.2byte	0x262
 4561 140a 00       		.byte	0
 4562              		.section	.debug_abbrev,"",%progbits
 4563              	.Ldebug_abbrev0:
 4564 0000 01       		.uleb128 0x1
 4565 0001 11       		.uleb128 0x11
 4566 0002 01       		.byte	0x1
 4567 0003 25       		.uleb128 0x25
 4568 0004 0E       		.uleb128 0xe
 4569 0005 13       		.uleb128 0x13
 4570 0006 0B       		.uleb128 0xb
 4571 0007 03       		.uleb128 0x3
 4572 0008 0E       		.uleb128 0xe
 4573 0009 1B       		.uleb128 0x1b
 4574 000a 0E       		.uleb128 0xe
 4575 000b 11       		.uleb128 0x11
 4576 000c 01       		.uleb128 0x1
 4577 000d 12       		.uleb128 0x12
 4578 000e 01       		.uleb128 0x1
 4579 000f 10       		.uleb128 0x10
 4580 0010 06       		.uleb128 0x6
 4581 0011 00       		.byte	0
 4582 0012 00       		.byte	0
 4583 0013 02       		.uleb128 0x2
 4584 0014 24       		.uleb128 0x24
 4585 0015 00       		.byte	0
 4586 0016 0B       		.uleb128 0xb
 4587 0017 0B       		.uleb128 0xb
 4588 0018 3E       		.uleb128 0x3e
 4589 0019 0B       		.uleb128 0xb
 4590 001a 03       		.uleb128 0x3
 4591 001b 0E       		.uleb128 0xe
 4592 001c 00       		.byte	0
 4593 001d 00       		.byte	0
 4594 001e 03       		.uleb128 0x3
 4595 001f 16       		.uleb128 0x16
 4596 0020 00       		.byte	0
 4597 0021 03       		.uleb128 0x3
 4598 0022 0E       		.uleb128 0xe
 4599 0023 3A       		.uleb128 0x3a
 4600 0024 0B       		.uleb128 0xb
 4601 0025 3B       		.uleb128 0x3b
 4602 0026 0B       		.uleb128 0xb
 4603 0027 49       		.uleb128 0x49
 4604 0028 13       		.uleb128 0x13
 4605 0029 00       		.byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 124


 4606 002a 00       		.byte	0
 4607 002b 04       		.uleb128 0x4
 4608 002c 24       		.uleb128 0x24
 4609 002d 00       		.byte	0
 4610 002e 0B       		.uleb128 0xb
 4611 002f 0B       		.uleb128 0xb
 4612 0030 3E       		.uleb128 0x3e
 4613 0031 0B       		.uleb128 0xb
 4614 0032 03       		.uleb128 0x3
 4615 0033 08       		.uleb128 0x8
 4616 0034 00       		.byte	0
 4617 0035 00       		.byte	0
 4618 0036 05       		.uleb128 0x5
 4619 0037 35       		.uleb128 0x35
 4620 0038 00       		.byte	0
 4621 0039 49       		.uleb128 0x49
 4622 003a 13       		.uleb128 0x13
 4623 003b 00       		.byte	0
 4624 003c 00       		.byte	0
 4625 003d 06       		.uleb128 0x6
 4626 003e 26       		.uleb128 0x26
 4627 003f 00       		.byte	0
 4628 0040 49       		.uleb128 0x49
 4629 0041 13       		.uleb128 0x13
 4630 0042 00       		.byte	0
 4631 0043 00       		.byte	0
 4632 0044 07       		.uleb128 0x7
 4633 0045 34       		.uleb128 0x34
 4634 0046 00       		.byte	0
 4635 0047 03       		.uleb128 0x3
 4636 0048 0E       		.uleb128 0xe
 4637 0049 3A       		.uleb128 0x3a
 4638 004a 0B       		.uleb128 0xb
 4639 004b 3B       		.uleb128 0x3b
 4640 004c 05       		.uleb128 0x5
 4641 004d 49       		.uleb128 0x49
 4642 004e 13       		.uleb128 0x13
 4643 004f 3F       		.uleb128 0x3f
 4644 0050 0C       		.uleb128 0xc
 4645 0051 3C       		.uleb128 0x3c
 4646 0052 0C       		.uleb128 0xc
 4647 0053 00       		.byte	0
 4648 0054 00       		.byte	0
 4649 0055 08       		.uleb128 0x8
 4650 0056 34       		.uleb128 0x34
 4651 0057 00       		.byte	0
 4652 0058 03       		.uleb128 0x3
 4653 0059 0E       		.uleb128 0xe
 4654 005a 3A       		.uleb128 0x3a
 4655 005b 0B       		.uleb128 0xb
 4656 005c 3B       		.uleb128 0x3b
 4657 005d 0B       		.uleb128 0xb
 4658 005e 49       		.uleb128 0x49
 4659 005f 13       		.uleb128 0x13
 4660 0060 3F       		.uleb128 0x3f
 4661 0061 0C       		.uleb128 0xc
 4662 0062 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccq2vSAC.s 			page 125


 4663 0063 0C       		.uleb128 0xc
 4664 0064 00       		.byte	0
 4665 0065 00       		.byte	0
 4666 0066 09       		.uleb128 0x9
 4667 0067 01       		.uleb128 0x1
 4668 0068 01       		.byte	0x1
 4669 0069 49       		.uleb128 0x49
 4670 006a 13       		.uleb128 0x13
 4671 006b 01       		.uleb128 0x1
 4672 006c 13       		.uleb128 0x13
 4673 006d 00       		.byte	0
 4674 006e 00       		.byte	0
 4675 006f 0A       		.uleb128 0xa
 4676 0070 21       		.uleb128 0x21
 4677 0071 00       		.byte	0
 4678 0072 49       		.uleb128 0x49
 4679 0073 13       		.uleb128 0x13
 4680 0074 2F       		.uleb128 0x2f
 4681 0075 0B       		.uleb128 0xb
 4682 0076 00       		.byte	0
 4683 0077 00       		.byte	0
 4684 0078 0B       		.uleb128 0xb
 4685 0079 13       		.uleb128 0x13
 4686 007a 01       		.byte	0x1
 4687 007b 0B       		.uleb128 0xb
 4688 007c 0B       		.uleb128 0xb
 4689 007d 3A       		.uleb128 0x3a
 4690 007e 0B       		.uleb128 0xb
 4691 007f 3B       		.uleb128 0x3b
 4692 0080 05       		.uleb128 0x5
 4693 0081 01       		.uleb128 0x1
 4694 0082 13       		.uleb128 0x13
 4695 0083 00       		.byte	0
 4696 0084 00       		.byte	0
 4697 0085 0C       		.uleb128 0xc
 4698 0086 0D       		.uleb128 0xd
 4699 0087 00       		.byte	0
 4700 0088 03       		.uleb128 0x3
 4701 0089 0E       		.uleb128 0xe
 4702 008a 3A       		.uleb128 0x3a
 4703 008b 0B       		.uleb128 0xb
 4704 008c 3B       		.uleb128 0x3b
 4705 008d 05       		.uleb128 0x5
 4706 008e 49       		.uleb128 0x49
 4707 008f 13       		.uleb128 0x13
 4708 0090 38       		.uleb128 0x38
 4709 0091 0A       		.uleb128 0xa
 4710 0092 00       		.byte	0
 4711 0093 00       		.byte	0
 4712 0094 0D       		.uleb128 0xd
 4713 0095 0D       		.uleb128 0xd
 4714 0096 00       		.byte	0
 4715 0097 03       		.uleb128 0x3
 4716 0098 08       		.uleb128 0x8
 4717 0099 3A       		.uleb128 0x3a
 4718 009a 0B       		.uleb128 0xb
 4719 009b 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccq2vSAC.s 			page 126


 4720 009c 05       		.uleb128 0x5
 4721 009d 49       		.uleb128 0x49
 4722 009e 13       		.uleb128 0x13
 4723 009f 38       		.uleb128 0x38
 4724 00a0 0A       		.uleb128 0xa
 4725 00a1 00       		.byte	0
 4726 00a2 00       		.byte	0
 4727 00a3 0E       		.uleb128 0xe
 4728 00a4 16       		.uleb128 0x16
 4729 00a5 00       		.byte	0
 4730 00a6 03       		.uleb128 0x3
 4731 00a7 0E       		.uleb128 0xe
 4732 00a8 3A       		.uleb128 0x3a
 4733 00a9 0B       		.uleb128 0xb
 4734 00aa 3B       		.uleb128 0x3b
 4735 00ab 05       		.uleb128 0x5
 4736 00ac 49       		.uleb128 0x49
 4737 00ad 13       		.uleb128 0x13
 4738 00ae 00       		.byte	0
 4739 00af 00       		.byte	0
 4740 00b0 0F       		.uleb128 0xf
 4741 00b1 04       		.uleb128 0x4
 4742 00b2 01       		.byte	0x1
 4743 00b3 0B       		.uleb128 0xb
 4744 00b4 0B       		.uleb128 0xb
 4745 00b5 49       		.uleb128 0x49
 4746 00b6 13       		.uleb128 0x13
 4747 00b7 3A       		.uleb128 0x3a
 4748 00b8 0B       		.uleb128 0xb
 4749 00b9 3B       		.uleb128 0x3b
 4750 00ba 0B       		.uleb128 0xb
 4751 00bb 01       		.uleb128 0x1
 4752 00bc 13       		.uleb128 0x13
 4753 00bd 00       		.byte	0
 4754 00be 00       		.byte	0
 4755 00bf 10       		.uleb128 0x10
 4756 00c0 28       		.uleb128 0x28
 4757 00c1 00       		.byte	0
 4758 00c2 03       		.uleb128 0x3
 4759 00c3 0E       		.uleb128 0xe
 4760 00c4 1C       		.uleb128 0x1c
 4761 00c5 0B       		.uleb128 0xb
 4762 00c6 00       		.byte	0
 4763 00c7 00       		.byte	0
 4764 00c8 11       		.uleb128 0x11
 4765 00c9 0F       		.uleb128 0xf
 4766 00ca 00       		.byte	0
 4767 00cb 0B       		.uleb128 0xb
 4768 00cc 0B       		.uleb128 0xb
 4769 00cd 00       		.byte	0
 4770 00ce 00       		.byte	0
 4771 00cf 12       		.uleb128 0x12
 4772 00d0 0F       		.uleb128 0xf
 4773 00d1 00       		.byte	0
 4774 00d2 0B       		.uleb128 0xb
 4775 00d3 0B       		.uleb128 0xb
 4776 00d4 49       		.uleb128 0x49
ARM GAS  /tmp/ccq2vSAC.s 			page 127


 4777 00d5 13       		.uleb128 0x13
 4778 00d6 00       		.byte	0
 4779 00d7 00       		.byte	0
 4780 00d8 13       		.uleb128 0x13
 4781 00d9 13       		.uleb128 0x13
 4782 00da 01       		.byte	0x1
 4783 00db 0B       		.uleb128 0xb
 4784 00dc 0B       		.uleb128 0xb
 4785 00dd 3A       		.uleb128 0x3a
 4786 00de 0B       		.uleb128 0xb
 4787 00df 3B       		.uleb128 0x3b
 4788 00e0 0B       		.uleb128 0xb
 4789 00e1 01       		.uleb128 0x1
 4790 00e2 13       		.uleb128 0x13
 4791 00e3 00       		.byte	0
 4792 00e4 00       		.byte	0
 4793 00e5 14       		.uleb128 0x14
 4794 00e6 0D       		.uleb128 0xd
 4795 00e7 00       		.byte	0
 4796 00e8 03       		.uleb128 0x3
 4797 00e9 0E       		.uleb128 0xe
 4798 00ea 3A       		.uleb128 0x3a
 4799 00eb 0B       		.uleb128 0xb
 4800 00ec 3B       		.uleb128 0x3b
 4801 00ed 0B       		.uleb128 0xb
 4802 00ee 49       		.uleb128 0x49
 4803 00ef 13       		.uleb128 0x13
 4804 00f0 38       		.uleb128 0x38
 4805 00f1 0A       		.uleb128 0xa
 4806 00f2 00       		.byte	0
 4807 00f3 00       		.byte	0
 4808 00f4 15       		.uleb128 0x15
 4809 00f5 0D       		.uleb128 0xd
 4810 00f6 00       		.byte	0
 4811 00f7 03       		.uleb128 0x3
 4812 00f8 08       		.uleb128 0x8
 4813 00f9 3A       		.uleb128 0x3a
 4814 00fa 0B       		.uleb128 0xb
 4815 00fb 3B       		.uleb128 0x3b
 4816 00fc 0B       		.uleb128 0xb
 4817 00fd 49       		.uleb128 0x49
 4818 00fe 13       		.uleb128 0x13
 4819 00ff 38       		.uleb128 0x38
 4820 0100 0A       		.uleb128 0xa
 4821 0101 00       		.byte	0
 4822 0102 00       		.byte	0
 4823 0103 16       		.uleb128 0x16
 4824 0104 13       		.uleb128 0x13
 4825 0105 01       		.byte	0x1
 4826 0106 0B       		.uleb128 0xb
 4827 0107 05       		.uleb128 0x5
 4828 0108 3A       		.uleb128 0x3a
 4829 0109 0B       		.uleb128 0xb
 4830 010a 3B       		.uleb128 0x3b
 4831 010b 0B       		.uleb128 0xb
 4832 010c 01       		.uleb128 0x1
 4833 010d 13       		.uleb128 0x13
ARM GAS  /tmp/ccq2vSAC.s 			page 128


 4834 010e 00       		.byte	0
 4835 010f 00       		.byte	0
 4836 0110 17       		.uleb128 0x17
 4837 0111 2E       		.uleb128 0x2e
 4838 0112 01       		.byte	0x1
 4839 0113 03       		.uleb128 0x3
 4840 0114 0E       		.uleb128 0xe
 4841 0115 3A       		.uleb128 0x3a
 4842 0116 0B       		.uleb128 0xb
 4843 0117 3B       		.uleb128 0x3b
 4844 0118 05       		.uleb128 0x5
 4845 0119 27       		.uleb128 0x27
 4846 011a 0C       		.uleb128 0xc
 4847 011b 49       		.uleb128 0x49
 4848 011c 13       		.uleb128 0x13
 4849 011d 20       		.uleb128 0x20
 4850 011e 0B       		.uleb128 0xb
 4851 011f 01       		.uleb128 0x1
 4852 0120 13       		.uleb128 0x13
 4853 0121 00       		.byte	0
 4854 0122 00       		.byte	0
 4855 0123 18       		.uleb128 0x18
 4856 0124 05       		.uleb128 0x5
 4857 0125 00       		.byte	0
 4858 0126 03       		.uleb128 0x3
 4859 0127 0E       		.uleb128 0xe
 4860 0128 3A       		.uleb128 0x3a
 4861 0129 0B       		.uleb128 0xb
 4862 012a 3B       		.uleb128 0x3b
 4863 012b 05       		.uleb128 0x5
 4864 012c 49       		.uleb128 0x49
 4865 012d 13       		.uleb128 0x13
 4866 012e 00       		.byte	0
 4867 012f 00       		.byte	0
 4868 0130 19       		.uleb128 0x19
 4869 0131 34       		.uleb128 0x34
 4870 0132 00       		.byte	0
 4871 0133 03       		.uleb128 0x3
 4872 0134 08       		.uleb128 0x8
 4873 0135 3A       		.uleb128 0x3a
 4874 0136 0B       		.uleb128 0xb
 4875 0137 3B       		.uleb128 0x3b
 4876 0138 05       		.uleb128 0x5
 4877 0139 49       		.uleb128 0x49
 4878 013a 13       		.uleb128 0x13
 4879 013b 00       		.byte	0
 4880 013c 00       		.byte	0
 4881 013d 1A       		.uleb128 0x1a
 4882 013e 34       		.uleb128 0x34
 4883 013f 00       		.byte	0
 4884 0140 03       		.uleb128 0x3
 4885 0141 0E       		.uleb128 0xe
 4886 0142 3A       		.uleb128 0x3a
 4887 0143 0B       		.uleb128 0xb
 4888 0144 3B       		.uleb128 0x3b
 4889 0145 05       		.uleb128 0x5
 4890 0146 49       		.uleb128 0x49
ARM GAS  /tmp/ccq2vSAC.s 			page 129


 4891 0147 13       		.uleb128 0x13
 4892 0148 00       		.byte	0
 4893 0149 00       		.byte	0
 4894 014a 1B       		.uleb128 0x1b
 4895 014b 0B       		.uleb128 0xb
 4896 014c 01       		.byte	0x1
 4897 014d 01       		.uleb128 0x1
 4898 014e 13       		.uleb128 0x13
 4899 014f 00       		.byte	0
 4900 0150 00       		.byte	0
 4901 0151 1C       		.uleb128 0x1c
 4902 0152 0B       		.uleb128 0xb
 4903 0153 01       		.byte	0x1
 4904 0154 00       		.byte	0
 4905 0155 00       		.byte	0
 4906 0156 1D       		.uleb128 0x1d
 4907 0157 2E       		.uleb128 0x2e
 4908 0158 01       		.byte	0x1
 4909 0159 3F       		.uleb128 0x3f
 4910 015a 0C       		.uleb128 0xc
 4911 015b 03       		.uleb128 0x3
 4912 015c 0E       		.uleb128 0xe
 4913 015d 3A       		.uleb128 0x3a
 4914 015e 0B       		.uleb128 0xb
 4915 015f 3B       		.uleb128 0x3b
 4916 0160 05       		.uleb128 0x5
 4917 0161 27       		.uleb128 0x27
 4918 0162 0C       		.uleb128 0xc
 4919 0163 49       		.uleb128 0x49
 4920 0164 13       		.uleb128 0x13
 4921 0165 11       		.uleb128 0x11
 4922 0166 01       		.uleb128 0x1
 4923 0167 12       		.uleb128 0x12
 4924 0168 01       		.uleb128 0x1
 4925 0169 40       		.uleb128 0x40
 4926 016a 0A       		.uleb128 0xa
 4927 016b 9742     		.uleb128 0x2117
 4928 016d 0C       		.uleb128 0xc
 4929 016e 01       		.uleb128 0x1
 4930 016f 13       		.uleb128 0x13
 4931 0170 00       		.byte	0
 4932 0171 00       		.byte	0
 4933 0172 1E       		.uleb128 0x1e
 4934 0173 05       		.uleb128 0x5
 4935 0174 00       		.byte	0
 4936 0175 03       		.uleb128 0x3
 4937 0176 0E       		.uleb128 0xe
 4938 0177 3A       		.uleb128 0x3a
 4939 0178 0B       		.uleb128 0xb
 4940 0179 3B       		.uleb128 0x3b
 4941 017a 05       		.uleb128 0x5
 4942 017b 49       		.uleb128 0x49
 4943 017c 13       		.uleb128 0x13
 4944 017d 02       		.uleb128 0x2
 4945 017e 06       		.uleb128 0x6
 4946 017f 00       		.byte	0
 4947 0180 00       		.byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 130


 4948 0181 1F       		.uleb128 0x1f
 4949 0182 898201   		.uleb128 0x4109
 4950 0185 00       		.byte	0
 4951 0186 11       		.uleb128 0x11
 4952 0187 01       		.uleb128 0x1
 4953 0188 9542     		.uleb128 0x2115
 4954 018a 0C       		.uleb128 0xc
 4955 018b 31       		.uleb128 0x31
 4956 018c 13       		.uleb128 0x13
 4957 018d 00       		.byte	0
 4958 018e 00       		.byte	0
 4959 018f 20       		.uleb128 0x20
 4960 0190 2E       		.uleb128 0x2e
 4961 0191 01       		.byte	0x1
 4962 0192 3F       		.uleb128 0x3f
 4963 0193 0C       		.uleb128 0xc
 4964 0194 03       		.uleb128 0x3
 4965 0195 0E       		.uleb128 0xe
 4966 0196 3A       		.uleb128 0x3a
 4967 0197 0B       		.uleb128 0xb
 4968 0198 3B       		.uleb128 0x3b
 4969 0199 05       		.uleb128 0x5
 4970 019a 27       		.uleb128 0x27
 4971 019b 0C       		.uleb128 0xc
 4972 019c 49       		.uleb128 0x49
 4973 019d 13       		.uleb128 0x13
 4974 019e 11       		.uleb128 0x11
 4975 019f 01       		.uleb128 0x1
 4976 01a0 12       		.uleb128 0x12
 4977 01a1 01       		.uleb128 0x1
 4978 01a2 40       		.uleb128 0x40
 4979 01a3 06       		.uleb128 0x6
 4980 01a4 9742     		.uleb128 0x2117
 4981 01a6 0C       		.uleb128 0xc
 4982 01a7 01       		.uleb128 0x1
 4983 01a8 13       		.uleb128 0x13
 4984 01a9 00       		.byte	0
 4985 01aa 00       		.byte	0
 4986 01ab 21       		.uleb128 0x21
 4987 01ac 898201   		.uleb128 0x4109
 4988 01af 00       		.byte	0
 4989 01b0 11       		.uleb128 0x11
 4990 01b1 01       		.uleb128 0x1
 4991 01b2 31       		.uleb128 0x31
 4992 01b3 13       		.uleb128 0x13
 4993 01b4 00       		.byte	0
 4994 01b5 00       		.byte	0
 4995 01b6 22       		.uleb128 0x22
 4996 01b7 34       		.uleb128 0x34
 4997 01b8 00       		.byte	0
 4998 01b9 03       		.uleb128 0x3
 4999 01ba 08       		.uleb128 0x8
 5000 01bb 3A       		.uleb128 0x3a
 5001 01bc 0B       		.uleb128 0xb
 5002 01bd 3B       		.uleb128 0x3b
 5003 01be 05       		.uleb128 0x5
 5004 01bf 49       		.uleb128 0x49
ARM GAS  /tmp/ccq2vSAC.s 			page 131


 5005 01c0 13       		.uleb128 0x13
 5006 01c1 02       		.uleb128 0x2
 5007 01c2 06       		.uleb128 0x6
 5008 01c3 00       		.byte	0
 5009 01c4 00       		.byte	0
 5010 01c5 23       		.uleb128 0x23
 5011 01c6 898201   		.uleb128 0x4109
 5012 01c9 01       		.byte	0x1
 5013 01ca 11       		.uleb128 0x11
 5014 01cb 01       		.uleb128 0x1
 5015 01cc 31       		.uleb128 0x31
 5016 01cd 13       		.uleb128 0x13
 5017 01ce 00       		.byte	0
 5018 01cf 00       		.byte	0
 5019 01d0 24       		.uleb128 0x24
 5020 01d1 8A8201   		.uleb128 0x410a
 5021 01d4 00       		.byte	0
 5022 01d5 02       		.uleb128 0x2
 5023 01d6 0A       		.uleb128 0xa
 5024 01d7 9142     		.uleb128 0x2111
 5025 01d9 0A       		.uleb128 0xa
 5026 01da 00       		.byte	0
 5027 01db 00       		.byte	0
 5028 01dc 25       		.uleb128 0x25
 5029 01dd 05       		.uleb128 0x5
 5030 01de 00       		.byte	0
 5031 01df 03       		.uleb128 0x3
 5032 01e0 08       		.uleb128 0x8
 5033 01e1 3A       		.uleb128 0x3a
 5034 01e2 0B       		.uleb128 0xb
 5035 01e3 3B       		.uleb128 0x3b
 5036 01e4 05       		.uleb128 0x5
 5037 01e5 49       		.uleb128 0x49
 5038 01e6 13       		.uleb128 0x13
 5039 01e7 02       		.uleb128 0x2
 5040 01e8 06       		.uleb128 0x6
 5041 01e9 00       		.byte	0
 5042 01ea 00       		.byte	0
 5043 01eb 26       		.uleb128 0x26
 5044 01ec 34       		.uleb128 0x34
 5045 01ed 00       		.byte	0
 5046 01ee 03       		.uleb128 0x3
 5047 01ef 08       		.uleb128 0x8
 5048 01f0 3A       		.uleb128 0x3a
 5049 01f1 0B       		.uleb128 0xb
 5050 01f2 3B       		.uleb128 0x3b
 5051 01f3 05       		.uleb128 0x5
 5052 01f4 49       		.uleb128 0x49
 5053 01f5 13       		.uleb128 0x13
 5054 01f6 1C       		.uleb128 0x1c
 5055 01f7 0B       		.uleb128 0xb
 5056 01f8 00       		.byte	0
 5057 01f9 00       		.byte	0
 5058 01fa 27       		.uleb128 0x27
 5059 01fb 2E       		.uleb128 0x2e
 5060 01fc 01       		.byte	0x1
 5061 01fd 3F       		.uleb128 0x3f
ARM GAS  /tmp/ccq2vSAC.s 			page 132


 5062 01fe 0C       		.uleb128 0xc
 5063 01ff 03       		.uleb128 0x3
 5064 0200 0E       		.uleb128 0xe
 5065 0201 3A       		.uleb128 0x3a
 5066 0202 0B       		.uleb128 0xb
 5067 0203 3B       		.uleb128 0x3b
 5068 0204 05       		.uleb128 0x5
 5069 0205 27       		.uleb128 0x27
 5070 0206 0C       		.uleb128 0xc
 5071 0207 49       		.uleb128 0x49
 5072 0208 13       		.uleb128 0x13
 5073 0209 20       		.uleb128 0x20
 5074 020a 0B       		.uleb128 0xb
 5075 020b 01       		.uleb128 0x1
 5076 020c 13       		.uleb128 0x13
 5077 020d 00       		.byte	0
 5078 020e 00       		.byte	0
 5079 020f 28       		.uleb128 0x28
 5080 0210 898201   		.uleb128 0x4109
 5081 0213 01       		.byte	0x1
 5082 0214 11       		.uleb128 0x11
 5083 0215 01       		.uleb128 0x1
 5084 0216 31       		.uleb128 0x31
 5085 0217 13       		.uleb128 0x13
 5086 0218 01       		.uleb128 0x1
 5087 0219 13       		.uleb128 0x13
 5088 021a 00       		.byte	0
 5089 021b 00       		.byte	0
 5090 021c 29       		.uleb128 0x29
 5091 021d 2E       		.uleb128 0x2e
 5092 021e 01       		.byte	0x1
 5093 021f 3F       		.uleb128 0x3f
 5094 0220 0C       		.uleb128 0xc
 5095 0221 03       		.uleb128 0x3
 5096 0222 0E       		.uleb128 0xe
 5097 0223 3A       		.uleb128 0x3a
 5098 0224 0B       		.uleb128 0xb
 5099 0225 3B       		.uleb128 0x3b
 5100 0226 05       		.uleb128 0x5
 5101 0227 27       		.uleb128 0x27
 5102 0228 0C       		.uleb128 0xc
 5103 0229 20       		.uleb128 0x20
 5104 022a 0B       		.uleb128 0xb
 5105 022b 01       		.uleb128 0x1
 5106 022c 13       		.uleb128 0x13
 5107 022d 00       		.byte	0
 5108 022e 00       		.byte	0
 5109 022f 2A       		.uleb128 0x2a
 5110 0230 2E       		.uleb128 0x2e
 5111 0231 01       		.byte	0x1
 5112 0232 3F       		.uleb128 0x3f
 5113 0233 0C       		.uleb128 0xc
 5114 0234 03       		.uleb128 0x3
 5115 0235 0E       		.uleb128 0xe
 5116 0236 3A       		.uleb128 0x3a
 5117 0237 0B       		.uleb128 0xb
 5118 0238 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccq2vSAC.s 			page 133


 5119 0239 05       		.uleb128 0x5
 5120 023a 27       		.uleb128 0x27
 5121 023b 0C       		.uleb128 0xc
 5122 023c 01       		.uleb128 0x1
 5123 023d 13       		.uleb128 0x13
 5124 023e 00       		.byte	0
 5125 023f 00       		.byte	0
 5126 0240 2B       		.uleb128 0x2b
 5127 0241 2E       		.uleb128 0x2e
 5128 0242 01       		.byte	0x1
 5129 0243 3F       		.uleb128 0x3f
 5130 0244 0C       		.uleb128 0xc
 5131 0245 03       		.uleb128 0x3
 5132 0246 0E       		.uleb128 0xe
 5133 0247 3A       		.uleb128 0x3a
 5134 0248 0B       		.uleb128 0xb
 5135 0249 3B       		.uleb128 0x3b
 5136 024a 05       		.uleb128 0x5
 5137 024b 27       		.uleb128 0x27
 5138 024c 0C       		.uleb128 0xc
 5139 024d 11       		.uleb128 0x11
 5140 024e 01       		.uleb128 0x1
 5141 024f 12       		.uleb128 0x12
 5142 0250 01       		.uleb128 0x1
 5143 0251 40       		.uleb128 0x40
 5144 0252 06       		.uleb128 0x6
 5145 0253 9742     		.uleb128 0x2117
 5146 0255 0C       		.uleb128 0xc
 5147 0256 01       		.uleb128 0x1
 5148 0257 13       		.uleb128 0x13
 5149 0258 00       		.byte	0
 5150 0259 00       		.byte	0
 5151 025a 2C       		.uleb128 0x2c
 5152 025b 1D       		.uleb128 0x1d
 5153 025c 01       		.byte	0x1
 5154 025d 31       		.uleb128 0x31
 5155 025e 13       		.uleb128 0x13
 5156 025f 11       		.uleb128 0x11
 5157 0260 01       		.uleb128 0x1
 5158 0261 12       		.uleb128 0x12
 5159 0262 01       		.uleb128 0x1
 5160 0263 58       		.uleb128 0x58
 5161 0264 0B       		.uleb128 0xb
 5162 0265 59       		.uleb128 0x59
 5163 0266 05       		.uleb128 0x5
 5164 0267 01       		.uleb128 0x1
 5165 0268 13       		.uleb128 0x13
 5166 0269 00       		.byte	0
 5167 026a 00       		.byte	0
 5168 026b 2D       		.uleb128 0x2d
 5169 026c 05       		.uleb128 0x5
 5170 026d 00       		.byte	0
 5171 026e 31       		.uleb128 0x31
 5172 026f 13       		.uleb128 0x13
 5173 0270 00       		.byte	0
 5174 0271 00       		.byte	0
 5175 0272 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccq2vSAC.s 			page 134


 5176 0273 0B       		.uleb128 0xb
 5177 0274 01       		.byte	0x1
 5178 0275 11       		.uleb128 0x11
 5179 0276 01       		.uleb128 0x1
 5180 0277 12       		.uleb128 0x12
 5181 0278 01       		.uleb128 0x1
 5182 0279 00       		.byte	0
 5183 027a 00       		.byte	0
 5184 027b 2F       		.uleb128 0x2f
 5185 027c 34       		.uleb128 0x34
 5186 027d 00       		.byte	0
 5187 027e 31       		.uleb128 0x31
 5188 027f 13       		.uleb128 0x13
 5189 0280 02       		.uleb128 0x2
 5190 0281 06       		.uleb128 0x6
 5191 0282 00       		.byte	0
 5192 0283 00       		.byte	0
 5193 0284 30       		.uleb128 0x30
 5194 0285 0B       		.uleb128 0xb
 5195 0286 01       		.byte	0x1
 5196 0287 55       		.uleb128 0x55
 5197 0288 06       		.uleb128 0x6
 5198 0289 01       		.uleb128 0x1
 5199 028a 13       		.uleb128 0x13
 5200 028b 00       		.byte	0
 5201 028c 00       		.byte	0
 5202 028d 31       		.uleb128 0x31
 5203 028e 0B       		.uleb128 0xb
 5204 028f 01       		.byte	0x1
 5205 0290 11       		.uleb128 0x11
 5206 0291 01       		.uleb128 0x1
 5207 0292 12       		.uleb128 0x12
 5208 0293 01       		.uleb128 0x1
 5209 0294 01       		.uleb128 0x1
 5210 0295 13       		.uleb128 0x13
 5211 0296 00       		.byte	0
 5212 0297 00       		.byte	0
 5213 0298 32       		.uleb128 0x32
 5214 0299 0B       		.uleb128 0xb
 5215 029a 01       		.byte	0x1
 5216 029b 55       		.uleb128 0x55
 5217 029c 06       		.uleb128 0x6
 5218 029d 00       		.byte	0
 5219 029e 00       		.byte	0
 5220 029f 33       		.uleb128 0x33
 5221 02a0 2E       		.uleb128 0x2e
 5222 02a1 01       		.byte	0x1
 5223 02a2 3F       		.uleb128 0x3f
 5224 02a3 0C       		.uleb128 0xc
 5225 02a4 03       		.uleb128 0x3
 5226 02a5 0E       		.uleb128 0xe
 5227 02a6 3A       		.uleb128 0x3a
 5228 02a7 0B       		.uleb128 0xb
 5229 02a8 3B       		.uleb128 0x3b
 5230 02a9 0B       		.uleb128 0xb
 5231 02aa 27       		.uleb128 0x27
 5232 02ab 0C       		.uleb128 0xc
ARM GAS  /tmp/ccq2vSAC.s 			page 135


 5233 02ac 49       		.uleb128 0x49
 5234 02ad 13       		.uleb128 0x13
 5235 02ae 11       		.uleb128 0x11
 5236 02af 01       		.uleb128 0x1
 5237 02b0 12       		.uleb128 0x12
 5238 02b1 01       		.uleb128 0x1
 5239 02b2 40       		.uleb128 0x40
 5240 02b3 06       		.uleb128 0x6
 5241 02b4 9742     		.uleb128 0x2117
 5242 02b6 0C       		.uleb128 0xc
 5243 02b7 01       		.uleb128 0x1
 5244 02b8 13       		.uleb128 0x13
 5245 02b9 00       		.byte	0
 5246 02ba 00       		.byte	0
 5247 02bb 34       		.uleb128 0x34
 5248 02bc 05       		.uleb128 0x5
 5249 02bd 00       		.byte	0
 5250 02be 03       		.uleb128 0x3
 5251 02bf 0E       		.uleb128 0xe
 5252 02c0 3A       		.uleb128 0x3a
 5253 02c1 0B       		.uleb128 0xb
 5254 02c2 3B       		.uleb128 0x3b
 5255 02c3 0B       		.uleb128 0xb
 5256 02c4 49       		.uleb128 0x49
 5257 02c5 13       		.uleb128 0x13
 5258 02c6 02       		.uleb128 0x2
 5259 02c7 06       		.uleb128 0x6
 5260 02c8 00       		.byte	0
 5261 02c9 00       		.byte	0
 5262 02ca 35       		.uleb128 0x35
 5263 02cb 34       		.uleb128 0x34
 5264 02cc 00       		.byte	0
 5265 02cd 03       		.uleb128 0x3
 5266 02ce 08       		.uleb128 0x8
 5267 02cf 3A       		.uleb128 0x3a
 5268 02d0 0B       		.uleb128 0xb
 5269 02d1 3B       		.uleb128 0x3b
 5270 02d2 0B       		.uleb128 0xb
 5271 02d3 49       		.uleb128 0x49
 5272 02d4 13       		.uleb128 0x13
 5273 02d5 02       		.uleb128 0x2
 5274 02d6 06       		.uleb128 0x6
 5275 02d7 00       		.byte	0
 5276 02d8 00       		.byte	0
 5277 02d9 36       		.uleb128 0x36
 5278 02da 2E       		.uleb128 0x2e
 5279 02db 01       		.byte	0x1
 5280 02dc 31       		.uleb128 0x31
 5281 02dd 13       		.uleb128 0x13
 5282 02de 11       		.uleb128 0x11
 5283 02df 01       		.uleb128 0x1
 5284 02e0 12       		.uleb128 0x12
 5285 02e1 01       		.uleb128 0x1
 5286 02e2 40       		.uleb128 0x40
 5287 02e3 06       		.uleb128 0x6
 5288 02e4 9742     		.uleb128 0x2117
 5289 02e6 0C       		.uleb128 0xc
ARM GAS  /tmp/ccq2vSAC.s 			page 136


 5290 02e7 01       		.uleb128 0x1
 5291 02e8 13       		.uleb128 0x13
 5292 02e9 00       		.byte	0
 5293 02ea 00       		.byte	0
 5294 02eb 37       		.uleb128 0x37
 5295 02ec 05       		.uleb128 0x5
 5296 02ed 00       		.byte	0
 5297 02ee 31       		.uleb128 0x31
 5298 02ef 13       		.uleb128 0x13
 5299 02f0 02       		.uleb128 0x2
 5300 02f1 06       		.uleb128 0x6
 5301 02f2 00       		.byte	0
 5302 02f3 00       		.byte	0
 5303 02f4 38       		.uleb128 0x38
 5304 02f5 2E       		.uleb128 0x2e
 5305 02f6 01       		.byte	0x1
 5306 02f7 31       		.uleb128 0x31
 5307 02f8 13       		.uleb128 0x13
 5308 02f9 11       		.uleb128 0x11
 5309 02fa 01       		.uleb128 0x1
 5310 02fb 12       		.uleb128 0x12
 5311 02fc 01       		.uleb128 0x1
 5312 02fd 40       		.uleb128 0x40
 5313 02fe 0A       		.uleb128 0xa
 5314 02ff 9742     		.uleb128 0x2117
 5315 0301 0C       		.uleb128 0xc
 5316 0302 01       		.uleb128 0x1
 5317 0303 13       		.uleb128 0x13
 5318 0304 00       		.byte	0
 5319 0305 00       		.byte	0
 5320 0306 39       		.uleb128 0x39
 5321 0307 05       		.uleb128 0x5
 5322 0308 00       		.byte	0
 5323 0309 31       		.uleb128 0x31
 5324 030a 13       		.uleb128 0x13
 5325 030b 02       		.uleb128 0x2
 5326 030c 0A       		.uleb128 0xa
 5327 030d 00       		.byte	0
 5328 030e 00       		.byte	0
 5329 030f 3A       		.uleb128 0x3a
 5330 0310 2E       		.uleb128 0x2e
 5331 0311 00       		.byte	0
 5332 0312 3F       		.uleb128 0x3f
 5333 0313 0C       		.uleb128 0xc
 5334 0314 3C       		.uleb128 0x3c
 5335 0315 0C       		.uleb128 0xc
 5336 0316 8740     		.uleb128 0x2007
 5337 0318 0E       		.uleb128 0xe
 5338 0319 03       		.uleb128 0x3
 5339 031a 0E       		.uleb128 0xe
 5340 031b 3A       		.uleb128 0x3a
 5341 031c 0B       		.uleb128 0xb
 5342 031d 3B       		.uleb128 0x3b
 5343 031e 05       		.uleb128 0x5
 5344 031f 00       		.byte	0
 5345 0320 00       		.byte	0
 5346 0321 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccq2vSAC.s 			page 137


 5347 0322 2E       		.uleb128 0x2e
 5348 0323 00       		.byte	0
 5349 0324 3F       		.uleb128 0x3f
 5350 0325 0C       		.uleb128 0xc
 5351 0326 3C       		.uleb128 0x3c
 5352 0327 0C       		.uleb128 0xc
 5353 0328 8740     		.uleb128 0x2007
 5354 032a 0E       		.uleb128 0xe
 5355 032b 03       		.uleb128 0x3
 5356 032c 0E       		.uleb128 0xe
 5357 032d 3A       		.uleb128 0x3a
 5358 032e 0B       		.uleb128 0xb
 5359 032f 3B       		.uleb128 0x3b
 5360 0330 0B       		.uleb128 0xb
 5361 0331 00       		.byte	0
 5362 0332 00       		.byte	0
 5363 0333 00       		.byte	0
 5364              		.section	.debug_loc,"",%progbits
 5365              	.Ldebug_loc0:
 5366              	.LLST73:
 5367 0000 88080000 		.4byte	.LVL205-.Ltext0
 5368 0004 8C080000 		.4byte	.LVL206-.Ltext0
 5369 0008 0100     		.2byte	0x1
 5370 000a 50       		.byte	0x50
 5371 000b 8C080000 		.4byte	.LVL206-.Ltext0
 5372 000f 8E080000 		.4byte	.LFE96-.Ltext0
 5373 0013 0400     		.2byte	0x4
 5374 0015 F3       		.byte	0xf3
 5375 0016 01       		.uleb128 0x1
 5376 0017 50       		.byte	0x50
 5377 0018 9F       		.byte	0x9f
 5378 0019 00000000 		.4byte	0
 5379 001d 00000000 		.4byte	0
 5380              	.LLST72:
 5381 0021 82080000 		.4byte	.LVL202-.Ltext0
 5382 0025 84080000 		.4byte	.LVL203-.Ltext0
 5383 0029 0100     		.2byte	0x1
 5384 002b 50       		.byte	0x50
 5385 002c 84080000 		.4byte	.LVL203-.Ltext0
 5386 0030 88080000 		.4byte	.LFE95-.Ltext0
 5387 0034 0400     		.2byte	0x4
 5388 0036 F3       		.byte	0xf3
 5389 0037 01       		.uleb128 0x1
 5390 0038 50       		.byte	0x50
 5391 0039 9F       		.byte	0x9f
 5392 003a 00000000 		.4byte	0
 5393 003e 00000000 		.4byte	0
 5394              	.LLST71:
 5395 0042 7C080000 		.4byte	.LVL199-.Ltext0
 5396 0046 7E080000 		.4byte	.LVL200-.Ltext0
 5397 004a 0100     		.2byte	0x1
 5398 004c 50       		.byte	0x50
 5399 004d 7E080000 		.4byte	.LVL200-.Ltext0
 5400 0051 82080000 		.4byte	.LFE94-.Ltext0
 5401 0055 0400     		.2byte	0x4
 5402 0057 F3       		.byte	0xf3
 5403 0058 01       		.uleb128 0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 138


 5404 0059 50       		.byte	0x50
 5405 005a 9F       		.byte	0x9f
 5406 005b 00000000 		.4byte	0
 5407 005f 00000000 		.4byte	0
 5408              	.LLST68:
 5409 0063 48080000 		.4byte	.LFB93-.Ltext0
 5410 0067 4E080000 		.4byte	.LCFI16-.Ltext0
 5411 006b 0200     		.2byte	0x2
 5412 006d 7D       		.byte	0x7d
 5413 006e 00       		.sleb128 0
 5414 006f 4E080000 		.4byte	.LCFI16-.Ltext0
 5415 0073 7C080000 		.4byte	.LFE93-.Ltext0
 5416 0077 0200     		.2byte	0x2
 5417 0079 7D       		.byte	0x7d
 5418 007a 08       		.sleb128 8
 5419 007b 00000000 		.4byte	0
 5420 007f 00000000 		.4byte	0
 5421              	.LLST69:
 5422 0083 48080000 		.4byte	.LVL190-.Ltext0
 5423 0087 64080000 		.4byte	.LVL192-.Ltext0
 5424 008b 0100     		.2byte	0x1
 5425 008d 50       		.byte	0x50
 5426 008e 64080000 		.4byte	.LVL192-.Ltext0
 5427 0092 70080000 		.4byte	.LVL194-.Ltext0
 5428 0096 0100     		.2byte	0x1
 5429 0098 54       		.byte	0x54
 5430 0099 70080000 		.4byte	.LVL194-.Ltext0
 5431 009d 72080000 		.4byte	.LVL195-.Ltext0
 5432 00a1 0100     		.2byte	0x1
 5433 00a3 50       		.byte	0x50
 5434 00a4 72080000 		.4byte	.LVL195-.Ltext0
 5435 00a8 78080000 		.4byte	.LVL197-.Ltext0
 5436 00ac 0100     		.2byte	0x1
 5437 00ae 54       		.byte	0x54
 5438 00af 78080000 		.4byte	.LVL197-.Ltext0
 5439 00b3 7A080000 		.4byte	.LVL198-.Ltext0
 5440 00b7 0100     		.2byte	0x1
 5441 00b9 50       		.byte	0x50
 5442 00ba 7A080000 		.4byte	.LVL198-.Ltext0
 5443 00be 7C080000 		.4byte	.LFE93-.Ltext0
 5444 00c2 0100     		.2byte	0x1
 5445 00c4 54       		.byte	0x54
 5446 00c5 00000000 		.4byte	0
 5447 00c9 00000000 		.4byte	0
 5448              	.LLST70:
 5449 00cd 48080000 		.4byte	.LVL190-.Ltext0
 5450 00d1 62080000 		.4byte	.LVL191-.Ltext0
 5451 00d5 0100     		.2byte	0x1
 5452 00d7 51       		.byte	0x51
 5453 00d8 62080000 		.4byte	.LVL191-.Ltext0
 5454 00dc 70080000 		.4byte	.LVL194-.Ltext0
 5455 00e0 0400     		.2byte	0x4
 5456 00e2 F3       		.byte	0xf3
 5457 00e3 01       		.uleb128 0x1
 5458 00e4 51       		.byte	0x51
 5459 00e5 9F       		.byte	0x9f
 5460 00e6 70080000 		.4byte	.LVL194-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 139


 5461 00ea 75080000 		.4byte	.LVL196-1-.Ltext0
 5462 00ee 0100     		.2byte	0x1
 5463 00f0 51       		.byte	0x51
 5464 00f1 75080000 		.4byte	.LVL196-1-.Ltext0
 5465 00f5 78080000 		.4byte	.LVL197-.Ltext0
 5466 00f9 0400     		.2byte	0x4
 5467 00fb F3       		.byte	0xf3
 5468 00fc 01       		.uleb128 0x1
 5469 00fd 51       		.byte	0x51
 5470 00fe 9F       		.byte	0x9f
 5471 00ff 78080000 		.4byte	.LVL197-.Ltext0
 5472 0103 7C080000 		.4byte	.LFE93-.Ltext0
 5473 0107 0100     		.2byte	0x1
 5474 0109 51       		.byte	0x51
 5475 010a 00000000 		.4byte	0
 5476 010e 00000000 		.4byte	0
 5477              	.LLST64:
 5478 0112 E4070000 		.4byte	.LFB92-.Ltext0
 5479 0116 E6070000 		.4byte	.LCFI15-.Ltext0
 5480 011a 0200     		.2byte	0x2
 5481 011c 7D       		.byte	0x7d
 5482 011d 00       		.sleb128 0
 5483 011e E6070000 		.4byte	.LCFI15-.Ltext0
 5484 0122 48080000 		.4byte	.LFE92-.Ltext0
 5485 0126 0200     		.2byte	0x2
 5486 0128 7D       		.byte	0x7d
 5487 0129 10       		.sleb128 16
 5488 012a 00000000 		.4byte	0
 5489 012e 00000000 		.4byte	0
 5490              	.LLST65:
 5491 0132 E4070000 		.4byte	.LVL178-.Ltext0
 5492 0136 0A080000 		.4byte	.LVL181-.Ltext0
 5493 013a 0100     		.2byte	0x1
 5494 013c 50       		.byte	0x50
 5495 013d 0A080000 		.4byte	.LVL181-.Ltext0
 5496 0141 30080000 		.4byte	.LVL183-.Ltext0
 5497 0145 0100     		.2byte	0x1
 5498 0147 54       		.byte	0x54
 5499 0148 30080000 		.4byte	.LVL183-.Ltext0
 5500 014c 3A080000 		.4byte	.LVL186-.Ltext0
 5501 0150 0100     		.2byte	0x1
 5502 0152 50       		.byte	0x50
 5503 0153 3A080000 		.4byte	.LVL186-.Ltext0
 5504 0157 40080000 		.4byte	.LVL187-.Ltext0
 5505 015b 0100     		.2byte	0x1
 5506 015d 54       		.byte	0x54
 5507 015e 40080000 		.4byte	.LVL187-.Ltext0
 5508 0162 42080000 		.4byte	.LVL188-.Ltext0
 5509 0166 0100     		.2byte	0x1
 5510 0168 50       		.byte	0x50
 5511 0169 42080000 		.4byte	.LVL188-.Ltext0
 5512 016d 48080000 		.4byte	.LFE92-.Ltext0
 5513 0171 0100     		.2byte	0x1
 5514 0173 54       		.byte	0x54
 5515 0174 00000000 		.4byte	0
 5516 0178 00000000 		.4byte	0
 5517              	.LLST66:
ARM GAS  /tmp/ccq2vSAC.s 			page 140


 5518 017c E4070000 		.4byte	.LVL178-.Ltext0
 5519 0180 04080000 		.4byte	.LVL179-.Ltext0
 5520 0184 0100     		.2byte	0x1
 5521 0186 51       		.byte	0x51
 5522 0187 04080000 		.4byte	.LVL179-.Ltext0
 5523 018b 30080000 		.4byte	.LVL183-.Ltext0
 5524 018f 0400     		.2byte	0x4
 5525 0191 F3       		.byte	0xf3
 5526 0192 01       		.uleb128 0x1
 5527 0193 51       		.byte	0x51
 5528 0194 9F       		.byte	0x9f
 5529 0195 30080000 		.4byte	.LVL183-.Ltext0
 5530 0199 34080000 		.4byte	.LVL184-.Ltext0
 5531 019d 0100     		.2byte	0x1
 5532 019f 51       		.byte	0x51
 5533 01a0 34080000 		.4byte	.LVL184-.Ltext0
 5534 01a4 40080000 		.4byte	.LVL187-.Ltext0
 5535 01a8 0400     		.2byte	0x4
 5536 01aa F3       		.byte	0xf3
 5537 01ab 01       		.uleb128 0x1
 5538 01ac 51       		.byte	0x51
 5539 01ad 9F       		.byte	0x9f
 5540 01ae 40080000 		.4byte	.LVL187-.Ltext0
 5541 01b2 44080000 		.4byte	.LVL189-.Ltext0
 5542 01b6 0100     		.2byte	0x1
 5543 01b8 51       		.byte	0x51
 5544 01b9 44080000 		.4byte	.LVL189-.Ltext0
 5545 01bd 48080000 		.4byte	.LFE92-.Ltext0
 5546 01c1 0400     		.2byte	0x4
 5547 01c3 F3       		.byte	0xf3
 5548 01c4 01       		.uleb128 0x1
 5549 01c5 51       		.byte	0x51
 5550 01c6 9F       		.byte	0x9f
 5551 01c7 00000000 		.4byte	0
 5552 01cb 00000000 		.4byte	0
 5553              	.LLST67:
 5554 01cf 06080000 		.4byte	.LVL180-.Ltext0
 5555 01d3 27080000 		.4byte	.LVL182-1-.Ltext0
 5556 01d7 0100     		.2byte	0x1
 5557 01d9 51       		.byte	0x51
 5558 01da 36080000 		.4byte	.LVL185-.Ltext0
 5559 01de 40080000 		.4byte	.LVL187-.Ltext0
 5560 01e2 0100     		.2byte	0x1
 5561 01e4 51       		.byte	0x51
 5562 01e5 44080000 		.4byte	.LVL189-.Ltext0
 5563 01e9 48080000 		.4byte	.LFE92-.Ltext0
 5564 01ed 0100     		.2byte	0x1
 5565 01ef 51       		.byte	0x51
 5566 01f0 00000000 		.4byte	0
 5567 01f4 00000000 		.4byte	0
 5568              	.LLST60:
 5569 01f8 7C070000 		.4byte	.LFB91-.Ltext0
 5570 01fc 7E070000 		.4byte	.LCFI14-.Ltext0
 5571 0200 0200     		.2byte	0x2
 5572 0202 7D       		.byte	0x7d
 5573 0203 00       		.sleb128 0
 5574 0204 7E070000 		.4byte	.LCFI14-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 141


 5575 0208 E4070000 		.4byte	.LFE91-.Ltext0
 5576 020c 0200     		.2byte	0x2
 5577 020e 7D       		.byte	0x7d
 5578 020f 10       		.sleb128 16
 5579 0210 00000000 		.4byte	0
 5580 0214 00000000 		.4byte	0
 5581              	.LLST61:
 5582 0218 7C070000 		.4byte	.LVL165-.Ltext0
 5583 021c B2070000 		.4byte	.LVL168-.Ltext0
 5584 0220 0100     		.2byte	0x1
 5585 0222 50       		.byte	0x50
 5586 0223 B2070000 		.4byte	.LVL168-.Ltext0
 5587 0227 CA070000 		.4byte	.LVL171-.Ltext0
 5588 022b 0100     		.2byte	0x1
 5589 022d 54       		.byte	0x54
 5590 022e CA070000 		.4byte	.LVL171-.Ltext0
 5591 0232 DE070000 		.4byte	.LVL175-.Ltext0
 5592 0236 0100     		.2byte	0x1
 5593 0238 50       		.byte	0x50
 5594 0239 DE070000 		.4byte	.LVL175-.Ltext0
 5595 023d E0070000 		.4byte	.LVL176-.Ltext0
 5596 0241 0100     		.2byte	0x1
 5597 0243 54       		.byte	0x54
 5598 0244 E0070000 		.4byte	.LVL176-.Ltext0
 5599 0248 E2070000 		.4byte	.LVL177-.Ltext0
 5600 024c 0100     		.2byte	0x1
 5601 024e 50       		.byte	0x50
 5602 024f E2070000 		.4byte	.LVL177-.Ltext0
 5603 0253 E4070000 		.4byte	.LFE91-.Ltext0
 5604 0257 0100     		.2byte	0x1
 5605 0259 54       		.byte	0x54
 5606 025a 00000000 		.4byte	0
 5607 025e 00000000 		.4byte	0
 5608              	.LLST62:
 5609 0262 7C070000 		.4byte	.LVL165-.Ltext0
 5610 0266 96070000 		.4byte	.LVL166-.Ltext0
 5611 026a 0100     		.2byte	0x1
 5612 026c 51       		.byte	0x51
 5613 026d 96070000 		.4byte	.LVL166-.Ltext0
 5614 0271 CA070000 		.4byte	.LVL171-.Ltext0
 5615 0275 0400     		.2byte	0x4
 5616 0277 F3       		.byte	0xf3
 5617 0278 01       		.uleb128 0x1
 5618 0279 51       		.byte	0x51
 5619 027a 9F       		.byte	0x9f
 5620 027b CA070000 		.4byte	.LVL171-.Ltext0
 5621 027f D2070000 		.4byte	.LVL172-.Ltext0
 5622 0283 0100     		.2byte	0x1
 5623 0285 51       		.byte	0x51
 5624 0286 D2070000 		.4byte	.LVL172-.Ltext0
 5625 028a DC070000 		.4byte	.LVL174-.Ltext0
 5626 028e 0400     		.2byte	0x4
 5627 0290 F3       		.byte	0xf3
 5628 0291 01       		.uleb128 0x1
 5629 0292 51       		.byte	0x51
 5630 0293 9F       		.byte	0x9f
 5631 0294 DC070000 		.4byte	.LVL174-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 142


 5632 0298 E0070000 		.4byte	.LVL176-.Ltext0
 5633 029c 0100     		.2byte	0x1
 5634 029e 51       		.byte	0x51
 5635 029f E0070000 		.4byte	.LVL176-.Ltext0
 5636 02a3 E4070000 		.4byte	.LFE91-.Ltext0
 5637 02a7 0400     		.2byte	0x4
 5638 02a9 F3       		.byte	0xf3
 5639 02aa 01       		.uleb128 0x1
 5640 02ab 51       		.byte	0x51
 5641 02ac 9F       		.byte	0x9f
 5642 02ad 00000000 		.4byte	0
 5643 02b1 00000000 		.4byte	0
 5644              	.LLST63:
 5645 02b5 9A070000 		.4byte	.LVL167-.Ltext0
 5646 02b9 B5070000 		.4byte	.LVL169-1-.Ltext0
 5647 02bd 0100     		.2byte	0x1
 5648 02bf 51       		.byte	0x51
 5649 02c0 D6070000 		.4byte	.LVL173-.Ltext0
 5650 02c4 DC070000 		.4byte	.LVL174-.Ltext0
 5651 02c8 0100     		.2byte	0x1
 5652 02ca 51       		.byte	0x51
 5653 02cb E0070000 		.4byte	.LVL176-.Ltext0
 5654 02cf E4070000 		.4byte	.LFE91-.Ltext0
 5655 02d3 0100     		.2byte	0x1
 5656 02d5 51       		.byte	0x51
 5657 02d6 00000000 		.4byte	0
 5658 02da 00000000 		.4byte	0
 5659              	.LLST37:
 5660 02de 02030000 		.4byte	.LFB90-.Ltext0
 5661 02e2 08030000 		.4byte	.LCFI12-.Ltext0
 5662 02e6 0200     		.2byte	0x2
 5663 02e8 7D       		.byte	0x7d
 5664 02e9 00       		.sleb128 0
 5665 02ea 08030000 		.4byte	.LCFI12-.Ltext0
 5666 02ee 2E030000 		.4byte	.LFE90-.Ltext0
 5667 02f2 0200     		.2byte	0x2
 5668 02f4 7D       		.byte	0x7d
 5669 02f5 10       		.sleb128 16
 5670 02f6 00000000 		.4byte	0
 5671 02fa 00000000 		.4byte	0
 5672              	.LLST38:
 5673 02fe 02030000 		.4byte	.LVL85-.Ltext0
 5674 0302 26030000 		.4byte	.LVL89-.Ltext0
 5675 0306 0100     		.2byte	0x1
 5676 0308 50       		.byte	0x50
 5677 0309 26030000 		.4byte	.LVL89-.Ltext0
 5678 030d 2E030000 		.4byte	.LFE90-.Ltext0
 5679 0311 0400     		.2byte	0x4
 5680 0313 F3       		.byte	0xf3
 5681 0314 01       		.uleb128 0x1
 5682 0315 50       		.byte	0x50
 5683 0316 9F       		.byte	0x9f
 5684 0317 00000000 		.4byte	0
 5685 031b 00000000 		.4byte	0
 5686              	.LLST39:
 5687 031f 02030000 		.4byte	.LVL85-.Ltext0
 5688 0323 06030000 		.4byte	.LVL86-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 143


 5689 0327 0100     		.2byte	0x1
 5690 0329 51       		.byte	0x51
 5691 032a 06030000 		.4byte	.LVL86-.Ltext0
 5692 032e 2E030000 		.4byte	.LFE90-.Ltext0
 5693 0332 0400     		.2byte	0x4
 5694 0334 F3       		.byte	0xf3
 5695 0335 01       		.uleb128 0x1
 5696 0336 51       		.byte	0x51
 5697 0337 9F       		.byte	0x9f
 5698 0338 00000000 		.4byte	0
 5699 033c 00000000 		.4byte	0
 5700              	.LLST40:
 5701 0340 02030000 		.4byte	.LVL85-.Ltext0
 5702 0344 29030000 		.4byte	.LVL90-1-.Ltext0
 5703 0348 0100     		.2byte	0x1
 5704 034a 52       		.byte	0x52
 5705 034b 29030000 		.4byte	.LVL90-1-.Ltext0
 5706 034f 2E030000 		.4byte	.LFE90-.Ltext0
 5707 0353 0400     		.2byte	0x4
 5708 0355 F3       		.byte	0xf3
 5709 0356 01       		.uleb128 0x1
 5710 0357 52       		.byte	0x52
 5711 0358 9F       		.byte	0x9f
 5712 0359 00000000 		.4byte	0
 5713 035d 00000000 		.4byte	0
 5714              	.LLST41:
 5715 0361 02030000 		.4byte	.LVL85-.Ltext0
 5716 0365 12030000 		.4byte	.LVL88-.Ltext0
 5717 0369 0100     		.2byte	0x1
 5718 036b 53       		.byte	0x53
 5719 036c 12030000 		.4byte	.LVL88-.Ltext0
 5720 0370 29030000 		.4byte	.LVL90-1-.Ltext0
 5721 0374 0300     		.2byte	0x3
 5722 0376 74       		.byte	0x74
 5723 0377 C000     		.sleb128 64
 5724 0379 29030000 		.4byte	.LVL90-1-.Ltext0
 5725 037d 2E030000 		.4byte	.LFE90-.Ltext0
 5726 0381 0400     		.2byte	0x4
 5727 0383 F3       		.byte	0xf3
 5728 0384 01       		.uleb128 0x1
 5729 0385 53       		.byte	0x53
 5730 0386 9F       		.byte	0x9f
 5731 0387 00000000 		.4byte	0
 5732 038b 00000000 		.4byte	0
 5733              	.LLST42:
 5734 038f 0A030000 		.4byte	.LVL87-.Ltext0
 5735 0393 26030000 		.4byte	.LVL89-.Ltext0
 5736 0397 0800     		.2byte	0x8
 5737 0399 70       		.byte	0x70
 5738 039a 00       		.sleb128 0
 5739 039b 75       		.byte	0x75
 5740 039c 00       		.sleb128 0
 5741 039d 22       		.byte	0x22
 5742 039e 23       		.byte	0x23
 5743 039f 28       		.uleb128 0x28
 5744 03a0 9F       		.byte	0x9f
 5745 03a1 26030000 		.4byte	.LVL89-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 144


 5746 03a5 2E030000 		.4byte	.LFE90-.Ltext0
 5747 03a9 0900     		.2byte	0x9
 5748 03ab F3       		.byte	0xf3
 5749 03ac 01       		.uleb128 0x1
 5750 03ad 50       		.byte	0x50
 5751 03ae 75       		.byte	0x75
 5752 03af 00       		.sleb128 0
 5753 03b0 22       		.byte	0x22
 5754 03b1 23       		.byte	0x23
 5755 03b2 28       		.uleb128 0x28
 5756 03b3 9F       		.byte	0x9f
 5757 03b4 00000000 		.4byte	0
 5758 03b8 00000000 		.4byte	0
 5759              	.LLST35:
 5760 03bc F4020000 		.4byte	.LVL82-.Ltext0
 5761 03c0 00030000 		.4byte	.LVL84-.Ltext0
 5762 03c4 0100     		.2byte	0x1
 5763 03c6 50       		.byte	0x50
 5764 03c7 00030000 		.4byte	.LVL84-.Ltext0
 5765 03cb 02030000 		.4byte	.LFE89-.Ltext0
 5766 03cf 0400     		.2byte	0x4
 5767 03d1 F3       		.byte	0xf3
 5768 03d2 01       		.uleb128 0x1
 5769 03d3 50       		.byte	0x50
 5770 03d4 9F       		.byte	0x9f
 5771 03d5 00000000 		.4byte	0
 5772 03d9 00000000 		.4byte	0
 5773              	.LLST36:
 5774 03dd F4020000 		.4byte	.LVL82-.Ltext0
 5775 03e1 F8020000 		.4byte	.LVL83-.Ltext0
 5776 03e5 0100     		.2byte	0x1
 5777 03e7 51       		.byte	0x51
 5778 03e8 F8020000 		.4byte	.LVL83-.Ltext0
 5779 03ec 02030000 		.4byte	.LFE89-.Ltext0
 5780 03f0 0400     		.2byte	0x4
 5781 03f2 F3       		.byte	0xf3
 5782 03f3 01       		.uleb128 0x1
 5783 03f4 51       		.byte	0x51
 5784 03f5 9F       		.byte	0x9f
 5785 03f6 00000000 		.4byte	0
 5786 03fa 00000000 		.4byte	0
 5787              	.LLST29:
 5788 03fe C4020000 		.4byte	.LFB88-.Ltext0
 5789 0402 C6020000 		.4byte	.LCFI11-.Ltext0
 5790 0406 0200     		.2byte	0x2
 5791 0408 7D       		.byte	0x7d
 5792 0409 00       		.sleb128 0
 5793 040a C6020000 		.4byte	.LCFI11-.Ltext0
 5794 040e F4020000 		.4byte	.LFE88-.Ltext0
 5795 0412 0200     		.2byte	0x2
 5796 0414 7D       		.byte	0x7d
 5797 0415 10       		.sleb128 16
 5798 0416 00000000 		.4byte	0
 5799 041a 00000000 		.4byte	0
 5800              	.LLST30:
 5801 041e C4020000 		.4byte	.LVL77-.Ltext0
 5802 0422 EC020000 		.4byte	.LVL80-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 145


 5803 0426 0100     		.2byte	0x1
 5804 0428 50       		.byte	0x50
 5805 0429 EC020000 		.4byte	.LVL80-.Ltext0
 5806 042d F4020000 		.4byte	.LFE88-.Ltext0
 5807 0431 0400     		.2byte	0x4
 5808 0433 F3       		.byte	0xf3
 5809 0434 01       		.uleb128 0x1
 5810 0435 50       		.byte	0x50
 5811 0436 9F       		.byte	0x9f
 5812 0437 00000000 		.4byte	0
 5813 043b 00000000 		.4byte	0
 5814              	.LLST31:
 5815 043f C4020000 		.4byte	.LVL77-.Ltext0
 5816 0443 CC020000 		.4byte	.LVL78-.Ltext0
 5817 0447 0100     		.2byte	0x1
 5818 0449 51       		.byte	0x51
 5819 044a CC020000 		.4byte	.LVL78-.Ltext0
 5820 044e F4020000 		.4byte	.LFE88-.Ltext0
 5821 0452 0400     		.2byte	0x4
 5822 0454 F3       		.byte	0xf3
 5823 0455 01       		.uleb128 0x1
 5824 0456 51       		.byte	0x51
 5825 0457 9F       		.byte	0x9f
 5826 0458 00000000 		.4byte	0
 5827 045c 00000000 		.4byte	0
 5828              	.LLST32:
 5829 0460 C4020000 		.4byte	.LVL77-.Ltext0
 5830 0464 EF020000 		.4byte	.LVL81-1-.Ltext0
 5831 0468 0100     		.2byte	0x1
 5832 046a 52       		.byte	0x52
 5833 046b EF020000 		.4byte	.LVL81-1-.Ltext0
 5834 046f F4020000 		.4byte	.LFE88-.Ltext0
 5835 0473 0400     		.2byte	0x4
 5836 0475 F3       		.byte	0xf3
 5837 0476 01       		.uleb128 0x1
 5838 0477 52       		.byte	0x52
 5839 0478 9F       		.byte	0x9f
 5840 0479 00000000 		.4byte	0
 5841 047d 00000000 		.4byte	0
 5842              	.LLST33:
 5843 0481 C4020000 		.4byte	.LVL77-.Ltext0
 5844 0485 EF020000 		.4byte	.LVL81-1-.Ltext0
 5845 0489 0100     		.2byte	0x1
 5846 048b 53       		.byte	0x53
 5847 048c EF020000 		.4byte	.LVL81-1-.Ltext0
 5848 0490 F4020000 		.4byte	.LFE88-.Ltext0
 5849 0494 0400     		.2byte	0x4
 5850 0496 F3       		.byte	0xf3
 5851 0497 01       		.uleb128 0x1
 5852 0498 53       		.byte	0x53
 5853 0499 9F       		.byte	0x9f
 5854 049a 00000000 		.4byte	0
 5855 049e 00000000 		.4byte	0
 5856              	.LLST34:
 5857 04a2 CE020000 		.4byte	.LVL79-.Ltext0
 5858 04a6 EC020000 		.4byte	.LVL80-.Ltext0
 5859 04aa 0900     		.2byte	0x9
ARM GAS  /tmp/ccq2vSAC.s 			page 146


 5860 04ac 70       		.byte	0x70
 5861 04ad 00       		.sleb128 0
 5862 04ae 75       		.byte	0x75
 5863 04af 00       		.sleb128 0
 5864 04b0 22       		.byte	0x22
 5865 04b1 23       		.byte	0x23
 5866 04b2 A802     		.uleb128 0x128
 5867 04b4 9F       		.byte	0x9f
 5868 04b5 EC020000 		.4byte	.LVL80-.Ltext0
 5869 04b9 F4020000 		.4byte	.LFE88-.Ltext0
 5870 04bd 0A00     		.2byte	0xa
 5871 04bf F3       		.byte	0xf3
 5872 04c0 01       		.uleb128 0x1
 5873 04c1 50       		.byte	0x50
 5874 04c2 75       		.byte	0x75
 5875 04c3 00       		.sleb128 0
 5876 04c4 22       		.byte	0x22
 5877 04c5 23       		.byte	0x23
 5878 04c6 A802     		.uleb128 0x128
 5879 04c8 9F       		.byte	0x9f
 5880 04c9 00000000 		.4byte	0
 5881 04cd 00000000 		.4byte	0
 5882              	.LLST25:
 5883 04d1 72020000 		.4byte	.LFB87-.Ltext0
 5884 04d5 7C020000 		.4byte	.LCFI10-.Ltext0
 5885 04d9 0200     		.2byte	0x2
 5886 04db 7D       		.byte	0x7d
 5887 04dc 00       		.sleb128 0
 5888 04dd 7C020000 		.4byte	.LCFI10-.Ltext0
 5889 04e1 C4020000 		.4byte	.LFE87-.Ltext0
 5890 04e5 0200     		.2byte	0x2
 5891 04e7 7D       		.byte	0x7d
 5892 04e8 08       		.sleb128 8
 5893 04e9 00000000 		.4byte	0
 5894 04ed 00000000 		.4byte	0
 5895              	.LLST26:
 5896 04f1 72020000 		.4byte	.LVL68-.Ltext0
 5897 04f5 8E020000 		.4byte	.LVL71-.Ltext0
 5898 04f9 0100     		.2byte	0x1
 5899 04fb 50       		.byte	0x50
 5900 04fc 8E020000 		.4byte	.LVL71-.Ltext0
 5901 0500 B0020000 		.4byte	.LVL73-.Ltext0
 5902 0504 0100     		.2byte	0x1
 5903 0506 54       		.byte	0x54
 5904 0507 B0020000 		.4byte	.LVL73-.Ltext0
 5905 050b BA020000 		.4byte	.LVL76-.Ltext0
 5906 050f 0100     		.2byte	0x1
 5907 0511 50       		.byte	0x50
 5908 0512 BA020000 		.4byte	.LVL76-.Ltext0
 5909 0516 C4020000 		.4byte	.LFE87-.Ltext0
 5910 051a 0100     		.2byte	0x1
 5911 051c 54       		.byte	0x54
 5912 051d 00000000 		.4byte	0
 5913 0521 00000000 		.4byte	0
 5914              	.LLST27:
 5915 0525 72020000 		.4byte	.LVL68-.Ltext0
 5916 0529 88020000 		.4byte	.LVL69-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 147


 5917 052d 0100     		.2byte	0x1
 5918 052f 51       		.byte	0x51
 5919 0530 88020000 		.4byte	.LVL69-.Ltext0
 5920 0534 B0020000 		.4byte	.LVL73-.Ltext0
 5921 0538 0400     		.2byte	0x4
 5922 053a F3       		.byte	0xf3
 5923 053b 01       		.uleb128 0x1
 5924 053c 51       		.byte	0x51
 5925 053d 9F       		.byte	0x9f
 5926 053e B0020000 		.4byte	.LVL73-.Ltext0
 5927 0542 B4020000 		.4byte	.LVL74-.Ltext0
 5928 0546 0100     		.2byte	0x1
 5929 0548 51       		.byte	0x51
 5930 0549 B4020000 		.4byte	.LVL74-.Ltext0
 5931 054d C4020000 		.4byte	.LFE87-.Ltext0
 5932 0551 0400     		.2byte	0x4
 5933 0553 F3       		.byte	0xf3
 5934 0554 01       		.uleb128 0x1
 5935 0555 51       		.byte	0x51
 5936 0556 9F       		.byte	0x9f
 5937 0557 00000000 		.4byte	0
 5938 055b 00000000 		.4byte	0
 5939              	.LLST28:
 5940 055f 8A020000 		.4byte	.LVL70-.Ltext0
 5941 0563 A7020000 		.4byte	.LVL72-1-.Ltext0
 5942 0567 0100     		.2byte	0x1
 5943 0569 51       		.byte	0x51
 5944 056a B6020000 		.4byte	.LVL75-.Ltext0
 5945 056e C4020000 		.4byte	.LFE87-.Ltext0
 5946 0572 0100     		.2byte	0x1
 5947 0574 51       		.byte	0x51
 5948 0575 00000000 		.4byte	0
 5949 0579 00000000 		.4byte	0
 5950              	.LLST19:
 5951 057d 0C020000 		.4byte	.LFB86-.Ltext0
 5952 0581 0E020000 		.4byte	.LCFI9-.Ltext0
 5953 0585 0200     		.2byte	0x2
 5954 0587 7D       		.byte	0x7d
 5955 0588 00       		.sleb128 0
 5956 0589 0E020000 		.4byte	.LCFI9-.Ltext0
 5957 058d 72020000 		.4byte	.LFE86-.Ltext0
 5958 0591 0200     		.2byte	0x2
 5959 0593 7D       		.byte	0x7d
 5960 0594 10       		.sleb128 16
 5961 0595 00000000 		.4byte	0
 5962 0599 00000000 		.4byte	0
 5963              	.LLST20:
 5964 059d 0C020000 		.4byte	.LVL56-.Ltext0
 5965 05a1 18020000 		.4byte	.LVL57-.Ltext0
 5966 05a5 0100     		.2byte	0x1
 5967 05a7 50       		.byte	0x50
 5968 05a8 18020000 		.4byte	.LVL57-.Ltext0
 5969 05ac 72020000 		.4byte	.LFE86-.Ltext0
 5970 05b0 0100     		.2byte	0x1
 5971 05b2 54       		.byte	0x54
 5972 05b3 00000000 		.4byte	0
 5973 05b7 00000000 		.4byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 148


 5974              	.LLST21:
 5975 05bb 0C020000 		.4byte	.LVL56-.Ltext0
 5976 05bf 24020000 		.4byte	.LVL58-.Ltext0
 5977 05c3 0100     		.2byte	0x1
 5978 05c5 51       		.byte	0x51
 5979 05c6 24020000 		.4byte	.LVL58-.Ltext0
 5980 05ca 5E020000 		.4byte	.LVL64-.Ltext0
 5981 05ce 0400     		.2byte	0x4
 5982 05d0 F3       		.byte	0xf3
 5983 05d1 01       		.uleb128 0x1
 5984 05d2 51       		.byte	0x51
 5985 05d3 9F       		.byte	0x9f
 5986 05d4 5E020000 		.4byte	.LVL64-.Ltext0
 5987 05d8 64020000 		.4byte	.LVL65-.Ltext0
 5988 05dc 0100     		.2byte	0x1
 5989 05de 51       		.byte	0x51
 5990 05df 64020000 		.4byte	.LVL65-.Ltext0
 5991 05e3 72020000 		.4byte	.LFE86-.Ltext0
 5992 05e7 0400     		.2byte	0x4
 5993 05e9 F3       		.byte	0xf3
 5994 05ea 01       		.uleb128 0x1
 5995 05eb 51       		.byte	0x51
 5996 05ec 9F       		.byte	0x9f
 5997 05ed 00000000 		.4byte	0
 5998 05f1 00000000 		.4byte	0
 5999              	.LLST22:
 6000 05f5 0C020000 		.4byte	.LVL56-.Ltext0
 6001 05f9 30020000 		.4byte	.LVL60-.Ltext0
 6002 05fd 0100     		.2byte	0x1
 6003 05ff 52       		.byte	0x52
 6004 0600 30020000 		.4byte	.LVL60-.Ltext0
 6005 0604 5E020000 		.4byte	.LVL64-.Ltext0
 6006 0608 0400     		.2byte	0x4
 6007 060a F3       		.byte	0xf3
 6008 060b 01       		.uleb128 0x1
 6009 060c 52       		.byte	0x52
 6010 060d 9F       		.byte	0x9f
 6011 060e 5E020000 		.4byte	.LVL64-.Ltext0
 6012 0612 6E020000 		.4byte	.LVL67-.Ltext0
 6013 0616 0100     		.2byte	0x1
 6014 0618 52       		.byte	0x52
 6015 0619 6E020000 		.4byte	.LVL67-.Ltext0
 6016 061d 72020000 		.4byte	.LFE86-.Ltext0
 6017 0621 0400     		.2byte	0x4
 6018 0623 F3       		.byte	0xf3
 6019 0624 01       		.uleb128 0x1
 6020 0625 52       		.byte	0x52
 6021 0626 9F       		.byte	0x9f
 6022 0627 00000000 		.4byte	0
 6023 062b 00000000 		.4byte	0
 6024              	.LLST23:
 6025 062f 0C020000 		.4byte	.LVL56-.Ltext0
 6026 0633 40020000 		.4byte	.LVL61-.Ltext0
 6027 0637 0100     		.2byte	0x1
 6028 0639 53       		.byte	0x53
 6029 063a 40020000 		.4byte	.LVL61-.Ltext0
 6030 063e 52020000 		.4byte	.LVL62-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 149


 6031 0642 0200     		.2byte	0x2
 6032 0644 71       		.byte	0x71
 6033 0645 03       		.sleb128 3
 6034 0646 52020000 		.4byte	.LVL62-.Ltext0
 6035 064a 5E020000 		.4byte	.LVL64-.Ltext0
 6036 064e 0400     		.2byte	0x4
 6037 0650 F3       		.byte	0xf3
 6038 0651 01       		.uleb128 0x1
 6039 0652 53       		.byte	0x53
 6040 0653 9F       		.byte	0x9f
 6041 0654 5E020000 		.4byte	.LVL64-.Ltext0
 6042 0658 6E020000 		.4byte	.LVL67-.Ltext0
 6043 065c 0100     		.2byte	0x1
 6044 065e 53       		.byte	0x53
 6045 065f 6E020000 		.4byte	.LVL67-.Ltext0
 6046 0663 72020000 		.4byte	.LFE86-.Ltext0
 6047 0667 0200     		.2byte	0x2
 6048 0669 71       		.byte	0x71
 6049 066a 03       		.sleb128 3
 6050 066b 00000000 		.4byte	0
 6051 066f 00000000 		.4byte	0
 6052              	.LLST24:
 6053 0673 28020000 		.4byte	.LVL59-.Ltext0
 6054 0677 55020000 		.4byte	.LVL63-1-.Ltext0
 6055 067b 0100     		.2byte	0x1
 6056 067d 51       		.byte	0x51
 6057 067e 68020000 		.4byte	.LVL66-.Ltext0
 6058 0682 72020000 		.4byte	.LFE86-.Ltext0
 6059 0686 0100     		.2byte	0x1
 6060 0688 51       		.byte	0x51
 6061 0689 00000000 		.4byte	0
 6062 068d 00000000 		.4byte	0
 6063              	.LLST12:
 6064 0691 BA010000 		.4byte	.LFB84-.Ltext0
 6065 0695 C0010000 		.4byte	.LCFI7-.Ltext0
 6066 0699 0200     		.2byte	0x2
 6067 069b 7D       		.byte	0x7d
 6068 069c 00       		.sleb128 0
 6069 069d C0010000 		.4byte	.LCFI7-.Ltext0
 6070 06a1 E4010000 		.4byte	.LFE84-.Ltext0
 6071 06a5 0200     		.2byte	0x2
 6072 06a7 7D       		.byte	0x7d
 6073 06a8 08       		.sleb128 8
 6074 06a9 00000000 		.4byte	0
 6075 06ad 00000000 		.4byte	0
 6076              	.LLST13:
 6077 06b1 BA010000 		.4byte	.LVL44-.Ltext0
 6078 06b5 D1010000 		.4byte	.LVL45-1-.Ltext0
 6079 06b9 0100     		.2byte	0x1
 6080 06bb 50       		.byte	0x50
 6081 06bc D1010000 		.4byte	.LVL45-1-.Ltext0
 6082 06c0 E0010000 		.4byte	.LVL47-.Ltext0
 6083 06c4 0100     		.2byte	0x1
 6084 06c6 54       		.byte	0x54
 6085 06c7 E0010000 		.4byte	.LVL47-.Ltext0
 6086 06cb E2010000 		.4byte	.LVL48-.Ltext0
 6087 06cf 0100     		.2byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 150


 6088 06d1 50       		.byte	0x50
 6089 06d2 E2010000 		.4byte	.LVL48-.Ltext0
 6090 06d6 E4010000 		.4byte	.LFE84-.Ltext0
 6091 06da 0100     		.2byte	0x1
 6092 06dc 54       		.byte	0x54
 6093 06dd 00000000 		.4byte	0
 6094 06e1 00000000 		.4byte	0
 6095              	.LLST10:
 6096 06e5 92010000 		.4byte	.LFB83-.Ltext0
 6097 06e9 98010000 		.4byte	.LCFI6-.Ltext0
 6098 06ed 0200     		.2byte	0x2
 6099 06ef 7D       		.byte	0x7d
 6100 06f0 00       		.sleb128 0
 6101 06f1 98010000 		.4byte	.LCFI6-.Ltext0
 6102 06f5 BA010000 		.4byte	.LFE83-.Ltext0
 6103 06f9 0200     		.2byte	0x2
 6104 06fb 7D       		.byte	0x7d
 6105 06fc 08       		.sleb128 8
 6106 06fd 00000000 		.4byte	0
 6107 0701 00000000 		.4byte	0
 6108              	.LLST11:
 6109 0705 92010000 		.4byte	.LVL39-.Ltext0
 6110 0709 A7010000 		.4byte	.LVL40-1-.Ltext0
 6111 070d 0100     		.2byte	0x1
 6112 070f 50       		.byte	0x50
 6113 0710 A7010000 		.4byte	.LVL40-1-.Ltext0
 6114 0714 B6010000 		.4byte	.LVL42-.Ltext0
 6115 0718 0100     		.2byte	0x1
 6116 071a 54       		.byte	0x54
 6117 071b B6010000 		.4byte	.LVL42-.Ltext0
 6118 071f B8010000 		.4byte	.LVL43-.Ltext0
 6119 0723 0100     		.2byte	0x1
 6120 0725 50       		.byte	0x50
 6121 0726 B8010000 		.4byte	.LVL43-.Ltext0
 6122 072a BA010000 		.4byte	.LFE83-.Ltext0
 6123 072e 0100     		.2byte	0x1
 6124 0730 54       		.byte	0x54
 6125 0731 00000000 		.4byte	0
 6126 0735 00000000 		.4byte	0
 6127              	.LLST43:
 6128 0739 2E030000 		.4byte	.LFB71-.Ltext0
 6129 073d 32030000 		.4byte	.LCFI13-.Ltext0
 6130 0741 0200     		.2byte	0x2
 6131 0743 7D       		.byte	0x7d
 6132 0744 00       		.sleb128 0
 6133 0745 32030000 		.4byte	.LCFI13-.Ltext0
 6134 0749 7C070000 		.4byte	.LFE71-.Ltext0
 6135 074d 0200     		.2byte	0x2
 6136 074f 7D       		.byte	0x7d
 6137 0750 28       		.sleb128 40
 6138 0751 00000000 		.4byte	0
 6139 0755 00000000 		.4byte	0
 6140              	.LLST44:
 6141 0759 2E030000 		.4byte	.LVL91-.Ltext0
 6142 075d 36030000 		.4byte	.LVL92-.Ltext0
 6143 0761 0100     		.2byte	0x1
 6144 0763 50       		.byte	0x50
ARM GAS  /tmp/ccq2vSAC.s 			page 151


 6145 0764 36030000 		.4byte	.LVL92-.Ltext0
 6146 0768 D6060000 		.4byte	.LVL152-.Ltext0
 6147 076c 0100     		.2byte	0x1
 6148 076e 54       		.byte	0x54
 6149 076f D6060000 		.4byte	.LVL152-.Ltext0
 6150 0773 D9060000 		.4byte	.LVL153-1-.Ltext0
 6151 0777 0100     		.2byte	0x1
 6152 0779 50       		.byte	0x50
 6153 077a D9060000 		.4byte	.LVL153-1-.Ltext0
 6154 077e 5A070000 		.4byte	.LVL162-.Ltext0
 6155 0782 0100     		.2byte	0x1
 6156 0784 54       		.byte	0x54
 6157 0785 5A070000 		.4byte	.LVL162-.Ltext0
 6158 0789 5D070000 		.4byte	.LVL163-1-.Ltext0
 6159 078d 0100     		.2byte	0x1
 6160 078f 50       		.byte	0x50
 6161 0790 5D070000 		.4byte	.LVL163-1-.Ltext0
 6162 0794 7C070000 		.4byte	.LFE71-.Ltext0
 6163 0798 0100     		.2byte	0x1
 6164 079a 54       		.byte	0x54
 6165 079b 00000000 		.4byte	0
 6166 079f 00000000 		.4byte	0
 6167              	.LLST45:
 6168 07a3 A2040000 		.4byte	.LVL112-.Ltext0
 6169 07a7 E6040000 		.4byte	.LVL114-.Ltext0
 6170 07ab 0300     		.2byte	0x3
 6171 07ad 74       		.byte	0x74
 6172 07ae 28       		.sleb128 40
 6173 07af 9F       		.byte	0x9f
 6174 07b0 20060000 		.4byte	.LVL143-.Ltext0
 6175 07b4 86060000 		.4byte	.LVL147-.Ltext0
 6176 07b8 0B00     		.2byte	0xb
 6177 07ba 76       		.byte	0x76
 6178 07bb 00       		.sleb128 0
 6179 07bc 35       		.byte	0x35
 6180 07bd 24       		.byte	0x24
 6181 07be 74       		.byte	0x74
 6182 07bf 00       		.sleb128 0
 6183 07c0 22       		.byte	0x22
 6184 07c1 23       		.byte	0x23
 6185 07c2 A802     		.uleb128 0x128
 6186 07c4 9F       		.byte	0x9f
 6187 07c5 8E060000 		.4byte	.LVL148-.Ltext0
 6188 07c9 AC060000 		.4byte	.LVL151-.Ltext0
 6189 07cd 0A00     		.2byte	0xa
 6190 07cf 76       		.byte	0x76
 6191 07d0 00       		.sleb128 0
 6192 07d1 35       		.byte	0x35
 6193 07d2 24       		.byte	0x24
 6194 07d3 74       		.byte	0x74
 6195 07d4 00       		.sleb128 0
 6196 07d5 22       		.byte	0x22
 6197 07d6 23       		.byte	0x23
 6198 07d7 28       		.uleb128 0x28
 6199 07d8 9F       		.byte	0x9f
 6200 07d9 DC060000 		.4byte	.LVL154-.Ltext0
 6201 07dd 5A070000 		.4byte	.LVL162-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 152


 6202 07e1 0B00     		.2byte	0xb
 6203 07e3 76       		.byte	0x76
 6204 07e4 00       		.sleb128 0
 6205 07e5 35       		.byte	0x35
 6206 07e6 24       		.byte	0x24
 6207 07e7 74       		.byte	0x74
 6208 07e8 00       		.sleb128 0
 6209 07e9 22       		.byte	0x22
 6210 07ea 23       		.byte	0x23
 6211 07eb A802     		.uleb128 0x128
 6212 07ed 9F       		.byte	0x9f
 6213 07ee 00000000 		.4byte	0
 6214 07f2 00000000 		.4byte	0
 6215              	.LLST46:
 6216 07f6 46060000 		.4byte	.LVL145-.Ltext0
 6217 07fa 86060000 		.4byte	.LVL147-.Ltext0
 6218 07fe 0100     		.2byte	0x1
 6219 0800 55       		.byte	0x55
 6220 0801 02070000 		.4byte	.LVL155-.Ltext0
 6221 0805 32070000 		.4byte	.LVL159-.Ltext0
 6222 0809 0100     		.2byte	0x1
 6223 080b 55       		.byte	0x55
 6224 080c 42070000 		.4byte	.LVL160-.Ltext0
 6225 0810 5A070000 		.4byte	.LVL162-.Ltext0
 6226 0814 0100     		.2byte	0x1
 6227 0816 55       		.byte	0x55
 6228 0817 00000000 		.4byte	0
 6229 081b 00000000 		.4byte	0
 6230              	.LLST47:
 6231 081f 86040000 		.4byte	.LVL108-.Ltext0
 6232 0823 94040000 		.4byte	.LVL109-.Ltext0
 6233 0827 0100     		.2byte	0x1
 6234 0829 51       		.byte	0x51
 6235 082a FC050000 		.4byte	.LVL139-.Ltext0
 6236 082e 22060000 		.4byte	.LVL144-.Ltext0
 6237 0832 0100     		.2byte	0x1
 6238 0834 51       		.byte	0x51
 6239 0835 00000000 		.4byte	0
 6240 0839 00000000 		.4byte	0
 6241              	.LLST48:
 6242 083d F2040000 		.4byte	.LVL115-.Ltext0
 6243 0841 FC040000 		.4byte	.LVL116-.Ltext0
 6244 0845 0100     		.2byte	0x1
 6245 0847 53       		.byte	0x53
 6246 0848 3C050000 		.4byte	.LVL121-.Ltext0
 6247 084c 42050000 		.4byte	.LVL122-.Ltext0
 6248 0850 0100     		.2byte	0x1
 6249 0852 53       		.byte	0x53
 6250 0853 04060000 		.4byte	.LVL140-.Ltext0
 6251 0857 60070000 		.4byte	.LVL164-.Ltext0
 6252 085b 0100     		.2byte	0x1
 6253 085d 58       		.byte	0x58
 6254 085e 00000000 		.4byte	0
 6255 0862 00000000 		.4byte	0
 6256              	.LLST49:
 6257 0866 86040000 		.4byte	.LVL108-.Ltext0
 6258 086a 94040000 		.4byte	.LVL109-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 153


 6259 086e 0500     		.2byte	0x5
 6260 0870 71       		.byte	0x71
 6261 0871 00       		.sleb128 0
 6262 0872 3F       		.byte	0x3f
 6263 0873 1A       		.byte	0x1a
 6264 0874 9F       		.byte	0x9f
 6265 0875 FC050000 		.4byte	.LVL139-.Ltext0
 6266 0879 22060000 		.4byte	.LVL144-.Ltext0
 6267 087d 0500     		.2byte	0x5
 6268 087f 71       		.byte	0x71
 6269 0880 00       		.sleb128 0
 6270 0881 3F       		.byte	0x3f
 6271 0882 1A       		.byte	0x1a
 6272 0883 9F       		.byte	0x9f
 6273 0884 00000000 		.4byte	0
 6274 0888 00000000 		.4byte	0
 6275              	.LLST50:
 6276 088c 98040000 		.4byte	.LVL110-.Ltext0
 6277 0890 9C040000 		.4byte	.LVL111-.Ltext0
 6278 0894 0700     		.2byte	0x7
 6279 0896 73       		.byte	0x73
 6280 0897 00       		.sleb128 0
 6281 0898 0B       		.byte	0xb
 6282 0899 0F8F     		.2byte	0x8f0f
 6283 089b 1A       		.byte	0x1a
 6284 089c 9F       		.byte	0x9f
 6285 089d 00000000 		.4byte	0
 6286 08a1 00000000 		.4byte	0
 6287              	.LLST51:
 6288 08a5 28050000 		.4byte	.LVL118-.Ltext0
 6289 08a9 2C050000 		.4byte	.LVL119-.Ltext0
 6290 08ad 0700     		.2byte	0x7
 6291 08af 73       		.byte	0x73
 6292 08b0 00       		.sleb128 0
 6293 08b1 0A       		.byte	0xa
 6294 08b2 8F0F     		.2byte	0xf8f
 6295 08b4 1A       		.byte	0x1a
 6296 08b5 9F       		.byte	0x9f
 6297 08b6 00000000 		.4byte	0
 6298 08ba 00000000 		.4byte	0
 6299              	.LLST52:
 6300 08be 42050000 		.4byte	.LVL122-.Ltext0
 6301 08c2 46050000 		.4byte	.LVL123-.Ltext0
 6302 08c6 0700     		.2byte	0x7
 6303 08c8 73       		.byte	0x73
 6304 08c9 00       		.sleb128 0
 6305 08ca 0A       		.byte	0xa
 6306 08cb 8F0F     		.2byte	0xf8f
 6307 08cd 1A       		.byte	0x1a
 6308 08ce 9F       		.byte	0x9f
 6309 08cf 00000000 		.4byte	0
 6310 08d3 00000000 		.4byte	0
 6311              	.LLST53:
 6312 08d7 96050000 		.4byte	.LVL126-.Ltext0
 6313 08db A4050000 		.4byte	.LVL127-.Ltext0
 6314 08df 0100     		.2byte	0x1
 6315 08e1 51       		.byte	0x51
ARM GAS  /tmp/ccq2vSAC.s 			page 154


 6316 08e2 A4050000 		.4byte	.LVL127-.Ltext0
 6317 08e6 BE050000 		.4byte	.LVL128-.Ltext0
 6318 08ea 0A00     		.2byte	0xa
 6319 08ec 73       		.byte	0x73
 6320 08ed 00       		.sleb128 0
 6321 08ee 0A       		.byte	0xa
 6322 08ef FFFF     		.2byte	0xffff
 6323 08f1 1A       		.byte	0x1a
 6324 08f2 71       		.byte	0x71
 6325 08f3 00       		.sleb128 0
 6326 08f4 22       		.byte	0x22
 6327 08f5 9F       		.byte	0x9f
 6328 08f6 DA050000 		.4byte	.LVL132-.Ltext0
 6329 08fa FC050000 		.4byte	.LVL139-.Ltext0
 6330 08fe 0A00     		.2byte	0xa
 6331 0900 73       		.byte	0x73
 6332 0901 00       		.sleb128 0
 6333 0902 0A       		.byte	0xa
 6334 0903 FFFF     		.2byte	0xffff
 6335 0905 1A       		.byte	0x1a
 6336 0906 71       		.byte	0x71
 6337 0907 00       		.sleb128 0
 6338 0908 22       		.byte	0x22
 6339 0909 9F       		.byte	0x9f
 6340 090a 00000000 		.4byte	0
 6341 090e 00000000 		.4byte	0
 6342              	.LLST54:
 6343 0912 A4050000 		.4byte	.LVL127-.Ltext0
 6344 0916 BE050000 		.4byte	.LVL128-.Ltext0
 6345 091a 0600     		.2byte	0x6
 6346 091c 70       		.byte	0x70
 6347 091d 00       		.sleb128 0
 6348 091e 73       		.byte	0x73
 6349 091f 00       		.sleb128 0
 6350 0920 22       		.byte	0x22
 6351 0921 9F       		.byte	0x9f
 6352 0922 DA050000 		.4byte	.LVL132-.Ltext0
 6353 0926 FC050000 		.4byte	.LVL139-.Ltext0
 6354 092a 0600     		.2byte	0x6
 6355 092c 70       		.byte	0x70
 6356 092d 00       		.sleb128 0
 6357 092e 73       		.byte	0x73
 6358 092f 00       		.sleb128 0
 6359 0930 22       		.byte	0x22
 6360 0931 9F       		.byte	0x9f
 6361 0932 00000000 		.4byte	0
 6362 0936 00000000 		.4byte	0
 6363              	.LLST55:
 6364 093a E0050000 		.4byte	.LVL133-.Ltext0
 6365 093e E8050000 		.4byte	.LVL135-.Ltext0
 6366 0942 0100     		.2byte	0x1
 6367 0944 52       		.byte	0x52
 6368 0945 EE050000 		.4byte	.LVL136-.Ltext0
 6369 0949 FA050000 		.4byte	.LVL138-.Ltext0
 6370 094d 0100     		.2byte	0x1
 6371 094f 52       		.byte	0x52
 6372 0950 00000000 		.4byte	0
ARM GAS  /tmp/ccq2vSAC.s 			page 155


 6373 0954 00000000 		.4byte	0
 6374              	.LLST56:
 6375 0958 CA050000 		.4byte	.LVL129-.Ltext0
 6376 095c CE050000 		.4byte	.LVL130-.Ltext0
 6377 0960 0700     		.2byte	0x7
 6378 0962 73       		.byte	0x73
 6379 0963 00       		.sleb128 0
 6380 0964 0A       		.byte	0xa
 6381 0965 0030     		.2byte	0x3000
 6382 0967 27       		.byte	0x27
 6383 0968 9F       		.byte	0x9f
 6384 0969 CE050000 		.4byte	.LVL130-.Ltext0
 6385 096d D2050000 		.4byte	.LVL131-.Ltext0
 6386 0971 0B00     		.2byte	0xb
 6387 0973 73       		.byte	0x73
 6388 0974 00       		.sleb128 0
 6389 0975 0A       		.byte	0xa
 6390 0976 0030     		.2byte	0x3000
 6391 0978 27       		.byte	0x27
 6392 0979 0A       		.byte	0xa
 6393 097a 0030     		.2byte	0x3000
 6394 097c 27       		.byte	0x27
 6395 097d 9F       		.byte	0x9f
 6396 097e 00000000 		.4byte	0
 6397 0982 00000000 		.4byte	0
 6398              	.LLST57:
 6399 0986 0E060000 		.4byte	.LVL141-.Ltext0
 6400 098a 14060000 		.4byte	.LVL142-.Ltext0
 6401 098e 0700     		.2byte	0x7
 6402 0990 73       		.byte	0x73
 6403 0991 00       		.sleb128 0
 6404 0992 0A       		.byte	0xa
 6405 0993 8F0F     		.2byte	0xf8f
 6406 0995 1A       		.byte	0x1a
 6407 0996 9F       		.byte	0x9f
 6408 0997 00000000 		.4byte	0
 6409 099b 00000000 		.4byte	0
 6410              	.LLST58:
 6411 099f 98060000 		.4byte	.LVL149-.Ltext0
 6412 09a3 9C060000 		.4byte	.LVL150-.Ltext0
 6413 09a7 0700     		.2byte	0x7
 6414 09a9 72       		.byte	0x72
 6415 09aa 00       		.sleb128 0
 6416 09ab 0B       		.byte	0xb
 6417 09ac 0F8F     		.2byte	0x8f0f
 6418 09ae 1A       		.byte	0x1a
 6419 09af 9F       		.byte	0x9f
 6420 09b0 00000000 		.4byte	0
 6421 09b4 00000000 		.4byte	0
 6422              	.LLST59:
 6423 09b8 20070000 		.4byte	.LVL157-.Ltext0
 6424 09bc 24070000 		.4byte	.LVL158-.Ltext0
 6425 09c0 0700     		.2byte	0x7
 6426 09c2 73       		.byte	0x73
 6427 09c3 00       		.sleb128 0
 6428 09c4 0B       		.byte	0xb
 6429 09c5 8F8F     		.2byte	0x8f8f
ARM GAS  /tmp/ccq2vSAC.s 			page 156


 6430 09c7 1A       		.byte	0x1a
 6431 09c8 9F       		.byte	0x9f
 6432 09c9 00000000 		.4byte	0
 6433 09cd 00000000 		.4byte	0
 6434              	.LLST3:
 6435 09d1 EE000000 		.4byte	.LFB69-.Ltext0
 6436 09d5 F4000000 		.4byte	.LCFI3-.Ltext0
 6437 09d9 0200     		.2byte	0x2
 6438 09db 7D       		.byte	0x7d
 6439 09dc 00       		.sleb128 0
 6440 09dd F4000000 		.4byte	.LCFI3-.Ltext0
 6441 09e1 1C010000 		.4byte	.LFE69-.Ltext0
 6442 09e5 0200     		.2byte	0x2
 6443 09e7 7D       		.byte	0x7d
 6444 09e8 08       		.sleb128 8
 6445 09e9 00000000 		.4byte	0
 6446 09ed 00000000 		.4byte	0
 6447              	.LLST4:
 6448 09f1 EE000000 		.4byte	.LVL18-.Ltext0
 6449 09f5 03010000 		.4byte	.LVL19-1-.Ltext0
 6450 09f9 0100     		.2byte	0x1
 6451 09fb 50       		.byte	0x50
 6452 09fc 03010000 		.4byte	.LVL19-1-.Ltext0
 6453 0a00 18010000 		.4byte	.LVL22-.Ltext0
 6454 0a04 0100     		.2byte	0x1
 6455 0a06 54       		.byte	0x54
 6456 0a07 18010000 		.4byte	.LVL22-.Ltext0
 6457 0a0b 1A010000 		.4byte	.LVL23-.Ltext0
 6458 0a0f 0100     		.2byte	0x1
 6459 0a11 50       		.byte	0x50
 6460 0a12 1A010000 		.4byte	.LVL23-.Ltext0
 6461 0a16 1C010000 		.4byte	.LFE69-.Ltext0
 6462 0a1a 0100     		.2byte	0x1
 6463 0a1c 54       		.byte	0x54
 6464 0a1d 00000000 		.4byte	0
 6465 0a21 00000000 		.4byte	0
 6466              	.LLST8:
 6467 0a25 5A010000 		.4byte	.LFB66-.Ltext0
 6468 0a29 5C010000 		.4byte	.LCFI5-.Ltext0
 6469 0a2d 0200     		.2byte	0x2
 6470 0a2f 7D       		.byte	0x7d
 6471 0a30 00       		.sleb128 0
 6472 0a31 5C010000 		.4byte	.LCFI5-.Ltext0
 6473 0a35 7C010000 		.4byte	.LFE66-.Ltext0
 6474 0a39 0200     		.2byte	0x2
 6475 0a3b 7D       		.byte	0x7d
 6476 0a3c 08       		.sleb128 8
 6477 0a3d 00000000 		.4byte	0
 6478 0a41 00000000 		.4byte	0
 6479              	.LLST9:
 6480 0a45 5A010000 		.4byte	.LVL32-.Ltext0
 6481 0a49 69010000 		.4byte	.LVL33-1-.Ltext0
 6482 0a4d 0100     		.2byte	0x1
 6483 0a4f 50       		.byte	0x50
 6484 0a50 69010000 		.4byte	.LVL33-1-.Ltext0
 6485 0a54 78010000 		.4byte	.LVL35-.Ltext0
 6486 0a58 0100     		.2byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 157


 6487 0a5a 54       		.byte	0x54
 6488 0a5b 78010000 		.4byte	.LVL35-.Ltext0
 6489 0a5f 7A010000 		.4byte	.LVL36-.Ltext0
 6490 0a63 0100     		.2byte	0x1
 6491 0a65 50       		.byte	0x50
 6492 0a66 7A010000 		.4byte	.LVL36-.Ltext0
 6493 0a6a 7C010000 		.4byte	.LFE66-.Ltext0
 6494 0a6e 0100     		.2byte	0x1
 6495 0a70 54       		.byte	0x54
 6496 0a71 00000000 		.4byte	0
 6497 0a75 00000000 		.4byte	0
 6498              	.LLST0:
 6499 0a79 02000000 		.4byte	.LFB65-.Ltext0
 6500 0a7d 04000000 		.4byte	.LCFI0-.Ltext0
 6501 0a81 0200     		.2byte	0x2
 6502 0a83 7D       		.byte	0x7d
 6503 0a84 00       		.sleb128 0
 6504 0a85 04000000 		.4byte	.LCFI0-.Ltext0
 6505 0a89 08000000 		.4byte	.LCFI1-.Ltext0
 6506 0a8d 0200     		.2byte	0x2
 6507 0a8f 7D       		.byte	0x7d
 6508 0a90 14       		.sleb128 20
 6509 0a91 08000000 		.4byte	.LCFI1-.Ltext0
 6510 0a95 EA000000 		.4byte	.LCFI2-.Ltext0
 6511 0a99 0200     		.2byte	0x2
 6512 0a9b 7D       		.byte	0x7d
 6513 0a9c 30       		.sleb128 48
 6514 0a9d EA000000 		.4byte	.LCFI2-.Ltext0
 6515 0aa1 EC000000 		.4byte	.LFE65-.Ltext0
 6516 0aa5 0200     		.2byte	0x2
 6517 0aa7 7D       		.byte	0x7d
 6518 0aa8 14       		.sleb128 20
 6519 0aa9 00000000 		.4byte	0
 6520 0aad 00000000 		.4byte	0
 6521              	.LLST1:
 6522 0ab1 02000000 		.4byte	.LVL0-.Ltext0
 6523 0ab5 1B000000 		.4byte	.LVL1-1-.Ltext0
 6524 0ab9 0100     		.2byte	0x1
 6525 0abb 50       		.byte	0x50
 6526 0abc 1B000000 		.4byte	.LVL1-1-.Ltext0
 6527 0ac0 EC000000 		.4byte	.LFE65-.Ltext0
 6528 0ac4 0100     		.2byte	0x1
 6529 0ac6 54       		.byte	0x54
 6530 0ac7 00000000 		.4byte	0
 6531 0acb 00000000 		.4byte	0
 6532              	.LLST2:
 6533 0acf 5C000000 		.4byte	.LVL4-.Ltext0
 6534 0ad3 64000000 		.4byte	.LVL5-.Ltext0
 6535 0ad7 0200     		.2byte	0x2
 6536 0ad9 30       		.byte	0x30
 6537 0ada 9F       		.byte	0x9f
 6538 0adb 66000000 		.4byte	.LVL6-.Ltext0
 6539 0adf 72000000 		.4byte	.LVL7-.Ltext0
 6540 0ae3 0100     		.2byte	0x1
 6541 0ae5 53       		.byte	0x53
 6542 0ae6 74000000 		.4byte	.LVL8-.Ltext0
 6543 0aea 80000000 		.4byte	.LVL9-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 158


 6544 0aee 0100     		.2byte	0x1
 6545 0af0 53       		.byte	0x53
 6546 0af1 9E000000 		.4byte	.LVL11-.Ltext0
 6547 0af5 B6000000 		.4byte	.LVL12-.Ltext0
 6548 0af9 0100     		.2byte	0x1
 6549 0afb 53       		.byte	0x53
 6550 0afc B6000000 		.4byte	.LVL12-.Ltext0
 6551 0b00 B8000000 		.4byte	.LVL13-.Ltext0
 6552 0b04 0100     		.2byte	0x1
 6553 0b06 50       		.byte	0x50
 6554 0b07 B8000000 		.4byte	.LVL13-.Ltext0
 6555 0b0b C2000000 		.4byte	.LVL14-.Ltext0
 6556 0b0f 0100     		.2byte	0x1
 6557 0b11 53       		.byte	0x53
 6558 0b12 C2000000 		.4byte	.LVL14-.Ltext0
 6559 0b16 D6000000 		.4byte	.LVL15-.Ltext0
 6560 0b1a 0300     		.2byte	0x3
 6561 0b1c 76       		.byte	0x76
 6562 0b1d A802     		.sleb128 296
 6563 0b1f D6000000 		.4byte	.LVL15-.Ltext0
 6564 0b23 D8000000 		.4byte	.LVL16-.Ltext0
 6565 0b27 0100     		.2byte	0x1
 6566 0b29 52       		.byte	0x52
 6567 0b2a 00000000 		.4byte	0
 6568 0b2e 00000000 		.4byte	0
 6569              	.LLST5:
 6570 0b32 1C010000 		.4byte	.LFB70-.Ltext0
 6571 0b36 22010000 		.4byte	.LCFI4-.Ltext0
 6572 0b3a 0200     		.2byte	0x2
 6573 0b3c 7D       		.byte	0x7d
 6574 0b3d 00       		.sleb128 0
 6575 0b3e 22010000 		.4byte	.LCFI4-.Ltext0
 6576 0b42 5A010000 		.4byte	.LFE70-.Ltext0
 6577 0b46 0200     		.2byte	0x2
 6578 0b48 7D       		.byte	0x7d
 6579 0b49 10       		.sleb128 16
 6580 0b4a 00000000 		.4byte	0
 6581 0b4e 00000000 		.4byte	0
 6582              	.LLST6:
 6583 0b52 1C010000 		.4byte	.LVL24-.Ltext0
 6584 0b56 30010000 		.4byte	.LVL25-.Ltext0
 6585 0b5a 0100     		.2byte	0x1
 6586 0b5c 50       		.byte	0x50
 6587 0b5d 30010000 		.4byte	.LVL25-.Ltext0
 6588 0b61 56010000 		.4byte	.LVL31-.Ltext0
 6589 0b65 0100     		.2byte	0x1
 6590 0b67 54       		.byte	0x54
 6591 0b68 56010000 		.4byte	.LVL31-.Ltext0
 6592 0b6c 5A010000 		.4byte	.LFE70-.Ltext0
 6593 0b70 0100     		.2byte	0x1
 6594 0b72 50       		.byte	0x50
 6595 0b73 00000000 		.4byte	0
 6596 0b77 00000000 		.4byte	0
 6597              	.LLST7:
 6598 0b7b 4A010000 		.4byte	.LVL28-.Ltext0
 6599 0b7f 54010000 		.4byte	.LVL30-.Ltext0
 6600 0b83 0100     		.2byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 159


 6601 0b85 54       		.byte	0x54
 6602 0b86 00000000 		.4byte	0
 6603 0b8a 00000000 		.4byte	0
 6604              	.LLST14:
 6605 0b8e E4010000 		.4byte	.LFB85-.Ltext0
 6606 0b92 EA010000 		.4byte	.LCFI8-.Ltext0
 6607 0b96 0200     		.2byte	0x2
 6608 0b98 7D       		.byte	0x7d
 6609 0b99 00       		.sleb128 0
 6610 0b9a EA010000 		.4byte	.LCFI8-.Ltext0
 6611 0b9e 0C020000 		.4byte	.LFE85-.Ltext0
 6612 0ba2 0200     		.2byte	0x2
 6613 0ba4 7D       		.byte	0x7d
 6614 0ba5 08       		.sleb128 8
 6615 0ba6 00000000 		.4byte	0
 6616 0baa 00000000 		.4byte	0
 6617              	.LLST15:
 6618 0bae E4010000 		.4byte	.LVL49-.Ltext0
 6619 0bb2 FC010000 		.4byte	.LVL51-.Ltext0
 6620 0bb6 0100     		.2byte	0x1
 6621 0bb8 50       		.byte	0x50
 6622 0bb9 FC010000 		.4byte	.LVL51-.Ltext0
 6623 0bbd 08020000 		.4byte	.LVL54-.Ltext0
 6624 0bc1 0100     		.2byte	0x1
 6625 0bc3 54       		.byte	0x54
 6626 0bc4 08020000 		.4byte	.LVL54-.Ltext0
 6627 0bc8 0A020000 		.4byte	.LVL55-.Ltext0
 6628 0bcc 0100     		.2byte	0x1
 6629 0bce 50       		.byte	0x50
 6630 0bcf 0A020000 		.4byte	.LVL55-.Ltext0
 6631 0bd3 0C020000 		.4byte	.LFE85-.Ltext0
 6632 0bd7 0100     		.2byte	0x1
 6633 0bd9 54       		.byte	0x54
 6634 0bda 00000000 		.4byte	0
 6635 0bde 00000000 		.4byte	0
 6636              	.LLST16:
 6637 0be2 E4010000 		.4byte	.LVL49-.Ltext0
 6638 0be6 FF010000 		.4byte	.LVL52-1-.Ltext0
 6639 0bea 0100     		.2byte	0x1
 6640 0bec 51       		.byte	0x51
 6641 0bed FF010000 		.4byte	.LVL52-1-.Ltext0
 6642 0bf1 08020000 		.4byte	.LVL54-.Ltext0
 6643 0bf5 0400     		.2byte	0x4
 6644 0bf7 F3       		.byte	0xf3
 6645 0bf8 01       		.uleb128 0x1
 6646 0bf9 51       		.byte	0x51
 6647 0bfa 9F       		.byte	0x9f
 6648 0bfb 08020000 		.4byte	.LVL54-.Ltext0
 6649 0bff 0C020000 		.4byte	.LFE85-.Ltext0
 6650 0c03 0100     		.2byte	0x1
 6651 0c05 51       		.byte	0x51
 6652 0c06 00000000 		.4byte	0
 6653 0c0a 00000000 		.4byte	0
 6654              	.LLST17:
 6655 0c0e F0010000 		.4byte	.LVL50-.Ltext0
 6656 0c12 FF010000 		.4byte	.LVL52-1-.Ltext0
 6657 0c16 0100     		.2byte	0x1
ARM GAS  /tmp/ccq2vSAC.s 			page 160


 6658 0c18 51       		.byte	0x51
 6659 0c19 FF010000 		.4byte	.LVL52-1-.Ltext0
 6660 0c1d 06020000 		.4byte	.LVL53-.Ltext0
 6661 0c21 0400     		.2byte	0x4
 6662 0c23 F3       		.byte	0xf3
 6663 0c24 01       		.uleb128 0x1
 6664 0c25 51       		.byte	0x51
 6665 0c26 9F       		.byte	0x9f
 6666 0c27 00000000 		.4byte	0
 6667 0c2b 00000000 		.4byte	0
 6668              	.LLST18:
 6669 0c2f F0010000 		.4byte	.LVL50-.Ltext0
 6670 0c33 FC010000 		.4byte	.LVL51-.Ltext0
 6671 0c37 0100     		.2byte	0x1
 6672 0c39 50       		.byte	0x50
 6673 0c3a FC010000 		.4byte	.LVL51-.Ltext0
 6674 0c3e 06020000 		.4byte	.LVL53-.Ltext0
 6675 0c42 0100     		.2byte	0x1
 6676 0c44 54       		.byte	0x54
 6677 0c45 00000000 		.4byte	0
 6678 0c49 00000000 		.4byte	0
 6679              		.section	.debug_aranges,"",%progbits
 6680 0000 1C000000 		.4byte	0x1c
 6681 0004 0200     		.2byte	0x2
 6682 0006 00000000 		.4byte	.Ldebug_info0
 6683 000a 04       		.byte	0x4
 6684 000b 00       		.byte	0
 6685 000c 0000     		.2byte	0
 6686 000e 0000     		.2byte	0
 6687 0010 00000000 		.4byte	.Ltext0
 6688 0014 8E080000 		.4byte	.Letext0-.Ltext0
 6689 0018 00000000 		.4byte	0
 6690 001c 00000000 		.4byte	0
 6691              		.section	.debug_ranges,"",%progbits
 6692              	.Ldebug_ranges0:
 6693 0000 8E040000 		.4byte	.LBB23-.Ltext0
 6694 0004 90040000 		.4byte	.LBE23-.Ltext0
 6695 0008 94040000 		.4byte	.LBB24-.Ltext0
 6696 000c 96040000 		.4byte	.LBE24-.Ltext0
 6697 0010 98040000 		.4byte	.LBB25-.Ltext0
 6698 0014 A2040000 		.4byte	.LBE25-.Ltext0
 6699 0018 00000000 		.4byte	0
 6700 001c 00000000 		.4byte	0
 6701 0020 22050000 		.4byte	.LBB26-.Ltext0
 6702 0024 24050000 		.4byte	.LBE26-.Ltext0
 6703 0028 26050000 		.4byte	.LBB27-.Ltext0
 6704 002c 36050000 		.4byte	.LBE27-.Ltext0
 6705 0030 00000000 		.4byte	0
 6706 0034 00000000 		.4byte	0
 6707 0038 94050000 		.4byte	.LBB29-.Ltext0
 6708 003c BC050000 		.4byte	.LBE29-.Ltext0
 6709 0040 DA050000 		.4byte	.LBB34-.Ltext0
 6710 0044 FC050000 		.4byte	.LBE34-.Ltext0
 6711 0048 00000000 		.4byte	0
 6712 004c 00000000 		.4byte	0
 6713 0050 96050000 		.4byte	.LBB30-.Ltext0
 6714 0054 9A050000 		.4byte	.LBE30-.Ltext0
ARM GAS  /tmp/ccq2vSAC.s 			page 161


 6715 0058 A4050000 		.4byte	.LBB31-.Ltext0
 6716 005c BC050000 		.4byte	.LBE31-.Ltext0
 6717 0060 DA050000 		.4byte	.LBB32-.Ltext0
 6718 0064 FC050000 		.4byte	.LBE32-.Ltext0
 6719 0068 00000000 		.4byte	0
 6720 006c 00000000 		.4byte	0
 6721 0070 0A060000 		.4byte	.LBB35-.Ltext0
 6722 0074 0E060000 		.4byte	.LBE35-.Ltext0
 6723 0078 10060000 		.4byte	.LBB36-.Ltext0
 6724 007c 20060000 		.4byte	.LBE36-.Ltext0
 6725 0080 00000000 		.4byte	0
 6726 0084 00000000 		.4byte	0
 6727 0088 8E060000 		.4byte	.LBB37-.Ltext0
 6728 008c 90060000 		.4byte	.LBE37-.Ltext0
 6729 0090 92060000 		.4byte	.LBB38-.Ltext0
 6730 0094 A4060000 		.4byte	.LBE38-.Ltext0
 6731 0098 60070000 		.4byte	.LBB40-.Ltext0
 6732 009c 68070000 		.4byte	.LBE40-.Ltext0
 6733 00a0 00000000 		.4byte	0
 6734 00a4 00000000 		.4byte	0
 6735 00a8 12070000 		.4byte	.LBB39-.Ltext0
 6736 00ac 32070000 		.4byte	.LBE39-.Ltext0
 6737 00b0 68070000 		.4byte	.LBB41-.Ltext0
 6738 00b4 7C070000 		.4byte	.LBE41-.Ltext0
 6739 00b8 00000000 		.4byte	0
 6740 00bc 00000000 		.4byte	0
 6741              		.section	.debug_line,"",%progbits
 6742              	.Ldebug_line0:
 6743 0000 A9040000 		.section	.debug_str,"MS",%progbits,1
 6743      02005601 
 6743      00000201 
 6743      FB0E0D00 
 6743      01010101 
 6744              	.LASF125:
 6745 0000 68706364 		.ascii	"hpcd\000"
 6745      00
 6746              	.LASF115:
 6747 0005 636F756E 		.ascii	"count\000"
 6747      7400
 6748              	.LASF84:
 6749 000b 48414C5F 		.ascii	"HAL_PCD_STATE_BUSY\000"
 6749      5043445F 
 6749      53544154 
 6749      455F4255 
 6749      535900
 6750              	.LASF28:
 6751 001e 45503352 		.ascii	"EP3R\000"
 6751      00
 6752              	.LASF24:
 6753 0023 45503152 		.ascii	"EP1R\000"
 6753      00
 6754              	.LASF112:
 6755 0028 48414C5F 		.ascii	"HAL_TickFreqTypeDef\000"
 6755      5469636B 
 6755      46726571 
 6755      54797065 
 6755      44656600 
ARM GAS  /tmp/ccq2vSAC.s 			page 162


 6756              	.LASF167:
 6757 003c 5553425F 		.ascii	"USB_EP0_OutStart\000"
 6757      4550305F 
 6757      4F757453 
 6757      74617274 
 6757      00
 6758              	.LASF127:
 6759 004d 48414C5F 		.ascii	"HAL_PCD_EP_Flush\000"
 6759      5043445F 
 6759      45505F46 
 6759      6C757368 
 6759      00
 6760              	.LASF94:
 6761 005e 5043445F 		.ascii	"PCD_EPTypeDef\000"
 6761      45505479 
 6761      70654465 
 6761      6600
 6762              	.LASF45:
 6763 006c 42544142 		.ascii	"BTABLE\000"
 6763      4C4500
 6764              	.LASF152:
 6765 0073 48414C5F 		.ascii	"HAL_PCD_DataInStageCallback\000"
 6765      5043445F 
 6765      44617461 
 6765      496E5374 
 6765      61676543 
 6766              	.LASF3:
 6767 008f 5F5F7569 		.ascii	"__uint8_t\000"
 6767      6E74385F 
 6767      7400
 6768              	.LASF51:
 6769 0099 48414C5F 		.ascii	"HAL_BUSY\000"
 6769      42555359 
 6769      00
 6770              	.LASF21:
 6771 00a2 41504250 		.ascii	"APBPrescTable\000"
 6771      72657363 
 6771      5461626C 
 6771      6500
 6772              	.LASF69:
 6773 00b0 74797065 		.ascii	"type\000"
 6773      00
 6774              	.LASF98:
 6775 00b5 494E5F65 		.ascii	"IN_ep\000"
 6775      7000
 6776              	.LASF95:
 6777 00bb 496E7374 		.ascii	"Instance\000"
 6777      616E6365 
 6777      00
 6778              	.LASF11:
 6779 00c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 6779      206C6F6E 
 6779      6720756E 
 6779      7369676E 
 6779      65642069 
 6780              	.LASF90:
 6781 00db 4C504D5F 		.ascii	"LPM_L3\000"
ARM GAS  /tmp/ccq2vSAC.s 			page 163


 6781      4C3300
 6782              	.LASF172:
 6783 00e2 5553425F 		.ascii	"USB_DevDisconnect\000"
 6783      44657644 
 6783      6973636F 
 6783      6E6E6563 
 6783      7400
 6784              	.LASF168:
 6785 00f4 5553425F 		.ascii	"USB_EPStartXfer\000"
 6785      45505374 
 6785      61727458 
 6785      66657200 
 6786              	.LASF173:
 6787 0104 5553425F 		.ascii	"USB_DevConnect\000"
 6787      44657643 
 6787      6F6E6E65 
 6787      637400
 6788              	.LASF76:
 6789 0113 6D617870 		.ascii	"maxpacket\000"
 6789      61636B65 
 6789      7400
 6790              	.LASF181:
 6791 011d 5553425F 		.ascii	"USB_StopDevice\000"
 6791      53746F70 
 6791      44657669 
 6791      636500
 6792              	.LASF147:
 6793 012c 48414C5F 		.ascii	"HAL_PCD_ResumeCallback\000"
 6793      5043445F 
 6793      52657375 
 6793      6D654361 
 6793      6C6C6261 
 6794              	.LASF155:
 6795 0143 48414C5F 		.ascii	"HAL_PCD_Stop\000"
 6795      5043445F 
 6795      53746F70 
 6795      00
 6796              	.LASF58:
 6797 0150 6465765F 		.ascii	"dev_endpoints\000"
 6797      656E6470 
 6797      6F696E74 
 6797      7300
 6798              	.LASF67:
 6799 015e 69735F69 		.ascii	"is_in\000"
 6799      6E00
 6800              	.LASF30:
 6801 0164 45503452 		.ascii	"EP4R\000"
 6801      00
 6802              	.LASF103:
 6803 0169 53657475 		.ascii	"Setup\000"
 6803      7000
 6804              	.LASF10:
 6805 016f 6C6F6E67 		.ascii	"long long int\000"
 6805      206C6F6E 
 6805      6720696E 
 6805      7400
 6806              	.LASF0:
ARM GAS  /tmp/ccq2vSAC.s 			page 164


 6807 017d 7369676E 		.ascii	"signed char\000"
 6807      65642063 
 6807      68617200 
 6808              	.LASF26:
 6809 0189 45503252 		.ascii	"EP2R\000"
 6809      00
 6810              	.LASF175:
 6811 018e 5553425F 		.ascii	"USB_ReadInterrupts\000"
 6811      52656164 
 6811      496E7465 
 6811      72727570 
 6811      747300
 6812              	.LASF104:
 6813 01a1 4C504D5F 		.ascii	"LPM_State\000"
 6813      53746174 
 6813      6500
 6814              	.LASF40:
 6815 01ab 49535452 		.ascii	"ISTR\000"
 6815      00
 6816              	.LASF56:
 6817 01b0 48414C5F 		.ascii	"HAL_LockTypeDef\000"
 6817      4C6F636B 
 6817      54797065 
 6817      44656600 
 6818              	.LASF164:
 6819 01c0 5553425F 		.ascii	"USB_FlushRxFifo\000"
 6819      466C7573 
 6819      68527846 
 6819      69666F00 
 6820              	.LASF7:
 6821 01d0 6C6F6E67 		.ascii	"long int\000"
 6821      20696E74 
 6821      00
 6822              	.LASF122:
 6823 01d9 5F774550 		.ascii	"_wEPVal\000"
 6823      56616C00 
 6824              	.LASF72:
 6825 01e1 706D6161 		.ascii	"pmaaddr0\000"
 6825      64647230 
 6825      00
 6826              	.LASF38:
 6827 01ea 434E5452 		.ascii	"CNTR\000"
 6827      00
 6828              	.LASF116:
 6829 01ef 77497374 		.ascii	"wIstr\000"
 6829      7200
 6830              	.LASF182:
 6831 01f5 5553425F 		.ascii	"USB_SetDevAddress\000"
 6831      53657444 
 6831      65764164 
 6831      64726573 
 6831      7300
 6832              	.LASF135:
 6833 0207 48414C5F 		.ascii	"HAL_PCD_EP_Close\000"
 6833      5043445F 
 6833      45505F43 
 6833      6C6F7365 
ARM GAS  /tmp/ccq2vSAC.s 			page 165


 6833      00
 6834              	.LASF79:
 6835 0218 78666572 		.ascii	"xfer_count\000"
 6835      5F636F75 
 6835      6E7400
 6836              	.LASF2:
 6837 0223 73686F72 		.ascii	"short int\000"
 6837      7420696E 
 6837      7400
 6838              	.LASF180:
 6839 022d 5553425F 		.ascii	"USB_DevInit\000"
 6839      44657649 
 6839      6E697400 
 6840              	.LASF14:
 6841 0239 75696E74 		.ascii	"uint16_t\000"
 6841      31365F74 
 6841      00
 6842              	.LASF131:
 6843 0242 48414C5F 		.ascii	"HAL_PCD_EP_Transmit\000"
 6843      5043445F 
 6843      45505F54 
 6843      72616E73 
 6843      6D697400 
 6844              	.LASF108:
 6845 0256 48414C5F 		.ascii	"HAL_TICK_FREQ_10HZ\000"
 6845      5449434B 
 6845      5F465245 
 6845      515F3130 
 6845      485A00
 6846              	.LASF114:
 6847 0269 75775469 		.ascii	"uwTickFreq\000"
 6847      636B4672 
 6847      657100
 6848              	.LASF78:
 6849 0274 78666572 		.ascii	"xfer_len\000"
 6849      5F6C656E 
 6849      00
 6850              	.LASF74:
 6851 027d 646F7562 		.ascii	"doublebuffer\000"
 6851      6C656275 
 6851      66666572 
 6851      00
 6852              	.LASF4:
 6853 028a 5F5F7569 		.ascii	"__uint16_t\000"
 6853      6E743136 
 6853      5F7400
 6854              	.LASF100:
 6855 0295 4C6F636B 		.ascii	"Lock\000"
 6855      00
 6856              	.LASF8:
 6857 029a 5F5F7569 		.ascii	"__uint32_t\000"
 6857      6E743332 
 6857      5F7400
 6858              	.LASF126:
 6859 02a5 48414C5F 		.ascii	"HAL_PCD_ActivateRemoteWakeup\000"
 6859      5043445F 
 6859      41637469 
ARM GAS  /tmp/ccq2vSAC.s 			page 166


 6859      76617465 
 6859      52656D6F 
 6860              	.LASF68:
 6861 02c2 69735F73 		.ascii	"is_stall\000"
 6861      74616C6C 
 6861      00
 6862              	.LASF145:
 6863 02cb 48414C5F 		.ascii	"HAL_PCD_ConnectCallback\000"
 6863      5043445F 
 6863      436F6E6E 
 6863      65637443 
 6863      616C6C62 
 6864              	.LASF178:
 6865 02e3 5553425F 		.ascii	"USB_CoreInit\000"
 6865      436F7265 
 6865      496E6974 
 6865      00
 6866              	.LASF107:
 6867 02f0 5043445F 		.ascii	"PCD_HandleTypeDef\000"
 6867      48616E64 
 6867      6C655479 
 6867      70654465 
 6867      6600
 6868              	.LASF52:
 6869 0302 48414C5F 		.ascii	"HAL_TIMEOUT\000"
 6869      54494D45 
 6869      4F555400 
 6870              	.LASF80:
 6871 030e 5553425F 		.ascii	"USB_EPTypeDef\000"
 6871      45505479 
 6871      70654465 
 6871      6600
 6872              	.LASF153:
 6873 031c 48414C5F 		.ascii	"HAL_PCD_DataOutStageCallback\000"
 6873      5043445F 
 6873      44617461 
 6873      4F757453 
 6873      74616765 
 6874              	.LASF12:
 6875 0339 756E7369 		.ascii	"unsigned int\000"
 6875      676E6564 
 6875      20696E74 
 6875      00
 6876              	.LASF183:
 6877 0346 474E5520 		.ascii	"GNU C11 6.3.1 20170620 -mcpu=cortex-m3 -mthumb -g -"
 6877      43313120 
 6877      362E332E 
 6877      31203230 
 6877      31373036 
 6878 0379 67647761 		.ascii	"gdwarf-2 -Os -fomit-frame-pointer\000"
 6878      72662D32 
 6878      202D4F73 
 6878      202D666F 
 6878      6D69742D 
 6879              	.LASF36:
 6880 039b 45503752 		.ascii	"EP7R\000"
 6880      00
ARM GAS  /tmp/ccq2vSAC.s 			page 167


 6881              	.LASF87:
 6882 03a0 4C504D5F 		.ascii	"LPM_L0\000"
 6882      4C3000
 6883              	.LASF88:
 6884 03a7 4C504D5F 		.ascii	"LPM_L1\000"
 6884      4C3100
 6885              	.LASF89:
 6886 03ae 4C504D5F 		.ascii	"LPM_L2\000"
 6886      4C3200
 6887              	.LASF133:
 6888 03b5 48414C5F 		.ascii	"HAL_PCD_EP_GetRxCount\000"
 6888      5043445F 
 6888      45505F47 
 6888      65745278 
 6888      436F756E 
 6889              	.LASF144:
 6890 03cb 65706E75 		.ascii	"epnum\000"
 6890      6D00
 6891              	.LASF171:
 6892 03d1 48414C5F 		.ascii	"HAL_PCDEx_SetConnectionState\000"
 6892      50434445 
 6892      785F5365 
 6892      74436F6E 
 6892      6E656374 
 6893              	.LASF9:
 6894 03ee 6C6F6E67 		.ascii	"long unsigned int\000"
 6894      20756E73 
 6894      69676E65 
 6894      6420696E 
 6894      7400
 6895              	.LASF110:
 6896 0400 48414C5F 		.ascii	"HAL_TICK_FREQ_1KHZ\000"
 6896      5449434B 
 6896      5F465245 
 6896      515F314B 
 6896      485A00
 6897              	.LASF156:
 6898 0413 48414C5F 		.ascii	"HAL_PCD_Start\000"
 6898      5043445F 
 6898      53746172 
 6898      7400
 6899              	.LASF49:
 6900 0421 48414C5F 		.ascii	"HAL_OK\000"
 6900      4F4B00
 6901              	.LASF82:
 6902 0428 48414C5F 		.ascii	"HAL_PCD_STATE_READY\000"
 6902      5043445F 
 6902      53544154 
 6902      455F5245 
 6902      41445900 
 6903              	.LASF61:
 6904 043c 7068795F 		.ascii	"phy_itface\000"
 6904      69746661 
 6904      636500
 6905              	.LASF5:
 6906 0447 73686F72 		.ascii	"short unsigned int\000"
 6906      7420756E 
ARM GAS  /tmp/ccq2vSAC.s 			page 168


 6906      7369676E 
 6906      65642069 
 6906      6E7400
 6907              	.LASF141:
 6908 045a 48414C5F 		.ascii	"HAL_PCD_DevConnect\000"
 6908      5043445F 
 6908      44657643 
 6908      6F6E6E65 
 6908      637400
 6909              	.LASF161:
 6910 046d 5553425F 		.ascii	"USB_DeActivateRemoteWakeup\000"
 6910      44654163 
 6910      74697661 
 6910      74655265 
 6910      6D6F7465 
 6911              	.LASF91:
 6912 0488 5043445F 		.ascii	"PCD_LPM_StateTypeDef\000"
 6912      4C504D5F 
 6912      53746174 
 6912      65547970 
 6912      65446566 
 6913              	.LASF102:
 6914 049d 4572726F 		.ascii	"ErrorCode\000"
 6914      72436F64 
 6914      6500
 6915              	.LASF170:
 6916 04a7 5553425F 		.ascii	"USB_ActivateEndpoint\000"
 6916      41637469 
 6916      76617465 
 6916      456E6470 
 6916      6F696E74 
 6917              	.LASF86:
 6918 04bc 5043445F 		.ascii	"PCD_StateTypeDef\000"
 6918      53746174 
 6918      65547970 
 6918      65446566 
 6918      00
 6919              	.LASF129:
 6920 04cd 48414C5F 		.ascii	"HAL_PCD_EP_ClrStall\000"
 6920      5043445F 
 6920      45505F43 
 6920      6C725374 
 6920      616C6C00 
 6921              	.LASF53:
 6922 04e1 48414C5F 		.ascii	"HAL_StatusTypeDef\000"
 6922      53746174 
 6922      75735479 
 6922      70654465 
 6922      6600
 6923              	.LASF159:
 6924 04f3 48414C5F 		.ascii	"HAL_PCD_DeInit\000"
 6924      5043445F 
 6924      4465496E 
 6924      697400
 6925              	.LASF20:
 6926 0502 41484250 		.ascii	"AHBPrescTable\000"
 6926      72657363 
ARM GAS  /tmp/ccq2vSAC.s 			page 169


 6926      5461626C 
 6926      6500
 6927              	.LASF119:
 6928 0510 5F775265 		.ascii	"_wRegVal\000"
 6928      6756616C 
 6928      00
 6929              	.LASF149:
 6930 0519 48414C5F 		.ascii	"HAL_PCD_ResetCallback\000"
 6930      5043445F 
 6930      52657365 
 6930      7443616C 
 6930      6C626163 
 6931              	.LASF121:
 6932 052f 774E426C 		.ascii	"wNBlocks\000"
 6932      6F636B73 
 6932      00
 6933              	.LASF96:
 6934 0538 496E6974 		.ascii	"Init\000"
 6934      00
 6935              	.LASF140:
 6936 053d 48414C5F 		.ascii	"HAL_PCD_DevDisconnect\000"
 6936      5043445F 
 6936      44657644 
 6936      6973636F 
 6936      6E6E6563 
 6937              	.LASF17:
 6938 0553 73697A65 		.ascii	"sizetype\000"
 6938      74797065 
 6938      00
 6939              	.LASF162:
 6940 055c 5553425F 		.ascii	"USB_ActivateRemoteWakeup\000"
 6940      41637469 
 6940      76617465 
 6940      52656D6F 
 6940      74655761 
 6941              	.LASF139:
 6942 0575 61646472 		.ascii	"address\000"
 6942      65737300 
 6943              	.LASF57:
 6944 057d 5553425F 		.ascii	"USB_DEVICE_MODE\000"
 6944      44455649 
 6944      43455F4D 
 6944      4F444500 
 6945              	.LASF166:
 6946 058d 5553425F 		.ascii	"USB_EPSetStall\000"
 6946      45505365 
 6946      74537461 
 6946      6C6C00
 6947              	.LASF160:
 6948 059c 48414C5F 		.ascii	"HAL_PCD_Init\000"
 6948      5043445F 
 6948      496E6974 
 6948      00
 6949              	.LASF55:
 6950 05a9 48414C5F 		.ascii	"HAL_LOCKED\000"
 6950      4C4F434B 
 6950      454400
ARM GAS  /tmp/ccq2vSAC.s 			page 170


 6951              	.LASF73:
 6952 05b4 706D6161 		.ascii	"pmaaddr1\000"
 6952      64647231 
 6952      00
 6953              	.LASF32:
 6954 05bd 45503552 		.ascii	"EP5R\000"
 6954      00
 6955              	.LASF123:
 6956 05c2 48414C5F 		.ascii	"HAL_PCD_GetState\000"
 6956      5043445F 
 6956      47657453 
 6956      74617465 
 6956      00
 6957              	.LASF136:
 6958 05d3 48414C5F 		.ascii	"HAL_PCD_EP_Open\000"
 6958      5043445F 
 6958      45505F4F 
 6958      70656E00 
 6959              	.LASF143:
 6960 05e3 48414C5F 		.ascii	"HAL_PCD_ISOINIncompleteCallback\000"
 6960      5043445F 
 6960      49534F49 
 6960      4E496E63 
 6960      6F6D706C 
 6961              	.LASF111:
 6962 0603 48414C5F 		.ascii	"HAL_TICK_FREQ_DEFAULT\000"
 6962      5449434B 
 6962      5F465245 
 6962      515F4445 
 6962      4641554C 
 6963              	.LASF120:
 6964 0619 5F775265 		.ascii	"_wRegBase\000"
 6964      67426173 
 6964      6500
 6965              	.LASF176:
 6966 0623 5553425F 		.ascii	"USB_EnableGlobalInt\000"
 6966      456E6162 
 6966      6C65476C 
 6966      6F62616C 
 6966      496E7400 
 6967              	.LASF19:
 6968 0637 53797374 		.ascii	"SystemCoreClock\000"
 6968      656D436F 
 6968      7265436C 
 6968      6F636B00 
 6969              	.LASF23:
 6970 0647 52455345 		.ascii	"RESERVED0\000"
 6970      52564544 
 6970      3000
 6971              	.LASF25:
 6972 0651 52455345 		.ascii	"RESERVED1\000"
 6972      52564544 
 6972      3100
 6973              	.LASF27:
 6974 065b 52455345 		.ascii	"RESERVED2\000"
 6974      52564544 
 6974      3200
ARM GAS  /tmp/ccq2vSAC.s 			page 171


 6975              	.LASF92:
 6976 0665 5043445F 		.ascii	"PCD_TypeDef\000"
 6976      54797065 
 6976      44656600 
 6977              	.LASF31:
 6978 0671 52455345 		.ascii	"RESERVED4\000"
 6978      52564544 
 6978      3400
 6979              	.LASF33:
 6980 067b 52455345 		.ascii	"RESERVED5\000"
 6980      52564544 
 6980      3500
 6981              	.LASF35:
 6982 0685 52455345 		.ascii	"RESERVED6\000"
 6982      52564544 
 6982      3600
 6983              	.LASF37:
 6984 068f 52455345 		.ascii	"RESERVED7\000"
 6984      52564544 
 6984      3700
 6985              	.LASF39:
 6986 0699 52455345 		.ascii	"RESERVED8\000"
 6986      52564544 
 6986      3800
 6987              	.LASF41:
 6988 06a3 52455345 		.ascii	"RESERVED9\000"
 6988      52564544 
 6988      3900
 6989              	.LASF185:
 6990 06ad 2F686F6D 		.ascii	"/home/berndoj/git/stm32tctst/lib/stm32f1hal\000"
 6990      652F6265 
 6990      726E646F 
 6990      6A2F6769 
 6990      742F7374 
 6991              	.LASF15:
 6992 06d9 696E7433 		.ascii	"int32_t\000"
 6992      325F7400 
 6993              	.LASF1:
 6994 06e1 756E7369 		.ascii	"unsigned char\000"
 6994      676E6564 
 6994      20636861 
 6994      7200
 6995              	.LASF46:
 6996 06ef 52455345 		.ascii	"RESERVEDC\000"
 6996      52564544 
 6996      4300
 6997              	.LASF18:
 6998 06f9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6998      52784275 
 6998      66666572 
 6998      00
 6999              	.LASF186:
 7000 0706 5043445F 		.ascii	"PCD_EP_ISR_Handler\000"
 7000      45505F49 
 7000      53525F48 
 7000      616E646C 
 7000      657200
ARM GAS  /tmp/ccq2vSAC.s 			page 172


 7001              	.LASF187:
 7002 0719 48414C5F 		.ascii	"HAL_PCD_IRQHandler\000"
 7002      5043445F 
 7002      49525148 
 7002      616E646C 
 7002      657200
 7003              	.LASF34:
 7004 072c 45503652 		.ascii	"EP6R\000"
 7004      00
 7005              	.LASF137:
 7006 0731 65705F6D 		.ascii	"ep_mps\000"
 7006      707300
 7007              	.LASF150:
 7008 0738 48414C5F 		.ascii	"HAL_PCD_SOFCallback\000"
 7008      5043445F 
 7008      534F4643 
 7008      616C6C62 
 7008      61636B00 
 7009              	.LASF134:
 7010 074c 48414C5F 		.ascii	"HAL_PCD_EP_Receive\000"
 7010      5043445F 
 7010      45505F52 
 7010      65636569 
 7010      766500
 7011              	.LASF70:
 7012 075f 64617461 		.ascii	"data_pid_start\000"
 7012      5F706964 
 7012      5F737461 
 7012      727400
 7013              	.LASF93:
 7014 076e 5043445F 		.ascii	"PCD_InitTypeDef\000"
 7014      496E6974 
 7014      54797065 
 7014      44656600 
 7015              	.LASF97:
 7016 077e 5553425F 		.ascii	"USB_Address\000"
 7016      41646472 
 7016      65737300 
 7017              	.LASF66:
 7018 078a 5553425F 		.ascii	"USB_CfgTypeDef\000"
 7018      43666754 
 7018      79706544 
 7018      656600
 7019              	.LASF179:
 7020 0799 5553425F 		.ascii	"USB_SetCurrentMode\000"
 7020      53657443 
 7020      75727265 
 7020      6E744D6F 
 7020      646500
 7021              	.LASF65:
 7022 07ac 62617474 		.ascii	"battery_charging_enable\000"
 7022      6572795F 
 7022      63686172 
 7022      67696E67 
 7022      5F656E61 
 7023              	.LASF29:
 7024 07c4 52455345 		.ascii	"RESERVED3\000"
ARM GAS  /tmp/ccq2vSAC.s 			page 173


 7024      52564544 
 7024      3300
 7025              	.LASF169:
 7026 07ce 5553425F 		.ascii	"USB_DeactivateEndpoint\000"
 7026      44656163 
 7026      74697661 
 7026      7465456E 
 7026      64706F69 
 7027              	.LASF163:
 7028 07e5 5553425F 		.ascii	"USB_FlushTxFifo\000"
 7028      466C7573 
 7028      68547846 
 7028      69666F00 
 7029              	.LASF165:
 7030 07f5 5553425F 		.ascii	"USB_EPClearStall\000"
 7030      4550436C 
 7030      65617253 
 7030      74616C6C 
 7030      00
 7031              	.LASF50:
 7032 0806 48414C5F 		.ascii	"HAL_ERROR\000"
 7032      4552524F 
 7032      5200
 7033              	.LASF48:
 7034 0810 6C6F6E67 		.ascii	"long double\000"
 7034      20646F75 
 7034      626C6500 
 7035              	.LASF113:
 7036 081c 75775469 		.ascii	"uwTickPrio\000"
 7036      636B5072 
 7036      696F00
 7037              	.LASF148:
 7038 0827 48414C5F 		.ascii	"HAL_PCD_SuspendCallback\000"
 7038      5043445F 
 7038      53757370 
 7038      656E6443 
 7038      616C6C62 
 7039              	.LASF117:
 7040 083f 77455056 		.ascii	"wEPVal\000"
 7040      616C00
 7041              	.LASF101:
 7042 0846 53746174 		.ascii	"State\000"
 7042      6500
 7043              	.LASF42:
 7044 084c 52455345 		.ascii	"RESERVEDA\000"
 7044      52564544 
 7044      4100
 7045              	.LASF177:
 7046 0856 5553425F 		.ascii	"USB_DisableGlobalInt\000"
 7046      44697361 
 7046      626C6547 
 7046      6C6F6261 
 7046      6C496E74 
 7047              	.LASF44:
 7048 086b 52455345 		.ascii	"RESERVEDB\000"
 7048      52564544 
 7048      4200
ARM GAS  /tmp/ccq2vSAC.s 			page 174


 7049              	.LASF99:
 7050 0875 4F55545F 		.ascii	"OUT_ep\000"
 7050      657000
 7051              	.LASF109:
 7052 087c 48414C5F 		.ascii	"HAL_TICK_FREQ_100HZ\000"
 7052      5449434B 
 7052      5F465245 
 7052      515F3130 
 7052      30485A00 
 7053              	.LASF6:
 7054 0890 5F5F696E 		.ascii	"__int32_t\000"
 7054      7433325F 
 7054      7400
 7055              	.LASF105:
 7056 089a 4245534C 		.ascii	"BESL\000"
 7056      00
 7057              	.LASF128:
 7058 089f 65705F61 		.ascii	"ep_addr\000"
 7058      64647200 
 7059              	.LASF60:
 7060 08a7 6570305F 		.ascii	"ep0_mps\000"
 7060      6D707300 
 7061              	.LASF158:
 7062 08af 48414C5F 		.ascii	"HAL_PCD_MspInit\000"
 7062      5043445F 
 7062      4D737049 
 7062      6E697400 
 7063              	.LASF124:
 7064 08bf 48414C5F 		.ascii	"HAL_PCD_DeActivateRemoteWakeup\000"
 7064      5043445F 
 7064      44654163 
 7064      74697661 
 7064      74655265 
 7065              	.LASF75:
 7066 08de 74785F66 		.ascii	"tx_fifo_num\000"
 7066      69666F5F 
 7066      6E756D00 
 7067              	.LASF118:
 7068 08ea 6570696E 		.ascii	"epindex\000"
 7068      64657800 
 7069              	.LASF130:
 7070 08f2 48414C5F 		.ascii	"HAL_PCD_EP_SetStall\000"
 7070      5043445F 
 7070      45505F53 
 7070      65745374 
 7070      616C6C00 
 7071              	.LASF43:
 7072 0906 44414444 		.ascii	"DADDR\000"
 7072      5200
 7073              	.LASF132:
 7074 090c 70427566 		.ascii	"pBuf\000"
 7074      00
 7075              	.LASF138:
 7076 0911 65705F74 		.ascii	"ep_type\000"
 7076      79706500 
 7077              	.LASF77:
 7078 0919 78666572 		.ascii	"xfer_buff\000"
ARM GAS  /tmp/ccq2vSAC.s 			page 175


 7078      5F627566 
 7078      6600
 7079              	.LASF16:
 7080 0923 75696E74 		.ascii	"uint32_t\000"
 7080      33325F74 
 7080      00
 7081              	.LASF184:
 7082 092c 7372632F 		.ascii	"src/stm32f1xx_hal_pcd.c\000"
 7082      73746D33 
 7082      32663178 
 7082      785F6861 
 7082      6C5F7063 
 7083              	.LASF62:
 7084 0944 536F665F 		.ascii	"Sof_enable\000"
 7084      656E6162 
 7084      6C6500
 7085              	.LASF83:
 7086 094f 48414C5F 		.ascii	"HAL_PCD_STATE_ERROR\000"
 7086      5043445F 
 7086      53544154 
 7086      455F4552 
 7086      524F5200 
 7087              	.LASF22:
 7088 0963 45503052 		.ascii	"EP0R\000"
 7088      00
 7089              	.LASF64:
 7090 0968 6C706D5F 		.ascii	"lpm_enable\000"
 7090      656E6162 
 7090      6C6500
 7091              	.LASF142:
 7092 0973 48414C5F 		.ascii	"HAL_PCD_DisconnectCallback\000"
 7092      5043445F 
 7092      44697363 
 7092      6F6E6E65 
 7092      63744361 
 7093              	.LASF157:
 7094 098e 48414C5F 		.ascii	"HAL_PCD_MspDeInit\000"
 7094      5043445F 
 7094      4D737044 
 7094      65496E69 
 7094      7400
 7095              	.LASF174:
 7096 09a0 5553425F 		.ascii	"USB_ReadPMA\000"
 7096      52656164 
 7096      504D4100 
 7097              	.LASF85:
 7098 09ac 48414C5F 		.ascii	"HAL_PCD_STATE_TIMEOUT\000"
 7098      5043445F 
 7098      53544154 
 7098      455F5449 
 7098      4D454F55 
 7099              	.LASF146:
 7100 09c2 48414C5F 		.ascii	"HAL_PCD_ISOOUTIncompleteCallback\000"
 7100      5043445F 
 7100      49534F4F 
 7100      5554496E 
 7100      636F6D70 
ARM GAS  /tmp/ccq2vSAC.s 			page 176


 7101              	.LASF13:
 7102 09e3 75696E74 		.ascii	"uint8_t\000"
 7102      385F7400 
 7103              	.LASF71:
 7104 09eb 706D6161 		.ascii	"pmaadress\000"
 7104      64726573 
 7104      7300
 7105              	.LASF59:
 7106 09f5 73706565 		.ascii	"speed\000"
 7106      6400
 7107              	.LASF54:
 7108 09fb 48414C5F 		.ascii	"HAL_UNLOCKED\000"
 7108      554E4C4F 
 7108      434B4544 
 7108      00
 7109              	.LASF154:
 7110 0a08 48414C5F 		.ascii	"HAL_PCD_SetAddress\000"
 7110      5043445F 
 7110      53657441 
 7110      64647265 
 7110      737300
 7111              	.LASF47:
 7112 0a1b 5553425F 		.ascii	"USB_TypeDef\000"
 7112      54797065 
 7112      44656600 
 7113              	.LASF106:
 7114 0a27 70446174 		.ascii	"pData\000"
 7114      6100
 7115              	.LASF63:
 7116 0a2d 6C6F775F 		.ascii	"low_power_enable\000"
 7116      706F7765 
 7116      725F656E 
 7116      61626C65 
 7116      00
 7117              	.LASF81:
 7118 0a3e 48414C5F 		.ascii	"HAL_PCD_STATE_RESET\000"
 7118      5043445F 
 7118      53544154 
 7118      455F5245 
 7118      53455400 
 7119              	.LASF151:
 7120 0a52 48414C5F 		.ascii	"HAL_PCD_SetupStageCallback\000"
 7120      5043445F 
 7120      53657475 
 7120      70537461 
 7120      67654361 
 7121              		.ident	"GCC: (15:6.3.1+svn253039-1build1) 6.3.1 20170620"
ARM GAS  /tmp/ccq2vSAC.s 			page 177


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_pcd.c
     /tmp/ccq2vSAC.s:69     .text:0000000000000000 $t
     /tmp/ccq2vSAC.s:76     .text:0000000000000000 HAL_PCD_MspInit
     /tmp/ccq2vSAC.s:93     .text:0000000000000002 HAL_PCD_Init
     /tmp/ccq2vSAC.s:279    .text:00000000000000ec HAL_PCD_MspDeInit
     /tmp/ccq2vSAC.s:296    .text:00000000000000ee HAL_PCD_Start
     /tmp/ccq2vSAC.s:353    .text:000000000000011c HAL_PCD_Stop
     /tmp/ccq2vSAC.s:429    .text:000000000000015a HAL_PCD_DeInit
     /tmp/ccq2vSAC.s:476    .text:000000000000017c HAL_PCD_DataOutStageCallback
     /tmp/ccq2vSAC.s:493    .text:000000000000017e HAL_PCD_DataInStageCallback
     /tmp/ccq2vSAC.s:510    .text:0000000000000180 HAL_PCD_SetupStageCallback
     /tmp/ccq2vSAC.s:527    .text:0000000000000182 HAL_PCD_SOFCallback
     /tmp/ccq2vSAC.s:544    .text:0000000000000184 HAL_PCD_ResetCallback
     /tmp/ccq2vSAC.s:561    .text:0000000000000186 HAL_PCD_SuspendCallback
     /tmp/ccq2vSAC.s:578    .text:0000000000000188 HAL_PCD_ResumeCallback
     /tmp/ccq2vSAC.s:595    .text:000000000000018a HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccq2vSAC.s:612    .text:000000000000018c HAL_PCD_ISOINIncompleteCallback
     /tmp/ccq2vSAC.s:631    .text:000000000000018e HAL_PCD_ConnectCallback
     /tmp/ccq2vSAC.s:648    .text:0000000000000190 HAL_PCD_DisconnectCallback
     /tmp/ccq2vSAC.s:667    .text:0000000000000192 HAL_PCD_DevConnect
     /tmp/ccq2vSAC.s:720    .text:00000000000001ba HAL_PCD_DevDisconnect
     /tmp/ccq2vSAC.s:776    .text:00000000000001e4 HAL_PCD_SetAddress
     /tmp/ccq2vSAC.s:833    .text:000000000000020c HAL_PCD_EP_Open
     /tmp/ccq2vSAC.s:942    .text:0000000000000272 HAL_PCD_EP_Close
     /tmp/ccq2vSAC.s:1023   .text:00000000000002c4 HAL_PCD_EP_Receive
     /tmp/ccq2vSAC.s:1077   .text:00000000000002f4 HAL_PCD_EP_GetRxCount
     /tmp/ccq2vSAC.s:1103   .text:0000000000000302 HAL_PCD_EP_Transmit
     /tmp/ccq2vSAC.s:1160   .text:000000000000032e HAL_PCD_IRQHandler
     /tmp/ccq2vSAC.s:1800   .text:0000000000000770 $d
     /tmp/ccq2vSAC.s:1809   .text:000000000000077c $t
     /tmp/ccq2vSAC.s:1816   .text:000000000000077c HAL_PCD_EP_SetStall
     /tmp/ccq2vSAC.s:1924   .text:00000000000007e4 HAL_PCD_EP_ClrStall
     /tmp/ccq2vSAC.s:2023   .text:0000000000000848 HAL_PCD_EP_Flush
     /tmp/ccq2vSAC.s:2088   .text:000000000000087c HAL_PCD_ActivateRemoteWakeup
     /tmp/ccq2vSAC.s:2111   .text:0000000000000882 HAL_PCD_DeActivateRemoteWakeup
     /tmp/ccq2vSAC.s:2134   .text:0000000000000888 HAL_PCD_GetState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USB_DisableGlobalInt
USB_CoreInit
USB_SetCurrentMode
USB_DevInit
USB_DevDisconnect
HAL_PCDEx_SetConnectionState
USB_DevConnect
USB_EnableGlobalInt
USB_StopDevice
USB_SetDevAddress
USB_ActivateEndpoint
USB_DeactivateEndpoint
USB_EPStartXfer
USB_ReadInterrupts
USB_ReadPMA
USB_EPSetStall
USB_EP0_OutStart
ARM GAS  /tmp/ccq2vSAC.s 			page 178


USB_EPClearStall
USB_FlushTxFifo
USB_FlushRxFifo
USB_ActivateRemoteWakeup
USB_DeActivateRemoteWakeup
