ARM GAS  /tmp/ccbRBq7K.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"stm32f1xx_hal_crc.c"
  12              	@ GNU C11 (15:6.3.1+svn253039-1build1) version 6.3.1 20170620 (arm-none-eabi)
  13              	@	compiled by GNU C version 7.2.0, GMP version 6.1.2, MPFR version 4.0.1-rc1, MPC version 1.1.0, is
  14              	@ warning: MPFR header version 4.0.1-rc1 differs from library version 4.0.1.
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I ./inc -I ./inc/Legacy -I ../cmsisstm32f1xx/inc
  17              	@ -I ../cmsiscore/inc -imultilib thumb/v7-m -D__USES_INITFINI__
  18              	@ -D STM32F103x6 -D RUN_FROM_FLASH=1 src/stm32f1xx_hal_crc.c
  19              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip bin/stm32f1xx_hal_crc.o -g
  20              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  32              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  33              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  34              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  35              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  36              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  39              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  40              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  41              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  42              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  43              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  44              	@ -freg-struct-return -freorder-blocks -freorder-functions
  45              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  46              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  47              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  48              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  49              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  50              	@ -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  51              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  53              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  54              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  55              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  56              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  57              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
ARM GAS  /tmp/ccbRBq7K.s 			page 2


  58              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  59              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  60              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  61              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  62              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  63              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  64              	@ -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.align	1
  70              		.weak	HAL_CRC_MspInit
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	HAL_CRC_MspInit, %function
  76              	HAL_CRC_MspInit:
  77              	.LFB73:
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 7047     		bx	lr	@
  83              		.cfi_endproc
  84              	.LFE73:
  85              		.size	HAL_CRC_MspInit, .-HAL_CRC_MspInit
  86              		.align	1
  87              		.global	HAL_CRC_Init
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  92              		.type	HAL_CRC_Init, %function
  93              	HAL_CRC_Init:
  94              	.LFB65:
  95              		.file 1 "src/stm32f1xx_hal_crc.c"
   1:src/stm32f1xx_hal_crc.c **** /**
   2:src/stm32f1xx_hal_crc.c ****   ******************************************************************************
   3:src/stm32f1xx_hal_crc.c ****   * @file    stm32f1xx_hal_crc.c
   4:src/stm32f1xx_hal_crc.c ****   * @author  MCD Application Team
   5:src/stm32f1xx_hal_crc.c ****   * @brief   CRC HAL module driver.
   6:src/stm32f1xx_hal_crc.c ****   *          This file provides firmware functions to manage the following
   7:src/stm32f1xx_hal_crc.c ****   *          functionalities of the Cyclic Redundancy Check (CRC) peripheral:
   8:src/stm32f1xx_hal_crc.c ****   *           + Initialization and de-initialization functions
   9:src/stm32f1xx_hal_crc.c ****   *           + Peripheral Control functions
  10:src/stm32f1xx_hal_crc.c ****   *           + Peripheral State functions
  11:src/stm32f1xx_hal_crc.c ****   *
  12:src/stm32f1xx_hal_crc.c ****   @verbatim
  13:src/stm32f1xx_hal_crc.c ****  ===============================================================================
  14:src/stm32f1xx_hal_crc.c ****                      ##### How to use this driver #####
  15:src/stm32f1xx_hal_crc.c ****  ===============================================================================
  16:src/stm32f1xx_hal_crc.c ****     [..]
  17:src/stm32f1xx_hal_crc.c ****          (+) Enable CRC AHB clock using __HAL_RCC_CRC_CLK_ENABLE();
  18:src/stm32f1xx_hal_crc.c ****          (+) Initialize CRC calculator
  19:src/stm32f1xx_hal_crc.c ****              (++) specify generating polynomial (peripheral default or non-default one)
ARM GAS  /tmp/ccbRBq7K.s 			page 3


  20:src/stm32f1xx_hal_crc.c ****              (++) specify initialization value (peripheral default or non-default one)
  21:src/stm32f1xx_hal_crc.c ****              (++) specify input data format
  22:src/stm32f1xx_hal_crc.c ****              (++) specify input or output data inversion mode if any
  23:src/stm32f1xx_hal_crc.c ****          (+) Use HAL_CRC_Accumulate() function to compute the CRC value of the
  24:src/stm32f1xx_hal_crc.c ****              input data buffer starting with the previously computed CRC as
  25:src/stm32f1xx_hal_crc.c ****              initialization value
  26:src/stm32f1xx_hal_crc.c ****          (+) Use HAL_CRC_Calculate() function to compute the CRC value of the
  27:src/stm32f1xx_hal_crc.c ****              input data buffer starting with the defined initialization value
  28:src/stm32f1xx_hal_crc.c ****              (default or non-default) to initiate CRC calculation
  29:src/stm32f1xx_hal_crc.c **** 
  30:src/stm32f1xx_hal_crc.c ****   @endverbatim
  31:src/stm32f1xx_hal_crc.c ****   ******************************************************************************
  32:src/stm32f1xx_hal_crc.c ****   * @attention
  33:src/stm32f1xx_hal_crc.c ****   *
  34:src/stm32f1xx_hal_crc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  35:src/stm32f1xx_hal_crc.c ****   * All rights reserved.</center></h2>
  36:src/stm32f1xx_hal_crc.c ****   *
  37:src/stm32f1xx_hal_crc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  38:src/stm32f1xx_hal_crc.c ****   * the "License"; You may not use this file except in compliance with the
  39:src/stm32f1xx_hal_crc.c ****   * License. You may obtain a copy of the License at:
  40:src/stm32f1xx_hal_crc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  41:src/stm32f1xx_hal_crc.c ****   *
  42:src/stm32f1xx_hal_crc.c ****   ******************************************************************************
  43:src/stm32f1xx_hal_crc.c ****   */
  44:src/stm32f1xx_hal_crc.c **** 
  45:src/stm32f1xx_hal_crc.c **** /* Includes ------------------------------------------------------------------*/
  46:src/stm32f1xx_hal_crc.c **** #include "stm32f1xx_hal.h"
  47:src/stm32f1xx_hal_crc.c **** 
  48:src/stm32f1xx_hal_crc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  49:src/stm32f1xx_hal_crc.c ****   * @{
  50:src/stm32f1xx_hal_crc.c ****   */
  51:src/stm32f1xx_hal_crc.c **** 
  52:src/stm32f1xx_hal_crc.c **** /** @defgroup CRC CRC
  53:src/stm32f1xx_hal_crc.c ****   * @brief CRC HAL module driver.
  54:src/stm32f1xx_hal_crc.c ****   * @{
  55:src/stm32f1xx_hal_crc.c ****   */
  56:src/stm32f1xx_hal_crc.c **** 
  57:src/stm32f1xx_hal_crc.c **** #ifdef HAL_CRC_MODULE_ENABLED
  58:src/stm32f1xx_hal_crc.c **** 
  59:src/stm32f1xx_hal_crc.c **** /* Private typedef -----------------------------------------------------------*/
  60:src/stm32f1xx_hal_crc.c **** /* Private define ------------------------------------------------------------*/
  61:src/stm32f1xx_hal_crc.c **** /* Private macro -------------------------------------------------------------*/
  62:src/stm32f1xx_hal_crc.c **** /* Private variables ---------------------------------------------------------*/
  63:src/stm32f1xx_hal_crc.c **** /* Private function prototypes -----------------------------------------------*/
  64:src/stm32f1xx_hal_crc.c **** 
  65:src/stm32f1xx_hal_crc.c **** /* Exported functions --------------------------------------------------------*/
  66:src/stm32f1xx_hal_crc.c **** 
  67:src/stm32f1xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions CRC Exported Functions
  68:src/stm32f1xx_hal_crc.c ****   * @{
  69:src/stm32f1xx_hal_crc.c ****   */
  70:src/stm32f1xx_hal_crc.c **** 
  71:src/stm32f1xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group1 Initialization and de-initialization functions
  72:src/stm32f1xx_hal_crc.c ****  *  @brief    Initialization and Configuration functions.
  73:src/stm32f1xx_hal_crc.c ****  *
  74:src/stm32f1xx_hal_crc.c **** @verbatim
  75:src/stm32f1xx_hal_crc.c ****  ===============================================================================
  76:src/stm32f1xx_hal_crc.c ****             ##### Initialization and de-initialization functions #####
ARM GAS  /tmp/ccbRBq7K.s 			page 4


  77:src/stm32f1xx_hal_crc.c ****  ===============================================================================
  78:src/stm32f1xx_hal_crc.c ****     [..]  This section provides functions allowing to:
  79:src/stm32f1xx_hal_crc.c ****       (+) Initialize the CRC according to the specified parameters
  80:src/stm32f1xx_hal_crc.c ****           in the CRC_InitTypeDef and create the associated handle
  81:src/stm32f1xx_hal_crc.c ****       (+) DeInitialize the CRC peripheral
  82:src/stm32f1xx_hal_crc.c ****       (+) Initialize the CRC MSP (MCU Specific Package)
  83:src/stm32f1xx_hal_crc.c ****       (+) DeInitialize the CRC MSP
  84:src/stm32f1xx_hal_crc.c **** 
  85:src/stm32f1xx_hal_crc.c **** @endverbatim
  86:src/stm32f1xx_hal_crc.c ****   * @{
  87:src/stm32f1xx_hal_crc.c ****   */
  88:src/stm32f1xx_hal_crc.c **** 
  89:src/stm32f1xx_hal_crc.c **** /**
  90:src/stm32f1xx_hal_crc.c ****   * @brief  Initialize the CRC according to the specified
  91:src/stm32f1xx_hal_crc.c ****   *         parameters in the CRC_InitTypeDef and create the associated handle.
  92:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
  93:src/stm32f1xx_hal_crc.c ****   * @retval HAL status
  94:src/stm32f1xx_hal_crc.c ****   */
  95:src/stm32f1xx_hal_crc.c **** HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
  96:src/stm32f1xx_hal_crc.c **** {
  96              		.loc 1 96 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL0:
 101              		.loc 1 96 0
 102 0002 10B5     		push	{r4, lr}	@
 103              	.LCFI0:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
  97:src/stm32f1xx_hal_crc.c ****   /* Check the CRC handle allocation */
  98:src/stm32f1xx_hal_crc.c ****   if (hcrc == NULL)
 107              		.loc 1 98 0
 108 0004 0446     		mov	r4, r0	@ hcrc, hcrc
 109 0006 50B1     		cbz	r0, .L5	@ hcrc,
  99:src/stm32f1xx_hal_crc.c ****   {
 100:src/stm32f1xx_hal_crc.c ****     return HAL_ERROR;
 101:src/stm32f1xx_hal_crc.c ****   }
 102:src/stm32f1xx_hal_crc.c **** 
 103:src/stm32f1xx_hal_crc.c ****   /* Check the parameters */
 104:src/stm32f1xx_hal_crc.c ****   assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));
 105:src/stm32f1xx_hal_crc.c **** 
 106:src/stm32f1xx_hal_crc.c ****   if (hcrc->State == HAL_CRC_STATE_RESET)
 110              		.loc 1 106 0
 111 0008 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2	@ hcrc_4(D)->State, hcrc_4(D)->State
 112 000a 03F0FF02 		and	r2, r3, #255	@ _6, hcrc_4(D)->State,
 113 000e 13B9     		cbnz	r3, .L4	@ hcrc_4(D)->State,
 107:src/stm32f1xx_hal_crc.c ****   {
 108:src/stm32f1xx_hal_crc.c ****     /* Allocate lock resource and initialize it */
 109:src/stm32f1xx_hal_crc.c ****     hcrc->Lock = HAL_UNLOCKED;
 114              		.loc 1 109 0
 115 0010 0271     		strb	r2, [r0, #4]	@ _6, hcrc_4(D)->Lock
 110:src/stm32f1xx_hal_crc.c ****     /* Init the low level hardware */
 111:src/stm32f1xx_hal_crc.c ****     HAL_CRC_MspInit(hcrc);
 116              		.loc 1 111 0
 117 0012 FFF7FEFF 		bl	HAL_CRC_MspInit	@
ARM GAS  /tmp/ccbRBq7K.s 			page 5


 118              	.LVL1:
 119              	.L4:
 112:src/stm32f1xx_hal_crc.c ****   }
 113:src/stm32f1xx_hal_crc.c **** 
 114:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 115:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY;
 120              		.loc 1 115 0
 121 0016 0123     		movs	r3, #1	@ tmp118,
 116:src/stm32f1xx_hal_crc.c **** 
 117:src/stm32f1xx_hal_crc.c ****   /* Return function status */
 118:src/stm32f1xx_hal_crc.c ****   return HAL_OK;
 122              		.loc 1 118 0
 123 0018 0020     		movs	r0, #0	@ <retval>,
 115:src/stm32f1xx_hal_crc.c **** 
 124              		.loc 1 115 0
 125 001a 6371     		strb	r3, [r4, #5]	@ tmp118, hcrc_4(D)->State
 126              		.loc 1 118 0
 127 001c 10BD     		pop	{r4, pc}	@
 128              	.LVL2:
 129              	.L5:
 100:src/stm32f1xx_hal_crc.c ****   }
 130              		.loc 1 100 0
 131 001e 0120     		movs	r0, #1	@ <retval>,
 132              	.LVL3:
 119:src/stm32f1xx_hal_crc.c **** }
 133              		.loc 1 119 0
 134 0020 10BD     		pop	{r4, pc}	@
 135              		.cfi_endproc
 136              	.LFE65:
 137              		.size	HAL_CRC_Init, .-HAL_CRC_Init
 138              		.align	1
 139              		.weak	HAL_CRC_MspDeInit
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 144              		.type	HAL_CRC_MspDeInit, %function
 145              	HAL_CRC_MspDeInit:
 146              	.LFB68:
 120:src/stm32f1xx_hal_crc.c **** 
 121:src/stm32f1xx_hal_crc.c **** /**
 122:src/stm32f1xx_hal_crc.c ****   * @brief  DeInitialize the CRC peripheral.
 123:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 124:src/stm32f1xx_hal_crc.c ****   * @retval HAL status
 125:src/stm32f1xx_hal_crc.c ****   */
 126:src/stm32f1xx_hal_crc.c **** HAL_StatusTypeDef HAL_CRC_DeInit(CRC_HandleTypeDef *hcrc)
 127:src/stm32f1xx_hal_crc.c **** {
 128:src/stm32f1xx_hal_crc.c ****   /* Check the CRC handle allocation */
 129:src/stm32f1xx_hal_crc.c ****   if (hcrc == NULL)
 130:src/stm32f1xx_hal_crc.c ****   {
 131:src/stm32f1xx_hal_crc.c ****     return HAL_ERROR;
 132:src/stm32f1xx_hal_crc.c ****   }
 133:src/stm32f1xx_hal_crc.c **** 
 134:src/stm32f1xx_hal_crc.c ****   /* Check the parameters */
 135:src/stm32f1xx_hal_crc.c ****   assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));
 136:src/stm32f1xx_hal_crc.c **** 
 137:src/stm32f1xx_hal_crc.c ****   /* Check the CRC peripheral state */
ARM GAS  /tmp/ccbRBq7K.s 			page 6


 138:src/stm32f1xx_hal_crc.c ****   if (hcrc->State == HAL_CRC_STATE_BUSY)
 139:src/stm32f1xx_hal_crc.c ****   {
 140:src/stm32f1xx_hal_crc.c ****     return HAL_BUSY;
 141:src/stm32f1xx_hal_crc.c ****   }
 142:src/stm32f1xx_hal_crc.c **** 
 143:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 144:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
 145:src/stm32f1xx_hal_crc.c **** 
 146:src/stm32f1xx_hal_crc.c ****   /* Reset CRC calculation unit */
 147:src/stm32f1xx_hal_crc.c ****   __HAL_CRC_DR_RESET(hcrc);
 148:src/stm32f1xx_hal_crc.c **** 
 149:src/stm32f1xx_hal_crc.c ****   /* Reset IDR register content */
 150:src/stm32f1xx_hal_crc.c ****   CLEAR_BIT(hcrc->Instance->IDR, CRC_IDR_IDR);
 151:src/stm32f1xx_hal_crc.c **** 
 152:src/stm32f1xx_hal_crc.c ****   /* DeInit the low level hardware */
 153:src/stm32f1xx_hal_crc.c ****   HAL_CRC_MspDeInit(hcrc);
 154:src/stm32f1xx_hal_crc.c **** 
 155:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 156:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_RESET;
 157:src/stm32f1xx_hal_crc.c **** 
 158:src/stm32f1xx_hal_crc.c ****   /* Process unlocked */
 159:src/stm32f1xx_hal_crc.c ****   __HAL_UNLOCK(hcrc);
 160:src/stm32f1xx_hal_crc.c **** 
 161:src/stm32f1xx_hal_crc.c ****   /* Return function status */
 162:src/stm32f1xx_hal_crc.c ****   return HAL_OK;
 163:src/stm32f1xx_hal_crc.c **** }
 164:src/stm32f1xx_hal_crc.c **** 
 165:src/stm32f1xx_hal_crc.c **** /**
 166:src/stm32f1xx_hal_crc.c ****   * @brief  Initializes the CRC MSP.
 167:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 168:src/stm32f1xx_hal_crc.c ****   * @retval None
 169:src/stm32f1xx_hal_crc.c ****   */
 170:src/stm32f1xx_hal_crc.c **** __weak void HAL_CRC_MspInit(CRC_HandleTypeDef *hcrc)
 171:src/stm32f1xx_hal_crc.c **** {
 172:src/stm32f1xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 173:src/stm32f1xx_hal_crc.c ****   UNUSED(hcrc);
 174:src/stm32f1xx_hal_crc.c **** 
 175:src/stm32f1xx_hal_crc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 176:src/stm32f1xx_hal_crc.c ****             the HAL_CRC_MspInit can be implemented in the user file
 177:src/stm32f1xx_hal_crc.c ****    */
 178:src/stm32f1xx_hal_crc.c **** }
 179:src/stm32f1xx_hal_crc.c **** 
 180:src/stm32f1xx_hal_crc.c **** /**
 181:src/stm32f1xx_hal_crc.c ****   * @brief  DeInitialize the CRC MSP.
 182:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 183:src/stm32f1xx_hal_crc.c ****   * @retval None
 184:src/stm32f1xx_hal_crc.c ****   */
 185:src/stm32f1xx_hal_crc.c **** __weak void HAL_CRC_MspDeInit(CRC_HandleTypeDef *hcrc)
 186:src/stm32f1xx_hal_crc.c **** {
 147              		.loc 1 186 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL4:
 153 0022 7047     		bx	lr	@
 154              		.cfi_endproc
ARM GAS  /tmp/ccbRBq7K.s 			page 7


 155              	.LFE68:
 156              		.size	HAL_CRC_MspDeInit, .-HAL_CRC_MspDeInit
 157              		.align	1
 158              		.global	HAL_CRC_DeInit
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 163              		.type	HAL_CRC_DeInit, %function
 164              	HAL_CRC_DeInit:
 165              	.LFB66:
 127:src/stm32f1xx_hal_crc.c ****   /* Check the CRC handle allocation */
 166              		.loc 1 127 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL5:
 127:src/stm32f1xx_hal_crc.c ****   /* Check the CRC handle allocation */
 171              		.loc 1 127 0
 172 0024 38B5     		push	{r3, r4, r5, lr}	@
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 16
 175              		.cfi_offset 3, -16
 176              		.cfi_offset 4, -12
 177              		.cfi_offset 5, -8
 178              		.cfi_offset 14, -4
 129:src/stm32f1xx_hal_crc.c ****   {
 179              		.loc 1 129 0
 180 0026 0546     		mov	r5, r0	@ hcrc, hcrc
 181 0028 98B1     		cbz	r0, .L9	@ hcrc,
 138:src/stm32f1xx_hal_crc.c ****   {
 182              		.loc 1 138 0
 183 002a 4479     		ldrb	r4, [r0, #5]	@ zero_extendqisi2	@ hcrc_3(D)->State, hcrc_3(D)->State
 184 002c E4B2     		uxtb	r4, r4	@ _5, hcrc_3(D)->State
 185 002e 022C     		cmp	r4, #2	@ _5,
 186 0030 0DD0     		beq	.L10	@,
 144:src/stm32f1xx_hal_crc.c **** 
 187              		.loc 1 144 0
 188 0032 0223     		movs	r3, #2	@ <retval>,
 150:src/stm32f1xx_hal_crc.c **** 
 189              		.loc 1 150 0
 190 0034 0024     		movs	r4, #0	@ tmp125,
 144:src/stm32f1xx_hal_crc.c **** 
 191              		.loc 1 144 0
 192 0036 4371     		strb	r3, [r0, #5]	@ <retval>, hcrc_3(D)->State
 147:src/stm32f1xx_hal_crc.c **** 
 193              		.loc 1 147 0
 194 0038 0368     		ldr	r3, [r0]	@ _7, hcrc_3(D)->Instance
 195 003a 9A68     		ldr	r2, [r3, #8]	@ _8, _7->CR
 196 003c 42F00102 		orr	r2, r2, #1	@ _9, _8,
 197 0040 9A60     		str	r2, [r3, #8]	@ _9, _7->CR
 150:src/stm32f1xx_hal_crc.c **** 
 198              		.loc 1 150 0
 199 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ _7->IDR, _7->IDR
 200 0044 1C71     		strb	r4, [r3, #4]	@ tmp125, _7->IDR
 153:src/stm32f1xx_hal_crc.c **** 
 201              		.loc 1 153 0
ARM GAS  /tmp/ccbRBq7K.s 			page 8


 202 0046 FFF7FEFF 		bl	HAL_CRC_MspDeInit	@
 203              	.LVL6:
 156:src/stm32f1xx_hal_crc.c **** 
 204              		.loc 1 156 0
 205 004a 6C71     		strb	r4, [r5, #5]	@ tmp125, hcrc_3(D)->State
 159:src/stm32f1xx_hal_crc.c **** 
 206              		.loc 1 159 0
 207 004c 2C71     		strb	r4, [r5, #4]	@ tmp125, hcrc_3(D)->Lock
 208              	.L10:
 140:src/stm32f1xx_hal_crc.c ****   }
 209              		.loc 1 140 0
 210 004e 2046     		mov	r0, r4	@ <retval>, _5
 163:src/stm32f1xx_hal_crc.c **** 
 211              		.loc 1 163 0
 212 0050 38BD     		pop	{r3, r4, r5, pc}	@
 213              	.LVL7:
 214              	.L9:
 131:src/stm32f1xx_hal_crc.c ****   }
 215              		.loc 1 131 0
 216 0052 0120     		movs	r0, #1	@ <retval>,
 217              	.LVL8:
 218 0054 38BD     		pop	{r3, r4, r5, pc}	@
 219              		.cfi_endproc
 220              	.LFE66:
 221              		.size	HAL_CRC_DeInit, .-HAL_CRC_DeInit
 222              		.align	1
 223              		.global	HAL_CRC_Accumulate
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 228              		.type	HAL_CRC_Accumulate, %function
 229              	HAL_CRC_Accumulate:
 230              	.LFB69:
 187:src/stm32f1xx_hal_crc.c ****   /* Prevent unused argument(s) compilation warning */
 188:src/stm32f1xx_hal_crc.c ****   UNUSED(hcrc);
 189:src/stm32f1xx_hal_crc.c **** 
 190:src/stm32f1xx_hal_crc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:src/stm32f1xx_hal_crc.c ****             the HAL_CRC_MspDeInit can be implemented in the user file
 192:src/stm32f1xx_hal_crc.c ****    */
 193:src/stm32f1xx_hal_crc.c **** }
 194:src/stm32f1xx_hal_crc.c **** 
 195:src/stm32f1xx_hal_crc.c **** /**
 196:src/stm32f1xx_hal_crc.c ****   * @}
 197:src/stm32f1xx_hal_crc.c ****   */
 198:src/stm32f1xx_hal_crc.c **** 
 199:src/stm32f1xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group2 Peripheral Control functions
 200:src/stm32f1xx_hal_crc.c ****  *  @brief    management functions.
 201:src/stm32f1xx_hal_crc.c ****  *
 202:src/stm32f1xx_hal_crc.c **** @verbatim
 203:src/stm32f1xx_hal_crc.c ****  ===============================================================================
 204:src/stm32f1xx_hal_crc.c ****                       ##### Peripheral Control functions #####
 205:src/stm32f1xx_hal_crc.c ****  ===============================================================================
 206:src/stm32f1xx_hal_crc.c ****     [..]  This section provides functions allowing to:
 207:src/stm32f1xx_hal_crc.c ****       (+) compute the 32-bit CRC value of a 32-bit data buffer
 208:src/stm32f1xx_hal_crc.c ****           using combination of the previous CRC value and the new one.
 209:src/stm32f1xx_hal_crc.c **** 
ARM GAS  /tmp/ccbRBq7K.s 			page 9


 210:src/stm32f1xx_hal_crc.c ****        [..]  or
 211:src/stm32f1xx_hal_crc.c **** 
 212:src/stm32f1xx_hal_crc.c ****       (+) compute the 32-bit CRC value of a 32-bit data buffer
 213:src/stm32f1xx_hal_crc.c ****           independently of the previous CRC value.
 214:src/stm32f1xx_hal_crc.c **** 
 215:src/stm32f1xx_hal_crc.c **** @endverbatim
 216:src/stm32f1xx_hal_crc.c ****   * @{
 217:src/stm32f1xx_hal_crc.c ****   */
 218:src/stm32f1xx_hal_crc.c **** 
 219:src/stm32f1xx_hal_crc.c **** /**
 220:src/stm32f1xx_hal_crc.c ****   * @brief  Compute the 32-bit CRC value of a 32-bit data buffer
 221:src/stm32f1xx_hal_crc.c ****   *         starting with the previously computed CRC as initialization value.
 222:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 223:src/stm32f1xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer.
 224:src/stm32f1xx_hal_crc.c ****   * @param  BufferLength input data buffer length (number of uint32_t words).
 225:src/stm32f1xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 226:src/stm32f1xx_hal_crc.c ****   */
 227:src/stm32f1xx_hal_crc.c **** uint32_t HAL_CRC_Accumulate(CRC_HandleTypeDef *hcrc, uint32_t pBuffer[], uint32_t BufferLength)
 228:src/stm32f1xx_hal_crc.c **** {
 231              		.loc 1 228 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL9:
 236 0056 0346     		mov	r3, r0	@ hcrc, hcrc
 229:src/stm32f1xx_hal_crc.c ****   uint32_t index;      /* CRC input data buffer index */
 230:src/stm32f1xx_hal_crc.c ****   uint32_t temp = 0U;  /* CRC output (read from hcrc->Instance->DR register) */
 231:src/stm32f1xx_hal_crc.c **** 
 232:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 233:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
 237              		.loc 1 233 0
 238 0058 0220     		movs	r0, #2	@ tmp152,
 239              	.LVL10:
 228:src/stm32f1xx_hal_crc.c ****   uint32_t index;      /* CRC input data buffer index */
 240              		.loc 1 228 0
 241 005a 10B5     		push	{r4, lr}	@
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 233 0
 247 005c 5871     		strb	r0, [r3, #5]	@ tmp152, hcrc_4(D)->State
 248              	.LVL11:
 249 005e 01EB8202 		add	r2, r1, r2, lsl #2	@ _22, ivtmp.25, BufferLength,
 250              	.LVL12:
 251              	.L12:
 234:src/stm32f1xx_hal_crc.c **** 
 235:src/stm32f1xx_hal_crc.c ****   /* Enter Data to the CRC calculator */
 236:src/stm32f1xx_hal_crc.c ****   for (index = 0U; index < BufferLength; index++)
 252              		.loc 1 236 0 discriminator 1
 253 0062 9142     		cmp	r1, r2	@ ivtmp.25, _22
 254 0064 1868     		ldr	r0, [r3]	@ _14, hcrc_4(D)->Instance
 255 0066 03D1     		bne	.L13	@,
 237:src/stm32f1xx_hal_crc.c ****   {
 238:src/stm32f1xx_hal_crc.c ****     hcrc->Instance->DR = pBuffer[index];
 239:src/stm32f1xx_hal_crc.c ****   }
 240:src/stm32f1xx_hal_crc.c ****   temp = hcrc->Instance->DR;
ARM GAS  /tmp/ccbRBq7K.s 			page 10


 241:src/stm32f1xx_hal_crc.c **** 
 242:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 243:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY;
 256              		.loc 1 243 0
 257 0068 0122     		movs	r2, #1	@ tmp155,
 240:src/stm32f1xx_hal_crc.c **** 
 258              		.loc 1 240 0
 259 006a 0068     		ldr	r0, [r0]	@ <retval>, _14->DR
 260              	.LVL13:
 261              		.loc 1 243 0
 262 006c 5A71     		strb	r2, [r3, #5]	@ tmp155, hcrc_4(D)->State
 244:src/stm32f1xx_hal_crc.c **** 
 245:src/stm32f1xx_hal_crc.c ****   /* Return the CRC computed value */
 246:src/stm32f1xx_hal_crc.c ****   return temp;
 247:src/stm32f1xx_hal_crc.c **** }
 263              		.loc 1 247 0
 264 006e 10BD     		pop	{r4, pc}	@
 265              	.LVL14:
 266              	.L13:
 238:src/stm32f1xx_hal_crc.c ****   }
 267              		.loc 1 238 0 discriminator 3
 268 0070 51F8044B 		ldr	r4, [r1], #4	@ _11, MEM[base: _23, offset: 0B]
 269 0074 0460     		str	r4, [r0]	@ _11, _7->DR
 270 0076 F4E7     		b	.L12	@
 271              		.cfi_endproc
 272              	.LFE69:
 273              		.size	HAL_CRC_Accumulate, .-HAL_CRC_Accumulate
 274              		.align	1
 275              		.global	HAL_CRC_Calculate
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 280              		.type	HAL_CRC_Calculate, %function
 281              	HAL_CRC_Calculate:
 282              	.LFB70:
 248:src/stm32f1xx_hal_crc.c **** 
 249:src/stm32f1xx_hal_crc.c **** /**
 250:src/stm32f1xx_hal_crc.c ****   * @brief  Compute the 32-bit CRC value of a 32-bit data buffer
 251:src/stm32f1xx_hal_crc.c ****   *         starting with hcrc->Instance->INIT as initialization value.
 252:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 253:src/stm32f1xx_hal_crc.c ****   * @param  pBuffer pointer to the input data buffer.
 254:src/stm32f1xx_hal_crc.c ****   * @param  BufferLength input data buffer length (number of uint32_t words).
 255:src/stm32f1xx_hal_crc.c ****   * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
 256:src/stm32f1xx_hal_crc.c ****   */
 257:src/stm32f1xx_hal_crc.c **** uint32_t HAL_CRC_Calculate(CRC_HandleTypeDef *hcrc, uint32_t pBuffer[], uint32_t BufferLength)
 258:src/stm32f1xx_hal_crc.c **** {
 283              		.loc 1 258 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              	.LVL15:
 259:src/stm32f1xx_hal_crc.c ****   uint32_t index;      /* CRC input data buffer index */
 260:src/stm32f1xx_hal_crc.c ****   uint32_t temp = 0U;  /* CRC output (read from hcrc->Instance->DR register) */
 261:src/stm32f1xx_hal_crc.c **** 
 262:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 263:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
ARM GAS  /tmp/ccbRBq7K.s 			page 11


 288              		.loc 1 263 0
 289 0078 0223     		movs	r3, #2	@ tmp123,
 258:src/stm32f1xx_hal_crc.c ****   uint32_t index;      /* CRC input data buffer index */
 290              		.loc 1 258 0
 291 007a 10B5     		push	{r4, lr}	@
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 296              		.loc 1 263 0
 297 007c 4371     		strb	r3, [r0, #5]	@ tmp123, hcrc_4(D)->State
 264:src/stm32f1xx_hal_crc.c **** 
 265:src/stm32f1xx_hal_crc.c ****   /* Reset CRC Calculation Unit (hcrc->Instance->INIT is
 266:src/stm32f1xx_hal_crc.c ****   *  written in hcrc->Instance->DR) */
 267:src/stm32f1xx_hal_crc.c ****   __HAL_CRC_DR_RESET(hcrc);
 298              		.loc 1 267 0
 299 007e 0368     		ldr	r3, [r0]	@ _6, hcrc_4(D)->Instance
 300 0080 01EB8202 		add	r2, r1, r2, lsl #2	@ _24, ivtmp.38, BufferLength,
 301              	.LVL16:
 302 0084 9C68     		ldr	r4, [r3, #8]	@ _7, _6->CR
 303 0086 44F00104 		orr	r4, r4, #1	@ _8, _7,
 304 008a 9C60     		str	r4, [r3, #8]	@ _8, _6->CR
 305              	.LVL17:
 306              	.L15:
 268:src/stm32f1xx_hal_crc.c **** 
 269:src/stm32f1xx_hal_crc.c ****   /* Enter 32-bit input data to the CRC calculator */
 270:src/stm32f1xx_hal_crc.c ****   for (index = 0U; index < BufferLength; index++)
 307              		.loc 1 270 0 discriminator 1
 308 008c 9142     		cmp	r1, r2	@ ivtmp.38, _24
 309 008e 04D1     		bne	.L16	@,
 271:src/stm32f1xx_hal_crc.c ****   {
 272:src/stm32f1xx_hal_crc.c ****     hcrc->Instance->DR = pBuffer[index];
 273:src/stm32f1xx_hal_crc.c ****   }
 274:src/stm32f1xx_hal_crc.c ****   temp = hcrc->Instance->DR;
 275:src/stm32f1xx_hal_crc.c **** 
 276:src/stm32f1xx_hal_crc.c ****   /* Change CRC peripheral state */
 277:src/stm32f1xx_hal_crc.c ****   hcrc->State = HAL_CRC_STATE_READY;
 310              		.loc 1 277 0
 311 0090 0122     		movs	r2, #1	@ tmp126,
 274:src/stm32f1xx_hal_crc.c **** 
 312              		.loc 1 274 0
 313 0092 1B68     		ldr	r3, [r3]	@ <retval>, _6->DR
 314              	.LVL18:
 315              		.loc 1 277 0
 316 0094 4271     		strb	r2, [r0, #5]	@ tmp126, hcrc_4(D)->State
 278:src/stm32f1xx_hal_crc.c **** 
 279:src/stm32f1xx_hal_crc.c ****   /* Return the CRC computed value */
 280:src/stm32f1xx_hal_crc.c ****   return temp;
 281:src/stm32f1xx_hal_crc.c **** }
 317              		.loc 1 281 0
 318 0096 1846     		mov	r0, r3	@, <retval>
 319              	.LVL19:
 320 0098 10BD     		pop	{r4, pc}	@
 321              	.LVL20:
 322              	.L16:
 272:src/stm32f1xx_hal_crc.c ****   }
 323              		.loc 1 272 0 discriminator 3
ARM GAS  /tmp/ccbRBq7K.s 			page 12


 324 009a 51F8044B 		ldr	r4, [r1], #4	@ _14, MEM[base: _25, offset: 0B]
 325 009e 1C60     		str	r4, [r3]	@ _14, _6->DR
 326 00a0 F4E7     		b	.L15	@
 327              		.cfi_endproc
 328              	.LFE70:
 329              		.size	HAL_CRC_Calculate, .-HAL_CRC_Calculate
 330              		.align	1
 331              		.global	HAL_CRC_GetState
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu softvfp
 336              		.type	HAL_CRC_GetState, %function
 337              	HAL_CRC_GetState:
 338              	.LFB71:
 282:src/stm32f1xx_hal_crc.c **** 
 283:src/stm32f1xx_hal_crc.c **** /**
 284:src/stm32f1xx_hal_crc.c ****   * @}
 285:src/stm32f1xx_hal_crc.c ****   */
 286:src/stm32f1xx_hal_crc.c **** 
 287:src/stm32f1xx_hal_crc.c **** /** @defgroup CRC_Exported_Functions_Group3 Peripheral State functions
 288:src/stm32f1xx_hal_crc.c ****  *  @brief    Peripheral State functions.
 289:src/stm32f1xx_hal_crc.c ****  *
 290:src/stm32f1xx_hal_crc.c **** @verbatim
 291:src/stm32f1xx_hal_crc.c ****  ===============================================================================
 292:src/stm32f1xx_hal_crc.c ****                       ##### Peripheral State functions #####
 293:src/stm32f1xx_hal_crc.c ****  ===============================================================================
 294:src/stm32f1xx_hal_crc.c ****     [..]
 295:src/stm32f1xx_hal_crc.c ****     This subsection permits to get in run-time the status of the peripheral.
 296:src/stm32f1xx_hal_crc.c **** 
 297:src/stm32f1xx_hal_crc.c **** @endverbatim
 298:src/stm32f1xx_hal_crc.c ****   * @{
 299:src/stm32f1xx_hal_crc.c ****   */
 300:src/stm32f1xx_hal_crc.c **** 
 301:src/stm32f1xx_hal_crc.c **** /**
 302:src/stm32f1xx_hal_crc.c ****   * @brief  Return the CRC handle state.
 303:src/stm32f1xx_hal_crc.c ****   * @param  hcrc CRC handle
 304:src/stm32f1xx_hal_crc.c ****   * @retval HAL state
 305:src/stm32f1xx_hal_crc.c ****   */
 306:src/stm32f1xx_hal_crc.c **** HAL_CRC_StateTypeDef HAL_CRC_GetState(CRC_HandleTypeDef *hcrc)
 307:src/stm32f1xx_hal_crc.c **** {
 339              		.loc 1 307 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344              	.LVL21:
 308:src/stm32f1xx_hal_crc.c ****   /* Return CRC handle state */
 309:src/stm32f1xx_hal_crc.c ****   return hcrc->State;
 345              		.loc 1 309 0
 346 00a2 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2	@ hcrc_2(D)->State, hcrc_2(D)->State
 347              	.LVL22:
 310:src/stm32f1xx_hal_crc.c **** }
 348              		.loc 1 310 0
 349 00a4 7047     		bx	lr	@
 350              		.cfi_endproc
 351              	.LFE71:
ARM GAS  /tmp/ccbRBq7K.s 			page 13


 352              		.size	HAL_CRC_GetState, .-HAL_CRC_GetState
 353              	.Letext0:
 354              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 355              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 356              		.file 4 "../cmsiscore/inc/core_cm3.h"
 357              		.file 5 "../cmsisstm32f1xx/inc/system_stm32f1xx.h"
 358              		.file 6 "../cmsisstm32f1xx/inc/stm32f103x6.h"
 359              		.file 7 "./inc/stm32f1xx_hal_def.h"
 360              		.file 8 "./inc/stm32f1xx_hal_crc.h"
 361              		.file 9 "./inc/stm32f1xx_hal.h"
 362              		.section	.debug_info,"",%progbits
 363              	.Ldebug_info0:
 364 0000 96040000 		.4byte	0x496
 365 0004 0200     		.2byte	0x2
 366 0006 00000000 		.4byte	.Ldebug_abbrev0
 367 000a 04       		.byte	0x4
 368 000b 01       		.uleb128 0x1
 369 000c C3000000 		.4byte	.LASF61
 370 0010 0C       		.byte	0xc
 371 0011 48000000 		.4byte	.LASF62
 372 0015 D1010000 		.4byte	.LASF63
 373 0019 00000000 		.4byte	.Ltext0
 374 001d A6000000 		.4byte	.Letext0
 375 0021 00000000 		.4byte	.Ldebug_line0
 376 0025 02       		.uleb128 0x2
 377 0026 01       		.byte	0x1
 378 0027 06       		.byte	0x6
 379 0028 0B020000 		.4byte	.LASF0
 380 002c 03       		.uleb128 0x3
 381 002d 88010000 		.4byte	.LASF3
 382 0031 02       		.byte	0x2
 383 0032 1D       		.byte	0x1d
 384 0033 37000000 		.4byte	0x37
 385 0037 02       		.uleb128 0x2
 386 0038 01       		.byte	0x1
 387 0039 08       		.byte	0x8
 388 003a C3010000 		.4byte	.LASF1
 389 003e 02       		.uleb128 0x2
 390 003f 02       		.byte	0x2
 391 0040 05       		.byte	0x5
 392 0041 6B000000 		.4byte	.LASF2
 393 0045 03       		.uleb128 0x3
 394 0046 7E000000 		.4byte	.LASF4
 395 004a 02       		.byte	0x2
 396 004b 2B       		.byte	0x2b
 397 004c 50000000 		.4byte	0x50
 398 0050 02       		.uleb128 0x2
 399 0051 02       		.byte	0x2
 400 0052 07       		.byte	0x7
 401 0053 86020000 		.4byte	.LASF5
 402 0057 03       		.uleb128 0x3
 403 0058 58030000 		.4byte	.LASF6
 404 005c 02       		.byte	0x2
 405 005d 3F       		.byte	0x3f
 406 005e 62000000 		.4byte	0x62
 407 0062 02       		.uleb128 0x2
 408 0063 04       		.byte	0x4
ARM GAS  /tmp/ccbRBq7K.s 			page 14


 409 0064 05       		.byte	0x5
 410 0065 7A010000 		.4byte	.LASF7
 411 0069 03       		.uleb128 0x3
 412 006a 89000000 		.4byte	.LASF8
 413 006e 02       		.byte	0x2
 414 006f 41       		.byte	0x41
 415 0070 74000000 		.4byte	0x74
 416 0074 02       		.uleb128 0x2
 417 0075 04       		.byte	0x4
 418 0076 07       		.byte	0x7
 419 0077 0C030000 		.4byte	.LASF9
 420 007b 02       		.uleb128 0x2
 421 007c 08       		.byte	0x8
 422 007d 05       		.byte	0x5
 423 007e 55010000 		.4byte	.LASF10
 424 0082 02       		.uleb128 0x2
 425 0083 08       		.byte	0x8
 426 0084 07       		.byte	0x7
 427 0085 17020000 		.4byte	.LASF11
 428 0089 04       		.uleb128 0x4
 429 008a 04       		.byte	0x4
 430 008b 05       		.byte	0x5
 431 008c 696E7400 		.ascii	"int\000"
 432 0090 02       		.uleb128 0x2
 433 0091 04       		.byte	0x4
 434 0092 07       		.byte	0x7
 435 0093 42020000 		.4byte	.LASF12
 436 0097 03       		.uleb128 0x3
 437 0098 1F010000 		.4byte	.LASF13
 438 009c 03       		.byte	0x3
 439 009d 18       		.byte	0x18
 440 009e 2C000000 		.4byte	0x2c
 441 00a2 05       		.uleb128 0x5
 442 00a3 97000000 		.4byte	0x97
 443 00a7 06       		.uleb128 0x6
 444 00a8 97000000 		.4byte	0x97
 445 00ac 03       		.uleb128 0x3
 446 00ad 4F020000 		.4byte	.LASF14
 447 00b1 03       		.byte	0x3
 448 00b2 24       		.byte	0x24
 449 00b3 45000000 		.4byte	0x45
 450 00b7 03       		.uleb128 0x3
 451 00b8 AE020000 		.4byte	.LASF15
 452 00bc 03       		.byte	0x3
 453 00bd 2C       		.byte	0x2c
 454 00be 57000000 		.4byte	0x57
 455 00c2 05       		.uleb128 0x5
 456 00c3 B7000000 		.4byte	0xb7
 457 00c7 03       		.uleb128 0x3
 458 00c8 2E020000 		.4byte	.LASF16
 459 00cc 03       		.byte	0x3
 460 00cd 30       		.byte	0x30
 461 00ce 69000000 		.4byte	0x69
 462 00d2 05       		.uleb128 0x5
 463 00d3 C7000000 		.4byte	0xc7
 464 00d7 02       		.uleb128 0x2
 465 00d8 04       		.byte	0x4
ARM GAS  /tmp/ccbRBq7K.s 			page 15


 466 00d9 07       		.byte	0x7
 467 00da 75000000 		.4byte	.LASF17
 468 00de 07       		.uleb128 0x7
 469 00df AC030000 		.4byte	.LASF18
 470 00e3 04       		.byte	0x4
 471 00e4 4807     		.2byte	0x748
 472 00e6 C2000000 		.4byte	0xc2
 473 00ea 01       		.byte	0x1
 474 00eb 01       		.byte	0x1
 475 00ec 08       		.uleb128 0x8
 476 00ed B6020000 		.4byte	.LASF19
 477 00f1 05       		.byte	0x5
 478 00f2 33       		.byte	0x33
 479 00f3 C7000000 		.4byte	0xc7
 480 00f7 01       		.byte	0x1
 481 00f8 01       		.byte	0x1
 482 00f9 09       		.uleb128 0x9
 483 00fa A7000000 		.4byte	0xa7
 484 00fe 09010000 		.4byte	0x109
 485 0102 0A       		.uleb128 0xa
 486 0103 D7000000 		.4byte	0xd7
 487 0107 0F       		.byte	0xf
 488 0108 00       		.byte	0
 489 0109 06       		.uleb128 0x6
 490 010a F9000000 		.4byte	0xf9
 491 010e 08       		.uleb128 0x8
 492 010f 27010000 		.4byte	.LASF20
 493 0113 05       		.byte	0x5
 494 0114 34       		.byte	0x34
 495 0115 09010000 		.4byte	0x109
 496 0119 01       		.byte	0x1
 497 011a 01       		.byte	0x1
 498 011b 09       		.uleb128 0x9
 499 011c A7000000 		.4byte	0xa7
 500 0120 2B010000 		.4byte	0x12b
 501 0124 0A       		.uleb128 0xa
 502 0125 D7000000 		.4byte	0xd7
 503 0129 07       		.byte	0x7
 504 012a 00       		.byte	0
 505 012b 06       		.uleb128 0x6
 506 012c 1B010000 		.4byte	0x11b
 507 0130 08       		.uleb128 0x8
 508 0131 FD010000 		.4byte	.LASF21
 509 0135 05       		.byte	0x5
 510 0136 35       		.byte	0x35
 511 0137 2B010000 		.4byte	0x12b
 512 013b 01       		.byte	0x1
 513 013c 01       		.byte	0x1
 514 013d 0B       		.uleb128 0xb
 515 013e 0C       		.byte	0xc
 516 013f 06       		.byte	0x6
 517 0140 0601     		.2byte	0x106
 518 0142 90010000 		.4byte	0x190
 519 0146 0C       		.uleb128 0xc
 520 0147 445200   		.ascii	"DR\000"
 521 014a 06       		.byte	0x6
 522 014b 0801     		.2byte	0x108
ARM GAS  /tmp/ccbRBq7K.s 			page 16


 523 014d D2000000 		.4byte	0xd2
 524 0151 02       		.byte	0x2
 525 0152 23       		.byte	0x23
 526 0153 00       		.uleb128 0
 527 0154 0C       		.uleb128 0xc
 528 0155 49445200 		.ascii	"IDR\000"
 529 0159 06       		.byte	0x6
 530 015a 0901     		.2byte	0x109
 531 015c A2000000 		.4byte	0xa2
 532 0160 02       		.byte	0x2
 533 0161 23       		.byte	0x23
 534 0162 04       		.uleb128 0x4
 535 0163 0D       		.uleb128 0xd
 536 0164 F8020000 		.4byte	.LASF22
 537 0168 06       		.byte	0x6
 538 0169 0A01     		.2byte	0x10a
 539 016b 97000000 		.4byte	0x97
 540 016f 02       		.byte	0x2
 541 0170 23       		.byte	0x23
 542 0171 05       		.uleb128 0x5
 543 0172 0D       		.uleb128 0xd
 544 0173 02030000 		.4byte	.LASF23
 545 0177 06       		.byte	0x6
 546 0178 0B01     		.2byte	0x10b
 547 017a AC000000 		.4byte	0xac
 548 017e 02       		.byte	0x2
 549 017f 23       		.byte	0x23
 550 0180 06       		.uleb128 0x6
 551 0181 0C       		.uleb128 0xc
 552 0182 435200   		.ascii	"CR\000"
 553 0185 06       		.byte	0x6
 554 0186 0C01     		.2byte	0x10c
 555 0188 D2000000 		.4byte	0xd2
 556 018c 02       		.byte	0x2
 557 018d 23       		.byte	0x23
 558 018e 08       		.uleb128 0x8
 559 018f 00       		.byte	0
 560 0190 0E       		.uleb128 0xe
 561 0191 62030000 		.4byte	.LASF24
 562 0195 06       		.byte	0x6
 563 0196 0D01     		.2byte	0x10d
 564 0198 3D010000 		.4byte	0x13d
 565 019c 02       		.uleb128 0x2
 566 019d 08       		.byte	0x8
 567 019e 04       		.byte	0x4
 568 019f B7010000 		.4byte	.LASF25
 569 01a3 0F       		.uleb128 0xf
 570 01a4 01       		.byte	0x1
 571 01a5 37000000 		.4byte	0x37
 572 01a9 07       		.byte	0x7
 573 01aa 2A       		.byte	0x2a
 574 01ab C8010000 		.4byte	0x1c8
 575 01af 10       		.uleb128 0x10
 576 01b0 18010000 		.4byte	.LASF26
 577 01b4 00       		.byte	0
 578 01b5 10       		.uleb128 0x10
 579 01b6 00000000 		.4byte	.LASF27
ARM GAS  /tmp/ccbRBq7K.s 			page 17


 580 01ba 01       		.byte	0x1
 581 01bb 10       		.uleb128 0x10
 582 01bc 3F000000 		.4byte	.LASF28
 583 01c0 02       		.byte	0x2
 584 01c1 10       		.uleb128 0x10
 585 01c2 33000000 		.4byte	.LASF29
 586 01c6 03       		.byte	0x3
 587 01c7 00       		.byte	0
 588 01c8 03       		.uleb128 0x3
 589 01c9 92010000 		.4byte	.LASF30
 590 01cd 07       		.byte	0x7
 591 01ce 2F       		.byte	0x2f
 592 01cf A3010000 		.4byte	0x1a3
 593 01d3 0F       		.uleb128 0xf
 594 01d4 01       		.byte	0x1
 595 01d5 37000000 		.4byte	0x37
 596 01d9 07       		.byte	0x7
 597 01da 35       		.byte	0x35
 598 01db EC010000 		.4byte	0x1ec
 599 01df 10       		.uleb128 0x10
 600 01e0 12000000 		.4byte	.LASF31
 601 01e4 00       		.byte	0
 602 01e5 10       		.uleb128 0x10
 603 01e6 ED020000 		.4byte	.LASF32
 604 01ea 01       		.byte	0x1
 605 01eb 00       		.byte	0
 606 01ec 03       		.uleb128 0x3
 607 01ed C8030000 		.4byte	.LASF33
 608 01f1 07       		.byte	0x7
 609 01f2 38       		.byte	0x38
 610 01f3 D3010000 		.4byte	0x1d3
 611 01f7 0F       		.uleb128 0xf
 612 01f8 01       		.byte	0x1
 613 01f9 37000000 		.4byte	0x37
 614 01fd 08       		.byte	0x8
 615 01fe 30       		.byte	0x30
 616 01ff 22020000 		.4byte	0x222
 617 0203 10       		.uleb128 0x10
 618 0204 A4000000 		.4byte	.LASF34
 619 0208 00       		.byte	0
 620 0209 10       		.uleb128 0x10
 621 020a 1F000000 		.4byte	.LASF35
 622 020e 01       		.byte	0x1
 623 020f 10       		.uleb128 0x10
 624 0210 35010000 		.4byte	.LASF36
 625 0214 02       		.byte	0x2
 626 0215 10       		.uleb128 0x10
 627 0216 6E030000 		.4byte	.LASF37
 628 021a 03       		.byte	0x3
 629 021b 10       		.uleb128 0x10
 630 021c 30030000 		.4byte	.LASF38
 631 0220 04       		.byte	0x4
 632 0221 00       		.byte	0
 633 0222 03       		.uleb128 0x3
 634 0223 99020000 		.4byte	.LASF39
 635 0227 08       		.byte	0x8
 636 0228 36       		.byte	0x36
ARM GAS  /tmp/ccbRBq7K.s 			page 18


 637 0229 F7010000 		.4byte	0x1f7
 638 022d 05       		.uleb128 0x5
 639 022e 22020000 		.4byte	0x222
 640 0232 11       		.uleb128 0x11
 641 0233 08       		.byte	0x8
 642 0234 08       		.byte	0x8
 643 0235 3C       		.byte	0x3c
 644 0236 65020000 		.4byte	0x265
 645 023a 12       		.uleb128 0x12
 646 023b 6A020000 		.4byte	.LASF40
 647 023f 08       		.byte	0x8
 648 0240 3E       		.byte	0x3e
 649 0241 65020000 		.4byte	0x265
 650 0245 02       		.byte	0x2
 651 0246 23       		.byte	0x23
 652 0247 00       		.uleb128 0
 653 0248 12       		.uleb128 0x12
 654 0249 83010000 		.4byte	.LASF41
 655 024d 08       		.byte	0x8
 656 024e 40       		.byte	0x40
 657 024f EC010000 		.4byte	0x1ec
 658 0253 02       		.byte	0x2
 659 0254 23       		.byte	0x23
 660 0255 04       		.uleb128 0x4
 661 0256 12       		.uleb128 0x12
 662 0257 74010000 		.4byte	.LASF42
 663 025b 08       		.byte	0x8
 664 025c 42       		.byte	0x42
 665 025d 2D020000 		.4byte	0x22d
 666 0261 02       		.byte	0x2
 667 0262 23       		.byte	0x23
 668 0263 05       		.uleb128 0x5
 669 0264 00       		.byte	0
 670 0265 13       		.uleb128 0x13
 671 0266 04       		.byte	0x4
 672 0267 90010000 		.4byte	0x190
 673 026b 03       		.uleb128 0x3
 674 026c 58020000 		.4byte	.LASF43
 675 0270 08       		.byte	0x8
 676 0271 44       		.byte	0x44
 677 0272 32020000 		.4byte	0x232
 678 0276 0F       		.uleb128 0xf
 679 0277 01       		.byte	0x1
 680 0278 37000000 		.4byte	0x37
 681 027c 09       		.byte	0x9
 682 027d 33       		.byte	0x33
 683 027e 9B020000 		.4byte	0x29b
 684 0282 10       		.uleb128 0x10
 685 0283 DA020000 		.4byte	.LASF44
 686 0287 64       		.byte	0x64
 687 0288 10       		.uleb128 0x10
 688 0289 C6020000 		.4byte	.LASF45
 689 028d 0A       		.byte	0xa
 690 028e 10       		.uleb128 0x10
 691 028f 73020000 		.4byte	.LASF46
 692 0293 01       		.byte	0x1
 693 0294 10       		.uleb128 0x10
ARM GAS  /tmp/ccbRBq7K.s 			page 19


 694 0295 96030000 		.4byte	.LASF47
 695 0299 01       		.byte	0x1
 696 029a 00       		.byte	0
 697 029b 03       		.uleb128 0x3
 698 029c 44030000 		.4byte	.LASF48
 699 02a0 09       		.byte	0x9
 700 02a1 38       		.byte	0x38
 701 02a2 76020000 		.4byte	0x276
 702 02a6 08       		.uleb128 0x8
 703 02a7 B8000000 		.4byte	.LASF49
 704 02ab 09       		.byte	0x9
 705 02ac 3D       		.byte	0x3d
 706 02ad C7000000 		.4byte	0xc7
 707 02b1 01       		.byte	0x1
 708 02b2 01       		.byte	0x1
 709 02b3 08       		.uleb128 0x8
 710 02b4 37020000 		.4byte	.LASF50
 711 02b8 09       		.byte	0x9
 712 02b9 3E       		.byte	0x3e
 713 02ba 9B020000 		.4byte	0x29b
 714 02be 01       		.byte	0x1
 715 02bf 01       		.byte	0x1
 716 02c0 14       		.uleb128 0x14
 717 02c1 01       		.byte	0x1
 718 02c2 63010000 		.4byte	.LASF51
 719 02c6 01       		.byte	0x1
 720 02c7 3201     		.2byte	0x132
 721 02c9 01       		.byte	0x1
 722 02ca 22020000 		.4byte	0x222
 723 02ce A2000000 		.4byte	.LFB71
 724 02d2 A6000000 		.4byte	.LFE71
 725 02d6 02       		.byte	0x2
 726 02d7 7D       		.byte	0x7d
 727 02d8 00       		.sleb128 0
 728 02d9 01       		.byte	0x1
 729 02da EF020000 		.4byte	0x2ef
 730 02de 15       		.uleb128 0x15
 731 02df E5030000 		.4byte	.LASF53
 732 02e3 01       		.byte	0x1
 733 02e4 3201     		.2byte	0x132
 734 02e6 EF020000 		.4byte	0x2ef
 735 02ea 00000000 		.4byte	.LLST15
 736 02ee 00       		.byte	0
 737 02ef 13       		.uleb128 0x13
 738 02f0 04       		.byte	0x4
 739 02f1 6B020000 		.4byte	0x26b
 740 02f5 16       		.uleb128 0x16
 741 02f6 01       		.byte	0x1
 742 02f7 84030000 		.4byte	.LASF52
 743 02fb 01       		.byte	0x1
 744 02fc 0101     		.2byte	0x101
 745 02fe 01       		.byte	0x1
 746 02ff C7000000 		.4byte	0xc7
 747 0303 78000000 		.4byte	.LFB70
 748 0307 A2000000 		.4byte	.LFE70
 749 030b 21000000 		.4byte	.LLST10
 750 030f 01       		.byte	0x1
ARM GAS  /tmp/ccbRBq7K.s 			page 20


 751 0310 61030000 		.4byte	0x361
 752 0314 15       		.uleb128 0x15
 753 0315 E5030000 		.4byte	.LASF53
 754 0319 01       		.byte	0x1
 755 031a 0101     		.2byte	0x101
 756 031c EF020000 		.4byte	0x2ef
 757 0320 41000000 		.4byte	.LLST11
 758 0324 15       		.uleb128 0x15
 759 0325 0A000000 		.4byte	.LASF54
 760 0329 01       		.byte	0x1
 761 032a 0101     		.2byte	0x101
 762 032c 61030000 		.4byte	0x361
 763 0330 6D000000 		.4byte	.LLST12
 764 0334 15       		.uleb128 0x15
 765 0335 48010000 		.4byte	.LASF55
 766 0339 01       		.byte	0x1
 767 033a 0101     		.2byte	0x101
 768 033c C7000000 		.4byte	0xc7
 769 0340 8E000000 		.4byte	.LLST13
 770 0344 17       		.uleb128 0x17
 771 0345 60000000 		.4byte	.LASF58
 772 0349 01       		.byte	0x1
 773 034a 0301     		.2byte	0x103
 774 034c C7000000 		.4byte	0xc7
 775 0350 18       		.uleb128 0x18
 776 0351 66000000 		.4byte	.LASF57
 777 0355 01       		.byte	0x1
 778 0356 0401     		.2byte	0x104
 779 0358 C7000000 		.4byte	0xc7
 780 035c AF000000 		.4byte	.LLST14
 781 0360 00       		.byte	0
 782 0361 13       		.uleb128 0x13
 783 0362 04       		.byte	0x4
 784 0363 C7000000 		.4byte	0xc7
 785 0367 19       		.uleb128 0x19
 786 0368 01       		.byte	0x1
 787 0369 A4010000 		.4byte	.LASF56
 788 036d 01       		.byte	0x1
 789 036e E3       		.byte	0xe3
 790 036f 01       		.byte	0x1
 791 0370 C7000000 		.4byte	0xc7
 792 0374 56000000 		.4byte	.LFB69
 793 0378 78000000 		.4byte	.LFE69
 794 037c DA000000 		.4byte	.LLST4
 795 0380 01       		.byte	0x1
 796 0381 D1030000 		.4byte	0x3d1
 797 0385 1A       		.uleb128 0x1a
 798 0386 E5030000 		.4byte	.LASF53
 799 038a 01       		.byte	0x1
 800 038b E3       		.byte	0xe3
 801 038c EF020000 		.4byte	0x2ef
 802 0390 FA000000 		.4byte	.LLST5
 803 0394 1A       		.uleb128 0x1a
 804 0395 0A000000 		.4byte	.LASF54
 805 0399 01       		.byte	0x1
 806 039a E3       		.byte	0xe3
 807 039b 61030000 		.4byte	0x361
ARM GAS  /tmp/ccbRBq7K.s 			page 21


 808 039f 18010000 		.4byte	.LLST6
 809 03a3 1A       		.uleb128 0x1a
 810 03a4 48010000 		.4byte	.LASF55
 811 03a8 01       		.byte	0x1
 812 03a9 E3       		.byte	0xe3
 813 03aa C7000000 		.4byte	0xc7
 814 03ae 39010000 		.4byte	.LLST7
 815 03b2 1B       		.uleb128 0x1b
 816 03b3 60000000 		.4byte	.LASF58
 817 03b7 01       		.byte	0x1
 818 03b8 E5       		.byte	0xe5
 819 03b9 C7000000 		.4byte	0xc7
 820 03bd 5A010000 		.4byte	.LLST8
 821 03c1 1B       		.uleb128 0x1b
 822 03c2 66000000 		.4byte	.LASF57
 823 03c6 01       		.byte	0x1
 824 03c7 E6       		.byte	0xe6
 825 03c8 C7000000 		.4byte	0xc7
 826 03cc 6E010000 		.4byte	.LLST9
 827 03d0 00       		.byte	0
 828 03d1 1C       		.uleb128 0x1c
 829 03d2 01       		.byte	0x1
 830 03d3 1E030000 		.4byte	.LASF64
 831 03d7 01       		.byte	0x1
 832 03d8 B9       		.byte	0xb9
 833 03d9 01       		.byte	0x1
 834 03da 01       		.byte	0x1
 835 03db EB030000 		.4byte	0x3eb
 836 03df 1D       		.uleb128 0x1d
 837 03e0 E5030000 		.4byte	.LASF53
 838 03e4 01       		.byte	0x1
 839 03e5 B9       		.byte	0xb9
 840 03e6 EF020000 		.4byte	0x2ef
 841 03ea 00       		.byte	0
 842 03eb 1E       		.uleb128 0x1e
 843 03ec 01       		.byte	0x1
 844 03ed 94000000 		.4byte	.LASF65
 845 03f1 01       		.byte	0x1
 846 03f2 AA       		.byte	0xaa
 847 03f3 01       		.byte	0x1
 848 03f4 04040000 		.4byte	0x404
 849 03f8 1D       		.uleb128 0x1d
 850 03f9 E5030000 		.4byte	.LASF53
 851 03fd 01       		.byte	0x1
 852 03fe AA       		.byte	0xaa
 853 03ff EF020000 		.4byte	0x2ef
 854 0403 00       		.byte	0
 855 0404 19       		.uleb128 0x19
 856 0405 01       		.byte	0x1
 857 0406 B9030000 		.4byte	.LASF59
 858 040a 01       		.byte	0x1
 859 040b 7E       		.byte	0x7e
 860 040c 01       		.byte	0x1
 861 040d C8010000 		.4byte	0x1c8
 862 0411 24000000 		.4byte	.LFB66
 863 0415 56000000 		.4byte	.LFE66
 864 0419 99010000 		.4byte	.LLST2
ARM GAS  /tmp/ccbRBq7K.s 			page 22


 865 041d 01       		.byte	0x1
 866 041e 42040000 		.4byte	0x442
 867 0422 1A       		.uleb128 0x1a
 868 0423 E5030000 		.4byte	.LASF53
 869 0427 01       		.byte	0x1
 870 0428 7E       		.byte	0x7e
 871 0429 EF020000 		.4byte	0x2ef
 872 042d B9010000 		.4byte	.LLST3
 873 0431 1F       		.uleb128 0x1f
 874 0432 4A000000 		.4byte	.LVL6
 875 0436 D1030000 		.4byte	0x3d1
 876 043a 20       		.uleb128 0x20
 877 043b 01       		.byte	0x1
 878 043c 50       		.byte	0x50
 879 043d 02       		.byte	0x2
 880 043e 75       		.byte	0x75
 881 043f 00       		.sleb128 0
 882 0440 00       		.byte	0
 883 0441 00       		.byte	0
 884 0442 19       		.uleb128 0x19
 885 0443 01       		.byte	0x1
 886 0444 D8030000 		.4byte	.LASF60
 887 0448 01       		.byte	0x1
 888 0449 5F       		.byte	0x5f
 889 044a 01       		.byte	0x1
 890 044b C8010000 		.4byte	0x1c8
 891 044f 02000000 		.4byte	.LFB65
 892 0453 22000000 		.4byte	.LFE65
 893 0457 ED010000 		.4byte	.LLST0
 894 045b 01       		.byte	0x1
 895 045c 80040000 		.4byte	0x480
 896 0460 1A       		.uleb128 0x1a
 897 0461 E5030000 		.4byte	.LASF53
 898 0465 01       		.byte	0x1
 899 0466 5F       		.byte	0x5f
 900 0467 EF020000 		.4byte	0x2ef
 901 046b 0D020000 		.4byte	.LLST1
 902 046f 1F       		.uleb128 0x1f
 903 0470 16000000 		.4byte	.LVL1
 904 0474 EB030000 		.4byte	0x3eb
 905 0478 20       		.uleb128 0x20
 906 0479 01       		.byte	0x1
 907 047a 50       		.byte	0x50
 908 047b 02       		.byte	0x2
 909 047c 74       		.byte	0x74
 910 047d 00       		.sleb128 0
 911 047e 00       		.byte	0
 912 047f 00       		.byte	0
 913 0480 21       		.uleb128 0x21
 914 0481 D1030000 		.4byte	0x3d1
 915 0485 22000000 		.4byte	.LFB68
 916 0489 24000000 		.4byte	.LFE68
 917 048d 02       		.byte	0x2
 918 048e 7D       		.byte	0x7d
 919 048f 00       		.sleb128 0
 920 0490 01       		.byte	0x1
 921 0491 22       		.uleb128 0x22
ARM GAS  /tmp/ccbRBq7K.s 			page 23


 922 0492 DF030000 		.4byte	0x3df
 923 0496 01       		.byte	0x1
 924 0497 50       		.byte	0x50
 925 0498 00       		.byte	0
 926 0499 00       		.byte	0
 927              		.section	.debug_abbrev,"",%progbits
 928              	.Ldebug_abbrev0:
 929 0000 01       		.uleb128 0x1
 930 0001 11       		.uleb128 0x11
 931 0002 01       		.byte	0x1
 932 0003 25       		.uleb128 0x25
 933 0004 0E       		.uleb128 0xe
 934 0005 13       		.uleb128 0x13
 935 0006 0B       		.uleb128 0xb
 936 0007 03       		.uleb128 0x3
 937 0008 0E       		.uleb128 0xe
 938 0009 1B       		.uleb128 0x1b
 939 000a 0E       		.uleb128 0xe
 940 000b 11       		.uleb128 0x11
 941 000c 01       		.uleb128 0x1
 942 000d 12       		.uleb128 0x12
 943 000e 01       		.uleb128 0x1
 944 000f 10       		.uleb128 0x10
 945 0010 06       		.uleb128 0x6
 946 0011 00       		.byte	0
 947 0012 00       		.byte	0
 948 0013 02       		.uleb128 0x2
 949 0014 24       		.uleb128 0x24
 950 0015 00       		.byte	0
 951 0016 0B       		.uleb128 0xb
 952 0017 0B       		.uleb128 0xb
 953 0018 3E       		.uleb128 0x3e
 954 0019 0B       		.uleb128 0xb
 955 001a 03       		.uleb128 0x3
 956 001b 0E       		.uleb128 0xe
 957 001c 00       		.byte	0
 958 001d 00       		.byte	0
 959 001e 03       		.uleb128 0x3
 960 001f 16       		.uleb128 0x16
 961 0020 00       		.byte	0
 962 0021 03       		.uleb128 0x3
 963 0022 0E       		.uleb128 0xe
 964 0023 3A       		.uleb128 0x3a
 965 0024 0B       		.uleb128 0xb
 966 0025 3B       		.uleb128 0x3b
 967 0026 0B       		.uleb128 0xb
 968 0027 49       		.uleb128 0x49
 969 0028 13       		.uleb128 0x13
 970 0029 00       		.byte	0
 971 002a 00       		.byte	0
 972 002b 04       		.uleb128 0x4
 973 002c 24       		.uleb128 0x24
 974 002d 00       		.byte	0
 975 002e 0B       		.uleb128 0xb
 976 002f 0B       		.uleb128 0xb
 977 0030 3E       		.uleb128 0x3e
 978 0031 0B       		.uleb128 0xb
ARM GAS  /tmp/ccbRBq7K.s 			page 24


 979 0032 03       		.uleb128 0x3
 980 0033 08       		.uleb128 0x8
 981 0034 00       		.byte	0
 982 0035 00       		.byte	0
 983 0036 05       		.uleb128 0x5
 984 0037 35       		.uleb128 0x35
 985 0038 00       		.byte	0
 986 0039 49       		.uleb128 0x49
 987 003a 13       		.uleb128 0x13
 988 003b 00       		.byte	0
 989 003c 00       		.byte	0
 990 003d 06       		.uleb128 0x6
 991 003e 26       		.uleb128 0x26
 992 003f 00       		.byte	0
 993 0040 49       		.uleb128 0x49
 994 0041 13       		.uleb128 0x13
 995 0042 00       		.byte	0
 996 0043 00       		.byte	0
 997 0044 07       		.uleb128 0x7
 998 0045 34       		.uleb128 0x34
 999 0046 00       		.byte	0
 1000 0047 03       		.uleb128 0x3
 1001 0048 0E       		.uleb128 0xe
 1002 0049 3A       		.uleb128 0x3a
 1003 004a 0B       		.uleb128 0xb
 1004 004b 3B       		.uleb128 0x3b
 1005 004c 05       		.uleb128 0x5
 1006 004d 49       		.uleb128 0x49
 1007 004e 13       		.uleb128 0x13
 1008 004f 3F       		.uleb128 0x3f
 1009 0050 0C       		.uleb128 0xc
 1010 0051 3C       		.uleb128 0x3c
 1011 0052 0C       		.uleb128 0xc
 1012 0053 00       		.byte	0
 1013 0054 00       		.byte	0
 1014 0055 08       		.uleb128 0x8
 1015 0056 34       		.uleb128 0x34
 1016 0057 00       		.byte	0
 1017 0058 03       		.uleb128 0x3
 1018 0059 0E       		.uleb128 0xe
 1019 005a 3A       		.uleb128 0x3a
 1020 005b 0B       		.uleb128 0xb
 1021 005c 3B       		.uleb128 0x3b
 1022 005d 0B       		.uleb128 0xb
 1023 005e 49       		.uleb128 0x49
 1024 005f 13       		.uleb128 0x13
 1025 0060 3F       		.uleb128 0x3f
 1026 0061 0C       		.uleb128 0xc
 1027 0062 3C       		.uleb128 0x3c
 1028 0063 0C       		.uleb128 0xc
 1029 0064 00       		.byte	0
 1030 0065 00       		.byte	0
 1031 0066 09       		.uleb128 0x9
 1032 0067 01       		.uleb128 0x1
 1033 0068 01       		.byte	0x1
 1034 0069 49       		.uleb128 0x49
 1035 006a 13       		.uleb128 0x13
ARM GAS  /tmp/ccbRBq7K.s 			page 25


 1036 006b 01       		.uleb128 0x1
 1037 006c 13       		.uleb128 0x13
 1038 006d 00       		.byte	0
 1039 006e 00       		.byte	0
 1040 006f 0A       		.uleb128 0xa
 1041 0070 21       		.uleb128 0x21
 1042 0071 00       		.byte	0
 1043 0072 49       		.uleb128 0x49
 1044 0073 13       		.uleb128 0x13
 1045 0074 2F       		.uleb128 0x2f
 1046 0075 0B       		.uleb128 0xb
 1047 0076 00       		.byte	0
 1048 0077 00       		.byte	0
 1049 0078 0B       		.uleb128 0xb
 1050 0079 13       		.uleb128 0x13
 1051 007a 01       		.byte	0x1
 1052 007b 0B       		.uleb128 0xb
 1053 007c 0B       		.uleb128 0xb
 1054 007d 3A       		.uleb128 0x3a
 1055 007e 0B       		.uleb128 0xb
 1056 007f 3B       		.uleb128 0x3b
 1057 0080 05       		.uleb128 0x5
 1058 0081 01       		.uleb128 0x1
 1059 0082 13       		.uleb128 0x13
 1060 0083 00       		.byte	0
 1061 0084 00       		.byte	0
 1062 0085 0C       		.uleb128 0xc
 1063 0086 0D       		.uleb128 0xd
 1064 0087 00       		.byte	0
 1065 0088 03       		.uleb128 0x3
 1066 0089 08       		.uleb128 0x8
 1067 008a 3A       		.uleb128 0x3a
 1068 008b 0B       		.uleb128 0xb
 1069 008c 3B       		.uleb128 0x3b
 1070 008d 05       		.uleb128 0x5
 1071 008e 49       		.uleb128 0x49
 1072 008f 13       		.uleb128 0x13
 1073 0090 38       		.uleb128 0x38
 1074 0091 0A       		.uleb128 0xa
 1075 0092 00       		.byte	0
 1076 0093 00       		.byte	0
 1077 0094 0D       		.uleb128 0xd
 1078 0095 0D       		.uleb128 0xd
 1079 0096 00       		.byte	0
 1080 0097 03       		.uleb128 0x3
 1081 0098 0E       		.uleb128 0xe
 1082 0099 3A       		.uleb128 0x3a
 1083 009a 0B       		.uleb128 0xb
 1084 009b 3B       		.uleb128 0x3b
 1085 009c 05       		.uleb128 0x5
 1086 009d 49       		.uleb128 0x49
 1087 009e 13       		.uleb128 0x13
 1088 009f 38       		.uleb128 0x38
 1089 00a0 0A       		.uleb128 0xa
 1090 00a1 00       		.byte	0
 1091 00a2 00       		.byte	0
 1092 00a3 0E       		.uleb128 0xe
ARM GAS  /tmp/ccbRBq7K.s 			page 26


 1093 00a4 16       		.uleb128 0x16
 1094 00a5 00       		.byte	0
 1095 00a6 03       		.uleb128 0x3
 1096 00a7 0E       		.uleb128 0xe
 1097 00a8 3A       		.uleb128 0x3a
 1098 00a9 0B       		.uleb128 0xb
 1099 00aa 3B       		.uleb128 0x3b
 1100 00ab 05       		.uleb128 0x5
 1101 00ac 49       		.uleb128 0x49
 1102 00ad 13       		.uleb128 0x13
 1103 00ae 00       		.byte	0
 1104 00af 00       		.byte	0
 1105 00b0 0F       		.uleb128 0xf
 1106 00b1 04       		.uleb128 0x4
 1107 00b2 01       		.byte	0x1
 1108 00b3 0B       		.uleb128 0xb
 1109 00b4 0B       		.uleb128 0xb
 1110 00b5 49       		.uleb128 0x49
 1111 00b6 13       		.uleb128 0x13
 1112 00b7 3A       		.uleb128 0x3a
 1113 00b8 0B       		.uleb128 0xb
 1114 00b9 3B       		.uleb128 0x3b
 1115 00ba 0B       		.uleb128 0xb
 1116 00bb 01       		.uleb128 0x1
 1117 00bc 13       		.uleb128 0x13
 1118 00bd 00       		.byte	0
 1119 00be 00       		.byte	0
 1120 00bf 10       		.uleb128 0x10
 1121 00c0 28       		.uleb128 0x28
 1122 00c1 00       		.byte	0
 1123 00c2 03       		.uleb128 0x3
 1124 00c3 0E       		.uleb128 0xe
 1125 00c4 1C       		.uleb128 0x1c
 1126 00c5 0B       		.uleb128 0xb
 1127 00c6 00       		.byte	0
 1128 00c7 00       		.byte	0
 1129 00c8 11       		.uleb128 0x11
 1130 00c9 13       		.uleb128 0x13
 1131 00ca 01       		.byte	0x1
 1132 00cb 0B       		.uleb128 0xb
 1133 00cc 0B       		.uleb128 0xb
 1134 00cd 3A       		.uleb128 0x3a
 1135 00ce 0B       		.uleb128 0xb
 1136 00cf 3B       		.uleb128 0x3b
 1137 00d0 0B       		.uleb128 0xb
 1138 00d1 01       		.uleb128 0x1
 1139 00d2 13       		.uleb128 0x13
 1140 00d3 00       		.byte	0
 1141 00d4 00       		.byte	0
 1142 00d5 12       		.uleb128 0x12
 1143 00d6 0D       		.uleb128 0xd
 1144 00d7 00       		.byte	0
 1145 00d8 03       		.uleb128 0x3
 1146 00d9 0E       		.uleb128 0xe
 1147 00da 3A       		.uleb128 0x3a
 1148 00db 0B       		.uleb128 0xb
 1149 00dc 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccbRBq7K.s 			page 27


 1150 00dd 0B       		.uleb128 0xb
 1151 00de 49       		.uleb128 0x49
 1152 00df 13       		.uleb128 0x13
 1153 00e0 38       		.uleb128 0x38
 1154 00e1 0A       		.uleb128 0xa
 1155 00e2 00       		.byte	0
 1156 00e3 00       		.byte	0
 1157 00e4 13       		.uleb128 0x13
 1158 00e5 0F       		.uleb128 0xf
 1159 00e6 00       		.byte	0
 1160 00e7 0B       		.uleb128 0xb
 1161 00e8 0B       		.uleb128 0xb
 1162 00e9 49       		.uleb128 0x49
 1163 00ea 13       		.uleb128 0x13
 1164 00eb 00       		.byte	0
 1165 00ec 00       		.byte	0
 1166 00ed 14       		.uleb128 0x14
 1167 00ee 2E       		.uleb128 0x2e
 1168 00ef 01       		.byte	0x1
 1169 00f0 3F       		.uleb128 0x3f
 1170 00f1 0C       		.uleb128 0xc
 1171 00f2 03       		.uleb128 0x3
 1172 00f3 0E       		.uleb128 0xe
 1173 00f4 3A       		.uleb128 0x3a
 1174 00f5 0B       		.uleb128 0xb
 1175 00f6 3B       		.uleb128 0x3b
 1176 00f7 05       		.uleb128 0x5
 1177 00f8 27       		.uleb128 0x27
 1178 00f9 0C       		.uleb128 0xc
 1179 00fa 49       		.uleb128 0x49
 1180 00fb 13       		.uleb128 0x13
 1181 00fc 11       		.uleb128 0x11
 1182 00fd 01       		.uleb128 0x1
 1183 00fe 12       		.uleb128 0x12
 1184 00ff 01       		.uleb128 0x1
 1185 0100 40       		.uleb128 0x40
 1186 0101 0A       		.uleb128 0xa
 1187 0102 9742     		.uleb128 0x2117
 1188 0104 0C       		.uleb128 0xc
 1189 0105 01       		.uleb128 0x1
 1190 0106 13       		.uleb128 0x13
 1191 0107 00       		.byte	0
 1192 0108 00       		.byte	0
 1193 0109 15       		.uleb128 0x15
 1194 010a 05       		.uleb128 0x5
 1195 010b 00       		.byte	0
 1196 010c 03       		.uleb128 0x3
 1197 010d 0E       		.uleb128 0xe
 1198 010e 3A       		.uleb128 0x3a
 1199 010f 0B       		.uleb128 0xb
 1200 0110 3B       		.uleb128 0x3b
 1201 0111 05       		.uleb128 0x5
 1202 0112 49       		.uleb128 0x49
 1203 0113 13       		.uleb128 0x13
 1204 0114 02       		.uleb128 0x2
 1205 0115 06       		.uleb128 0x6
 1206 0116 00       		.byte	0
ARM GAS  /tmp/ccbRBq7K.s 			page 28


 1207 0117 00       		.byte	0
 1208 0118 16       		.uleb128 0x16
 1209 0119 2E       		.uleb128 0x2e
 1210 011a 01       		.byte	0x1
 1211 011b 3F       		.uleb128 0x3f
 1212 011c 0C       		.uleb128 0xc
 1213 011d 03       		.uleb128 0x3
 1214 011e 0E       		.uleb128 0xe
 1215 011f 3A       		.uleb128 0x3a
 1216 0120 0B       		.uleb128 0xb
 1217 0121 3B       		.uleb128 0x3b
 1218 0122 05       		.uleb128 0x5
 1219 0123 27       		.uleb128 0x27
 1220 0124 0C       		.uleb128 0xc
 1221 0125 49       		.uleb128 0x49
 1222 0126 13       		.uleb128 0x13
 1223 0127 11       		.uleb128 0x11
 1224 0128 01       		.uleb128 0x1
 1225 0129 12       		.uleb128 0x12
 1226 012a 01       		.uleb128 0x1
 1227 012b 40       		.uleb128 0x40
 1228 012c 06       		.uleb128 0x6
 1229 012d 9742     		.uleb128 0x2117
 1230 012f 0C       		.uleb128 0xc
 1231 0130 01       		.uleb128 0x1
 1232 0131 13       		.uleb128 0x13
 1233 0132 00       		.byte	0
 1234 0133 00       		.byte	0
 1235 0134 17       		.uleb128 0x17
 1236 0135 34       		.uleb128 0x34
 1237 0136 00       		.byte	0
 1238 0137 03       		.uleb128 0x3
 1239 0138 0E       		.uleb128 0xe
 1240 0139 3A       		.uleb128 0x3a
 1241 013a 0B       		.uleb128 0xb
 1242 013b 3B       		.uleb128 0x3b
 1243 013c 05       		.uleb128 0x5
 1244 013d 49       		.uleb128 0x49
 1245 013e 13       		.uleb128 0x13
 1246 013f 00       		.byte	0
 1247 0140 00       		.byte	0
 1248 0141 18       		.uleb128 0x18
 1249 0142 34       		.uleb128 0x34
 1250 0143 00       		.byte	0
 1251 0144 03       		.uleb128 0x3
 1252 0145 0E       		.uleb128 0xe
 1253 0146 3A       		.uleb128 0x3a
 1254 0147 0B       		.uleb128 0xb
 1255 0148 3B       		.uleb128 0x3b
 1256 0149 05       		.uleb128 0x5
 1257 014a 49       		.uleb128 0x49
 1258 014b 13       		.uleb128 0x13
 1259 014c 02       		.uleb128 0x2
 1260 014d 06       		.uleb128 0x6
 1261 014e 00       		.byte	0
 1262 014f 00       		.byte	0
 1263 0150 19       		.uleb128 0x19
ARM GAS  /tmp/ccbRBq7K.s 			page 29


 1264 0151 2E       		.uleb128 0x2e
 1265 0152 01       		.byte	0x1
 1266 0153 3F       		.uleb128 0x3f
 1267 0154 0C       		.uleb128 0xc
 1268 0155 03       		.uleb128 0x3
 1269 0156 0E       		.uleb128 0xe
 1270 0157 3A       		.uleb128 0x3a
 1271 0158 0B       		.uleb128 0xb
 1272 0159 3B       		.uleb128 0x3b
 1273 015a 0B       		.uleb128 0xb
 1274 015b 27       		.uleb128 0x27
 1275 015c 0C       		.uleb128 0xc
 1276 015d 49       		.uleb128 0x49
 1277 015e 13       		.uleb128 0x13
 1278 015f 11       		.uleb128 0x11
 1279 0160 01       		.uleb128 0x1
 1280 0161 12       		.uleb128 0x12
 1281 0162 01       		.uleb128 0x1
 1282 0163 40       		.uleb128 0x40
 1283 0164 06       		.uleb128 0x6
 1284 0165 9742     		.uleb128 0x2117
 1285 0167 0C       		.uleb128 0xc
 1286 0168 01       		.uleb128 0x1
 1287 0169 13       		.uleb128 0x13
 1288 016a 00       		.byte	0
 1289 016b 00       		.byte	0
 1290 016c 1A       		.uleb128 0x1a
 1291 016d 05       		.uleb128 0x5
 1292 016e 00       		.byte	0
 1293 016f 03       		.uleb128 0x3
 1294 0170 0E       		.uleb128 0xe
 1295 0171 3A       		.uleb128 0x3a
 1296 0172 0B       		.uleb128 0xb
 1297 0173 3B       		.uleb128 0x3b
 1298 0174 0B       		.uleb128 0xb
 1299 0175 49       		.uleb128 0x49
 1300 0176 13       		.uleb128 0x13
 1301 0177 02       		.uleb128 0x2
 1302 0178 06       		.uleb128 0x6
 1303 0179 00       		.byte	0
 1304 017a 00       		.byte	0
 1305 017b 1B       		.uleb128 0x1b
 1306 017c 34       		.uleb128 0x34
 1307 017d 00       		.byte	0
 1308 017e 03       		.uleb128 0x3
 1309 017f 0E       		.uleb128 0xe
 1310 0180 3A       		.uleb128 0x3a
 1311 0181 0B       		.uleb128 0xb
 1312 0182 3B       		.uleb128 0x3b
 1313 0183 0B       		.uleb128 0xb
 1314 0184 49       		.uleb128 0x49
 1315 0185 13       		.uleb128 0x13
 1316 0186 02       		.uleb128 0x2
 1317 0187 06       		.uleb128 0x6
 1318 0188 00       		.byte	0
 1319 0189 00       		.byte	0
 1320 018a 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccbRBq7K.s 			page 30


 1321 018b 2E       		.uleb128 0x2e
 1322 018c 01       		.byte	0x1
 1323 018d 3F       		.uleb128 0x3f
 1324 018e 0C       		.uleb128 0xc
 1325 018f 03       		.uleb128 0x3
 1326 0190 0E       		.uleb128 0xe
 1327 0191 3A       		.uleb128 0x3a
 1328 0192 0B       		.uleb128 0xb
 1329 0193 3B       		.uleb128 0x3b
 1330 0194 0B       		.uleb128 0xb
 1331 0195 27       		.uleb128 0x27
 1332 0196 0C       		.uleb128 0xc
 1333 0197 20       		.uleb128 0x20
 1334 0198 0B       		.uleb128 0xb
 1335 0199 01       		.uleb128 0x1
 1336 019a 13       		.uleb128 0x13
 1337 019b 00       		.byte	0
 1338 019c 00       		.byte	0
 1339 019d 1D       		.uleb128 0x1d
 1340 019e 05       		.uleb128 0x5
 1341 019f 00       		.byte	0
 1342 01a0 03       		.uleb128 0x3
 1343 01a1 0E       		.uleb128 0xe
 1344 01a2 3A       		.uleb128 0x3a
 1345 01a3 0B       		.uleb128 0xb
 1346 01a4 3B       		.uleb128 0x3b
 1347 01a5 0B       		.uleb128 0xb
 1348 01a6 49       		.uleb128 0x49
 1349 01a7 13       		.uleb128 0x13
 1350 01a8 00       		.byte	0
 1351 01a9 00       		.byte	0
 1352 01aa 1E       		.uleb128 0x1e
 1353 01ab 2E       		.uleb128 0x2e
 1354 01ac 01       		.byte	0x1
 1355 01ad 3F       		.uleb128 0x3f
 1356 01ae 0C       		.uleb128 0xc
 1357 01af 03       		.uleb128 0x3
 1358 01b0 0E       		.uleb128 0xe
 1359 01b1 3A       		.uleb128 0x3a
 1360 01b2 0B       		.uleb128 0xb
 1361 01b3 3B       		.uleb128 0x3b
 1362 01b4 0B       		.uleb128 0xb
 1363 01b5 27       		.uleb128 0x27
 1364 01b6 0C       		.uleb128 0xc
 1365 01b7 01       		.uleb128 0x1
 1366 01b8 13       		.uleb128 0x13
 1367 01b9 00       		.byte	0
 1368 01ba 00       		.byte	0
 1369 01bb 1F       		.uleb128 0x1f
 1370 01bc 898201   		.uleb128 0x4109
 1371 01bf 01       		.byte	0x1
 1372 01c0 11       		.uleb128 0x11
 1373 01c1 01       		.uleb128 0x1
 1374 01c2 31       		.uleb128 0x31
 1375 01c3 13       		.uleb128 0x13
 1376 01c4 00       		.byte	0
 1377 01c5 00       		.byte	0
ARM GAS  /tmp/ccbRBq7K.s 			page 31


 1378 01c6 20       		.uleb128 0x20
 1379 01c7 8A8201   		.uleb128 0x410a
 1380 01ca 00       		.byte	0
 1381 01cb 02       		.uleb128 0x2
 1382 01cc 0A       		.uleb128 0xa
 1383 01cd 9142     		.uleb128 0x2111
 1384 01cf 0A       		.uleb128 0xa
 1385 01d0 00       		.byte	0
 1386 01d1 00       		.byte	0
 1387 01d2 21       		.uleb128 0x21
 1388 01d3 2E       		.uleb128 0x2e
 1389 01d4 01       		.byte	0x1
 1390 01d5 31       		.uleb128 0x31
 1391 01d6 13       		.uleb128 0x13
 1392 01d7 11       		.uleb128 0x11
 1393 01d8 01       		.uleb128 0x1
 1394 01d9 12       		.uleb128 0x12
 1395 01da 01       		.uleb128 0x1
 1396 01db 40       		.uleb128 0x40
 1397 01dc 0A       		.uleb128 0xa
 1398 01dd 9742     		.uleb128 0x2117
 1399 01df 0C       		.uleb128 0xc
 1400 01e0 00       		.byte	0
 1401 01e1 00       		.byte	0
 1402 01e2 22       		.uleb128 0x22
 1403 01e3 05       		.uleb128 0x5
 1404 01e4 00       		.byte	0
 1405 01e5 31       		.uleb128 0x31
 1406 01e6 13       		.uleb128 0x13
 1407 01e7 02       		.uleb128 0x2
 1408 01e8 0A       		.uleb128 0xa
 1409 01e9 00       		.byte	0
 1410 01ea 00       		.byte	0
 1411 01eb 00       		.byte	0
 1412              		.section	.debug_loc,"",%progbits
 1413              	.Ldebug_loc0:
 1414              	.LLST15:
 1415 0000 A2000000 		.4byte	.LVL21-.Ltext0
 1416 0004 A4000000 		.4byte	.LVL22-.Ltext0
 1417 0008 0100     		.2byte	0x1
 1418 000a 50       		.byte	0x50
 1419 000b A4000000 		.4byte	.LVL22-.Ltext0
 1420 000f A6000000 		.4byte	.LFE71-.Ltext0
 1421 0013 0400     		.2byte	0x4
 1422 0015 F3       		.byte	0xf3
 1423 0016 01       		.uleb128 0x1
 1424 0017 50       		.byte	0x50
 1425 0018 9F       		.byte	0x9f
 1426 0019 00000000 		.4byte	0
 1427 001d 00000000 		.4byte	0
 1428              	.LLST10:
 1429 0021 78000000 		.4byte	.LFB70-.Ltext0
 1430 0025 7C000000 		.4byte	.LCFI3-.Ltext0
 1431 0029 0200     		.2byte	0x2
 1432 002b 7D       		.byte	0x7d
 1433 002c 00       		.sleb128 0
 1434 002d 7C000000 		.4byte	.LCFI3-.Ltext0
ARM GAS  /tmp/ccbRBq7K.s 			page 32


 1435 0031 A2000000 		.4byte	.LFE70-.Ltext0
 1436 0035 0200     		.2byte	0x2
 1437 0037 7D       		.byte	0x7d
 1438 0038 08       		.sleb128 8
 1439 0039 00000000 		.4byte	0
 1440 003d 00000000 		.4byte	0
 1441              	.LLST11:
 1442 0041 78000000 		.4byte	.LVL15-.Ltext0
 1443 0045 98000000 		.4byte	.LVL19-.Ltext0
 1444 0049 0100     		.2byte	0x1
 1445 004b 50       		.byte	0x50
 1446 004c 98000000 		.4byte	.LVL19-.Ltext0
 1447 0050 9A000000 		.4byte	.LVL20-.Ltext0
 1448 0054 0400     		.2byte	0x4
 1449 0056 F3       		.byte	0xf3
 1450 0057 01       		.uleb128 0x1
 1451 0058 50       		.byte	0x50
 1452 0059 9F       		.byte	0x9f
 1453 005a 9A000000 		.4byte	.LVL20-.Ltext0
 1454 005e A2000000 		.4byte	.LFE70-.Ltext0
 1455 0062 0100     		.2byte	0x1
 1456 0064 50       		.byte	0x50
 1457 0065 00000000 		.4byte	0
 1458 0069 00000000 		.4byte	0
 1459              	.LLST12:
 1460 006d 78000000 		.4byte	.LVL15-.Ltext0
 1461 0071 8C000000 		.4byte	.LVL17-.Ltext0
 1462 0075 0100     		.2byte	0x1
 1463 0077 51       		.byte	0x51
 1464 0078 8C000000 		.4byte	.LVL17-.Ltext0
 1465 007c A2000000 		.4byte	.LFE70-.Ltext0
 1466 0080 0400     		.2byte	0x4
 1467 0082 F3       		.byte	0xf3
 1468 0083 01       		.uleb128 0x1
 1469 0084 51       		.byte	0x51
 1470 0085 9F       		.byte	0x9f
 1471 0086 00000000 		.4byte	0
 1472 008a 00000000 		.4byte	0
 1473              	.LLST13:
 1474 008e 78000000 		.4byte	.LVL15-.Ltext0
 1475 0092 84000000 		.4byte	.LVL16-.Ltext0
 1476 0096 0100     		.2byte	0x1
 1477 0098 52       		.byte	0x52
 1478 0099 84000000 		.4byte	.LVL16-.Ltext0
 1479 009d A2000000 		.4byte	.LFE70-.Ltext0
 1480 00a1 0400     		.2byte	0x4
 1481 00a3 F3       		.byte	0xf3
 1482 00a4 01       		.uleb128 0x1
 1483 00a5 52       		.byte	0x52
 1484 00a6 9F       		.byte	0x9f
 1485 00a7 00000000 		.4byte	0
 1486 00ab 00000000 		.4byte	0
 1487              	.LLST14:
 1488 00af 78000000 		.4byte	.LVL15-.Ltext0
 1489 00b3 94000000 		.4byte	.LVL18-.Ltext0
 1490 00b7 0200     		.2byte	0x2
 1491 00b9 30       		.byte	0x30
ARM GAS  /tmp/ccbRBq7K.s 			page 33


 1492 00ba 9F       		.byte	0x9f
 1493 00bb 94000000 		.4byte	.LVL18-.Ltext0
 1494 00bf 9A000000 		.4byte	.LVL20-.Ltext0
 1495 00c3 0100     		.2byte	0x1
 1496 00c5 53       		.byte	0x53
 1497 00c6 9A000000 		.4byte	.LVL20-.Ltext0
 1498 00ca A2000000 		.4byte	.LFE70-.Ltext0
 1499 00ce 0200     		.2byte	0x2
 1500 00d0 30       		.byte	0x30
 1501 00d1 9F       		.byte	0x9f
 1502 00d2 00000000 		.4byte	0
 1503 00d6 00000000 		.4byte	0
 1504              	.LLST4:
 1505 00da 56000000 		.4byte	.LFB69-.Ltext0
 1506 00de 5C000000 		.4byte	.LCFI2-.Ltext0
 1507 00e2 0200     		.2byte	0x2
 1508 00e4 7D       		.byte	0x7d
 1509 00e5 00       		.sleb128 0
 1510 00e6 5C000000 		.4byte	.LCFI2-.Ltext0
 1511 00ea 78000000 		.4byte	.LFE69-.Ltext0
 1512 00ee 0200     		.2byte	0x2
 1513 00f0 7D       		.byte	0x7d
 1514 00f1 08       		.sleb128 8
 1515 00f2 00000000 		.4byte	0
 1516 00f6 00000000 		.4byte	0
 1517              	.LLST5:
 1518 00fa 56000000 		.4byte	.LVL9-.Ltext0
 1519 00fe 5A000000 		.4byte	.LVL10-.Ltext0
 1520 0102 0100     		.2byte	0x1
 1521 0104 50       		.byte	0x50
 1522 0105 5A000000 		.4byte	.LVL10-.Ltext0
 1523 0109 78000000 		.4byte	.LFE69-.Ltext0
 1524 010d 0100     		.2byte	0x1
 1525 010f 53       		.byte	0x53
 1526 0110 00000000 		.4byte	0
 1527 0114 00000000 		.4byte	0
 1528              	.LLST6:
 1529 0118 56000000 		.4byte	.LVL9-.Ltext0
 1530 011c 62000000 		.4byte	.LVL12-.Ltext0
 1531 0120 0100     		.2byte	0x1
 1532 0122 51       		.byte	0x51
 1533 0123 62000000 		.4byte	.LVL12-.Ltext0
 1534 0127 78000000 		.4byte	.LFE69-.Ltext0
 1535 012b 0400     		.2byte	0x4
 1536 012d F3       		.byte	0xf3
 1537 012e 01       		.uleb128 0x1
 1538 012f 51       		.byte	0x51
 1539 0130 9F       		.byte	0x9f
 1540 0131 00000000 		.4byte	0
 1541 0135 00000000 		.4byte	0
 1542              	.LLST7:
 1543 0139 56000000 		.4byte	.LVL9-.Ltext0
 1544 013d 62000000 		.4byte	.LVL12-.Ltext0
 1545 0141 0100     		.2byte	0x1
 1546 0143 52       		.byte	0x52
 1547 0144 62000000 		.4byte	.LVL12-.Ltext0
 1548 0148 78000000 		.4byte	.LFE69-.Ltext0
ARM GAS  /tmp/ccbRBq7K.s 			page 34


 1549 014c 0400     		.2byte	0x4
 1550 014e F3       		.byte	0xf3
 1551 014f 01       		.uleb128 0x1
 1552 0150 52       		.byte	0x52
 1553 0151 9F       		.byte	0x9f
 1554 0152 00000000 		.4byte	0
 1555 0156 00000000 		.4byte	0
 1556              	.LLST8:
 1557 015a 5E000000 		.4byte	.LVL11-.Ltext0
 1558 015e 62000000 		.4byte	.LVL12-.Ltext0
 1559 0162 0200     		.2byte	0x2
 1560 0164 30       		.byte	0x30
 1561 0165 9F       		.byte	0x9f
 1562 0166 00000000 		.4byte	0
 1563 016a 00000000 		.4byte	0
 1564              	.LLST9:
 1565 016e 56000000 		.4byte	.LVL9-.Ltext0
 1566 0172 6C000000 		.4byte	.LVL13-.Ltext0
 1567 0176 0200     		.2byte	0x2
 1568 0178 30       		.byte	0x30
 1569 0179 9F       		.byte	0x9f
 1570 017a 6C000000 		.4byte	.LVL13-.Ltext0
 1571 017e 70000000 		.4byte	.LVL14-.Ltext0
 1572 0182 0100     		.2byte	0x1
 1573 0184 50       		.byte	0x50
 1574 0185 70000000 		.4byte	.LVL14-.Ltext0
 1575 0189 78000000 		.4byte	.LFE69-.Ltext0
 1576 018d 0200     		.2byte	0x2
 1577 018f 30       		.byte	0x30
 1578 0190 9F       		.byte	0x9f
 1579 0191 00000000 		.4byte	0
 1580 0195 00000000 		.4byte	0
 1581              	.LLST2:
 1582 0199 24000000 		.4byte	.LFB66-.Ltext0
 1583 019d 26000000 		.4byte	.LCFI1-.Ltext0
 1584 01a1 0200     		.2byte	0x2
 1585 01a3 7D       		.byte	0x7d
 1586 01a4 00       		.sleb128 0
 1587 01a5 26000000 		.4byte	.LCFI1-.Ltext0
 1588 01a9 56000000 		.4byte	.LFE66-.Ltext0
 1589 01ad 0200     		.2byte	0x2
 1590 01af 7D       		.byte	0x7d
 1591 01b0 10       		.sleb128 16
 1592 01b1 00000000 		.4byte	0
 1593 01b5 00000000 		.4byte	0
 1594              	.LLST3:
 1595 01b9 24000000 		.4byte	.LVL5-.Ltext0
 1596 01bd 49000000 		.4byte	.LVL6-1-.Ltext0
 1597 01c1 0100     		.2byte	0x1
 1598 01c3 50       		.byte	0x50
 1599 01c4 49000000 		.4byte	.LVL6-1-.Ltext0
 1600 01c8 52000000 		.4byte	.LVL7-.Ltext0
 1601 01cc 0100     		.2byte	0x1
 1602 01ce 55       		.byte	0x55
 1603 01cf 52000000 		.4byte	.LVL7-.Ltext0
 1604 01d3 54000000 		.4byte	.LVL8-.Ltext0
 1605 01d7 0100     		.2byte	0x1
ARM GAS  /tmp/ccbRBq7K.s 			page 35


 1606 01d9 50       		.byte	0x50
 1607 01da 54000000 		.4byte	.LVL8-.Ltext0
 1608 01de 56000000 		.4byte	.LFE66-.Ltext0
 1609 01e2 0100     		.2byte	0x1
 1610 01e4 55       		.byte	0x55
 1611 01e5 00000000 		.4byte	0
 1612 01e9 00000000 		.4byte	0
 1613              	.LLST0:
 1614 01ed 02000000 		.4byte	.LFB65-.Ltext0
 1615 01f1 04000000 		.4byte	.LCFI0-.Ltext0
 1616 01f5 0200     		.2byte	0x2
 1617 01f7 7D       		.byte	0x7d
 1618 01f8 00       		.sleb128 0
 1619 01f9 04000000 		.4byte	.LCFI0-.Ltext0
 1620 01fd 22000000 		.4byte	.LFE65-.Ltext0
 1621 0201 0200     		.2byte	0x2
 1622 0203 7D       		.byte	0x7d
 1623 0204 08       		.sleb128 8
 1624 0205 00000000 		.4byte	0
 1625 0209 00000000 		.4byte	0
 1626              	.LLST1:
 1627 020d 02000000 		.4byte	.LVL0-.Ltext0
 1628 0211 15000000 		.4byte	.LVL1-1-.Ltext0
 1629 0215 0100     		.2byte	0x1
 1630 0217 50       		.byte	0x50
 1631 0218 15000000 		.4byte	.LVL1-1-.Ltext0
 1632 021c 1E000000 		.4byte	.LVL2-.Ltext0
 1633 0220 0100     		.2byte	0x1
 1634 0222 54       		.byte	0x54
 1635 0223 1E000000 		.4byte	.LVL2-.Ltext0
 1636 0227 20000000 		.4byte	.LVL3-.Ltext0
 1637 022b 0100     		.2byte	0x1
 1638 022d 50       		.byte	0x50
 1639 022e 20000000 		.4byte	.LVL3-.Ltext0
 1640 0232 22000000 		.4byte	.LFE65-.Ltext0
 1641 0236 0100     		.2byte	0x1
 1642 0238 54       		.byte	0x54
 1643 0239 00000000 		.4byte	0
 1644 023d 00000000 		.4byte	0
 1645              		.section	.debug_aranges,"",%progbits
 1646 0000 1C000000 		.4byte	0x1c
 1647 0004 0200     		.2byte	0x2
 1648 0006 00000000 		.4byte	.Ldebug_info0
 1649 000a 04       		.byte	0x4
 1650 000b 00       		.byte	0
 1651 000c 0000     		.2byte	0
 1652 000e 0000     		.2byte	0
 1653 0010 00000000 		.4byte	.Ltext0
 1654 0014 A6000000 		.4byte	.Letext0-.Ltext0
 1655 0018 00000000 		.4byte	0
 1656 001c 00000000 		.4byte	0
 1657              		.section	.debug_line,"",%progbits
 1658              	.Ldebug_line0:
 1659 0000 9D010000 		.section	.debug_str,"MS",%progbits,1
 1659      02002601 
 1659      00000201 
 1659      FB0E0D00 
ARM GAS  /tmp/ccbRBq7K.s 			page 36


 1659      01010101 
 1660              	.LASF27:
 1661 0000 48414C5F 		.ascii	"HAL_ERROR\000"
 1661      4552524F 
 1661      5200
 1662              	.LASF54:
 1663 000a 70427566 		.ascii	"pBuffer\000"
 1663      66657200 
 1664              	.LASF31:
 1665 0012 48414C5F 		.ascii	"HAL_UNLOCKED\000"
 1665      554E4C4F 
 1665      434B4544 
 1665      00
 1666              	.LASF35:
 1667 001f 48414C5F 		.ascii	"HAL_CRC_STATE_READY\000"
 1667      4352435F 
 1667      53544154 
 1667      455F5245 
 1667      41445900 
 1668              	.LASF29:
 1669 0033 48414C5F 		.ascii	"HAL_TIMEOUT\000"
 1669      54494D45 
 1669      4F555400 
 1670              	.LASF28:
 1671 003f 48414C5F 		.ascii	"HAL_BUSY\000"
 1671      42555359 
 1671      00
 1672              	.LASF62:
 1673 0048 7372632F 		.ascii	"src/stm32f1xx_hal_crc.c\000"
 1673      73746D33 
 1673      32663178 
 1673      785F6861 
 1673      6C5F6372 
 1674              	.LASF58:
 1675 0060 696E6465 		.ascii	"index\000"
 1675      7800
 1676              	.LASF57:
 1677 0066 74656D70 		.ascii	"temp\000"
 1677      00
 1678              	.LASF2:
 1679 006b 73686F72 		.ascii	"short int\000"
 1679      7420696E 
 1679      7400
 1680              	.LASF17:
 1681 0075 73697A65 		.ascii	"sizetype\000"
 1681      74797065 
 1681      00
 1682              	.LASF4:
 1683 007e 5F5F7569 		.ascii	"__uint16_t\000"
 1683      6E743136 
 1683      5F7400
 1684              	.LASF8:
 1685 0089 5F5F7569 		.ascii	"__uint32_t\000"
 1685      6E743332 
 1685      5F7400
 1686              	.LASF65:
 1687 0094 48414C5F 		.ascii	"HAL_CRC_MspInit\000"
ARM GAS  /tmp/ccbRBq7K.s 			page 37


 1687      4352435F 
 1687      4D737049 
 1687      6E697400 
 1688              	.LASF34:
 1689 00a4 48414C5F 		.ascii	"HAL_CRC_STATE_RESET\000"
 1689      4352435F 
 1689      53544154 
 1689      455F5245 
 1689      53455400 
 1690              	.LASF49:
 1691 00b8 75775469 		.ascii	"uwTickPrio\000"
 1691      636B5072 
 1691      696F00
 1692              	.LASF61:
 1693 00c3 474E5520 		.ascii	"GNU C11 6.3.1 20170620 -mcpu=cortex-m3 -mthumb -g -"
 1693      43313120 
 1693      362E332E 
 1693      31203230 
 1693      31373036 
 1694 00f6 67647761 		.ascii	"gdwarf-2 -Os -fomit-frame-pointer\000"
 1694      72662D32 
 1694      202D4F73 
 1694      202D666F 
 1694      6D69742D 
 1695              	.LASF26:
 1696 0118 48414C5F 		.ascii	"HAL_OK\000"
 1696      4F4B00
 1697              	.LASF13:
 1698 011f 75696E74 		.ascii	"uint8_t\000"
 1698      385F7400 
 1699              	.LASF20:
 1700 0127 41484250 		.ascii	"AHBPrescTable\000"
 1700      72657363 
 1700      5461626C 
 1700      6500
 1701              	.LASF36:
 1702 0135 48414C5F 		.ascii	"HAL_CRC_STATE_BUSY\000"
 1702      4352435F 
 1702      53544154 
 1702      455F4255 
 1702      535900
 1703              	.LASF55:
 1704 0148 42756666 		.ascii	"BufferLength\000"
 1704      65724C65 
 1704      6E677468 
 1704      00
 1705              	.LASF10:
 1706 0155 6C6F6E67 		.ascii	"long long int\000"
 1706      206C6F6E 
 1706      6720696E 
 1706      7400
 1707              	.LASF51:
 1708 0163 48414C5F 		.ascii	"HAL_CRC_GetState\000"
 1708      4352435F 
 1708      47657453 
 1708      74617465 
 1708      00
ARM GAS  /tmp/ccbRBq7K.s 			page 38


 1709              	.LASF42:
 1710 0174 53746174 		.ascii	"State\000"
 1710      6500
 1711              	.LASF7:
 1712 017a 6C6F6E67 		.ascii	"long int\000"
 1712      20696E74 
 1712      00
 1713              	.LASF41:
 1714 0183 4C6F636B 		.ascii	"Lock\000"
 1714      00
 1715              	.LASF3:
 1716 0188 5F5F7569 		.ascii	"__uint8_t\000"
 1716      6E74385F 
 1716      7400
 1717              	.LASF30:
 1718 0192 48414C5F 		.ascii	"HAL_StatusTypeDef\000"
 1718      53746174 
 1718      75735479 
 1718      70654465 
 1718      6600
 1719              	.LASF56:
 1720 01a4 48414C5F 		.ascii	"HAL_CRC_Accumulate\000"
 1720      4352435F 
 1720      41636375 
 1720      6D756C61 
 1720      746500
 1721              	.LASF25:
 1722 01b7 6C6F6E67 		.ascii	"long double\000"
 1722      20646F75 
 1722      626C6500 
 1723              	.LASF1:
 1724 01c3 756E7369 		.ascii	"unsigned char\000"
 1724      676E6564 
 1724      20636861 
 1724      7200
 1725              	.LASF63:
 1726 01d1 2F686F6D 		.ascii	"/home/berndoj/git/stm32tctst/lib/stm32f1hal\000"
 1726      652F6265 
 1726      726E646F 
 1726      6A2F6769 
 1726      742F7374 
 1727              	.LASF21:
 1728 01fd 41504250 		.ascii	"APBPrescTable\000"
 1728      72657363 
 1728      5461626C 
 1728      6500
 1729              	.LASF0:
 1730 020b 7369676E 		.ascii	"signed char\000"
 1730      65642063 
 1730      68617200 
 1731              	.LASF11:
 1732 0217 6C6F6E67 		.ascii	"long long unsigned int\000"
 1732      206C6F6E 
 1732      6720756E 
 1732      7369676E 
 1732      65642069 
 1733              	.LASF16:
ARM GAS  /tmp/ccbRBq7K.s 			page 39


 1734 022e 75696E74 		.ascii	"uint32_t\000"
 1734      33325F74 
 1734      00
 1735              	.LASF50:
 1736 0237 75775469 		.ascii	"uwTickFreq\000"
 1736      636B4672 
 1736      657100
 1737              	.LASF12:
 1738 0242 756E7369 		.ascii	"unsigned int\000"
 1738      676E6564 
 1738      20696E74 
 1738      00
 1739              	.LASF14:
 1740 024f 75696E74 		.ascii	"uint16_t\000"
 1740      31365F74 
 1740      00
 1741              	.LASF43:
 1742 0258 4352435F 		.ascii	"CRC_HandleTypeDef\000"
 1742      48616E64 
 1742      6C655479 
 1742      70654465 
 1742      6600
 1743              	.LASF40:
 1744 026a 496E7374 		.ascii	"Instance\000"
 1744      616E6365 
 1744      00
 1745              	.LASF46:
 1746 0273 48414C5F 		.ascii	"HAL_TICK_FREQ_1KHZ\000"
 1746      5449434B 
 1746      5F465245 
 1746      515F314B 
 1746      485A00
 1747              	.LASF5:
 1748 0286 73686F72 		.ascii	"short unsigned int\000"
 1748      7420756E 
 1748      7369676E 
 1748      65642069 
 1748      6E7400
 1749              	.LASF39:
 1750 0299 48414C5F 		.ascii	"HAL_CRC_StateTypeDef\000"
 1750      4352435F 
 1750      53746174 
 1750      65547970 
 1750      65446566 
 1751              	.LASF15:
 1752 02ae 696E7433 		.ascii	"int32_t\000"
 1752      325F7400 
 1753              	.LASF19:
 1754 02b6 53797374 		.ascii	"SystemCoreClock\000"
 1754      656D436F 
 1754      7265436C 
 1754      6F636B00 
 1755              	.LASF45:
 1756 02c6 48414C5F 		.ascii	"HAL_TICK_FREQ_100HZ\000"
 1756      5449434B 
 1756      5F465245 
 1756      515F3130 
ARM GAS  /tmp/ccbRBq7K.s 			page 40


 1756      30485A00 
 1757              	.LASF44:
 1758 02da 48414C5F 		.ascii	"HAL_TICK_FREQ_10HZ\000"
 1758      5449434B 
 1758      5F465245 
 1758      515F3130 
 1758      485A00
 1759              	.LASF32:
 1760 02ed 48414C5F 		.ascii	"HAL_LOCKED\000"
 1760      4C4F434B 
 1760      454400
 1761              	.LASF22:
 1762 02f8 52455345 		.ascii	"RESERVED0\000"
 1762      52564544 
 1762      3000
 1763              	.LASF23:
 1764 0302 52455345 		.ascii	"RESERVED1\000"
 1764      52564544 
 1764      3100
 1765              	.LASF9:
 1766 030c 6C6F6E67 		.ascii	"long unsigned int\000"
 1766      20756E73 
 1766      69676E65 
 1766      6420696E 
 1766      7400
 1767              	.LASF64:
 1768 031e 48414C5F 		.ascii	"HAL_CRC_MspDeInit\000"
 1768      4352435F 
 1768      4D737044 
 1768      65496E69 
 1768      7400
 1769              	.LASF38:
 1770 0330 48414C5F 		.ascii	"HAL_CRC_STATE_ERROR\000"
 1770      4352435F 
 1770      53544154 
 1770      455F4552 
 1770      524F5200 
 1771              	.LASF48:
 1772 0344 48414C5F 		.ascii	"HAL_TickFreqTypeDef\000"
 1772      5469636B 
 1772      46726571 
 1772      54797065 
 1772      44656600 
 1773              	.LASF6:
 1774 0358 5F5F696E 		.ascii	"__int32_t\000"
 1774      7433325F 
 1774      7400
 1775              	.LASF24:
 1776 0362 4352435F 		.ascii	"CRC_TypeDef\000"
 1776      54797065 
 1776      44656600 
 1777              	.LASF37:
 1778 036e 48414C5F 		.ascii	"HAL_CRC_STATE_TIMEOUT\000"
 1778      4352435F 
 1778      53544154 
 1778      455F5449 
 1778      4D454F55 
ARM GAS  /tmp/ccbRBq7K.s 			page 41


 1779              	.LASF52:
 1780 0384 48414C5F 		.ascii	"HAL_CRC_Calculate\000"
 1780      4352435F 
 1780      43616C63 
 1780      756C6174 
 1780      6500
 1781              	.LASF47:
 1782 0396 48414C5F 		.ascii	"HAL_TICK_FREQ_DEFAULT\000"
 1782      5449434B 
 1782      5F465245 
 1782      515F4445 
 1782      4641554C 
 1783              	.LASF18:
 1784 03ac 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1784      52784275 
 1784      66666572 
 1784      00
 1785              	.LASF59:
 1786 03b9 48414C5F 		.ascii	"HAL_CRC_DeInit\000"
 1786      4352435F 
 1786      4465496E 
 1786      697400
 1787              	.LASF33:
 1788 03c8 48414C5F 		.ascii	"HAL_LockTypeDef\000"
 1788      4C6F636B 
 1788      54797065 
 1788      44656600 
 1789              	.LASF60:
 1790 03d8 48414C5F 		.ascii	"HAL_CRC_Init\000"
 1790      4352435F 
 1790      496E6974 
 1790      00
 1791              	.LASF53:
 1792 03e5 68637263 		.ascii	"hcrc\000"
 1792      00
 1793              		.ident	"GCC: (15:6.3.1+svn253039-1build1) 6.3.1 20170620"
ARM GAS  /tmp/ccbRBq7K.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_crc.c
     /tmp/ccbRBq7K.s:69     .text:0000000000000000 $t
     /tmp/ccbRBq7K.s:76     .text:0000000000000000 HAL_CRC_MspInit
     /tmp/ccbRBq7K.s:93     .text:0000000000000002 HAL_CRC_Init
     /tmp/ccbRBq7K.s:145    .text:0000000000000022 HAL_CRC_MspDeInit
     /tmp/ccbRBq7K.s:164    .text:0000000000000024 HAL_CRC_DeInit
     /tmp/ccbRBq7K.s:229    .text:0000000000000056 HAL_CRC_Accumulate
     /tmp/ccbRBq7K.s:281    .text:0000000000000078 HAL_CRC_Calculate
     /tmp/ccbRBq7K.s:337    .text:00000000000000a2 HAL_CRC_GetState
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
