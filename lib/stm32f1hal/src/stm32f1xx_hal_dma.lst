ARM GAS  /tmp/cck4KHRF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"stm32f1xx_hal_dma.c"
  12              	@ GNU C11 (15:6.3.1+svn253039-1build1) version 6.3.1 20170620 (arm-none-eabi)
  13              	@	compiled by GNU C version 7.2.0, GMP version 6.1.2, MPFR version 4.0.1-rc1, MPC version 1.1.0, is
  14              	@ warning: MPFR header version 4.0.1-rc1 differs from library version 4.0.1.
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I ./inc -I ./inc/Legacy -I ../cmsisstm32f1xx/inc
  17              	@ -I ../cmsiscore/inc -imultilib thumb/v7-m -D__USES_INITFINI__
  18              	@ -D STM32F103x6 -D RUN_FROM_FLASH=1 -D __c src/stm32f1xx_hal_dma.c
  19              	@ -mcpu=cortex-m3 -mthumb -auxbase-strip bin/stm32f1xx_hal_dma.o -g
  20              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  21              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  22              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  23              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  24              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  25              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  26              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers
  27              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  28              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  29              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  30              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  31              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  32              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  33              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  34              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  35              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  36              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  37              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  38              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  39              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  40              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  41              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  42              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  43              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  44              	@ -freg-struct-return -freorder-blocks -freorder-functions
  45              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  46              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  47              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  48              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  49              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  50              	@ -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  51              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  53              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  54              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  55              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  56              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  57              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
ARM GAS  /tmp/cck4KHRF.s 			page 2


  58              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  59              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  60              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  61              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  62              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  63              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  64              	@ -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.align	1
  70              		.global	HAL_DMA_Init
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  75              		.type	HAL_DMA_Init, %function
  76              	HAL_DMA_Init:
  77              	.LFB65:
  78              		.file 1 "src/stm32f1xx_hal_dma.c"
   1:src/stm32f1xx_hal_dma.c **** /**
   2:src/stm32f1xx_hal_dma.c ****   ******************************************************************************
   3:src/stm32f1xx_hal_dma.c ****   * @file    stm32f1xx_hal_dma.c
   4:src/stm32f1xx_hal_dma.c ****   * @author  MCD Application Team
   5:src/stm32f1xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:src/stm32f1xx_hal_dma.c ****   *         This file provides firmware functions to manage the following
   7:src/stm32f1xx_hal_dma.c ****   *         functionalities of the Direct Memory Access (DMA) peripheral:
   8:src/stm32f1xx_hal_dma.c ****   *           + Initialization and de-initialization functions
   9:src/stm32f1xx_hal_dma.c ****   *           + IO operation functions
  10:src/stm32f1xx_hal_dma.c ****   *           + Peripheral State and errors functions
  11:src/stm32f1xx_hal_dma.c ****   @verbatim
  12:src/stm32f1xx_hal_dma.c ****   ==============================================================================
  13:src/stm32f1xx_hal_dma.c ****                         ##### How to use this driver #####
  14:src/stm32f1xx_hal_dma.c ****   ==============================================================================
  15:src/stm32f1xx_hal_dma.c ****   [..]
  16:src/stm32f1xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Channel
  17:src/stm32f1xx_hal_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is 
  18:src/stm32f1xx_hal_dma.c ****        necessary). Please refer to the Reference manual for connection between peripherals
  19:src/stm32f1xx_hal_dma.c ****        and DMA requests.
  20:src/stm32f1xx_hal_dma.c **** 
  21:src/stm32f1xx_hal_dma.c ****    (#) For a given Channel, program the required configuration through the following parameters:
  22:src/stm32f1xx_hal_dma.c ****        Channel request, Transfer Direction, Source and Destination data formats,
  23:src/stm32f1xx_hal_dma.c ****        Circular or Normal mode, Channel Priority level, Source and Destination Increment mode
  24:src/stm32f1xx_hal_dma.c ****        using HAL_DMA_Init() function.
  25:src/stm32f1xx_hal_dma.c **** 
  26:src/stm32f1xx_hal_dma.c ****    (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of er
  27:src/stm32f1xx_hal_dma.c ****        detection.
  28:src/stm32f1xx_hal_dma.c ****                     
  29:src/stm32f1xx_hal_dma.c ****    (#) Use HAL_DMA_Abort() function to abort the current transfer
  30:src/stm32f1xx_hal_dma.c ****                    
  31:src/stm32f1xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  32:src/stm32f1xx_hal_dma.c ****      *** Polling mode IO operation ***
  33:src/stm32f1xx_hal_dma.c ****      =================================
  34:src/stm32f1xx_hal_dma.c ****     [..]
  35:src/stm32f1xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source
  36:src/stm32f1xx_hal_dma.c ****               address and destination address and the Length of data to be transferred
ARM GAS  /tmp/cck4KHRF.s 			page 3


  37:src/stm32f1xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this
  38:src/stm32f1xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  39:src/stm32f1xx_hal_dma.c **** 
  40:src/stm32f1xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:src/stm32f1xx_hal_dma.c ****      ===================================
  42:src/stm32f1xx_hal_dma.c ****     [..]
  43:src/stm32f1xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:src/stm32f1xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:src/stm32f1xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of
  46:src/stm32f1xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred.
  47:src/stm32f1xx_hal_dma.c ****               In this case the DMA interrupt is configured
  48:src/stm32f1xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  49:src/stm32f1xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can
  50:src/stm32f1xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and
  51:src/stm32f1xx_hal_dma.c ****               XferErrorCallback (i.e. a member of DMA handle structure).
  52:src/stm32f1xx_hal_dma.c **** 
  53:src/stm32f1xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  54:src/stm32f1xx_hal_dma.c ****      ============================================= 
  55:src/stm32f1xx_hal_dma.c ****       [..]
  56:src/stm32f1xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  57:src/stm32f1xx_hal_dma.c **** 
  58:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE: Enable the specified DMA Channel.
  59:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE: Disable the specified DMA Channel.
  60:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_GET_FLAG: Get the DMA Channel pending flags.
  61:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Channel pending flags.
  62:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Channel interrupts.
  63:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Channel interrupts.
  64:src/stm32f1xx_hal_dma.c ****        (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Channel interrupt has occurred 
  65:src/stm32f1xx_hal_dma.c **** 
  66:src/stm32f1xx_hal_dma.c ****      [..] 
  67:src/stm32f1xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros  
  68:src/stm32f1xx_hal_dma.c **** 
  69:src/stm32f1xx_hal_dma.c ****   @endverbatim
  70:src/stm32f1xx_hal_dma.c ****   ******************************************************************************
  71:src/stm32f1xx_hal_dma.c ****   * @attention
  72:src/stm32f1xx_hal_dma.c ****   *
  73:src/stm32f1xx_hal_dma.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  74:src/stm32f1xx_hal_dma.c ****   * All rights reserved.</center></h2>
  75:src/stm32f1xx_hal_dma.c ****   *
  76:src/stm32f1xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  77:src/stm32f1xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the
  78:src/stm32f1xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  79:src/stm32f1xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  80:src/stm32f1xx_hal_dma.c ****   *
  81:src/stm32f1xx_hal_dma.c ****   ******************************************************************************
  82:src/stm32f1xx_hal_dma.c ****   */
  83:src/stm32f1xx_hal_dma.c **** 
  84:src/stm32f1xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  85:src/stm32f1xx_hal_dma.c **** #include "stm32f1xx_hal.h"
  86:src/stm32f1xx_hal_dma.c **** 
  87:src/stm32f1xx_hal_dma.c **** /** @addtogroup STM32F1xx_HAL_Driver
  88:src/stm32f1xx_hal_dma.c ****   * @{
  89:src/stm32f1xx_hal_dma.c ****   */
  90:src/stm32f1xx_hal_dma.c **** 
  91:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA DMA
  92:src/stm32f1xx_hal_dma.c ****   * @brief DMA HAL module driver
  93:src/stm32f1xx_hal_dma.c ****   * @{
ARM GAS  /tmp/cck4KHRF.s 			page 4


  94:src/stm32f1xx_hal_dma.c ****   */
  95:src/stm32f1xx_hal_dma.c **** 
  96:src/stm32f1xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
  97:src/stm32f1xx_hal_dma.c **** 
  98:src/stm32f1xx_hal_dma.c **** /* Private typedef -----------------------------------------------------------*/
  99:src/stm32f1xx_hal_dma.c **** /* Private define ------------------------------------------------------------*/
 100:src/stm32f1xx_hal_dma.c **** /* Private macro -------------------------------------------------------------*/
 101:src/stm32f1xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 102:src/stm32f1xx_hal_dma.c **** /* Private function prototypes -----------------------------------------------*/
 103:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA_Private_Functions DMA Private Functions
 104:src/stm32f1xx_hal_dma.c ****   * @{
 105:src/stm32f1xx_hal_dma.c ****   */
 106:src/stm32f1xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 107:src/stm32f1xx_hal_dma.c **** /**
 108:src/stm32f1xx_hal_dma.c ****   * @}
 109:src/stm32f1xx_hal_dma.c ****   */
 110:src/stm32f1xx_hal_dma.c **** 
 111:src/stm32f1xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 112:src/stm32f1xx_hal_dma.c **** 
 113:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions DMA Exported Functions
 114:src/stm32f1xx_hal_dma.c ****   * @{
 115:src/stm32f1xx_hal_dma.c ****   */
 116:src/stm32f1xx_hal_dma.c **** 
 117:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group1 Initialization and de-initialization functions
 118:src/stm32f1xx_hal_dma.c ****   *  @brief   Initialization and de-initialization functions 
 119:src/stm32f1xx_hal_dma.c ****   *
 120:src/stm32f1xx_hal_dma.c **** @verbatim
 121:src/stm32f1xx_hal_dma.c ****  ===============================================================================
 122:src/stm32f1xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 123:src/stm32f1xx_hal_dma.c ****  ===============================================================================
 124:src/stm32f1xx_hal_dma.c ****     [..]
 125:src/stm32f1xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Channel source
 126:src/stm32f1xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 127:src/stm32f1xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Channel priority value.
 128:src/stm32f1xx_hal_dma.c ****     [..]
 129:src/stm32f1xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 130:src/stm32f1xx_hal_dma.c ****     reference manual.  
 131:src/stm32f1xx_hal_dma.c **** 
 132:src/stm32f1xx_hal_dma.c **** @endverbatim
 133:src/stm32f1xx_hal_dma.c ****   * @{
 134:src/stm32f1xx_hal_dma.c ****   */
 135:src/stm32f1xx_hal_dma.c **** 
 136:src/stm32f1xx_hal_dma.c **** /**
 137:src/stm32f1xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 138:src/stm32f1xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and initialize the associated handle.
 139:src/stm32f1xx_hal_dma.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
 140:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 141:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 142:src/stm32f1xx_hal_dma.c ****   */
 143:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 144:src/stm32f1xx_hal_dma.c **** {
  79              		.loc 1 144 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL0:
  84 0000 10B5     		push	{r4, lr}	@
ARM GAS  /tmp/cck4KHRF.s 			page 5


  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
 145:src/stm32f1xx_hal_dma.c ****   uint32_t tmp = 0U;
 146:src/stm32f1xx_hal_dma.c **** 
 147:src/stm32f1xx_hal_dma.c ****   /* Check the DMA handle allocation */
 148:src/stm32f1xx_hal_dma.c ****   if(hdma == NULL)
  89              		.loc 1 148 0
  90 0002 30B3     		cbz	r0, .L3	@ hdma,
 149:src/stm32f1xx_hal_dma.c ****   {
 150:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 151:src/stm32f1xx_hal_dma.c ****   }
 152:src/stm32f1xx_hal_dma.c **** 
 153:src/stm32f1xx_hal_dma.c ****   /* Check the parameters */
 154:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 155:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 156:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 157:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 158:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 159:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 160:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 161:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 162:src/stm32f1xx_hal_dma.c **** 
 163:src/stm32f1xx_hal_dma.c **** #if defined (DMA2)
 164:src/stm32f1xx_hal_dma.c ****   /* calculation of the channel index */
 165:src/stm32f1xx_hal_dma.c ****   if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
 166:src/stm32f1xx_hal_dma.c ****   {
 167:src/stm32f1xx_hal_dma.c ****     /* DMA1 */
 168:src/stm32f1xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Ch
 169:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA1;
 170:src/stm32f1xx_hal_dma.c ****   }
 171:src/stm32f1xx_hal_dma.c ****   else 
 172:src/stm32f1xx_hal_dma.c ****   {
 173:src/stm32f1xx_hal_dma.c ****     /* DMA2 */
 174:src/stm32f1xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Ch
 175:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA2;
 176:src/stm32f1xx_hal_dma.c ****   }
 177:src/stm32f1xx_hal_dma.c **** #else
 178:src/stm32f1xx_hal_dma.c ****   /* DMA1 */
 179:src/stm32f1xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
  91              		.loc 1 179 0
  92 0004 1422     		movs	r2, #20	@ tmp137,
  93 0006 0168     		ldr	r1, [r0]	@ _5, hdma_3(D)->Instance
  94 0008 134B     		ldr	r3, .L4	@ tmp133,
 180:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 181:src/stm32f1xx_hal_dma.c **** #endif /* DMA2 */
 182:src/stm32f1xx_hal_dma.c **** 
 183:src/stm32f1xx_hal_dma.c ****   /* Change DMA peripheral state */
 184:src/stm32f1xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 185:src/stm32f1xx_hal_dma.c **** 
 186:src/stm32f1xx_hal_dma.c ****   /* Get the CR register value */
 187:src/stm32f1xx_hal_dma.c ****   tmp = hdma->Instance->CCR;
 188:src/stm32f1xx_hal_dma.c **** 
 189:src/stm32f1xx_hal_dma.c ****   /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 190:src/stm32f1xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 191:src/stm32f1xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
ARM GAS  /tmp/cck4KHRF.s 			page 6


 192:src/stm32f1xx_hal_dma.c ****                       DMA_CCR_DIR));
 193:src/stm32f1xx_hal_dma.c **** 
 194:src/stm32f1xx_hal_dma.c ****   /* Prepare the DMA Channel configuration */
 195:src/stm32f1xx_hal_dma.c ****   tmp |=  hdma->Init.Direction        |
  95              		.loc 1 195 0
  96 000a 8468     		ldr	r4, [r0, #8]	@ hdma_3(D)->Init.PeriphInc, hdma_3(D)->Init.PeriphInc
 179:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
  97              		.loc 1 179 0
  98 000c 0B44     		add	r3, r3, r1	@ tmp133, _5
  99 000e B3FBF2F3 		udiv	r3, r3, r2	@ tmp136, tmp133, tmp137
 100 0012 9B00     		lsls	r3, r3, #2	@ tmp138, tmp136,
 101 0014 0364     		str	r3, [r0, #64]	@ tmp138, hdma_3(D)->ChannelIndex
 180:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 102              		.loc 1 180 0
 103 0016 114B     		ldr	r3, .L4+4	@ tmp139,
 187:src/stm32f1xx_hal_dma.c **** 
 104              		.loc 1 187 0
 105 0018 0A68     		ldr	r2, [r1]	@ tmp, _5->CCR
 106              	.LVL1:
 180:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 107              		.loc 1 180 0
 108 001a C363     		str	r3, [r0, #60]	@ tmp139, hdma_3(D)->DmaBaseAddress
 109              		.loc 1 195 0
 110 001c 4368     		ldr	r3, [r0, #4]	@ hdma_3(D)->Init.Direction, hdma_3(D)->Init.Direction
 190:src/stm32f1xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 111              		.loc 1 190 0
 112 001e 22F47F52 		bic	r2, r2, #16320	@ tmp, tmp,
 113              	.LVL2:
 114              		.loc 1 195 0
 115 0022 2343     		orrs	r3, r3, r4	@, tmp141, hdma_3(D)->Init.Direction, hdma_3(D)->Init.PeriphInc
 196:src/stm32f1xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 116              		.loc 1 196 0
 117 0024 C468     		ldr	r4, [r0, #12]	@ hdma_3(D)->Init.MemInc, hdma_3(D)->Init.MemInc
 190:src/stm32f1xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 118              		.loc 1 190 0
 119 0026 22F03002 		bic	r2, r2, #48	@ tmp, tmp,
 120              	.LVL3:
 121              		.loc 1 196 0
 122 002a 2343     		orrs	r3, r3, r4	@, tmp144, tmp141, hdma_3(D)->Init.MemInc
 123 002c 0469     		ldr	r4, [r0, #16]	@ hdma_3(D)->Init.PeriphDataAlignment, hdma_3(D)->Init.PeriphDataAlignment
 124 002e 2343     		orrs	r3, r3, r4	@, tmp146, tmp144, hdma_3(D)->Init.PeriphDataAlignment
 197:src/stm32f1xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 125              		.loc 1 197 0
 126 0030 4469     		ldr	r4, [r0, #20]	@ hdma_3(D)->Init.MemDataAlignment, hdma_3(D)->Init.MemDataAlignment
 127 0032 2343     		orrs	r3, r3, r4	@, tmp148, tmp146, hdma_3(D)->Init.MemDataAlignment
 128 0034 8469     		ldr	r4, [r0, #24]	@ hdma_3(D)->Init.Mode, hdma_3(D)->Init.Mode
 129 0036 2343     		orrs	r3, r3, r4	@, tmp150, tmp148, hdma_3(D)->Init.Mode
 198:src/stm32f1xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 130              		.loc 1 198 0
 131 0038 C469     		ldr	r4, [r0, #28]	@ hdma_3(D)->Init.Priority, hdma_3(D)->Init.Priority
 132 003a 2343     		orrs	r3, r3, r4	@, tmp152, tmp150, hdma_3(D)->Init.Priority
 195:src/stm32f1xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 133              		.loc 1 195 0
 134 003c 1343     		orrs	r3, r3, r2	@, tmp, tmp152, tmp
 135              	.LVL4:
 199:src/stm32f1xx_hal_dma.c **** 
 200:src/stm32f1xx_hal_dma.c ****   /* Write to DMA Channel CR register */
ARM GAS  /tmp/cck4KHRF.s 			page 7


 201:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CCR = tmp;
 136              		.loc 1 201 0
 137 003e 0B60     		str	r3, [r1]	@ tmp, _5->CCR
 202:src/stm32f1xx_hal_dma.c **** 
 203:src/stm32f1xx_hal_dma.c ****   /* Initialise the error code */
 204:src/stm32f1xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 205:src/stm32f1xx_hal_dma.c **** 
 206:src/stm32f1xx_hal_dma.c ****   /* Initialize the DMA state*/
 207:src/stm32f1xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 138              		.loc 1 207 0
 139 0040 0122     		movs	r2, #1	@ tmp155,
 204:src/stm32f1xx_hal_dma.c **** 
 140              		.loc 1 204 0
 141 0042 0023     		movs	r3, #0	@ tmp154,
 142              	.LVL5:
 143              		.loc 1 207 0
 144 0044 80F82120 		strb	r2, [r0, #33]	@ tmp155, hdma_3(D)->State
 204:src/stm32f1xx_hal_dma.c **** 
 145              		.loc 1 204 0
 146 0048 8363     		str	r3, [r0, #56]	@ tmp154, hdma_3(D)->ErrorCode
 147              	.LVL6:
 208:src/stm32f1xx_hal_dma.c ****   /* Allocate lock resource and initialize it */
 209:src/stm32f1xx_hal_dma.c ****   hdma->Lock = HAL_UNLOCKED;
 148              		.loc 1 209 0
 149 004a 80F82030 		strb	r3, [r0, #32]	@ tmp154, hdma_3(D)->Lock
 210:src/stm32f1xx_hal_dma.c **** 
 211:src/stm32f1xx_hal_dma.c ****   return HAL_OK;
 150              		.loc 1 211 0
 151 004e 1846     		mov	r0, r3	@ <retval>, tmp154
 152              	.LVL7:
 153 0050 10BD     		pop	{r4, pc}	@
 154              	.LVL8:
 155              	.L3:
 150:src/stm32f1xx_hal_dma.c ****   }
 156              		.loc 1 150 0
 157 0052 0120     		movs	r0, #1	@ <retval>,
 158              	.LVL9:
 212:src/stm32f1xx_hal_dma.c **** }
 159              		.loc 1 212 0
 160 0054 10BD     		pop	{r4, pc}	@
 161              	.L5:
 162 0056 00BF     		.align	2
 163              	.L4:
 164 0058 F8FFFDBF 		.word	-1073872904
 165 005c 00000240 		.word	1073872896
 166              		.cfi_endproc
 167              	.LFE65:
 168              		.size	HAL_DMA_Init, .-HAL_DMA_Init
 169              		.align	1
 170              		.global	HAL_DMA_DeInit
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu softvfp
 175              		.type	HAL_DMA_DeInit, %function
 176              	HAL_DMA_DeInit:
 177              	.LFB66:
ARM GAS  /tmp/cck4KHRF.s 			page 8


 213:src/stm32f1xx_hal_dma.c **** 
 214:src/stm32f1xx_hal_dma.c **** /**
 215:src/stm32f1xx_hal_dma.c ****   * @brief  DeInitialize the DMA peripheral.
 216:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 217:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 218:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 219:src/stm32f1xx_hal_dma.c ****   */
 220:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 221:src/stm32f1xx_hal_dma.c **** {
 178              		.loc 1 221 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL10:
 183 0060 10B5     		push	{r4, lr}	@
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 222:src/stm32f1xx_hal_dma.c ****   /* Check the DMA handle allocation */
 223:src/stm32f1xx_hal_dma.c ****   if(hdma == NULL)
 188              		.loc 1 223 0
 189 0062 08B3     		cbz	r0, .L8	@ hdma,
 224:src/stm32f1xx_hal_dma.c ****   {
 225:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 226:src/stm32f1xx_hal_dma.c ****   }
 227:src/stm32f1xx_hal_dma.c **** 
 228:src/stm32f1xx_hal_dma.c ****   /* Check the parameters */
 229:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 230:src/stm32f1xx_hal_dma.c **** 
 231:src/stm32f1xx_hal_dma.c ****   /* Disable the selected DMA Channelx */
 232:src/stm32f1xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 190              		.loc 1 232 0
 191 0064 0168     		ldr	r1, [r0]	@ _5, hdma_3(D)->Instance
 233:src/stm32f1xx_hal_dma.c **** 
 234:src/stm32f1xx_hal_dma.c ****   /* Reset DMA Channel control register */
 235:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CCR  = 0U;
 236:src/stm32f1xx_hal_dma.c **** 
 237:src/stm32f1xx_hal_dma.c ****   /* Reset DMA Channel Number of Data to Transfer register */
 238:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CNDTR = 0U;
 239:src/stm32f1xx_hal_dma.c **** 
 240:src/stm32f1xx_hal_dma.c ****   /* Reset DMA Channel peripheral address register */
 241:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CPAR  = 0U;
 242:src/stm32f1xx_hal_dma.c **** 
 243:src/stm32f1xx_hal_dma.c ****   /* Reset DMA Channel memory address register */
 244:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CMAR = 0U;
 245:src/stm32f1xx_hal_dma.c **** 
 246:src/stm32f1xx_hal_dma.c **** #if defined (DMA2)
 247:src/stm32f1xx_hal_dma.c ****   /* calculation of the channel index */
 248:src/stm32f1xx_hal_dma.c ****   if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
 249:src/stm32f1xx_hal_dma.c ****   {
 250:src/stm32f1xx_hal_dma.c ****     /* DMA1 */
 251:src/stm32f1xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Ch
 252:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA1;
 253:src/stm32f1xx_hal_dma.c ****   }
 254:src/stm32f1xx_hal_dma.c ****   else
 255:src/stm32f1xx_hal_dma.c ****   {
ARM GAS  /tmp/cck4KHRF.s 			page 9


 256:src/stm32f1xx_hal_dma.c ****     /* DMA2 */
 257:src/stm32f1xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Ch
 258:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA2;
 259:src/stm32f1xx_hal_dma.c ****   }
 260:src/stm32f1xx_hal_dma.c **** #else
 261:src/stm32f1xx_hal_dma.c ****   /* DMA1 */
 262:src/stm32f1xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 192              		.loc 1 262 0
 193 0066 114A     		ldr	r2, .L9	@ tmp124,
 232:src/stm32f1xx_hal_dma.c **** 
 194              		.loc 1 232 0
 195 0068 0B68     		ldr	r3, [r1]	@ _6, _5->CCR
 196              		.loc 1 262 0
 197 006a 0A44     		add	r2, r2, r1	@ tmp124, _5
 232:src/stm32f1xx_hal_dma.c **** 
 198              		.loc 1 232 0
 199 006c 23F00103 		bic	r3, r3, #1	@ _7, _6,
 200 0070 0B60     		str	r3, [r1]	@ _7, _5->CCR
 235:src/stm32f1xx_hal_dma.c **** 
 201              		.loc 1 235 0
 202 0072 0023     		movs	r3, #0	@ tmp120,
 203 0074 0B60     		str	r3, [r1]	@ tmp120, _5->CCR
 238:src/stm32f1xx_hal_dma.c **** 
 204              		.loc 1 238 0
 205 0076 4B60     		str	r3, [r1, #4]	@ tmp120, _5->CNDTR
 241:src/stm32f1xx_hal_dma.c **** 
 206              		.loc 1 241 0
 207 0078 8B60     		str	r3, [r1, #8]	@ tmp120, _5->CPAR
 244:src/stm32f1xx_hal_dma.c **** 
 208              		.loc 1 244 0
 209 007a CB60     		str	r3, [r1, #12]	@ tmp120, _5->CMAR
 210              		.loc 1 262 0
 211 007c 1421     		movs	r1, #20	@ tmp128,
 212 007e B2FBF1F2 		udiv	r2, r2, r1	@ tmp127, tmp124, tmp128
 263:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 264:src/stm32f1xx_hal_dma.c **** #endif /* DMA2 */
 265:src/stm32f1xx_hal_dma.c **** 
 266:src/stm32f1xx_hal_dma.c ****   /* Clear all flags */
 267:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex));
 213              		.loc 1 267 0
 214 0082 0121     		movs	r1, #1	@ tmp130,
 263:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 215              		.loc 1 263 0
 216 0084 0A4C     		ldr	r4, .L9+4	@ tmp129,
 262:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 217              		.loc 1 262 0
 218 0086 9200     		lsls	r2, r2, #2	@ _16, tmp127,
 219 0088 0264     		str	r2, [r0, #64]	@ _16, hdma_3(D)->ChannelIndex
 220              		.loc 1 267 0
 221 008a 01FA02F2 		lsl	r2, r1, r2	@ _19, tmp130, _16
 263:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 222              		.loc 1 263 0
 223 008e C463     		str	r4, [r0, #60]	@ tmp129, hdma_3(D)->DmaBaseAddress
 224              		.loc 1 267 0
 225 0090 6260     		str	r2, [r4, #4]	@ _19, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 268:src/stm32f1xx_hal_dma.c **** 
 269:src/stm32f1xx_hal_dma.c ****   /* Clean all callbacks */
ARM GAS  /tmp/cck4KHRF.s 			page 10


 270:src/stm32f1xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 226              		.loc 1 270 0
 227 0092 8362     		str	r3, [r0, #40]	@ tmp120, hdma_3(D)->XferCpltCallback
 271:src/stm32f1xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 228              		.loc 1 271 0
 229 0094 C362     		str	r3, [r0, #44]	@ tmp120, hdma_3(D)->XferHalfCpltCallback
 272:src/stm32f1xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 230              		.loc 1 272 0
 231 0096 0363     		str	r3, [r0, #48]	@ tmp120, hdma_3(D)->XferErrorCallback
 273:src/stm32f1xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 232              		.loc 1 273 0
 233 0098 4363     		str	r3, [r0, #52]	@ tmp120, hdma_3(D)->XferAbortCallback
 274:src/stm32f1xx_hal_dma.c **** 
 275:src/stm32f1xx_hal_dma.c ****   /* Reset the error code */
 276:src/stm32f1xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 234              		.loc 1 276 0
 235 009a 8363     		str	r3, [r0, #56]	@ tmp120, hdma_3(D)->ErrorCode
 277:src/stm32f1xx_hal_dma.c **** 
 278:src/stm32f1xx_hal_dma.c ****   /* Reset the DMA state */
 279:src/stm32f1xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 236              		.loc 1 279 0
 237 009c 80F82130 		strb	r3, [r0, #33]	@ tmp120, hdma_3(D)->State
 280:src/stm32f1xx_hal_dma.c **** 
 281:src/stm32f1xx_hal_dma.c ****   /* Release Lock */
 282:src/stm32f1xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 238              		.loc 1 282 0
 239 00a0 80F82030 		strb	r3, [r0, #32]	@ tmp120, hdma_3(D)->Lock
 283:src/stm32f1xx_hal_dma.c **** 
 284:src/stm32f1xx_hal_dma.c ****   return HAL_OK;
 240              		.loc 1 284 0
 241 00a4 1846     		mov	r0, r3	@ <retval>, tmp120
 242              	.LVL11:
 243 00a6 10BD     		pop	{r4, pc}	@
 244              	.LVL12:
 245              	.L8:
 225:src/stm32f1xx_hal_dma.c ****   }
 246              		.loc 1 225 0
 247 00a8 0120     		movs	r0, #1	@ <retval>,
 248              	.LVL13:
 285:src/stm32f1xx_hal_dma.c **** }
 249              		.loc 1 285 0
 250 00aa 10BD     		pop	{r4, pc}	@
 251              	.L10:
 252              		.align	2
 253              	.L9:
 254 00ac F8FFFDBF 		.word	-1073872904
 255 00b0 00000240 		.word	1073872896
 256              		.cfi_endproc
 257              	.LFE66:
 258              		.size	HAL_DMA_DeInit, .-HAL_DMA_DeInit
 259              		.align	1
 260              		.global	HAL_DMA_Start
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 265              		.type	HAL_DMA_Start, %function
ARM GAS  /tmp/cck4KHRF.s 			page 11


 266              	HAL_DMA_Start:
 267              	.LFB67:
 286:src/stm32f1xx_hal_dma.c **** 
 287:src/stm32f1xx_hal_dma.c **** /**
 288:src/stm32f1xx_hal_dma.c ****   * @}
 289:src/stm32f1xx_hal_dma.c ****   */
 290:src/stm32f1xx_hal_dma.c **** 
 291:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group2 Input and Output operation functions
 292:src/stm32f1xx_hal_dma.c ****   *  @brief   Input and Output operation functions
 293:src/stm32f1xx_hal_dma.c ****   *
 294:src/stm32f1xx_hal_dma.c **** @verbatim
 295:src/stm32f1xx_hal_dma.c ****  ===============================================================================
 296:src/stm32f1xx_hal_dma.c ****                       #####  IO operation functions  #####
 297:src/stm32f1xx_hal_dma.c ****  ===============================================================================
 298:src/stm32f1xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 299:src/stm32f1xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 300:src/stm32f1xx_hal_dma.c ****       (+) Configure the source, destination address and data length and
 301:src/stm32f1xx_hal_dma.c ****           Start DMA transfer with interrupt
 302:src/stm32f1xx_hal_dma.c ****       (+) Abort DMA transfer
 303:src/stm32f1xx_hal_dma.c ****       (+) Poll for transfer complete
 304:src/stm32f1xx_hal_dma.c ****       (+) Handle DMA interrupt request
 305:src/stm32f1xx_hal_dma.c **** 
 306:src/stm32f1xx_hal_dma.c **** @endverbatim
 307:src/stm32f1xx_hal_dma.c ****   * @{
 308:src/stm32f1xx_hal_dma.c ****   */
 309:src/stm32f1xx_hal_dma.c **** 
 310:src/stm32f1xx_hal_dma.c **** /**
 311:src/stm32f1xx_hal_dma.c ****   * @brief  Start the DMA Transfer.
 312:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 313:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 314:src/stm32f1xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 315:src/stm32f1xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 316:src/stm32f1xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 317:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 318:src/stm32f1xx_hal_dma.c ****   */
 319:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 320:src/stm32f1xx_hal_dma.c **** {
 268              		.loc 1 320 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL14:
 273 00b4 F0B5     		push	{r4, r5, r6, r7, lr}	@
 274              	.LCFI2:
 275              		.cfi_def_cfa_offset 20
 276              		.cfi_offset 4, -20
 277              		.cfi_offset 5, -16
 278              		.cfi_offset 6, -12
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 321:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 322:src/stm32f1xx_hal_dma.c **** 
 323:src/stm32f1xx_hal_dma.c ****   /* Check the parameters */
 324:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 325:src/stm32f1xx_hal_dma.c **** 
 326:src/stm32f1xx_hal_dma.c ****   /* Process locked */
 327:src/stm32f1xx_hal_dma.c ****   __HAL_LOCK(hdma);
ARM GAS  /tmp/cck4KHRF.s 			page 12


 281              		.loc 1 327 0
 282 00b6 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2	@ hdma_4(D)->Lock, hdma_4(D)->Lock
 283 00ba 012C     		cmp	r4, #1	@ hdma_4(D)->Lock,
 284 00bc 26D0     		beq	.L16	@,
 285              		.loc 1 327 0 is_stmt 0 discriminator 2
 286 00be 0124     		movs	r4, #1	@ tmp127,
 328:src/stm32f1xx_hal_dma.c **** 
 329:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 287              		.loc 1 329 0 is_stmt 1 discriminator 2
 288 00c0 90F82150 		ldrb	r5, [r0, #33]	@ zero_extendqisi2	@ hdma_4(D)->State, hdma_4(D)->State
 327:src/stm32f1xx_hal_dma.c **** 
 289              		.loc 1 327 0 discriminator 2
 290 00c4 80F82040 		strb	r4, [r0, #32]	@ tmp127, hdma_4(D)->Lock
 291              		.loc 1 329 0 discriminator 2
 292 00c8 A542     		cmp	r5, r4	@ hdma_4(D)->State,
 293 00ca 4FF00006 		mov	r6, #0	@ tmp140,
 294 00ce 4FF00204 		mov	r4, #2	@ <retval>,
 295 00d2 19D1     		bne	.L13	@,
 330:src/stm32f1xx_hal_dma.c ****   {
 331:src/stm32f1xx_hal_dma.c ****     /* Change DMA peripheral state */
 332:src/stm32f1xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 296              		.loc 1 332 0
 297 00d4 80F82140 		strb	r4, [r0, #33]	@ <retval>, hdma_4(D)->State
 333:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 334:src/stm32f1xx_hal_dma.c ****             
 335:src/stm32f1xx_hal_dma.c ****     /* Disable the peripheral */
 336:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 298              		.loc 1 336 0
 299 00d8 0468     		ldr	r4, [r0]	@ _10, hdma_4(D)->Instance
 333:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 300              		.loc 1 333 0
 301 00da 8663     		str	r6, [r0, #56]	@ tmp140, hdma_4(D)->ErrorCode
 302              		.loc 1 336 0
 303 00dc 2668     		ldr	r6, [r4]	@ _11, _10->CCR
 304              	.LBB4:
 305              	.LBB5:
 337:src/stm32f1xx_hal_dma.c ****     
 338:src/stm32f1xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 339:src/stm32f1xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 340:src/stm32f1xx_hal_dma.c ****     
 341:src/stm32f1xx_hal_dma.c ****     /* Enable the Peripheral */
 342:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 343:src/stm32f1xx_hal_dma.c ****   }
 344:src/stm32f1xx_hal_dma.c ****   else
 345:src/stm32f1xx_hal_dma.c ****   {
 346:src/stm32f1xx_hal_dma.c ****    /* Process Unlocked */
 347:src/stm32f1xx_hal_dma.c ****    __HAL_UNLOCK(hdma);  
 348:src/stm32f1xx_hal_dma.c ****    status = HAL_BUSY;
 349:src/stm32f1xx_hal_dma.c ****   }  
 350:src/stm32f1xx_hal_dma.c ****   return status;
 351:src/stm32f1xx_hal_dma.c **** }
 352:src/stm32f1xx_hal_dma.c **** 
 353:src/stm32f1xx_hal_dma.c **** /**
 354:src/stm32f1xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 355:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 356:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 357:src/stm32f1xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
ARM GAS  /tmp/cck4KHRF.s 			page 13


 358:src/stm32f1xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 359:src/stm32f1xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 360:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 361:src/stm32f1xx_hal_dma.c ****   */
 362:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 363:src/stm32f1xx_hal_dma.c **** {
 364:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 365:src/stm32f1xx_hal_dma.c **** 
 366:src/stm32f1xx_hal_dma.c ****   /* Check the parameters */
 367:src/stm32f1xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 368:src/stm32f1xx_hal_dma.c **** 
 369:src/stm32f1xx_hal_dma.c ****   /* Process locked */
 370:src/stm32f1xx_hal_dma.c ****   __HAL_LOCK(hdma);
 371:src/stm32f1xx_hal_dma.c ****   
 372:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 373:src/stm32f1xx_hal_dma.c ****   {
 374:src/stm32f1xx_hal_dma.c ****     /* Change DMA peripheral state */
 375:src/stm32f1xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 376:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 377:src/stm32f1xx_hal_dma.c ****     
 378:src/stm32f1xx_hal_dma.c ****     /* Disable the peripheral */
 379:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 380:src/stm32f1xx_hal_dma.c ****     
 381:src/stm32f1xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 382:src/stm32f1xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 383:src/stm32f1xx_hal_dma.c ****     
 384:src/stm32f1xx_hal_dma.c ****     /* Enable the transfer complete interrupt */
 385:src/stm32f1xx_hal_dma.c ****     /* Enable the transfer Error interrupt */
 386:src/stm32f1xx_hal_dma.c ****     if(NULL != hdma->XferHalfCpltCallback)
 387:src/stm32f1xx_hal_dma.c ****     {
 388:src/stm32f1xx_hal_dma.c ****       /* Enable the Half transfer complete interrupt as well */
 389:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 390:src/stm32f1xx_hal_dma.c ****     }
 391:src/stm32f1xx_hal_dma.c ****     else
 392:src/stm32f1xx_hal_dma.c ****     {
 393:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 394:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 395:src/stm32f1xx_hal_dma.c ****     }
 396:src/stm32f1xx_hal_dma.c ****     /* Enable the Peripheral */
 397:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 398:src/stm32f1xx_hal_dma.c ****   }
 399:src/stm32f1xx_hal_dma.c ****   else
 400:src/stm32f1xx_hal_dma.c ****   {      
 401:src/stm32f1xx_hal_dma.c ****     /* Process Unlocked */
 402:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma); 
 403:src/stm32f1xx_hal_dma.c **** 
 404:src/stm32f1xx_hal_dma.c ****     /* Remain BUSY */
 405:src/stm32f1xx_hal_dma.c ****     status = HAL_BUSY;
 406:src/stm32f1xx_hal_dma.c ****   }    
 407:src/stm32f1xx_hal_dma.c ****   return status;
 408:src/stm32f1xx_hal_dma.c **** }
 409:src/stm32f1xx_hal_dma.c **** 
 410:src/stm32f1xx_hal_dma.c **** /**
 411:src/stm32f1xx_hal_dma.c ****   * @brief  Abort the DMA Transfer.
 412:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 413:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 414:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
ARM GAS  /tmp/cck4KHRF.s 			page 14


 415:src/stm32f1xx_hal_dma.c ****   */
 416:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 417:src/stm32f1xx_hal_dma.c **** {
 418:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 419:src/stm32f1xx_hal_dma.c ****   
 420:src/stm32f1xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 421:src/stm32f1xx_hal_dma.c ****   {
 422:src/stm32f1xx_hal_dma.c ****     /* no transfer ongoing */
 423:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 424:src/stm32f1xx_hal_dma.c ****     
 425:src/stm32f1xx_hal_dma.c ****     /* Process Unlocked */
 426:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 427:src/stm32f1xx_hal_dma.c ****     
 428:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 429:src/stm32f1xx_hal_dma.c ****   }
 430:src/stm32f1xx_hal_dma.c ****   else
 431:src/stm32f1xx_hal_dma.c **** 
 432:src/stm32f1xx_hal_dma.c ****   {
 433:src/stm32f1xx_hal_dma.c ****     /* Disable DMA IT */
 434:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 435:src/stm32f1xx_hal_dma.c ****       
 436:src/stm32f1xx_hal_dma.c ****     /* Disable the channel */
 437:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 438:src/stm32f1xx_hal_dma.c ****       
 439:src/stm32f1xx_hal_dma.c ****     /* Clear all flags */
 440:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 441:src/stm32f1xx_hal_dma.c ****   }
 442:src/stm32f1xx_hal_dma.c ****   /* Change the DMA state */
 443:src/stm32f1xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 444:src/stm32f1xx_hal_dma.c **** 
 445:src/stm32f1xx_hal_dma.c ****   /* Process Unlocked */
 446:src/stm32f1xx_hal_dma.c ****   __HAL_UNLOCK(hdma);      
 447:src/stm32f1xx_hal_dma.c ****   
 448:src/stm32f1xx_hal_dma.c ****   return status; 
 449:src/stm32f1xx_hal_dma.c **** }
 450:src/stm32f1xx_hal_dma.c **** 
 451:src/stm32f1xx_hal_dma.c **** /**
 452:src/stm32f1xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 453:src/stm32f1xx_hal_dma.c ****   * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
 454:src/stm32f1xx_hal_dma.c ****   *                 the configuration information for the specified DMA Channel.
 455:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 456:src/stm32f1xx_hal_dma.c ****   */
 457:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 458:src/stm32f1xx_hal_dma.c **** {  
 459:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 460:src/stm32f1xx_hal_dma.c ****   
 461:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 462:src/stm32f1xx_hal_dma.c ****   {
 463:src/stm32f1xx_hal_dma.c ****     /* no transfer ongoing */
 464:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 465:src/stm32f1xx_hal_dma.c ****         
 466:src/stm32f1xx_hal_dma.c ****     status = HAL_ERROR;
 467:src/stm32f1xx_hal_dma.c ****   }
 468:src/stm32f1xx_hal_dma.c ****   else
 469:src/stm32f1xx_hal_dma.c ****   { 
 470:src/stm32f1xx_hal_dma.c ****     /* Disable DMA IT */
 471:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
ARM GAS  /tmp/cck4KHRF.s 			page 15


 472:src/stm32f1xx_hal_dma.c **** 
 473:src/stm32f1xx_hal_dma.c ****     /* Disable the channel */
 474:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 475:src/stm32f1xx_hal_dma.c **** 
 476:src/stm32f1xx_hal_dma.c ****     /* Clear all flags */
 477:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
 478:src/stm32f1xx_hal_dma.c **** 
 479:src/stm32f1xx_hal_dma.c ****     /* Change the DMA state */
 480:src/stm32f1xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 481:src/stm32f1xx_hal_dma.c **** 
 482:src/stm32f1xx_hal_dma.c ****     /* Process Unlocked */
 483:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 484:src/stm32f1xx_hal_dma.c **** 
 485:src/stm32f1xx_hal_dma.c ****     /* Call User Abort callback */
 486:src/stm32f1xx_hal_dma.c ****     if(hdma->XferAbortCallback != NULL)
 487:src/stm32f1xx_hal_dma.c ****     {
 488:src/stm32f1xx_hal_dma.c ****       hdma->XferAbortCallback(hdma);
 489:src/stm32f1xx_hal_dma.c ****     } 
 490:src/stm32f1xx_hal_dma.c ****   }
 491:src/stm32f1xx_hal_dma.c ****   return status;
 492:src/stm32f1xx_hal_dma.c **** }
 493:src/stm32f1xx_hal_dma.c **** 
 494:src/stm32f1xx_hal_dma.c **** /**
 495:src/stm32f1xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 496:src/stm32f1xx_hal_dma.c ****   * @param  hdma:    pointer to a DMA_HandleTypeDef structure that contains
 497:src/stm32f1xx_hal_dma.c ****   *                  the configuration information for the specified DMA Channel.
 498:src/stm32f1xx_hal_dma.c ****   * @param  CompleteLevel: Specifies the DMA level complete.
 499:src/stm32f1xx_hal_dma.c ****   * @param  Timeout:       Timeout duration.
 500:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 501:src/stm32f1xx_hal_dma.c ****   */
 502:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t
 503:src/stm32f1xx_hal_dma.c **** {
 504:src/stm32f1xx_hal_dma.c ****   uint32_t temp;
 505:src/stm32f1xx_hal_dma.c ****   uint32_t tickstart = 0U;
 506:src/stm32f1xx_hal_dma.c **** 
 507:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 508:src/stm32f1xx_hal_dma.c ****   {
 509:src/stm32f1xx_hal_dma.c ****     /* no transfer ongoing */
 510:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 511:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 512:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 513:src/stm32f1xx_hal_dma.c ****   }
 514:src/stm32f1xx_hal_dma.c **** 
 515:src/stm32f1xx_hal_dma.c ****   /* Polling mode not supported in circular mode */
 516:src/stm32f1xx_hal_dma.c ****   if (RESET != (hdma->Instance->CCR & DMA_CCR_CIRC))
 517:src/stm32f1xx_hal_dma.c ****   {
 518:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 519:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 520:src/stm32f1xx_hal_dma.c ****   }
 521:src/stm32f1xx_hal_dma.c ****   
 522:src/stm32f1xx_hal_dma.c ****   /* Get the level transfer complete flag */
 523:src/stm32f1xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 524:src/stm32f1xx_hal_dma.c ****   {
 525:src/stm32f1xx_hal_dma.c ****     /* Transfer Complete flag */
 526:src/stm32f1xx_hal_dma.c ****     temp = __HAL_DMA_GET_TC_FLAG_INDEX(hdma);
 527:src/stm32f1xx_hal_dma.c ****   }
 528:src/stm32f1xx_hal_dma.c ****   else
ARM GAS  /tmp/cck4KHRF.s 			page 16


 529:src/stm32f1xx_hal_dma.c ****   {
 530:src/stm32f1xx_hal_dma.c ****     /* Half Transfer Complete flag */
 531:src/stm32f1xx_hal_dma.c ****     temp = __HAL_DMA_GET_HT_FLAG_INDEX(hdma);
 532:src/stm32f1xx_hal_dma.c ****   }
 533:src/stm32f1xx_hal_dma.c **** 
 534:src/stm32f1xx_hal_dma.c ****   /* Get tick */
 535:src/stm32f1xx_hal_dma.c ****   tickstart = HAL_GetTick();
 536:src/stm32f1xx_hal_dma.c **** 
 537:src/stm32f1xx_hal_dma.c ****   while(__HAL_DMA_GET_FLAG(hdma, temp) == RESET)
 538:src/stm32f1xx_hal_dma.c ****   {
 539:src/stm32f1xx_hal_dma.c ****     if((__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET))
 540:src/stm32f1xx_hal_dma.c ****     {
 541:src/stm32f1xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 542:src/stm32f1xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 543:src/stm32f1xx_hal_dma.c ****       /* Clear all flags */
 544:src/stm32f1xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 545:src/stm32f1xx_hal_dma.c **** 
 546:src/stm32f1xx_hal_dma.c ****       /* Update error code */
 547:src/stm32f1xx_hal_dma.c ****       SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TE);
 548:src/stm32f1xx_hal_dma.c **** 
 549:src/stm32f1xx_hal_dma.c ****       /* Change the DMA state */
 550:src/stm32f1xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 551:src/stm32f1xx_hal_dma.c **** 
 552:src/stm32f1xx_hal_dma.c ****       /* Process Unlocked */
 553:src/stm32f1xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 554:src/stm32f1xx_hal_dma.c **** 
 555:src/stm32f1xx_hal_dma.c ****       return HAL_ERROR;
 556:src/stm32f1xx_hal_dma.c ****     }
 557:src/stm32f1xx_hal_dma.c ****     /* Check for the Timeout */
 558:src/stm32f1xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 559:src/stm32f1xx_hal_dma.c ****     {
 560:src/stm32f1xx_hal_dma.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 561:src/stm32f1xx_hal_dma.c ****       {
 562:src/stm32f1xx_hal_dma.c ****         /* Update error code */
 563:src/stm32f1xx_hal_dma.c ****         SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TIMEOUT);
 564:src/stm32f1xx_hal_dma.c **** 
 565:src/stm32f1xx_hal_dma.c ****         /* Change the DMA state */
 566:src/stm32f1xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 567:src/stm32f1xx_hal_dma.c **** 
 568:src/stm32f1xx_hal_dma.c ****         /* Process Unlocked */
 569:src/stm32f1xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 570:src/stm32f1xx_hal_dma.c **** 
 571:src/stm32f1xx_hal_dma.c ****         return HAL_ERROR;
 572:src/stm32f1xx_hal_dma.c ****       }
 573:src/stm32f1xx_hal_dma.c ****     }
 574:src/stm32f1xx_hal_dma.c ****   }
 575:src/stm32f1xx_hal_dma.c **** 
 576:src/stm32f1xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 577:src/stm32f1xx_hal_dma.c ****   {
 578:src/stm32f1xx_hal_dma.c ****     /* Clear the transfer complete flag */
 579:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 580:src/stm32f1xx_hal_dma.c **** 
 581:src/stm32f1xx_hal_dma.c ****     /* The selected Channelx EN bit is cleared (DMA is disabled and
 582:src/stm32f1xx_hal_dma.c ****     all transfers are complete) */
 583:src/stm32f1xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 584:src/stm32f1xx_hal_dma.c ****   }
 585:src/stm32f1xx_hal_dma.c ****   else
ARM GAS  /tmp/cck4KHRF.s 			page 17


 586:src/stm32f1xx_hal_dma.c ****   {
 587:src/stm32f1xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 588:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 589:src/stm32f1xx_hal_dma.c ****   }
 590:src/stm32f1xx_hal_dma.c ****   
 591:src/stm32f1xx_hal_dma.c ****   /* Process unlocked */
 592:src/stm32f1xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 593:src/stm32f1xx_hal_dma.c **** 
 594:src/stm32f1xx_hal_dma.c ****   return HAL_OK;
 595:src/stm32f1xx_hal_dma.c **** }
 596:src/stm32f1xx_hal_dma.c **** 
 597:src/stm32f1xx_hal_dma.c **** /**
 598:src/stm32f1xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 599:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 600:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.  
 601:src/stm32f1xx_hal_dma.c ****   * @retval None
 602:src/stm32f1xx_hal_dma.c ****   */
 603:src/stm32f1xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 604:src/stm32f1xx_hal_dma.c **** {
 605:src/stm32f1xx_hal_dma.c ****   uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 606:src/stm32f1xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 607:src/stm32f1xx_hal_dma.c ****   
 608:src/stm32f1xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 609:src/stm32f1xx_hal_dma.c ****   if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RE
 610:src/stm32f1xx_hal_dma.c ****   {
 611:src/stm32f1xx_hal_dma.c ****     /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 612:src/stm32f1xx_hal_dma.c ****     if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 613:src/stm32f1xx_hal_dma.c ****     {
 614:src/stm32f1xx_hal_dma.c ****       /* Disable the half transfer interrupt */
 615:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 616:src/stm32f1xx_hal_dma.c ****     }
 617:src/stm32f1xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 618:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 619:src/stm32f1xx_hal_dma.c **** 
 620:src/stm32f1xx_hal_dma.c ****     /* DMA peripheral state is not updated in Half Transfer */
 621:src/stm32f1xx_hal_dma.c ****     /* but in Transfer Complete case */
 622:src/stm32f1xx_hal_dma.c **** 
 623:src/stm32f1xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 624:src/stm32f1xx_hal_dma.c ****     {
 625:src/stm32f1xx_hal_dma.c ****       /* Half transfer callback */
 626:src/stm32f1xx_hal_dma.c ****       hdma->XferHalfCpltCallback(hdma);
 627:src/stm32f1xx_hal_dma.c ****     }
 628:src/stm32f1xx_hal_dma.c ****   }
 629:src/stm32f1xx_hal_dma.c **** 
 630:src/stm32f1xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 631:src/stm32f1xx_hal_dma.c ****   else if (((flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_TC) 
 632:src/stm32f1xx_hal_dma.c ****   {
 633:src/stm32f1xx_hal_dma.c ****     if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 634:src/stm32f1xx_hal_dma.c ****     {
 635:src/stm32f1xx_hal_dma.c ****       /* Disable the transfer complete and error interrupt */
 636:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);  
 637:src/stm32f1xx_hal_dma.c **** 
 638:src/stm32f1xx_hal_dma.c ****       /* Change the DMA state */
 639:src/stm32f1xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 640:src/stm32f1xx_hal_dma.c ****     }
 641:src/stm32f1xx_hal_dma.c ****     /* Clear the transfer complete flag */
 642:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
ARM GAS  /tmp/cck4KHRF.s 			page 18


 643:src/stm32f1xx_hal_dma.c **** 
 644:src/stm32f1xx_hal_dma.c ****     /* Process Unlocked */
 645:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 646:src/stm32f1xx_hal_dma.c **** 
 647:src/stm32f1xx_hal_dma.c ****     if(hdma->XferCpltCallback != NULL)
 648:src/stm32f1xx_hal_dma.c ****     {
 649:src/stm32f1xx_hal_dma.c ****       /* Transfer complete callback */
 650:src/stm32f1xx_hal_dma.c ****       hdma->XferCpltCallback(hdma);
 651:src/stm32f1xx_hal_dma.c ****     }
 652:src/stm32f1xx_hal_dma.c ****   }
 653:src/stm32f1xx_hal_dma.c **** 
 654:src/stm32f1xx_hal_dma.c ****   /* Transfer Error Interrupt management **************************************/
 655:src/stm32f1xx_hal_dma.c ****   else if (( RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & D
 656:src/stm32f1xx_hal_dma.c ****   {
 657:src/stm32f1xx_hal_dma.c ****     /* When a DMA transfer error occurs */
 658:src/stm32f1xx_hal_dma.c ****     /* A hardware clear of its EN bits is performed */
 659:src/stm32f1xx_hal_dma.c ****     /* Disable ALL DMA IT */
 660:src/stm32f1xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 661:src/stm32f1xx_hal_dma.c **** 
 662:src/stm32f1xx_hal_dma.c ****     /* Clear all flags */
 663:src/stm32f1xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 664:src/stm32f1xx_hal_dma.c **** 
 665:src/stm32f1xx_hal_dma.c ****     /* Update error code */
 666:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_TE;
 667:src/stm32f1xx_hal_dma.c **** 
 668:src/stm32f1xx_hal_dma.c ****     /* Change the DMA state */
 669:src/stm32f1xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 670:src/stm32f1xx_hal_dma.c **** 
 671:src/stm32f1xx_hal_dma.c ****     /* Process Unlocked */
 672:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 673:src/stm32f1xx_hal_dma.c **** 
 674:src/stm32f1xx_hal_dma.c ****     if (hdma->XferErrorCallback != NULL)
 675:src/stm32f1xx_hal_dma.c ****     {
 676:src/stm32f1xx_hal_dma.c ****       /* Transfer error callback */
 677:src/stm32f1xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 678:src/stm32f1xx_hal_dma.c ****     }
 679:src/stm32f1xx_hal_dma.c ****   }
 680:src/stm32f1xx_hal_dma.c ****   return;
 681:src/stm32f1xx_hal_dma.c **** }
 682:src/stm32f1xx_hal_dma.c **** 
 683:src/stm32f1xx_hal_dma.c **** /**
 684:src/stm32f1xx_hal_dma.c ****   * @brief Register callbacks
 685:src/stm32f1xx_hal_dma.c ****   * @param hdma: pointer to a DMA_HandleTypeDef structure that contains
 686:src/stm32f1xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 687:src/stm32f1xx_hal_dma.c ****   * @param CallbackID: User Callback identifer
 688:src/stm32f1xx_hal_dma.c ****   *                    a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 689:src/stm32f1xx_hal_dma.c ****   * @param pCallback: pointer to private callbacsk function which has pointer to 
 690:src/stm32f1xx_hal_dma.c ****   *                   a DMA_HandleTypeDef structure as parameter.
 691:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 692:src/stm32f1xx_hal_dma.c ****   */                          
 693:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 694:src/stm32f1xx_hal_dma.c **** {
 695:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 696:src/stm32f1xx_hal_dma.c ****   
 697:src/stm32f1xx_hal_dma.c ****   /* Process locked */
 698:src/stm32f1xx_hal_dma.c ****   __HAL_LOCK(hdma);
 699:src/stm32f1xx_hal_dma.c ****   
ARM GAS  /tmp/cck4KHRF.s 			page 19


 700:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 701:src/stm32f1xx_hal_dma.c ****   {
 702:src/stm32f1xx_hal_dma.c ****     switch (CallbackID)
 703:src/stm32f1xx_hal_dma.c ****     {
 704:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 705:src/stm32f1xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 706:src/stm32f1xx_hal_dma.c ****       break;
 707:src/stm32f1xx_hal_dma.c ****       
 708:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 709:src/stm32f1xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 710:src/stm32f1xx_hal_dma.c ****       break;         
 711:src/stm32f1xx_hal_dma.c **** 
 712:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
 713:src/stm32f1xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 714:src/stm32f1xx_hal_dma.c ****       break;         
 715:src/stm32f1xx_hal_dma.c ****       
 716:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
 717:src/stm32f1xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 718:src/stm32f1xx_hal_dma.c ****       break; 
 719:src/stm32f1xx_hal_dma.c ****       
 720:src/stm32f1xx_hal_dma.c ****     default:
 721:src/stm32f1xx_hal_dma.c ****       status = HAL_ERROR;
 722:src/stm32f1xx_hal_dma.c ****       break;                                                            
 723:src/stm32f1xx_hal_dma.c ****     }
 724:src/stm32f1xx_hal_dma.c ****   }
 725:src/stm32f1xx_hal_dma.c ****   else
 726:src/stm32f1xx_hal_dma.c ****   {
 727:src/stm32f1xx_hal_dma.c ****     status = HAL_ERROR;
 728:src/stm32f1xx_hal_dma.c ****   } 
 729:src/stm32f1xx_hal_dma.c ****   
 730:src/stm32f1xx_hal_dma.c ****   /* Release Lock */
 731:src/stm32f1xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 732:src/stm32f1xx_hal_dma.c ****   
 733:src/stm32f1xx_hal_dma.c ****   return status;
 734:src/stm32f1xx_hal_dma.c **** }
 735:src/stm32f1xx_hal_dma.c **** 
 736:src/stm32f1xx_hal_dma.c **** /**
 737:src/stm32f1xx_hal_dma.c ****   * @brief UnRegister callbacks
 738:src/stm32f1xx_hal_dma.c ****   * @param hdma: pointer to a DMA_HandleTypeDef structure that contains
 739:src/stm32f1xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 740:src/stm32f1xx_hal_dma.c ****   * @param CallbackID: User Callback identifer
 741:src/stm32f1xx_hal_dma.c ****   *                    a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 742:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 743:src/stm32f1xx_hal_dma.c ****   */              
 744:src/stm32f1xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
 745:src/stm32f1xx_hal_dma.c **** {
 746:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 747:src/stm32f1xx_hal_dma.c **** 
 748:src/stm32f1xx_hal_dma.c ****   /* Process locked */
 749:src/stm32f1xx_hal_dma.c ****   __HAL_LOCK(hdma);
 750:src/stm32f1xx_hal_dma.c ****   
 751:src/stm32f1xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 752:src/stm32f1xx_hal_dma.c ****   {
 753:src/stm32f1xx_hal_dma.c ****     switch (CallbackID)
 754:src/stm32f1xx_hal_dma.c ****     {
 755:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 756:src/stm32f1xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
ARM GAS  /tmp/cck4KHRF.s 			page 20


 757:src/stm32f1xx_hal_dma.c ****       break;
 758:src/stm32f1xx_hal_dma.c **** 
 759:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 760:src/stm32f1xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 761:src/stm32f1xx_hal_dma.c ****       break;         
 762:src/stm32f1xx_hal_dma.c **** 
 763:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
 764:src/stm32f1xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 765:src/stm32f1xx_hal_dma.c ****       break;         
 766:src/stm32f1xx_hal_dma.c **** 
 767:src/stm32f1xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
 768:src/stm32f1xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 769:src/stm32f1xx_hal_dma.c ****       break; 
 770:src/stm32f1xx_hal_dma.c **** 
 771:src/stm32f1xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
 772:src/stm32f1xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 773:src/stm32f1xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 774:src/stm32f1xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 775:src/stm32f1xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 776:src/stm32f1xx_hal_dma.c ****       break; 
 777:src/stm32f1xx_hal_dma.c **** 
 778:src/stm32f1xx_hal_dma.c ****     default:
 779:src/stm32f1xx_hal_dma.c ****       status = HAL_ERROR;
 780:src/stm32f1xx_hal_dma.c ****       break;
 781:src/stm32f1xx_hal_dma.c ****     }
 782:src/stm32f1xx_hal_dma.c ****   }
 783:src/stm32f1xx_hal_dma.c ****   else
 784:src/stm32f1xx_hal_dma.c ****   {
 785:src/stm32f1xx_hal_dma.c ****     status = HAL_ERROR;
 786:src/stm32f1xx_hal_dma.c ****   } 
 787:src/stm32f1xx_hal_dma.c ****   
 788:src/stm32f1xx_hal_dma.c ****   /* Release Lock */
 789:src/stm32f1xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 790:src/stm32f1xx_hal_dma.c ****   
 791:src/stm32f1xx_hal_dma.c ****   return status;
 792:src/stm32f1xx_hal_dma.c **** }
 793:src/stm32f1xx_hal_dma.c ****   
 794:src/stm32f1xx_hal_dma.c **** /**
 795:src/stm32f1xx_hal_dma.c ****   * @}
 796:src/stm32f1xx_hal_dma.c ****   */
 797:src/stm32f1xx_hal_dma.c **** 
 798:src/stm32f1xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group3 Peripheral State and Errors functions
 799:src/stm32f1xx_hal_dma.c ****   *  @brief    Peripheral State and Errors functions
 800:src/stm32f1xx_hal_dma.c ****   *
 801:src/stm32f1xx_hal_dma.c **** @verbatim
 802:src/stm32f1xx_hal_dma.c ****  ===============================================================================
 803:src/stm32f1xx_hal_dma.c ****             ##### Peripheral State and Errors functions #####
 804:src/stm32f1xx_hal_dma.c ****  ===============================================================================  
 805:src/stm32f1xx_hal_dma.c ****     [..]
 806:src/stm32f1xx_hal_dma.c ****     This subsection provides functions allowing to
 807:src/stm32f1xx_hal_dma.c ****       (+) Check the DMA state
 808:src/stm32f1xx_hal_dma.c ****       (+) Get error code
 809:src/stm32f1xx_hal_dma.c **** 
 810:src/stm32f1xx_hal_dma.c **** @endverbatim
 811:src/stm32f1xx_hal_dma.c ****   * @{
 812:src/stm32f1xx_hal_dma.c ****   */
 813:src/stm32f1xx_hal_dma.c **** 
ARM GAS  /tmp/cck4KHRF.s 			page 21


 814:src/stm32f1xx_hal_dma.c **** /**
 815:src/stm32f1xx_hal_dma.c ****   * @brief  Return the DMA hande state.
 816:src/stm32f1xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 817:src/stm32f1xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 818:src/stm32f1xx_hal_dma.c ****   * @retval HAL state
 819:src/stm32f1xx_hal_dma.c ****   */
 820:src/stm32f1xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
 821:src/stm32f1xx_hal_dma.c **** {
 822:src/stm32f1xx_hal_dma.c ****   /* Return DMA handle state */
 823:src/stm32f1xx_hal_dma.c ****   return hdma->State;
 824:src/stm32f1xx_hal_dma.c **** }
 825:src/stm32f1xx_hal_dma.c **** 
 826:src/stm32f1xx_hal_dma.c **** /**
 827:src/stm32f1xx_hal_dma.c ****   * @brief  Return the DMA error code.
 828:src/stm32f1xx_hal_dma.c ****   * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
 829:src/stm32f1xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 830:src/stm32f1xx_hal_dma.c ****   * @retval DMA Error Code
 831:src/stm32f1xx_hal_dma.c ****   */
 832:src/stm32f1xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
 833:src/stm32f1xx_hal_dma.c **** {
 834:src/stm32f1xx_hal_dma.c ****   return hdma->ErrorCode;
 835:src/stm32f1xx_hal_dma.c **** }
 836:src/stm32f1xx_hal_dma.c **** 
 837:src/stm32f1xx_hal_dma.c **** /**
 838:src/stm32f1xx_hal_dma.c ****   * @}
 839:src/stm32f1xx_hal_dma.c ****   */
 840:src/stm32f1xx_hal_dma.c **** 
 841:src/stm32f1xx_hal_dma.c **** /**
 842:src/stm32f1xx_hal_dma.c ****   * @}
 843:src/stm32f1xx_hal_dma.c ****   */
 844:src/stm32f1xx_hal_dma.c **** 
 845:src/stm32f1xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 846:src/stm32f1xx_hal_dma.c ****   * @{
 847:src/stm32f1xx_hal_dma.c ****   */
 848:src/stm32f1xx_hal_dma.c **** 
 849:src/stm32f1xx_hal_dma.c **** /**
 850:src/stm32f1xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
 851:src/stm32f1xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
 852:src/stm32f1xx_hal_dma.c ****   *                     the configuration information for the specified DMA Channel.
 853:src/stm32f1xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 854:src/stm32f1xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 855:src/stm32f1xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 856:src/stm32f1xx_hal_dma.c ****   * @retval HAL status
 857:src/stm32f1xx_hal_dma.c ****   */
 858:src/stm32f1xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 859:src/stm32f1xx_hal_dma.c **** {
 860:src/stm32f1xx_hal_dma.c ****   /* Clear all flags */
 861:src/stm32f1xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
 306              		.loc 1 861 0
 307 00de 076C     		ldr	r7, [r0, #64]	@ hdma_4(D)->ChannelIndex, hdma_4(D)->ChannelIndex
 308              	.LBE5:
 309              	.LBE4:
 336:src/stm32f1xx_hal_dma.c ****     
 310              		.loc 1 336 0
 311 00e0 26F00106 		bic	r6, r6, #1	@ _12, _11,
 312 00e4 2660     		str	r6, [r4]	@ _12, _10->CCR
 313              	.LVL15:
ARM GAS  /tmp/cck4KHRF.s 			page 22


 314              	.LBB8:
 315              	.LBB6:
 316              		.loc 1 861 0
 317 00e6 C66B     		ldr	r6, [r0, #60]	@ _23, hdma_4(D)->DmaBaseAddress
 318 00e8 BD40     		lsls	r5, r5, r7	@ _25, hdma_4(D)->State, hdma_4(D)->ChannelIndex
 319 00ea 7560     		str	r5, [r6, #4]	@ _25, _23->IFCR
 862:src/stm32f1xx_hal_dma.c **** 
 863:src/stm32f1xx_hal_dma.c ****   /* Configure DMA Channel data length */
 864:src/stm32f1xx_hal_dma.c ****   hdma->Instance->CNDTR = DataLength;
 320              		.loc 1 864 0
 321 00ec 6360     		str	r3, [r4, #4]	@ DataLength, _10->CNDTR
 865:src/stm32f1xx_hal_dma.c **** 
 866:src/stm32f1xx_hal_dma.c ****   /* Memory to Peripheral */
 867:src/stm32f1xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 322              		.loc 1 867 0
 323 00ee 4368     		ldr	r3, [r0, #4]	@ hdma_4(D)->Init.Direction, hdma_4(D)->Init.Direction
 324              	.LVL16:
 325              	.LBE6:
 326              	.LBE8:
 321:src/stm32f1xx_hal_dma.c **** 
 327              		.loc 1 321 0
 328 00f0 0020     		movs	r0, #0	@ <retval>,
 329              	.LVL17:
 330              	.LBB9:
 331              	.LBB7:
 332              		.loc 1 867 0
 333 00f2 102B     		cmp	r3, #16	@ hdma_4(D)->Init.Direction,
 868:src/stm32f1xx_hal_dma.c ****   {
 869:src/stm32f1xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 870:src/stm32f1xx_hal_dma.c ****     hdma->Instance->CPAR = DstAddress;
 334              		.loc 1 870 0
 335 00f4 0BBF     		itete	eq
 336 00f6 A260     		streq	r2, [r4, #8]	@ DstAddress, _10->CPAR
 871:src/stm32f1xx_hal_dma.c **** 
 872:src/stm32f1xx_hal_dma.c ****     /* Configure DMA Channel source address */
 873:src/stm32f1xx_hal_dma.c ****     hdma->Instance->CMAR = SrcAddress;
 874:src/stm32f1xx_hal_dma.c ****   }
 875:src/stm32f1xx_hal_dma.c ****   /* Peripheral to Memory */
 876:src/stm32f1xx_hal_dma.c ****   else
 877:src/stm32f1xx_hal_dma.c ****   {
 878:src/stm32f1xx_hal_dma.c ****     /* Configure DMA Channel source address */
 879:src/stm32f1xx_hal_dma.c ****     hdma->Instance->CPAR = SrcAddress;
 337              		.loc 1 879 0
 338 00f8 A160     		strne	r1, [r4, #8]	@ SrcAddress, _10->CPAR
 873:src/stm32f1xx_hal_dma.c ****   }
 339              		.loc 1 873 0
 340 00fa E160     		streq	r1, [r4, #12]	@ SrcAddress, _10->CMAR
 880:src/stm32f1xx_hal_dma.c **** 
 881:src/stm32f1xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 882:src/stm32f1xx_hal_dma.c ****     hdma->Instance->CMAR = DstAddress;
 341              		.loc 1 882 0
 342 00fc E260     		strne	r2, [r4, #12]	@ DstAddress, _10->CMAR
 343              	.LVL18:
 344              	.LBE7:
 345              	.LBE9:
 342:src/stm32f1xx_hal_dma.c ****   }
 346              		.loc 1 342 0
ARM GAS  /tmp/cck4KHRF.s 			page 23


 347 00fe 2368     		ldr	r3, [r4]	@ _19, _10->CCR
 348 0100 43F00103 		orr	r3, r3, #1	@ _20, _19,
 349 0104 2360     		str	r3, [r4]	@ _20, _10->CCR
 350              	.LVL19:
 351 0106 F0BD     		pop	{r4, r5, r6, r7, pc}	@
 352              	.LVL20:
 353              	.L13:
 347:src/stm32f1xx_hal_dma.c ****    status = HAL_BUSY;
 354              		.loc 1 347 0
 355 0108 80F82060 		strb	r6, [r0, #32]	@ tmp140, hdma_4(D)->Lock
 356              	.LVL21:
 357              	.L16:
 327:src/stm32f1xx_hal_dma.c **** 
 358              		.loc 1 327 0
 359 010c 0220     		movs	r0, #2	@ <retval>,
 360              	.LVL22:
 351:src/stm32f1xx_hal_dma.c **** 
 361              		.loc 1 351 0
 362 010e F0BD     		pop	{r4, r5, r6, r7, pc}	@
 363              		.cfi_endproc
 364              	.LFE67:
 365              		.size	HAL_DMA_Start, .-HAL_DMA_Start
 366              		.align	1
 367              		.global	HAL_DMA_Start_IT
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu softvfp
 372              		.type	HAL_DMA_Start_IT, %function
 373              	HAL_DMA_Start_IT:
 374              	.LFB68:
 363:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 375              		.loc 1 363 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL23:
 380 0110 F0B5     		push	{r4, r5, r6, r7, lr}	@
 381              	.LCFI3:
 382              		.cfi_def_cfa_offset 20
 383              		.cfi_offset 4, -20
 384              		.cfi_offset 5, -16
 385              		.cfi_offset 6, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 370:src/stm32f1xx_hal_dma.c ****   
 388              		.loc 1 370 0
 389 0112 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2	@ hdma_5(D)->Lock, hdma_5(D)->Lock
 390 0116 012C     		cmp	r4, #1	@ hdma_5(D)->Lock,
 391 0118 35D0     		beq	.L24	@,
 370:src/stm32f1xx_hal_dma.c ****   
 392              		.loc 1 370 0 is_stmt 0 discriminator 2
 393 011a 0124     		movs	r4, #1	@ tmp135,
 372:src/stm32f1xx_hal_dma.c ****   {
 394              		.loc 1 372 0 is_stmt 1 discriminator 2
 395 011c 90F82150 		ldrb	r5, [r0, #33]	@ zero_extendqisi2	@ hdma_5(D)->State, hdma_5(D)->State
 370:src/stm32f1xx_hal_dma.c ****   
ARM GAS  /tmp/cck4KHRF.s 			page 24


 396              		.loc 1 370 0 discriminator 2
 397 0120 80F82040 		strb	r4, [r0, #32]	@ tmp135, hdma_5(D)->Lock
 372:src/stm32f1xx_hal_dma.c ****   {
 398              		.loc 1 372 0 discriminator 2
 399 0124 A542     		cmp	r5, r4	@ hdma_5(D)->State,
 400 0126 4FF00006 		mov	r6, #0	@ tmp149,
 401 012a 4FF00204 		mov	r4, #2	@ <retval>,
 402 012e 28D1     		bne	.L19	@,
 375:src/stm32f1xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 403              		.loc 1 375 0
 404 0130 80F82140 		strb	r4, [r0, #33]	@ <retval>, hdma_5(D)->State
 379:src/stm32f1xx_hal_dma.c ****     
 405              		.loc 1 379 0
 406 0134 0468     		ldr	r4, [r0]	@ _11, hdma_5(D)->Instance
 376:src/stm32f1xx_hal_dma.c ****     
 407              		.loc 1 376 0
 408 0136 8663     		str	r6, [r0, #56]	@ tmp149, hdma_5(D)->ErrorCode
 379:src/stm32f1xx_hal_dma.c ****     
 409              		.loc 1 379 0
 410 0138 2668     		ldr	r6, [r4]	@ _12, _11->CCR
 411              	.LBB12:
 412              	.LBB13:
 861:src/stm32f1xx_hal_dma.c **** 
 413              		.loc 1 861 0
 414 013a 076C     		ldr	r7, [r0, #64]	@ hdma_5(D)->ChannelIndex, hdma_5(D)->ChannelIndex
 415              	.LBE13:
 416              	.LBE12:
 379:src/stm32f1xx_hal_dma.c ****     
 417              		.loc 1 379 0
 418 013c 26F00106 		bic	r6, r6, #1	@ _13, _12,
 419 0140 2660     		str	r6, [r4]	@ _13, _11->CCR
 420              	.LVL24:
 421              	.LBB16:
 422              	.LBB14:
 861:src/stm32f1xx_hal_dma.c **** 
 423              		.loc 1 861 0
 424 0142 C66B     		ldr	r6, [r0, #60]	@ _36, hdma_5(D)->DmaBaseAddress
 425 0144 BD40     		lsls	r5, r5, r7	@ _38, hdma_5(D)->State, hdma_5(D)->ChannelIndex
 426 0146 7560     		str	r5, [r6, #4]	@ _38, _36->IFCR
 864:src/stm32f1xx_hal_dma.c **** 
 427              		.loc 1 864 0
 428 0148 6360     		str	r3, [r4, #4]	@ DataLength, _11->CNDTR
 867:src/stm32f1xx_hal_dma.c ****   {
 429              		.loc 1 867 0
 430 014a 4368     		ldr	r3, [r0, #4]	@ hdma_5(D)->Init.Direction, hdma_5(D)->Init.Direction
 431              	.LVL25:
 432 014c 0568     		ldr	r5, [r0]	@ _31, hdma_5(D)->Instance
 433 014e 102B     		cmp	r3, #16	@ hdma_5(D)->Init.Direction,
 434              	.LBE14:
 435              	.LBE16:
 386:src/stm32f1xx_hal_dma.c ****     {
 436              		.loc 1 386 0
 437 0150 C36A     		ldr	r3, [r0, #44]	@ hdma_5(D)->XferHalfCpltCallback, hdma_5(D)->XferHalfCpltCallback
 438              	.LBB17:
 439              	.LBB15:
 870:src/stm32f1xx_hal_dma.c **** 
 440              		.loc 1 870 0
ARM GAS  /tmp/cck4KHRF.s 			page 25


 441 0152 0BBF     		itete	eq
 442 0154 A260     		streq	r2, [r4, #8]	@ DstAddress, _11->CPAR
 879:src/stm32f1xx_hal_dma.c **** 
 443              		.loc 1 879 0
 444 0156 A160     		strne	r1, [r4, #8]	@ SrcAddress, _11->CPAR
 873:src/stm32f1xx_hal_dma.c ****   }
 445              		.loc 1 873 0
 446 0158 E160     		streq	r1, [r4, #12]	@ SrcAddress, _11->CMAR
 447              		.loc 1 882 0
 448 015a E260     		strne	r2, [r4, #12]	@ DstAddress, _11->CMAR
 449              	.LVL26:
 450              	.LBE15:
 451              	.LBE17:
 386:src/stm32f1xx_hal_dma.c ****     {
 452              		.loc 1 386 0
 453 015c 4BB1     		cbz	r3, .L22	@ hdma_5(D)->XferHalfCpltCallback,
 389:src/stm32f1xx_hal_dma.c ****     }
 454              		.loc 1 389 0
 455 015e 2368     		ldr	r3, [r4]	@ _21,* _11
 456 0160 43F00E03 		orr	r3, r3, #14	@ _22, _21,
 457              	.LVL27:
 458              	.L25:
 394:src/stm32f1xx_hal_dma.c ****     }
 459              		.loc 1 394 0
 460 0164 2360     		str	r3, [r4]	@ _29,* _11
 397:src/stm32f1xx_hal_dma.c ****   }
 461              		.loc 1 397 0
 462 0166 2B68     		ldr	r3, [r5]	@ _32, _31->CCR
 364:src/stm32f1xx_hal_dma.c **** 
 463              		.loc 1 364 0
 464 0168 0020     		movs	r0, #0	@ <retval>,
 465              	.LVL28:
 397:src/stm32f1xx_hal_dma.c ****   }
 466              		.loc 1 397 0
 467 016a 43F00103 		orr	r3, r3, #1	@ _33, _32,
 468 016e 2B60     		str	r3, [r5]	@ _33, _31->CCR
 469 0170 F0BD     		pop	{r4, r5, r6, r7, pc}	@
 470              	.LVL29:
 471              	.L22:
 393:src/stm32f1xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 472              		.loc 1 393 0
 473 0172 2368     		ldr	r3, [r4]	@ _25,* _11
 474 0174 23F00403 		bic	r3, r3, #4	@ _26, _25,
 475 0178 2360     		str	r3, [r4]	@ _26, _11->CCR
 476              	.LVL30:
 394:src/stm32f1xx_hal_dma.c ****     }
 477              		.loc 1 394 0
 478 017a 2368     		ldr	r3, [r4]	@ _28, _11->CCR
 479 017c 43F00A03 		orr	r3, r3, #10	@ _29, _28,
 480 0180 F0E7     		b	.L25	@
 481              	.LVL31:
 482              	.L19:
 402:src/stm32f1xx_hal_dma.c **** 
 483              		.loc 1 402 0
 484 0182 80F82060 		strb	r6, [r0, #32]	@ tmp149, hdma_5(D)->Lock
 485              	.LVL32:
 486              	.L24:
ARM GAS  /tmp/cck4KHRF.s 			page 26


 370:src/stm32f1xx_hal_dma.c ****   
 487              		.loc 1 370 0
 488 0186 0220     		movs	r0, #2	@ <retval>,
 489              	.LVL33:
 408:src/stm32f1xx_hal_dma.c **** 
 490              		.loc 1 408 0
 491 0188 F0BD     		pop	{r4, r5, r6, r7, pc}	@
 492              		.cfi_endproc
 493              	.LFE68:
 494              		.size	HAL_DMA_Start_IT, .-HAL_DMA_Start_IT
 495              		.align	1
 496              		.global	HAL_DMA_Abort
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 501              		.type	HAL_DMA_Abort, %function
 502              	HAL_DMA_Abort:
 503              	.LFB69:
 417:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 504              		.loc 1 417 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL34:
 420:src/stm32f1xx_hal_dma.c ****   {
 510              		.loc 1 420 0
 511 018a 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2	@ hdma_4(D)->State, hdma_4(D)->State
 512 018e 022B     		cmp	r3, #2	@ hdma_4(D)->State,
 513 0190 06D0     		beq	.L27	@,
 423:src/stm32f1xx_hal_dma.c ****     
 514              		.loc 1 423 0
 515 0192 0423     		movs	r3, #4	@ tmp122,
 516 0194 8363     		str	r3, [r0, #56]	@ tmp122, hdma_4(D)->ErrorCode
 426:src/stm32f1xx_hal_dma.c ****     
 517              		.loc 1 426 0
 518 0196 0023     		movs	r3, #0	@ tmp123,
 519 0198 80F82030 		strb	r3, [r0, #32]	@ tmp123, hdma_4(D)->Lock
 428:src/stm32f1xx_hal_dma.c ****   }
 520              		.loc 1 428 0
 521 019c 0120     		movs	r0, #1	@ <retval>,
 522              	.LVL35:
 523 019e 7047     		bx	lr	@
 524              	.LVL36:
 525              	.L27:
 434:src/stm32f1xx_hal_dma.c ****       
 526              		.loc 1 434 0
 527 01a0 0368     		ldr	r3, [r0]	@ _8, hdma_4(D)->Instance
 440:src/stm32f1xx_hal_dma.c ****   }
 528              		.loc 1 440 0
 529 01a2 C16B     		ldr	r1, [r0, #60]	@ _15, hdma_4(D)->DmaBaseAddress
 434:src/stm32f1xx_hal_dma.c ****       
 530              		.loc 1 434 0
 531 01a4 1A68     		ldr	r2, [r3]	@ _9, _8->CCR
 532 01a6 22F00E02 		bic	r2, r2, #14	@ _10, _9,
 533 01aa 1A60     		str	r2, [r3]	@ _10, _8->CCR
ARM GAS  /tmp/cck4KHRF.s 			page 27


 437:src/stm32f1xx_hal_dma.c ****       
 534              		.loc 1 437 0
 535 01ac 1A68     		ldr	r2, [r3]	@ _12, _8->CCR
 536 01ae 22F00102 		bic	r2, r2, #1	@ _13, _12,
 537 01b2 1A60     		str	r2, [r3]	@ _13, _8->CCR
 440:src/stm32f1xx_hal_dma.c ****   }
 538              		.loc 1 440 0
 539 01b4 0122     		movs	r2, #1	@ tmp125,
 540 01b6 036C     		ldr	r3, [r0, #64]	@ hdma_4(D)->ChannelIndex, hdma_4(D)->ChannelIndex
 541 01b8 02FA03F3 		lsl	r3, r2, r3	@ _17, tmp125, hdma_4(D)->ChannelIndex
 542 01bc 4B60     		str	r3, [r1, #4]	@ _17, _15->IFCR
 446:src/stm32f1xx_hal_dma.c ****   
 543              		.loc 1 446 0
 544 01be 0023     		movs	r3, #0	@ tmp129,
 443:src/stm32f1xx_hal_dma.c **** 
 545              		.loc 1 443 0
 546 01c0 80F82120 		strb	r2, [r0, #33]	@ tmp125, hdma_4(D)->State
 446:src/stm32f1xx_hal_dma.c ****   
 547              		.loc 1 446 0
 548 01c4 80F82030 		strb	r3, [r0, #32]	@ tmp129, hdma_4(D)->Lock
 448:src/stm32f1xx_hal_dma.c **** }
 549              		.loc 1 448 0
 550 01c8 1846     		mov	r0, r3	@ <retval>, tmp129
 551              	.LVL37:
 449:src/stm32f1xx_hal_dma.c **** 
 552              		.loc 1 449 0
 553 01ca 7047     		bx	lr	@
 554              		.cfi_endproc
 555              	.LFE69:
 556              		.size	HAL_DMA_Abort, .-HAL_DMA_Abort
 557              		.align	1
 558              		.global	HAL_DMA_Abort_IT
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu softvfp
 563              		.type	HAL_DMA_Abort_IT, %function
 564              	HAL_DMA_Abort_IT:
 565              	.LFB70:
 458:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 566              		.loc 1 458 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL38:
 461:src/stm32f1xx_hal_dma.c ****   {
 571              		.loc 1 461 0
 572 01cc 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2	@ hdma_5(D)->State, hdma_5(D)->State
 458:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 573              		.loc 1 458 0
 574 01d0 10B5     		push	{r4, lr}	@
 575              	.LCFI4:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 461:src/stm32f1xx_hal_dma.c ****   {
 579              		.loc 1 461 0
ARM GAS  /tmp/cck4KHRF.s 			page 28


 580 01d2 022B     		cmp	r3, #2	@ hdma_5(D)->State,
 581 01d4 03D0     		beq	.L30	@,
 464:src/stm32f1xx_hal_dma.c ****         
 582              		.loc 1 464 0
 583 01d6 0423     		movs	r3, #4	@ tmp122,
 584 01d8 8363     		str	r3, [r0, #56]	@ tmp122, hdma_5(D)->ErrorCode
 585              	.LVL39:
 466:src/stm32f1xx_hal_dma.c ****   }
 586              		.loc 1 466 0
 587 01da 0120     		movs	r0, #1	@ <retval>,
 588              	.LVL40:
 589 01dc 10BD     		pop	{r4, pc}	@
 590              	.LVL41:
 591              	.L30:
 471:src/stm32f1xx_hal_dma.c **** 
 592              		.loc 1 471 0
 593 01de 0368     		ldr	r3, [r0]	@ _8, hdma_5(D)->Instance
 594 01e0 1A68     		ldr	r2, [r3]	@ _9, _8->CCR
 595 01e2 22F00E02 		bic	r2, r2, #14	@ _10, _9,
 596 01e6 1A60     		str	r2, [r3]	@ _10, _8->CCR
 474:src/stm32f1xx_hal_dma.c **** 
 597              		.loc 1 474 0
 598 01e8 1A68     		ldr	r2, [r3]	@ _12, _8->CCR
 599 01ea 22F00102 		bic	r2, r2, #1	@ _13, _12,
 600 01ee 1A60     		str	r2, [r3]	@ _13, _8->CCR
 477:src/stm32f1xx_hal_dma.c **** 
 601              		.loc 1 477 0
 602 01f0 184A     		ldr	r2, .L40	@ tmp123,
 603 01f2 9342     		cmp	r3, r2	@ _8, tmp123
 604 01f4 1FD0     		beq	.L33	@,
 477:src/stm32f1xx_hal_dma.c **** 
 605              		.loc 1 477 0 is_stmt 0 discriminator 1
 606 01f6 1432     		adds	r2, r2, #20	@ tmp124, tmp124,
 607 01f8 9342     		cmp	r3, r2	@ _8, tmp124
 608 01fa 1ED0     		beq	.L34	@,
 477:src/stm32f1xx_hal_dma.c **** 
 609              		.loc 1 477 0 discriminator 3
 610 01fc 1432     		adds	r2, r2, #20	@ tmp125, tmp125,
 611 01fe 9342     		cmp	r3, r2	@ _8, tmp125
 612 0200 1DD0     		beq	.L35	@,
 477:src/stm32f1xx_hal_dma.c **** 
 613              		.loc 1 477 0 discriminator 5
 614 0202 1432     		adds	r2, r2, #20	@ tmp126, tmp126,
 615 0204 9342     		cmp	r3, r2	@ _8, tmp126
 616 0206 1DD0     		beq	.L36	@,
 477:src/stm32f1xx_hal_dma.c **** 
 617              		.loc 1 477 0 discriminator 7
 618 0208 1432     		adds	r2, r2, #20	@ tmp127, tmp127,
 619 020a 9342     		cmp	r3, r2	@ _8, tmp127
 620 020c 1DD0     		beq	.L37	@,
 477:src/stm32f1xx_hal_dma.c **** 
 621              		.loc 1 477 0 discriminator 9
 622 020e 1432     		adds	r2, r2, #20	@ tmp128, tmp128,
 623 0210 9342     		cmp	r3, r2	@ _8, tmp128
 624 0212 0CBF     		ite	eq	@
 625 0214 4FF48013 		moveq	r3, #1048576	@, iftmp.0_2,
 626 0218 4FF08073 		movne	r3, #16777216	@, iftmp.0_2,
ARM GAS  /tmp/cck4KHRF.s 			page 29


 627              	.L32:
 477:src/stm32f1xx_hal_dma.c **** 
 628              		.loc 1 477 0 discriminator 24
 629 021c 0E4A     		ldr	r2, .L40+4	@ tmp129,
 483:src/stm32f1xx_hal_dma.c **** 
 630              		.loc 1 483 0 is_stmt 1 discriminator 24
 631 021e 0024     		movs	r4, #0	@ tmp132,
 477:src/stm32f1xx_hal_dma.c **** 
 632              		.loc 1 477 0 discriminator 24
 633 0220 5360     		str	r3, [r2, #4]	@ iftmp.0_2, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 480:src/stm32f1xx_hal_dma.c **** 
 634              		.loc 1 480 0 discriminator 24
 635 0222 0123     		movs	r3, #1	@ tmp130,
 636 0224 80F82130 		strb	r3, [r0, #33]	@ tmp130, hdma_5(D)->State
 486:src/stm32f1xx_hal_dma.c ****     {
 637              		.loc 1 486 0 discriminator 24
 638 0228 436B     		ldr	r3, [r0, #52]	@ _19, hdma_5(D)->XferAbortCallback
 483:src/stm32f1xx_hal_dma.c **** 
 639              		.loc 1 483 0 discriminator 24
 640 022a 80F82040 		strb	r4, [r0, #32]	@ tmp132, hdma_5(D)->Lock
 486:src/stm32f1xx_hal_dma.c ****     {
 641              		.loc 1 486 0 discriminator 24
 642 022e 7BB1     		cbz	r3, .L39	@ _19,
 488:src/stm32f1xx_hal_dma.c ****     } 
 643              		.loc 1 488 0
 644 0230 9847     		blx	r3	@ _19
 645              	.LVL42:
 459:src/stm32f1xx_hal_dma.c ****   
 646              		.loc 1 459 0
 647 0232 2046     		mov	r0, r4	@ <retval>, tmp132
 648 0234 10BD     		pop	{r4, pc}	@
 649              	.LVL43:
 650              	.L33:
 477:src/stm32f1xx_hal_dma.c **** 
 651              		.loc 1 477 0
 652 0236 0123     		movs	r3, #1	@ iftmp.0_2,
 653 0238 F0E7     		b	.L32	@
 654              	.L34:
 655 023a 1023     		movs	r3, #16	@ iftmp.0_2,
 656 023c EEE7     		b	.L32	@
 657              	.L35:
 658 023e 4FF48073 		mov	r3, #256	@ iftmp.0_2,
 659 0242 EBE7     		b	.L32	@
 660              	.L36:
 661 0244 4FF48053 		mov	r3, #4096	@ iftmp.0_2,
 662 0248 E8E7     		b	.L32	@
 663              	.L37:
 664 024a 4FF48033 		mov	r3, #65536	@ iftmp.0_2,
 665 024e E5E7     		b	.L32	@
 666              	.L39:
 459:src/stm32f1xx_hal_dma.c ****   
 667              		.loc 1 459 0
 668 0250 1846     		mov	r0, r3	@ <retval>, _19
 669              	.LVL44:
 492:src/stm32f1xx_hal_dma.c **** 
 670              		.loc 1 492 0
 671 0252 10BD     		pop	{r4, pc}	@
ARM GAS  /tmp/cck4KHRF.s 			page 30


 672              	.L41:
 673              		.align	2
 674              	.L40:
 675 0254 08000240 		.word	1073872904
 676 0258 00000240 		.word	1073872896
 677              		.cfi_endproc
 678              	.LFE70:
 679              		.size	HAL_DMA_Abort_IT, .-HAL_DMA_Abort_IT
 680              		.align	1
 681              		.global	HAL_DMA_PollForTransfer
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu softvfp
 686              		.type	HAL_DMA_PollForTransfer, %function
 687              	HAL_DMA_PollForTransfer:
 688              	.LFB71:
 503:src/stm32f1xx_hal_dma.c ****   uint32_t temp;
 689              		.loc 1 503 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL45:
 694 025c 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 695              	.LCFI5:
 696              		.cfi_def_cfa_offset 40
 697              		.cfi_offset 3, -40
 698              		.cfi_offset 4, -36
 699              		.cfi_offset 5, -32
 700              		.cfi_offset 6, -28
 701              		.cfi_offset 7, -24
 702              		.cfi_offset 8, -20
 703              		.cfi_offset 9, -16
 704              		.cfi_offset 10, -12
 705              		.cfi_offset 11, -8
 706              		.cfi_offset 14, -4
 507:src/stm32f1xx_hal_dma.c ****   {
 707              		.loc 1 507 0
 708 0260 90F82140 		ldrb	r4, [r0, #33]	@ zero_extendqisi2	@ hdma_12(D)->State, hdma_12(D)->State
 503:src/stm32f1xx_hal_dma.c ****   uint32_t temp;
 709              		.loc 1 503 0
 710 0264 0546     		mov	r5, r0	@ hdma, hdma
 507:src/stm32f1xx_hal_dma.c ****   {
 711              		.loc 1 507 0
 712 0266 022C     		cmp	r4, #2	@ hdma_12(D)->State,
 503:src/stm32f1xx_hal_dma.c ****   uint32_t temp;
 713              		.loc 1 503 0
 714 0268 8846     		mov	r8, r1	@ CompleteLevel, CompleteLevel
 715 026a 1746     		mov	r7, r2	@ Timeout, Timeout
 507:src/stm32f1xx_hal_dma.c ****   {
 716              		.loc 1 507 0
 717 026c 07D0     		beq	.L43	@,
 510:src/stm32f1xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 718              		.loc 1 510 0
 719 026e 0423     		movs	r3, #4	@ tmp145,
 720 0270 8363     		str	r3, [r0, #56]	@ tmp145, hdma_12(D)->ErrorCode
 511:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/cck4KHRF.s 			page 31


 721              		.loc 1 511 0
 722 0272 0023     		movs	r3, #0	@ tmp146,
 723 0274 80F82030 		strb	r3, [r0, #32]	@ tmp146, hdma_12(D)->Lock
 724              	.LVL46:
 725              	.L91:
 519:src/stm32f1xx_hal_dma.c ****   }
 726              		.loc 1 519 0
 727 0278 0120     		movs	r0, #1	@ <retval>,
 728              	.LVL47:
 729 027a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 730              	.LVL48:
 731              	.L43:
 516:src/stm32f1xx_hal_dma.c ****   {
 732              		.loc 1 516 0
 733 027e 0368     		ldr	r3, [r0]	@ _16, hdma_12(D)->Instance
 734 0280 1A68     		ldr	r2, [r3]	@ _17, _16->CCR
 735              	.LVL49:
 736 0282 9206     		lsls	r2, r2, #26	@, _17,
 737 0284 03D5     		bpl	.L45	@,
 518:src/stm32f1xx_hal_dma.c ****     return HAL_ERROR;
 738              		.loc 1 518 0
 739 0286 4FF48073 		mov	r3, #256	@ tmp149,
 740 028a 8363     		str	r3, [r0, #56]	@ tmp149, hdma_12(D)->ErrorCode
 741 028c F4E7     		b	.L91	@
 742              	.L45:
 743 028e 7A4E     		ldr	r6, .L93	@ tmp202,
 523:src/stm32f1xx_hal_dma.c ****   {
 744              		.loc 1 523 0
 745 0290 0029     		cmp	r1, #0	@ CompleteLevel
 746 0292 4CD1     		bne	.L46	@
 526:src/stm32f1xx_hal_dma.c ****   }
 747              		.loc 1 526 0
 748 0294 B342     		cmp	r3, r6	@ _16, tmp202
 749 0296 12D0     		beq	.L47	@,
 526:src/stm32f1xx_hal_dma.c ****   }
 750              		.loc 1 526 0 is_stmt 0 discriminator 1
 751 0298 784A     		ldr	r2, .L93+4	@ tmp151,
 752 029a 9342     		cmp	r3, r2	@ _16, tmp151
 753 029c 5DD0     		beq	.L60	@,
 526:src/stm32f1xx_hal_dma.c ****   }
 754              		.loc 1 526 0 discriminator 3
 755 029e 1432     		adds	r2, r2, #20	@ tmp152, tmp152,
 756 02a0 9342     		cmp	r3, r2	@ _16, tmp152
 757 02a2 5CD0     		beq	.L61	@,
 526:src/stm32f1xx_hal_dma.c ****   }
 758              		.loc 1 526 0 discriminator 5
 759 02a4 1432     		adds	r2, r2, #20	@ tmp153, tmp153,
 760 02a6 9342     		cmp	r3, r2	@ _16, tmp153
 761 02a8 5CD0     		beq	.L62	@,
 526:src/stm32f1xx_hal_dma.c ****   }
 762              		.loc 1 526 0 discriminator 7
 763 02aa 1432     		adds	r2, r2, #20	@ tmp154, tmp154,
 764 02ac 9342     		cmp	r3, r2	@ _16, tmp154
 765 02ae 5CD0     		beq	.L63	@,
 526:src/stm32f1xx_hal_dma.c ****   }
 766              		.loc 1 526 0 discriminator 9
 767 02b0 734C     		ldr	r4, .L93+8	@ tmp155,
ARM GAS  /tmp/cck4KHRF.s 			page 32


 768 02b2 A342     		cmp	r3, r4	@ _16, tmp155
 769 02b4 0CBF     		ite	eq	@
 770 02b6 4FF40014 		moveq	r4, #2097152	@, temp,
 771 02ba 4FF00074 		movne	r4, #33554432	@, temp,
 772              	.L47:
 773              	.LVL50:
 535:src/stm32f1xx_hal_dma.c **** 
 774              		.loc 1 535 0 is_stmt 1
 775 02be FFF7FEFF 		bl	HAL_GetTick	@
 776              	.LVL51:
 777 02c2 8146     		mov	r9, r0	@ tickstart,
 778              	.LVL52:
 539:src/stm32f1xx_hal_dma.c ****     {
 779              		.loc 1 539 0
 780 02c4 DFF8B4A1 		ldr	r10, .L93+4	@ tmp205,
 781 02c8 DFF8C4B1 		ldr	fp, .L93+24	@ tmp207,
 782              	.LVL53:
 783              	.L48:
 537:src/stm32f1xx_hal_dma.c ****   {
 784              		.loc 1 537 0
 785 02cc 6D4A     		ldr	r2, .L93+12	@ tmp181,
 539:src/stm32f1xx_hal_dma.c ****     {
 786              		.loc 1 539 0
 787 02ce 6E49     		ldr	r1, .L93+16	@ tmp209,
 788 02d0 6E48     		ldr	r0, .L93+20	@ tmp210,
 789 02d2 DFF8ACE1 		ldr	lr, .L93+8	@ tmp211,
 790              	.L51:
 537:src/stm32f1xx_hal_dma.c ****   {
 791              		.loc 1 537 0
 792 02d6 1368     		ldr	r3, [r2]	@ _25, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 793 02d8 1C42     		tst	r4, r3	@ temp, _25
 794 02da 2B68     		ldr	r3, [r5]	@ _29, hdma_12(D)->Instance
 795 02dc 55D0     		beq	.L54	@,
 576:src/stm32f1xx_hal_dma.c ****   {
 796              		.loc 1 576 0
 797 02de B8F1000F 		cmp	r8, #0	@ CompleteLevel
 798 02e2 40F0A380 		bne	.L55	@
 579:src/stm32f1xx_hal_dma.c **** 
 799              		.loc 1 579 0
 800 02e6 B342     		cmp	r3, r6	@ _29, tmp202
 801 02e8 00F09380 		beq	.L77	@,
 579:src/stm32f1xx_hal_dma.c **** 
 802              		.loc 1 579 0 is_stmt 0 discriminator 1
 803 02ec 634A     		ldr	r2, .L93+4	@ tmp184,
 804 02ee 9342     		cmp	r3, r2	@ _29, tmp184
 805 02f0 00F09180 		beq	.L78	@,
 579:src/stm32f1xx_hal_dma.c **** 
 806              		.loc 1 579 0 discriminator 3
 807 02f4 1432     		adds	r2, r2, #20	@ tmp185, tmp185,
 808 02f6 9342     		cmp	r3, r2	@ _29, tmp185
 809 02f8 00F08F80 		beq	.L79	@,
 579:src/stm32f1xx_hal_dma.c **** 
 810              		.loc 1 579 0 discriminator 5
 811 02fc 1432     		adds	r2, r2, #20	@ tmp186, tmp186,
 812 02fe 9342     		cmp	r3, r2	@ _29, tmp186
 813 0300 00F08E80 		beq	.L80	@,
 579:src/stm32f1xx_hal_dma.c **** 
ARM GAS  /tmp/cck4KHRF.s 			page 33


 814              		.loc 1 579 0 discriminator 7
 815 0304 1432     		adds	r2, r2, #20	@ tmp187, tmp187,
 816 0306 9342     		cmp	r3, r2	@ _29, tmp187
 817 0308 00F08D80 		beq	.L81	@,
 579:src/stm32f1xx_hal_dma.c **** 
 818              		.loc 1 579 0 discriminator 9
 819 030c 1432     		adds	r2, r2, #20	@ tmp188, tmp188,
 820 030e 9342     		cmp	r3, r2	@ _29, tmp188
 821 0310 0CBF     		ite	eq	@
 822 0312 4FF40013 		moveq	r3, #2097152	@, iftmp.24_5,
 823 0316 4FF00073 		movne	r3, #33554432	@, iftmp.24_5,
 824              	.L56:
 579:src/stm32f1xx_hal_dma.c **** 
 825              		.loc 1 579 0 discriminator 24
 826 031a 5A4A     		ldr	r2, .L93+12	@ tmp189,
 827 031c 5360     		str	r3, [r2, #4]	@ iftmp.24_5, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 583:src/stm32f1xx_hal_dma.c ****   }
 828              		.loc 1 583 0 is_stmt 1 discriminator 24
 829 031e 0123     		movs	r3, #1	@ tmp190,
 830 0320 85F82130 		strb	r3, [r5, #33]	@ tmp190, hdma_12(D)->State
 831              	.L57:
 592:src/stm32f1xx_hal_dma.c **** 
 832              		.loc 1 592 0
 833 0324 0020     		movs	r0, #0	@ tmp199,
 834 0326 85F82000 		strb	r0, [r5, #32]	@ tmp199, hdma_12(D)->Lock
 595:src/stm32f1xx_hal_dma.c **** 
 835              		.loc 1 595 0
 836 032a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 837              	.LVL54:
 838              	.L46:
 531:src/stm32f1xx_hal_dma.c ****   }
 839              		.loc 1 531 0
 840 032e B342     		cmp	r3, r6	@ _16, tmp202
 841 0330 1ED0     		beq	.L65	@,
 531:src/stm32f1xx_hal_dma.c ****   }
 842              		.loc 1 531 0 is_stmt 0 discriminator 1
 843 0332 524A     		ldr	r2, .L93+4	@ tmp157,
 844 0334 9342     		cmp	r3, r2	@ _16, tmp157
 845 0336 1DD0     		beq	.L66	@,
 531:src/stm32f1xx_hal_dma.c ****   }
 846              		.loc 1 531 0 discriminator 3
 847 0338 1432     		adds	r2, r2, #20	@ tmp158, tmp158,
 848 033a 9342     		cmp	r3, r2	@ _16, tmp158
 849 033c 1CD0     		beq	.L67	@,
 531:src/stm32f1xx_hal_dma.c ****   }
 850              		.loc 1 531 0 discriminator 5
 851 033e 1432     		adds	r2, r2, #20	@ tmp159, tmp159,
 852 0340 9342     		cmp	r3, r2	@ _16, tmp159
 853 0342 1CD0     		beq	.L68	@,
 531:src/stm32f1xx_hal_dma.c ****   }
 854              		.loc 1 531 0 discriminator 7
 855 0344 1432     		adds	r2, r2, #20	@ tmp160, tmp160,
 856 0346 9342     		cmp	r3, r2	@ _16, tmp160
 857 0348 1CD0     		beq	.L69	@,
 531:src/stm32f1xx_hal_dma.c ****   }
 858              		.loc 1 531 0 discriminator 9
 859 034a 4D4C     		ldr	r4, .L93+8	@ tmp161,
ARM GAS  /tmp/cck4KHRF.s 			page 34


 860 034c A342     		cmp	r3, r4	@ _16, tmp161
 861 034e 0CBF     		ite	eq	@
 862 0350 4FF48004 		moveq	r4, #4194304	@, temp,
 863 0354 4FF08064 		movne	r4, #67108864	@, temp,
 864 0358 B1E7     		b	.L47	@
 865              	.L60:
 526:src/stm32f1xx_hal_dma.c ****   }
 866              		.loc 1 526 0 is_stmt 1
 867 035a 2024     		movs	r4, #32	@ temp,
 868 035c AFE7     		b	.L47	@
 869              	.L61:
 870 035e 4FF40074 		mov	r4, #512	@ temp,
 871 0362 ACE7     		b	.L47	@
 872              	.L62:
 873 0364 4FF40054 		mov	r4, #8192	@ temp,
 874 0368 A9E7     		b	.L47	@
 875              	.L63:
 876 036a 4FF40034 		mov	r4, #131072	@ temp,
 877 036e A6E7     		b	.L47	@
 878              	.L65:
 531:src/stm32f1xx_hal_dma.c ****   }
 879              		.loc 1 531 0
 880 0370 0424     		movs	r4, #4	@ temp,
 881 0372 A4E7     		b	.L47	@
 882              	.L66:
 883 0374 4024     		movs	r4, #64	@ temp,
 884 0376 A2E7     		b	.L47	@
 885              	.L67:
 886 0378 4FF48064 		mov	r4, #1024	@ temp,
 887 037c 9FE7     		b	.L47	@
 888              	.L68:
 889 037e 4FF48044 		mov	r4, #16384	@ temp,
 890 0382 9CE7     		b	.L47	@
 891              	.L69:
 892 0384 4FF48024 		mov	r4, #262144	@ temp,
 893 0388 99E7     		b	.L47	@
 894              	.LVL55:
 895              	.L54:
 539:src/stm32f1xx_hal_dma.c ****     {
 896              		.loc 1 539 0
 897 038a B342     		cmp	r3, r6	@ _29, tmp202
 898 038c D2F800C0 		ldr	ip, [r2]	@ _27, MEM[(struct DMA_TypeDef *)1073872896B].ISR
 899 0390 20D0     		beq	.L71	@,
 539:src/stm32f1xx_hal_dma.c ****     {
 900              		.loc 1 539 0 is_stmt 0 discriminator 1
 901 0392 5345     		cmp	r3, r10	@ _29, tmp205
 902 0394 20D0     		beq	.L72	@,
 539:src/stm32f1xx_hal_dma.c ****     {
 903              		.loc 1 539 0 discriminator 3
 904 0396 5B45     		cmp	r3, fp	@ _29, tmp207
 905 0398 20D0     		beq	.L73	@,
 539:src/stm32f1xx_hal_dma.c ****     {
 906              		.loc 1 539 0 discriminator 5
 907 039a 8B42     		cmp	r3, r1	@ _29, tmp209
 908 039c 21D0     		beq	.L74	@,
 539:src/stm32f1xx_hal_dma.c ****     {
 909              		.loc 1 539 0 discriminator 7
ARM GAS  /tmp/cck4KHRF.s 			page 35


 910 039e 8342     		cmp	r3, r0	@ _29, tmp210
 911 03a0 22D0     		beq	.L75	@,
 539:src/stm32f1xx_hal_dma.c ****     {
 912              		.loc 1 539 0 discriminator 9
 913 03a2 7345     		cmp	r3, lr	@ _29, tmp211
 914 03a4 0CBF     		ite	eq	@
 915 03a6 4FF40003 		moveq	r3, #8388608	@, iftmp.18_4,
 916 03aa 4FF00063 		movne	r3, #134217728	@, iftmp.18_4,
 917              	.L49:
 539:src/stm32f1xx_hal_dma.c ****     {
 918              		.loc 1 539 0 discriminator 24
 919 03ae 13EA0C0F 		tst	r3, ip	@ iftmp.18_4, _27
 920 03b2 1CD0     		beq	.L50	@,
 544:src/stm32f1xx_hal_dma.c **** 
 921              		.loc 1 544 0 is_stmt 1
 922 03b4 0120     		movs	r0, #1	@ tmp170,
 923 03b6 2B6C     		ldr	r3, [r5, #64]	@ hdma_12(D)->ChannelIndex, hdma_12(D)->ChannelIndex
 924 03b8 EA6B     		ldr	r2, [r5, #60]	@ _40, hdma_12(D)->DmaBaseAddress
 925 03ba 00FA03F3 		lsl	r3, r0, r3	@ _42, tmp170, hdma_12(D)->ChannelIndex
 926 03be 5360     		str	r3, [r2, #4]	@ _42, _40->IFCR
 547:src/stm32f1xx_hal_dma.c **** 
 927              		.loc 1 547 0
 928 03c0 AB6B     		ldr	r3, [r5, #56]	@ _44, hdma_12(D)->ErrorCode
 929 03c2 0343     		orrs	r3, r3, r0	@, _45, _44,
 930 03c4 AB63     		str	r3, [r5, #56]	@ _45, hdma_12(D)->ErrorCode
 931              	.L92:
 569:src/stm32f1xx_hal_dma.c **** 
 932              		.loc 1 569 0
 933 03c6 0023     		movs	r3, #0	@ tmp178,
 566:src/stm32f1xx_hal_dma.c **** 
 934              		.loc 1 566 0
 935 03c8 85F82100 		strb	r0, [r5, #33]	@ tmp176, hdma_12(D)->State
 569:src/stm32f1xx_hal_dma.c **** 
 936              		.loc 1 569 0
 937 03cc 85F82030 		strb	r3, [r5, #32]	@ tmp178, hdma_12(D)->Lock
 571:src/stm32f1xx_hal_dma.c ****       }
 938              		.loc 1 571 0
 939 03d0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 940              	.LVL56:
 941              	.L71:
 539:src/stm32f1xx_hal_dma.c ****     {
 942              		.loc 1 539 0
 943 03d4 0823     		movs	r3, #8	@ iftmp.18_4,
 944 03d6 EAE7     		b	.L49	@
 945              	.L72:
 946 03d8 8023     		movs	r3, #128	@ iftmp.18_4,
 947 03da E8E7     		b	.L49	@
 948              	.L73:
 949 03dc 4FF40063 		mov	r3, #2048	@ iftmp.18_4,
 950 03e0 E5E7     		b	.L49	@
 951              	.L74:
 952 03e2 4FF40043 		mov	r3, #32768	@ iftmp.18_4,
 953 03e6 E2E7     		b	.L49	@
 954              	.L75:
 955 03e8 4FF40023 		mov	r3, #524288	@ iftmp.18_4,
 956 03ec DFE7     		b	.L49	@
 957              	.L50:
ARM GAS  /tmp/cck4KHRF.s 			page 36


 558:src/stm32f1xx_hal_dma.c ****     {
 958              		.loc 1 558 0
 959 03ee 7B1C     		adds	r3, r7, #1	@, Timeout,
 960 03f0 3FF471AF 		beq	.L51	@,
 560:src/stm32f1xx_hal_dma.c ****       {
 961              		.loc 1 560 0
 962 03f4 2FB9     		cbnz	r7, .L52	@ Timeout,
 963              	.L53:
 563:src/stm32f1xx_hal_dma.c **** 
 964              		.loc 1 563 0
 965 03f6 AB6B     		ldr	r3, [r5, #56]	@ _35, hdma_12(D)->ErrorCode
 566:src/stm32f1xx_hal_dma.c **** 
 966              		.loc 1 566 0
 967 03f8 0120     		movs	r0, #1	@ tmp176,
 563:src/stm32f1xx_hal_dma.c **** 
 968              		.loc 1 563 0
 969 03fa 43F02003 		orr	r3, r3, #32	@ _36, _35,
 970 03fe AB63     		str	r3, [r5, #56]	@ _36, hdma_12(D)->ErrorCode
 971 0400 E1E7     		b	.L92	@
 972              	.L52:
 560:src/stm32f1xx_hal_dma.c ****       {
 973              		.loc 1 560 0 discriminator 1
 974 0402 FFF7FEFF 		bl	HAL_GetTick	@
 975              	.LVL57:
 976 0406 A0EB0900 		sub	r0, r0, r9	@ tmp180,, tickstart
 977 040a 8742     		cmp	r7, r0	@ Timeout, tmp180
 978 040c BFF45EAF 		bcs	.L48	@,
 979 0410 F1E7     		b	.L53	@
 980              	.L77:
 579:src/stm32f1xx_hal_dma.c **** 
 981              		.loc 1 579 0
 982 0412 0223     		movs	r3, #2	@ iftmp.24_5,
 983 0414 81E7     		b	.L56	@
 984              	.L78:
 985 0416 2023     		movs	r3, #32	@ iftmp.24_5,
 986 0418 7FE7     		b	.L56	@
 987              	.L79:
 988 041a 4FF40073 		mov	r3, #512	@ iftmp.24_5,
 989 041e 7CE7     		b	.L56	@
 990              	.L80:
 991 0420 4FF40053 		mov	r3, #8192	@ iftmp.24_5,
 992 0424 79E7     		b	.L56	@
 993              	.L81:
 994 0426 4FF40033 		mov	r3, #131072	@ iftmp.24_5,
 995 042a 76E7     		b	.L56	@
 996              	.L55:
 588:src/stm32f1xx_hal_dma.c ****   }
 997              		.loc 1 588 0
 998 042c B342     		cmp	r3, r6	@ _29, tmp202
 999 042e 15D0     		beq	.L83	@,
 588:src/stm32f1xx_hal_dma.c ****   }
 1000              		.loc 1 588 0 is_stmt 0 discriminator 1
 1001 0430 124A     		ldr	r2, .L93+4	@ tmp193,
 1002 0432 9342     		cmp	r3, r2	@ _29, tmp193
 1003 0434 14D0     		beq	.L84	@,
 588:src/stm32f1xx_hal_dma.c ****   }
 1004              		.loc 1 588 0 discriminator 3
ARM GAS  /tmp/cck4KHRF.s 			page 37


 1005 0436 1432     		adds	r2, r2, #20	@ tmp194, tmp194,
 1006 0438 9342     		cmp	r3, r2	@ _29, tmp194
 1007 043a 13D0     		beq	.L85	@,
 588:src/stm32f1xx_hal_dma.c ****   }
 1008              		.loc 1 588 0 discriminator 5
 1009 043c 1432     		adds	r2, r2, #20	@ tmp195, tmp195,
 1010 043e 9342     		cmp	r3, r2	@ _29, tmp195
 1011 0440 13D0     		beq	.L86	@,
 588:src/stm32f1xx_hal_dma.c ****   }
 1012              		.loc 1 588 0 discriminator 7
 1013 0442 1432     		adds	r2, r2, #20	@ tmp196, tmp196,
 1014 0444 9342     		cmp	r3, r2	@ _29, tmp196
 1015 0446 13D0     		beq	.L87	@,
 588:src/stm32f1xx_hal_dma.c ****   }
 1016              		.loc 1 588 0 discriminator 9
 1017 0448 1432     		adds	r2, r2, #20	@ tmp197, tmp197,
 1018 044a 9342     		cmp	r3, r2	@ _29, tmp197
 1019 044c 0CBF     		ite	eq	@
 1020 044e 4FF48003 		moveq	r3, #4194304	@, iftmp.30_6,
 1021 0452 4FF08063 		movne	r3, #67108864	@, iftmp.30_6,
 1022              	.L58:
 588:src/stm32f1xx_hal_dma.c ****   }
 1023              		.loc 1 588 0 discriminator 24
 1024 0456 0B4A     		ldr	r2, .L93+12	@ tmp198,
 1025 0458 5360     		str	r3, [r2, #4]	@ iftmp.30_6, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 1026 045a 63E7     		b	.L57	@
 1027              	.L83:
 588:src/stm32f1xx_hal_dma.c ****   }
 1028              		.loc 1 588 0
 1029 045c 0423     		movs	r3, #4	@ iftmp.30_6,
 1030 045e FAE7     		b	.L58	@
 1031              	.L84:
 1032 0460 4023     		movs	r3, #64	@ iftmp.30_6,
 1033 0462 F8E7     		b	.L58	@
 1034              	.L85:
 1035 0464 4FF48063 		mov	r3, #1024	@ iftmp.30_6,
 1036 0468 F5E7     		b	.L58	@
 1037              	.L86:
 1038 046a 4FF48043 		mov	r3, #16384	@ iftmp.30_6,
 1039 046e F2E7     		b	.L58	@
 1040              	.L87:
 1041 0470 4FF48023 		mov	r3, #262144	@ iftmp.30_6,
 1042 0474 EFE7     		b	.L58	@
 1043              	.L94:
 1044 0476 00BF     		.align	2
 1045              	.L93:
 1046 0478 08000240 		.word	1073872904
 1047 047c 1C000240 		.word	1073872924
 1048 0480 6C000240 		.word	1073873004
 1049 0484 00000240 		.word	1073872896
 1050 0488 44000240 		.word	1073872964
 1051 048c 58000240 		.word	1073872984
 1052 0490 30000240 		.word	1073872944
 1053              		.cfi_endproc
 1054              	.LFE71:
 1055              		.size	HAL_DMA_PollForTransfer, .-HAL_DMA_PollForTransfer
 1056              		.align	1
ARM GAS  /tmp/cck4KHRF.s 			page 38


 1057              		.global	HAL_DMA_IRQHandler
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu softvfp
 1062              		.type	HAL_DMA_IRQHandler, %function
 1063              	HAL_DMA_IRQHandler:
 1064              	.LFB72:
 604:src/stm32f1xx_hal_dma.c ****   uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 1065              		.loc 1 604 0 is_stmt 1
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 1070              	.LVL58:
 1071 0494 70B4     		push	{r4, r5, r6}	@
 1072              	.LCFI6:
 1073              		.cfi_def_cfa_offset 12
 1074              		.cfi_offset 4, -12
 1075              		.cfi_offset 5, -8
 1076              		.cfi_offset 6, -4
 609:src/stm32f1xx_hal_dma.c ****   {
 1077              		.loc 1 609 0
 1078 0496 0425     		movs	r5, #4	@ tmp144,
 605:src/stm32f1xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 1079              		.loc 1 605 0
 1080 0498 C66B     		ldr	r6, [r0, #60]	@ _8, hdma_7(D)->DmaBaseAddress
 609:src/stm32f1xx_hal_dma.c ****   {
 1081              		.loc 1 609 0
 1082 049a 026C     		ldr	r2, [r0, #64]	@ _12, hdma_7(D)->ChannelIndex
 605:src/stm32f1xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 1083              		.loc 1 605 0
 1084 049c 3468     		ldr	r4, [r6]	@ flag_it, _8->ISR
 1085              	.LVL59:
 606:src/stm32f1xx_hal_dma.c ****   
 1086              		.loc 1 606 0
 1087 049e 0368     		ldr	r3, [r0]	@ _10, hdma_7(D)->Instance
 609:src/stm32f1xx_hal_dma.c ****   {
 1088              		.loc 1 609 0
 1089 04a0 9540     		lsls	r5, r5, r2	@ tmp143, tmp144, _12
 1090 04a2 2542     		tst	r5, r4	@ tmp143, flag_it
 606:src/stm32f1xx_hal_dma.c ****   
 1091              		.loc 1 606 0
 1092 04a4 1968     		ldr	r1, [r3]	@ source_it, _10->CCR
 1093              	.LVL60:
 609:src/stm32f1xx_hal_dma.c ****   {
 1094              		.loc 1 609 0
 1095 04a6 32D0     		beq	.L96	@,
 609:src/stm32f1xx_hal_dma.c ****   {
 1096              		.loc 1 609 0 is_stmt 0 discriminator 1
 1097 04a8 4D07     		lsls	r5, r1, #29	@, source_it,
 1098 04aa 30D5     		bpl	.L96	@,
 612:src/stm32f1xx_hal_dma.c ****     {
 1099              		.loc 1 612 0 is_stmt 1
 1100 04ac 1A68     		ldr	r2, [r3]	@ _16, _10->CCR
 1101 04ae 9606     		lsls	r6, r2, #26	@, _16,
 615:src/stm32f1xx_hal_dma.c ****     }
ARM GAS  /tmp/cck4KHRF.s 			page 39


 1102              		.loc 1 615 0
 1103 04b0 5EBF     		ittt	pl
 1104 04b2 1A68     		ldrpl	r2, [r3]	@ _18, _10->CCR
 1105 04b4 22F00402 		bicpl	r2, r2, #4	@ _19, _18,
 1106 04b8 1A60     		strpl	r2, [r3]	@ _19, _10->CCR
 618:src/stm32f1xx_hal_dma.c **** 
 1107              		.loc 1 618 0
 1108 04ba 3E4A     		ldr	r2, .L145	@ tmp148,
 1109 04bc 9342     		cmp	r3, r2	@ _10, tmp148
 1110 04be 19D0     		beq	.L105	@,
 618:src/stm32f1xx_hal_dma.c **** 
 1111              		.loc 1 618 0 is_stmt 0 discriminator 1
 1112 04c0 1432     		adds	r2, r2, #20	@ tmp149, tmp149,
 1113 04c2 9342     		cmp	r3, r2	@ _10, tmp149
 1114 04c4 18D0     		beq	.L106	@,
 618:src/stm32f1xx_hal_dma.c **** 
 1115              		.loc 1 618 0 discriminator 3
 1116 04c6 1432     		adds	r2, r2, #20	@ tmp150, tmp150,
 1117 04c8 9342     		cmp	r3, r2	@ _10, tmp150
 1118 04ca 17D0     		beq	.L107	@,
 618:src/stm32f1xx_hal_dma.c **** 
 1119              		.loc 1 618 0 discriminator 5
 1120 04cc 1432     		adds	r2, r2, #20	@ tmp151, tmp151,
 1121 04ce 9342     		cmp	r3, r2	@ _10, tmp151
 1122 04d0 17D0     		beq	.L108	@,
 618:src/stm32f1xx_hal_dma.c **** 
 1123              		.loc 1 618 0 discriminator 7
 1124 04d2 1432     		adds	r2, r2, #20	@ tmp152, tmp152,
 1125 04d4 9342     		cmp	r3, r2	@ _10, tmp152
 1126 04d6 17D0     		beq	.L109	@,
 618:src/stm32f1xx_hal_dma.c **** 
 1127              		.loc 1 618 0 discriminator 9
 1128 04d8 1432     		adds	r2, r2, #20	@ tmp153, tmp153,
 1129 04da 9342     		cmp	r3, r2	@ _10, tmp153
 1130 04dc 0CBF     		ite	eq	@
 1131 04de 4FF48003 		moveq	r3, #4194304	@, iftmp.36_1,
 1132 04e2 4FF08063 		movne	r3, #67108864	@, iftmp.36_1,
 1133              	.L98:
 618:src/stm32f1xx_hal_dma.c **** 
 1134              		.loc 1 618 0 discriminator 24
 1135 04e6 344A     		ldr	r2, .L145+4	@ tmp154,
 1136 04e8 5360     		str	r3, [r2, #4]	@ iftmp.36_1, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 623:src/stm32f1xx_hal_dma.c ****     {
 1137              		.loc 1 623 0 is_stmt 1 discriminator 24
 1138 04ea C36A     		ldr	r3, [r0, #44]	@ _23, hdma_7(D)->XferHalfCpltCallback
 1139              	.LVL61:
 1140              	.L143:
 674:src/stm32f1xx_hal_dma.c ****     {
 1141              		.loc 1 674 0
 1142 04ec 002B     		cmp	r3, #0	@ _50
 1143 04ee 5ED0     		beq	.L95	@
 681:src/stm32f1xx_hal_dma.c **** 
 1144              		.loc 1 681 0
 1145 04f0 70BC     		pop	{r4, r5, r6}	@
 1146              	.LCFI7:
 1147              		.cfi_remember_state
 1148              		.cfi_restore 6
ARM GAS  /tmp/cck4KHRF.s 			page 40


 1149              		.cfi_restore 5
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
 677:src/stm32f1xx_hal_dma.c ****     }
 1152              		.loc 1 677 0
 1153 04f2 1847     		bx	r3	@ indirect register sibling call	@ _50
 1154              	.LVL62:
 1155              	.L105:
 1156              	.LCFI8:
 1157              		.cfi_restore_state
 618:src/stm32f1xx_hal_dma.c **** 
 1158              		.loc 1 618 0
 1159 04f4 0423     		movs	r3, #4	@ iftmp.36_1,
 1160 04f6 F6E7     		b	.L98	@
 1161              	.L106:
 1162 04f8 4023     		movs	r3, #64	@ iftmp.36_1,
 1163 04fa F4E7     		b	.L98	@
 1164              	.L107:
 1165 04fc 4FF48063 		mov	r3, #1024	@ iftmp.36_1,
 1166 0500 F1E7     		b	.L98	@
 1167              	.L108:
 1168 0502 4FF48043 		mov	r3, #16384	@ iftmp.36_1,
 1169 0506 EEE7     		b	.L98	@
 1170              	.L109:
 1171 0508 4FF48023 		mov	r3, #262144	@ iftmp.36_1,
 1172 050c EBE7     		b	.L98	@
 1173              	.L96:
 631:src/stm32f1xx_hal_dma.c ****   {
 1174              		.loc 1 631 0
 1175 050e 0225     		movs	r5, #2	@ tmp156,
 1176 0510 9540     		lsls	r5, r5, r2	@ tmp155, tmp156, _12
 1177 0512 2542     		tst	r5, r4	@ tmp155, flag_it
 1178 0514 35D0     		beq	.L101	@,
 631:src/stm32f1xx_hal_dma.c ****   {
 1179              		.loc 1 631 0 is_stmt 0 discriminator 1
 1180 0516 8D07     		lsls	r5, r1, #30	@, source_it,
 1181 0518 33D5     		bpl	.L101	@,
 633:src/stm32f1xx_hal_dma.c ****     {
 1182              		.loc 1 633 0 is_stmt 1
 1183 051a 1A68     		ldr	r2, [r3]	@ _28, _10->CCR
 1184 051c 9406     		lsls	r4, r2, #26	@, _28,
 1185              	.LVL63:
 1186 051e 06D4     		bmi	.L102	@,
 636:src/stm32f1xx_hal_dma.c **** 
 1187              		.loc 1 636 0
 1188 0520 1A68     		ldr	r2, [r3]	@ _30, _10->CCR
 1189 0522 22F00A02 		bic	r2, r2, #10	@ _31, _30,
 1190 0526 1A60     		str	r2, [r3]	@ _31, _10->CCR
 639:src/stm32f1xx_hal_dma.c ****     }
 1191              		.loc 1 639 0
 1192 0528 0122     		movs	r2, #1	@ tmp160,
 1193 052a 80F82120 		strb	r2, [r0, #33]	@ tmp160, hdma_7(D)->State
 1194              	.L102:
 642:src/stm32f1xx_hal_dma.c **** 
 1195              		.loc 1 642 0
 1196 052e 214A     		ldr	r2, .L145	@ tmp162,
 1197 0530 9342     		cmp	r3, r2	@ _10, tmp162
ARM GAS  /tmp/cck4KHRF.s 			page 41


 1198 0532 19D0     		beq	.L111	@,
 642:src/stm32f1xx_hal_dma.c **** 
 1199              		.loc 1 642 0 is_stmt 0 discriminator 1
 1200 0534 1432     		adds	r2, r2, #20	@ tmp163, tmp163,
 1201 0536 9342     		cmp	r3, r2	@ _10, tmp163
 1202 0538 18D0     		beq	.L112	@,
 642:src/stm32f1xx_hal_dma.c **** 
 1203              		.loc 1 642 0 discriminator 3
 1204 053a 1432     		adds	r2, r2, #20	@ tmp164, tmp164,
 1205 053c 9342     		cmp	r3, r2	@ _10, tmp164
 1206 053e 17D0     		beq	.L113	@,
 642:src/stm32f1xx_hal_dma.c **** 
 1207              		.loc 1 642 0 discriminator 5
 1208 0540 1432     		adds	r2, r2, #20	@ tmp165, tmp165,
 1209 0542 9342     		cmp	r3, r2	@ _10, tmp165
 1210 0544 17D0     		beq	.L114	@,
 642:src/stm32f1xx_hal_dma.c **** 
 1211              		.loc 1 642 0 discriminator 7
 1212 0546 1432     		adds	r2, r2, #20	@ tmp166, tmp166,
 1213 0548 9342     		cmp	r3, r2	@ _10, tmp166
 1214 054a 17D0     		beq	.L115	@,
 642:src/stm32f1xx_hal_dma.c **** 
 1215              		.loc 1 642 0 discriminator 9
 1216 054c 1432     		adds	r2, r2, #20	@ tmp167, tmp167,
 1217 054e 9342     		cmp	r3, r2	@ _10, tmp167
 1218 0550 0CBF     		ite	eq	@
 1219 0552 4FF40013 		moveq	r3, #2097152	@, iftmp.42_2,
 1220 0556 4FF00073 		movne	r3, #33554432	@, iftmp.42_2,
 1221              	.L103:
 642:src/stm32f1xx_hal_dma.c **** 
 1222              		.loc 1 642 0 discriminator 24
 1223 055a 174A     		ldr	r2, .L145+4	@ tmp168,
 1224 055c 5360     		str	r3, [r2, #4]	@ iftmp.42_2, MEM[(struct DMA_TypeDef *)1073872896B].IFCR
 645:src/stm32f1xx_hal_dma.c **** 
 1225              		.loc 1 645 0 is_stmt 1 discriminator 24
 1226 055e 0023     		movs	r3, #0	@ tmp169,
 1227 0560 80F82030 		strb	r3, [r0, #32]	@ tmp169, hdma_7(D)->Lock
 647:src/stm32f1xx_hal_dma.c ****     {
 1228              		.loc 1 647 0 discriminator 24
 1229 0564 836A     		ldr	r3, [r0, #40]	@ _37, hdma_7(D)->XferCpltCallback
 1230 0566 C1E7     		b	.L143	@
 1231              	.L111:
 642:src/stm32f1xx_hal_dma.c **** 
 1232              		.loc 1 642 0
 1233 0568 0223     		movs	r3, #2	@ iftmp.42_2,
 1234 056a F6E7     		b	.L103	@
 1235              	.L112:
 1236 056c 2023     		movs	r3, #32	@ iftmp.42_2,
 1237 056e F4E7     		b	.L103	@
 1238              	.L113:
 1239 0570 4FF40073 		mov	r3, #512	@ iftmp.42_2,
 1240 0574 F1E7     		b	.L103	@
 1241              	.L114:
 1242 0576 4FF40053 		mov	r3, #8192	@ iftmp.42_2,
 1243 057a EEE7     		b	.L103	@
 1244              	.L115:
 1245 057c 4FF40033 		mov	r3, #131072	@ iftmp.42_2,
ARM GAS  /tmp/cck4KHRF.s 			page 42


 1246 0580 EBE7     		b	.L103	@
 1247              	.LVL64:
 1248              	.L101:
 655:src/stm32f1xx_hal_dma.c ****   {
 1249              		.loc 1 655 0
 1250 0582 0825     		movs	r5, #8	@ tmp172,
 1251 0584 9540     		lsls	r5, r5, r2	@ tmp171, tmp172, _12
 1252 0586 2542     		tst	r5, r4	@ tmp171, flag_it
 1253 0588 11D0     		beq	.L95	@,
 655:src/stm32f1xx_hal_dma.c ****   {
 1254              		.loc 1 655 0 is_stmt 0 discriminator 1
 1255 058a 0907     		lsls	r1, r1, #28	@, source_it,
 1256              	.LVL65:
 1257 058c 0FD5     		bpl	.L95	@,
 660:src/stm32f1xx_hal_dma.c **** 
 1258              		.loc 1 660 0 is_stmt 1
 1259 058e 1968     		ldr	r1, [r3]	@ _42, _10->CCR
 1260 0590 21F00E01 		bic	r1, r1, #14	@ _43, _42,
 1261 0594 1960     		str	r1, [r3]	@ _43, _10->CCR
 663:src/stm32f1xx_hal_dma.c **** 
 1262              		.loc 1 663 0
 1263 0596 0123     		movs	r3, #1	@ tmp175,
 1264 0598 03FA02F2 		lsl	r2, r3, r2	@ _45, tmp175, _12
 1265 059c 7260     		str	r2, [r6, #4]	@ _45, _8->IFCR
 666:src/stm32f1xx_hal_dma.c **** 
 1266              		.loc 1 666 0
 1267 059e 8363     		str	r3, [r0, #56]	@ tmp175, hdma_7(D)->ErrorCode
 669:src/stm32f1xx_hal_dma.c **** 
 1268              		.loc 1 669 0
 1269 05a0 80F82130 		strb	r3, [r0, #33]	@ tmp175, hdma_7(D)->State
 672:src/stm32f1xx_hal_dma.c **** 
 1270              		.loc 1 672 0
 1271 05a4 0023     		movs	r3, #0	@ tmp179,
 1272 05a6 80F82030 		strb	r3, [r0, #32]	@ tmp179, hdma_7(D)->Lock
 674:src/stm32f1xx_hal_dma.c ****     {
 1273              		.loc 1 674 0
 1274 05aa 036B     		ldr	r3, [r0, #48]	@ _50, hdma_7(D)->XferErrorCallback
 1275 05ac 9EE7     		b	.L143	@
 1276              	.LVL66:
 1277              	.L95:
 681:src/stm32f1xx_hal_dma.c **** 
 1278              		.loc 1 681 0
 1279 05ae 70BC     		pop	{r4, r5, r6}	@
 1280              	.LCFI9:
 1281              		.cfi_restore 6
 1282              		.cfi_restore 5
 1283              		.cfi_restore 4
 1284              		.cfi_def_cfa_offset 0
 1285 05b0 7047     		bx	lr	@
 1286              	.L146:
 1287 05b2 00BF     		.align	2
 1288              	.L145:
 1289 05b4 08000240 		.word	1073872904
 1290 05b8 00000240 		.word	1073872896
 1291              		.cfi_endproc
 1292              	.LFE72:
 1293              		.size	HAL_DMA_IRQHandler, .-HAL_DMA_IRQHandler
ARM GAS  /tmp/cck4KHRF.s 			page 43


 1294              		.align	1
 1295              		.global	HAL_DMA_RegisterCallback
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1299              		.fpu softvfp
 1300              		.type	HAL_DMA_RegisterCallback, %function
 1301              	HAL_DMA_RegisterCallback:
 1302              	.LFB73:
 694:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1303              		.loc 1 694 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL67:
 698:src/stm32f1xx_hal_dma.c ****   
 1308              		.loc 1 698 0
 1309 05bc 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2	@ hdma_6(D)->Lock, hdma_6(D)->Lock
 694:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1310              		.loc 1 694 0
 1311 05c0 10B5     		push	{r4, lr}	@
 1312              	.LCFI10:
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 4, -8
 1315              		.cfi_offset 14, -4
 698:src/stm32f1xx_hal_dma.c ****   
 1316              		.loc 1 698 0
 1317 05c2 012B     		cmp	r3, #1	@ hdma_6(D)->Lock,
 694:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1318              		.loc 1 694 0
 1319 05c4 0446     		mov	r4, r0	@ hdma, hdma
 698:src/stm32f1xx_hal_dma.c ****   
 1320              		.loc 1 698 0
 1321 05c6 1AD0     		beq	.L155	@,
 698:src/stm32f1xx_hal_dma.c ****   
 1322              		.loc 1 698 0 is_stmt 0 discriminator 2
 1323 05c8 0123     		movs	r3, #1	@ tmp117,
 1324 05ca 80F82030 		strb	r3, [r0, #32]	@ tmp117, hdma_6(D)->Lock
 700:src/stm32f1xx_hal_dma.c ****   {
 1325              		.loc 1 700 0 is_stmt 1 discriminator 2
 1326 05ce 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2	@ hdma_6(D)->State, hdma_6(D)->State
 1327              	.LVL68:
 1328 05d2 9842     		cmp	r0, r3	@ hdma_6(D)->State,
 1329 05d4 11D1     		bne	.L157	@,
 702:src/stm32f1xx_hal_dma.c ****     {
 1330              		.loc 1 702 0
 1331 05d6 0329     		cmp	r1, #3	@ CallbackID,
 1332 05d8 0FD8     		bhi	.L157	@
 1333 05da DFE801F0 		tbb	[pc, r1]	@ CallbackID
 1334              	.L151:
 1335 05de 02       		.byte	(.L150-.L151)/2
 1336 05df 08       		.byte	(.L152-.L151)/2
 1337 05e0 0A       		.byte	(.L153-.L151)/2
 1338 05e1 0C       		.byte	(.L154-.L151)/2
 1339              		.p2align 1
 1340              	.L150:
 705:src/stm32f1xx_hal_dma.c ****       break;
ARM GAS  /tmp/cck4KHRF.s 			page 44


 1341              		.loc 1 705 0
 1342 05e2 A262     		str	r2, [r4, #40]	@ pCallback, hdma_6(D)->XferCpltCallback
 1343              	.L158:
 695:src/stm32f1xx_hal_dma.c ****   
 1344              		.loc 1 695 0
 1345 05e4 0020     		movs	r0, #0	@ <retval>,
 1346              	.L149:
 1347              	.LVL69:
 731:src/stm32f1xx_hal_dma.c ****   
 1348              		.loc 1 731 0
 1349 05e6 0023     		movs	r3, #0	@ tmp124,
 1350 05e8 84F82030 		strb	r3, [r4, #32]	@ tmp124, hdma_6(D)->Lock
 733:src/stm32f1xx_hal_dma.c **** }
 1351              		.loc 1 733 0
 1352 05ec 10BD     		pop	{r4, pc}	@
 1353              	.LVL70:
 1354              	.L152:
 709:src/stm32f1xx_hal_dma.c ****       break;         
 1355              		.loc 1 709 0
 1356 05ee E262     		str	r2, [r4, #44]	@ pCallback, hdma_6(D)->XferHalfCpltCallback
 1357 05f0 F8E7     		b	.L158	@
 1358              	.L153:
 713:src/stm32f1xx_hal_dma.c ****       break;         
 1359              		.loc 1 713 0
 1360 05f2 2263     		str	r2, [r4, #48]	@ pCallback, hdma_6(D)->XferErrorCallback
 1361 05f4 F6E7     		b	.L158	@
 1362              	.L154:
 717:src/stm32f1xx_hal_dma.c ****       break; 
 1363              		.loc 1 717 0
 1364 05f6 6263     		str	r2, [r4, #52]	@ pCallback, hdma_6(D)->XferAbortCallback
 1365 05f8 F4E7     		b	.L158	@
 1366              	.L157:
 721:src/stm32f1xx_hal_dma.c ****       break;                                                            
 1367              		.loc 1 721 0
 1368 05fa 0120     		movs	r0, #1	@ <retval>,
 1369 05fc F3E7     		b	.L149	@
 1370              	.LVL71:
 1371              	.L155:
 698:src/stm32f1xx_hal_dma.c ****   
 1372              		.loc 1 698 0
 1373 05fe 0220     		movs	r0, #2	@ <retval>,
 1374              	.LVL72:
 734:src/stm32f1xx_hal_dma.c **** 
 1375              		.loc 1 734 0
 1376 0600 10BD     		pop	{r4, pc}	@
 1377              		.cfi_endproc
 1378              	.LFE73:
 1379              		.size	HAL_DMA_RegisterCallback, .-HAL_DMA_RegisterCallback
 1380              		.align	1
 1381              		.global	HAL_DMA_UnRegisterCallback
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu softvfp
 1386              		.type	HAL_DMA_UnRegisterCallback, %function
 1387              	HAL_DMA_UnRegisterCallback:
 1388              	.LFB74:
ARM GAS  /tmp/cck4KHRF.s 			page 45


 745:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1389              		.loc 1 745 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394              	.LVL73:
 749:src/stm32f1xx_hal_dma.c ****   
 1395              		.loc 1 749 0
 1396 0602 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2	@ hdma_6(D)->Lock, hdma_6(D)->Lock
 745:src/stm32f1xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1397              		.loc 1 745 0
 1398 0606 0346     		mov	r3, r0	@ hdma, hdma
 749:src/stm32f1xx_hal_dma.c ****   
 1399              		.loc 1 749 0
 1400 0608 012A     		cmp	r2, #1	@ hdma_6(D)->Lock,
 1401 060a 1FD0     		beq	.L168	@,
 749:src/stm32f1xx_hal_dma.c ****   
 1402              		.loc 1 749 0 is_stmt 0 discriminator 2
 1403 060c 0120     		movs	r0, #1	@ tmp116,
 1404              	.LVL74:
 751:src/stm32f1xx_hal_dma.c ****   {
 1405              		.loc 1 751 0 is_stmt 1 discriminator 2
 1406 060e 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2	@ hdma_6(D)->State, hdma_6(D)->State
 749:src/stm32f1xx_hal_dma.c ****   
 1407              		.loc 1 749 0 discriminator 2
 1408 0612 83F82000 		strb	r0, [r3, #32]	@ tmp116, hdma_6(D)->Lock
 751:src/stm32f1xx_hal_dma.c ****   {
 1409              		.loc 1 751 0 discriminator 2
 1410 0616 8242     		cmp	r2, r0	@ hdma_6(D)->State,
 1411 0618 09D1     		bne	.L161	@,
 1412 061a 0022     		movs	r2, #0	@ tmp131,
 753:src/stm32f1xx_hal_dma.c ****     {
 1413              		.loc 1 753 0
 1414 061c 0429     		cmp	r1, #4	@ CallbackID,
 1415 061e 13D8     		bhi	.L170	@
 1416 0620 DFE801F0 		tbb	[pc, r1]	@ CallbackID
 1417              	.L163:
 1418 0624 03       		.byte	(.L162-.L163)/2
 1419 0625 09       		.byte	(.L164-.L163)/2
 1420 0626 0B       		.byte	(.L165-.L163)/2
 1421 0627 10       		.byte	(.L166-.L163)/2
 1422 0628 0D       		.byte	(.L167-.L163)/2
 1423 0629 00       		.p2align 1
 1424              	.L162:
 756:src/stm32f1xx_hal_dma.c ****       break;
 1425              		.loc 1 756 0
 1426 062a 9A62     		str	r2, [r3, #40]	@ tmp131, hdma_6(D)->XferCpltCallback
 1427              	.L171:
 746:src/stm32f1xx_hal_dma.c **** 
 1428              		.loc 1 746 0
 1429 062c 0020     		movs	r0, #0	@ <retval>,
 1430              	.L161:
 1431              	.LVL75:
 789:src/stm32f1xx_hal_dma.c ****   
 1432              		.loc 1 789 0
 1433 062e 0022     		movs	r2, #0	@ tmp127,
ARM GAS  /tmp/cck4KHRF.s 			page 46


 1434 0630 83F82020 		strb	r2, [r3, #32]	@ tmp127, hdma_6(D)->Lock
 791:src/stm32f1xx_hal_dma.c **** }
 1435              		.loc 1 791 0
 1436 0634 7047     		bx	lr	@
 1437              	.LVL76:
 1438              	.L164:
 760:src/stm32f1xx_hal_dma.c ****       break;         
 1439              		.loc 1 760 0
 1440 0636 DA62     		str	r2, [r3, #44]	@ tmp131, hdma_6(D)->XferHalfCpltCallback
 1441 0638 F8E7     		b	.L171	@
 1442              	.L165:
 764:src/stm32f1xx_hal_dma.c ****       break;         
 1443              		.loc 1 764 0
 1444 063a 1A63     		str	r2, [r3, #48]	@ tmp131, hdma_6(D)->XferErrorCallback
 1445 063c F6E7     		b	.L171	@
 1446              	.L167:
 772:src/stm32f1xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1447              		.loc 1 772 0
 1448 063e 9A62     		str	r2, [r3, #40]	@ tmp131, hdma_6(D)->XferCpltCallback
 773:src/stm32f1xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1449              		.loc 1 773 0
 1450 0640 DA62     		str	r2, [r3, #44]	@ tmp131, hdma_6(D)->XferHalfCpltCallback
 774:src/stm32f1xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1451              		.loc 1 774 0
 1452 0642 1A63     		str	r2, [r3, #48]	@ tmp131, hdma_6(D)->XferErrorCallback
 1453              	.L166:
 768:src/stm32f1xx_hal_dma.c ****       break; 
 1454              		.loc 1 768 0
 1455 0644 5A63     		str	r2, [r3, #52]	@ tmp131, hdma_6(D)->XferAbortCallback
 1456 0646 F1E7     		b	.L171	@
 1457              	.L170:
 779:src/stm32f1xx_hal_dma.c ****       break;
 1458              		.loc 1 779 0
 1459 0648 0120     		movs	r0, #1	@ <retval>,
 1460 064a F0E7     		b	.L161	@
 1461              	.LVL77:
 1462              	.L168:
 749:src/stm32f1xx_hal_dma.c ****   
 1463              		.loc 1 749 0
 1464 064c 0220     		movs	r0, #2	@ <retval>,
 1465              	.LVL78:
 792:src/stm32f1xx_hal_dma.c ****   
 1466              		.loc 1 792 0
 1467 064e 7047     		bx	lr	@
 1468              		.cfi_endproc
 1469              	.LFE74:
 1470              		.size	HAL_DMA_UnRegisterCallback, .-HAL_DMA_UnRegisterCallback
 1471              		.align	1
 1472              		.global	HAL_DMA_GetState
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu softvfp
 1477              		.type	HAL_DMA_GetState, %function
 1478              	HAL_DMA_GetState:
 1479              	.LFB75:
 821:src/stm32f1xx_hal_dma.c ****   /* Return DMA handle state */
ARM GAS  /tmp/cck4KHRF.s 			page 47


 1480              		.loc 1 821 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485              	.LVL79:
 824:src/stm32f1xx_hal_dma.c **** 
 1486              		.loc 1 824 0
 1487 0650 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2	@, hdma_2(D)->State
 1488              	.LVL80:
 1489 0654 7047     		bx	lr	@
 1490              		.cfi_endproc
 1491              	.LFE75:
 1492              		.size	HAL_DMA_GetState, .-HAL_DMA_GetState
 1493              		.align	1
 1494              		.global	HAL_DMA_GetError
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu softvfp
 1499              		.type	HAL_DMA_GetError, %function
 1500              	HAL_DMA_GetError:
 1501              	.LFB76:
 833:src/stm32f1xx_hal_dma.c ****   return hdma->ErrorCode;
 1502              		.loc 1 833 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL81:
 834:src/stm32f1xx_hal_dma.c **** }
 1508              		.loc 1 834 0
 1509 0656 806B     		ldr	r0, [r0, #56]	@ <retval>, hdma_2(D)->ErrorCode
 1510              	.LVL82:
 835:src/stm32f1xx_hal_dma.c **** 
 1511              		.loc 1 835 0
 1512 0658 7047     		bx	lr	@
 1513              		.cfi_endproc
 1514              	.LFE76:
 1515              		.size	HAL_DMA_GetError, .-HAL_DMA_GetError
 1516              	.Letext0:
 1517              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1518              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1519              		.file 4 "../cmsiscore/inc/core_cm3.h"
 1520              		.file 5 "../cmsisstm32f1xx/inc/system_stm32f1xx.h"
 1521              		.file 6 "../cmsisstm32f1xx/inc/stm32f103x6.h"
 1522              		.file 7 "../cmsisstm32f1xx/inc/stm32f1xx.h"
 1523              		.file 8 "./inc/stm32f1xx_hal_def.h"
 1524              		.file 9 "./inc/stm32f1xx_hal_dma.h"
 1525              		.file 10 "./inc/stm32f1xx_hal.h"
 1526 065a 00BF     		.section	.debug_info,"",%progbits
 1527              	.Ldebug_info0:
 1528 0000 AD080000 		.4byte	0x8ad
 1529 0004 0200     		.2byte	0x2
 1530 0006 00000000 		.4byte	.Ldebug_abbrev0
 1531 000a 04       		.byte	0x4
 1532 000b 01       		.uleb128 0x1
ARM GAS  /tmp/cck4KHRF.s 			page 48


 1533 000c 58010000 		.4byte	.LASF101
 1534 0010 0C       		.byte	0xc
 1535 0011 83020000 		.4byte	.LASF102
 1536 0015 E7050000 		.4byte	.LASF103
 1537 0019 00000000 		.4byte	.Ltext0
 1538 001d 5A060000 		.4byte	.Letext0
 1539 0021 00000000 		.4byte	.Ldebug_line0
 1540 0025 02       		.uleb128 0x2
 1541 0026 01       		.byte	0x1
 1542 0027 06       		.byte	0x6
 1543 0028 6D030000 		.4byte	.LASF0
 1544 002c 03       		.uleb128 0x3
 1545 002d 9B020000 		.4byte	.LASF4
 1546 0031 02       		.byte	0x2
 1547 0032 1D       		.byte	0x1d
 1548 0033 37000000 		.4byte	0x37
 1549 0037 02       		.uleb128 0x2
 1550 0038 01       		.byte	0x1
 1551 0039 08       		.byte	0x8
 1552 003a 42030000 		.4byte	.LASF1
 1553 003e 02       		.uleb128 0x2
 1554 003f 02       		.byte	0x2
 1555 0040 05       		.byte	0x5
 1556 0041 0F020000 		.4byte	.LASF2
 1557 0045 02       		.uleb128 0x2
 1558 0046 02       		.byte	0x2
 1559 0047 07       		.byte	0x7
 1560 0048 03040000 		.4byte	.LASF3
 1561 004c 03       		.uleb128 0x3
 1562 004d 59050000 		.4byte	.LASF5
 1563 0051 02       		.byte	0x2
 1564 0052 3F       		.byte	0x3f
 1565 0053 57000000 		.4byte	0x57
 1566 0057 02       		.uleb128 0x2
 1567 0058 04       		.byte	0x4
 1568 0059 05       		.byte	0x5
 1569 005a 5A020000 		.4byte	.LASF6
 1570 005e 03       		.uleb128 0x3
 1571 005f 1B010000 		.4byte	.LASF7
 1572 0063 02       		.byte	0x2
 1573 0064 41       		.byte	0x41
 1574 0065 69000000 		.4byte	0x69
 1575 0069 02       		.uleb128 0x2
 1576 006a 04       		.byte	0x4
 1577 006b 07       		.byte	0x7
 1578 006c F2040000 		.4byte	.LASF8
 1579 0070 02       		.uleb128 0x2
 1580 0071 08       		.byte	0x8
 1581 0072 05       		.byte	0x5
 1582 0073 2A020000 		.4byte	.LASF9
 1583 0077 02       		.uleb128 0x2
 1584 0078 08       		.byte	0x8
 1585 0079 07       		.byte	0x7
 1586 007a 38020000 		.4byte	.LASF10
 1587 007e 04       		.uleb128 0x4
 1588 007f 04       		.byte	0x4
 1589 0080 05       		.byte	0x5
ARM GAS  /tmp/cck4KHRF.s 			page 49


 1590 0081 696E7400 		.ascii	"int\000"
 1591 0085 02       		.uleb128 0x2
 1592 0086 04       		.byte	0x4
 1593 0087 07       		.byte	0x7
 1594 0088 BB050000 		.4byte	.LASF11
 1595 008c 03       		.uleb128 0x3
 1596 008d F0010000 		.4byte	.LASF12
 1597 0091 03       		.byte	0x3
 1598 0092 18       		.byte	0x18
 1599 0093 2C000000 		.4byte	0x2c
 1600 0097 05       		.uleb128 0x5
 1601 0098 8C000000 		.4byte	0x8c
 1602 009c 03       		.uleb128 0x3
 1603 009d 50040000 		.4byte	.LASF13
 1604 00a1 03       		.byte	0x3
 1605 00a2 2C       		.byte	0x2c
 1606 00a3 4C000000 		.4byte	0x4c
 1607 00a7 06       		.uleb128 0x6
 1608 00a8 9C000000 		.4byte	0x9c
 1609 00ac 03       		.uleb128 0x3
 1610 00ad 97030000 		.4byte	.LASF14
 1611 00b1 03       		.byte	0x3
 1612 00b2 30       		.byte	0x30
 1613 00b3 5E000000 		.4byte	0x5e
 1614 00b7 06       		.uleb128 0x6
 1615 00b8 AC000000 		.4byte	0xac
 1616 00bc 02       		.uleb128 0x2
 1617 00bd 04       		.byte	0x4
 1618 00be 07       		.byte	0x7
 1619 00bf BE000000 		.4byte	.LASF15
 1620 00c3 07       		.uleb128 0x7
 1621 00c4 AE050000 		.4byte	.LASF16
 1622 00c8 04       		.byte	0x4
 1623 00c9 4807     		.2byte	0x748
 1624 00cb A7000000 		.4byte	0xa7
 1625 00cf 01       		.byte	0x1
 1626 00d0 01       		.byte	0x1
 1627 00d1 08       		.uleb128 0x8
 1628 00d2 63000000 		.4byte	.LASF17
 1629 00d6 05       		.byte	0x5
 1630 00d7 33       		.byte	0x33
 1631 00d8 AC000000 		.4byte	0xac
 1632 00dc 01       		.byte	0x1
 1633 00dd 01       		.byte	0x1
 1634 00de 09       		.uleb128 0x9
 1635 00df 97000000 		.4byte	0x97
 1636 00e3 EE000000 		.4byte	0xee
 1637 00e7 0A       		.uleb128 0xa
 1638 00e8 BC000000 		.4byte	0xbc
 1639 00ec 0F       		.byte	0xf
 1640 00ed 00       		.byte	0
 1641 00ee 05       		.uleb128 0x5
 1642 00ef DE000000 		.4byte	0xde
 1643 00f3 08       		.uleb128 0x8
 1644 00f4 B6040000 		.4byte	.LASF18
 1645 00f8 05       		.byte	0x5
 1646 00f9 34       		.byte	0x34
ARM GAS  /tmp/cck4KHRF.s 			page 50


 1647 00fa EE000000 		.4byte	0xee
 1648 00fe 01       		.byte	0x1
 1649 00ff 01       		.byte	0x1
 1650 0100 09       		.uleb128 0x9
 1651 0101 97000000 		.4byte	0x97
 1652 0105 10010000 		.4byte	0x110
 1653 0109 0A       		.uleb128 0xa
 1654 010a BC000000 		.4byte	0xbc
 1655 010e 07       		.byte	0x7
 1656 010f 00       		.byte	0
 1657 0110 05       		.uleb128 0x5
 1658 0111 00010000 		.4byte	0x100
 1659 0115 08       		.uleb128 0x8
 1660 0116 5F030000 		.4byte	.LASF19
 1661 011a 05       		.byte	0x5
 1662 011b 35       		.byte	0x35
 1663 011c 10010000 		.4byte	0x110
 1664 0120 01       		.byte	0x1
 1665 0121 01       		.byte	0x1
 1666 0122 0B       		.uleb128 0xb
 1667 0123 10       		.byte	0x10
 1668 0124 06       		.byte	0x6
 1669 0125 1E01     		.2byte	0x11e
 1670 0127 68010000 		.4byte	0x168
 1671 012b 0C       		.uleb128 0xc
 1672 012c 43435200 		.ascii	"CCR\000"
 1673 0130 06       		.byte	0x6
 1674 0131 2001     		.2byte	0x120
 1675 0133 B7000000 		.4byte	0xb7
 1676 0137 02       		.byte	0x2
 1677 0138 23       		.byte	0x23
 1678 0139 00       		.uleb128 0
 1679 013a 0D       		.uleb128 0xd
 1680 013b 30040000 		.4byte	.LASF20
 1681 013f 06       		.byte	0x6
 1682 0140 2101     		.2byte	0x121
 1683 0142 B7000000 		.4byte	0xb7
 1684 0146 02       		.byte	0x2
 1685 0147 23       		.byte	0x23
 1686 0148 04       		.uleb128 0x4
 1687 0149 0D       		.uleb128 0xd
 1688 014a 0B030000 		.4byte	.LASF21
 1689 014e 06       		.byte	0x6
 1690 014f 2201     		.2byte	0x122
 1691 0151 B7000000 		.4byte	0xb7
 1692 0155 02       		.byte	0x2
 1693 0156 23       		.byte	0x23
 1694 0157 08       		.uleb128 0x8
 1695 0158 0D       		.uleb128 0xd
 1696 0159 43050000 		.4byte	.LASF22
 1697 015d 06       		.byte	0x6
 1698 015e 2301     		.2byte	0x123
 1699 0160 B7000000 		.4byte	0xb7
 1700 0164 02       		.byte	0x2
 1701 0165 23       		.byte	0x23
 1702 0166 0C       		.uleb128 0xc
 1703 0167 00       		.byte	0
ARM GAS  /tmp/cck4KHRF.s 			page 51


 1704 0168 0E       		.uleb128 0xe
 1705 0169 AA000000 		.4byte	.LASF23
 1706 016d 06       		.byte	0x6
 1707 016e 2401     		.2byte	0x124
 1708 0170 22010000 		.4byte	0x122
 1709 0174 0B       		.uleb128 0xb
 1710 0175 08       		.byte	0x8
 1711 0176 06       		.byte	0x6
 1712 0177 2601     		.2byte	0x126
 1713 0179 9C010000 		.4byte	0x19c
 1714 017d 0C       		.uleb128 0xc
 1715 017e 49535200 		.ascii	"ISR\000"
 1716 0182 06       		.byte	0x6
 1717 0183 2801     		.2byte	0x128
 1718 0185 B7000000 		.4byte	0xb7
 1719 0189 02       		.byte	0x2
 1720 018a 23       		.byte	0x23
 1721 018b 00       		.uleb128 0
 1722 018c 0D       		.uleb128 0xd
 1723 018d 74040000 		.4byte	.LASF24
 1724 0191 06       		.byte	0x6
 1725 0192 2901     		.2byte	0x129
 1726 0194 B7000000 		.4byte	0xb7
 1727 0198 02       		.byte	0x2
 1728 0199 23       		.byte	0x23
 1729 019a 04       		.uleb128 0x4
 1730 019b 00       		.byte	0
 1731 019c 0E       		.uleb128 0xe
 1732 019d 41010000 		.4byte	.LASF25
 1733 01a1 06       		.byte	0x6
 1734 01a2 2A01     		.2byte	0x12a
 1735 01a4 74010000 		.4byte	0x174
 1736 01a8 0F       		.uleb128 0xf
 1737 01a9 01       		.byte	0x1
 1738 01aa 37000000 		.4byte	0x37
 1739 01ae 07       		.byte	0x7
 1740 01af 98       		.byte	0x98
 1741 01b0 C1010000 		.4byte	0x1c1
 1742 01b4 10       		.uleb128 0x10
 1743 01b5 63050000 		.4byte	.LASF26
 1744 01b9 00       		.byte	0
 1745 01ba 11       		.uleb128 0x11
 1746 01bb 53455400 		.ascii	"SET\000"
 1747 01bf 01       		.byte	0x1
 1748 01c0 00       		.byte	0
 1749 01c1 02       		.uleb128 0x2
 1750 01c2 08       		.byte	0x8
 1751 01c3 04       		.byte	0x4
 1752 01c4 19020000 		.4byte	.LASF27
 1753 01c8 0F       		.uleb128 0xf
 1754 01c9 01       		.byte	0x1
 1755 01ca 37000000 		.4byte	0x37
 1756 01ce 08       		.byte	0x8
 1757 01cf 2A       		.byte	0x2a
 1758 01d0 ED010000 		.4byte	0x1ed
 1759 01d4 10       		.uleb128 0x10
 1760 01d5 AD010000 		.4byte	.LASF28
ARM GAS  /tmp/cck4KHRF.s 			page 52


 1761 01d9 00       		.byte	0
 1762 01da 10       		.uleb128 0x10
 1763 01db 38030000 		.4byte	.LASF29
 1764 01df 01       		.byte	0x1
 1765 01e0 10       		.uleb128 0x10
 1766 01e1 F8010000 		.4byte	.LASF30
 1767 01e5 02       		.byte	0x2
 1768 01e6 10       		.uleb128 0x10
 1769 01e7 41000000 		.4byte	.LASF31
 1770 01eb 03       		.byte	0x3
 1771 01ec 00       		.byte	0
 1772 01ed 03       		.uleb128 0x3
 1773 01ee E3020000 		.4byte	.LASF32
 1774 01f2 08       		.byte	0x8
 1775 01f3 2F       		.byte	0x2f
 1776 01f4 C8010000 		.4byte	0x1c8
 1777 01f8 0F       		.uleb128 0xf
 1778 01f9 01       		.byte	0x1
 1779 01fa 37000000 		.4byte	0x37
 1780 01fe 08       		.byte	0x8
 1781 01ff 35       		.byte	0x35
 1782 0200 11020000 		.4byte	0x211
 1783 0204 10       		.uleb128 0x10
 1784 0205 34000000 		.4byte	.LASF33
 1785 0209 00       		.byte	0
 1786 020a 10       		.uleb128 0x10
 1787 020b 8D000000 		.4byte	.LASF34
 1788 020f 01       		.byte	0x1
 1789 0210 00       		.byte	0
 1790 0211 03       		.uleb128 0x3
 1791 0212 13060000 		.4byte	.LASF35
 1792 0216 08       		.byte	0x8
 1793 0217 38       		.byte	0x38
 1794 0218 F8010000 		.4byte	0x1f8
 1795 021c 12       		.uleb128 0x12
 1796 021d 1C       		.byte	0x1c
 1797 021e 09       		.byte	0x9
 1798 021f 30       		.byte	0x30
 1799 0220 87020000 		.4byte	0x287
 1800 0224 13       		.uleb128 0x13
 1801 0225 19000000 		.4byte	.LASF36
 1802 0229 09       		.byte	0x9
 1803 022a 32       		.byte	0x32
 1804 022b AC000000 		.4byte	0xac
 1805 022f 02       		.byte	0x2
 1806 0230 23       		.byte	0x23
 1807 0231 00       		.uleb128 0
 1808 0232 13       		.uleb128 0x13
 1809 0233 63020000 		.4byte	.LASF37
 1810 0237 09       		.byte	0x9
 1811 0238 36       		.byte	0x36
 1812 0239 AC000000 		.4byte	0xac
 1813 023d 02       		.byte	0x2
 1814 023e 23       		.byte	0x23
 1815 023f 04       		.uleb128 0x4
 1816 0240 13       		.uleb128 0x13
 1817 0241 04050000 		.4byte	.LASF38
ARM GAS  /tmp/cck4KHRF.s 			page 53


 1818 0245 09       		.byte	0x9
 1819 0246 39       		.byte	0x39
 1820 0247 AC000000 		.4byte	0xac
 1821 024b 02       		.byte	0x2
 1822 024c 23       		.byte	0x23
 1823 024d 08       		.uleb128 0x8
 1824 024e 13       		.uleb128 0x13
 1825 024f 74050000 		.4byte	.LASF39
 1826 0253 09       		.byte	0x9
 1827 0254 3C       		.byte	0x3c
 1828 0255 AC000000 		.4byte	0xac
 1829 0259 02       		.byte	0x2
 1830 025a 23       		.byte	0x23
 1831 025b 0C       		.uleb128 0xc
 1832 025c 13       		.uleb128 0x13
 1833 025d 48050000 		.4byte	.LASF40
 1834 0261 09       		.byte	0x9
 1835 0262 3F       		.byte	0x3f
 1836 0263 AC000000 		.4byte	0xac
 1837 0267 02       		.byte	0x2
 1838 0268 23       		.byte	0x23
 1839 0269 10       		.uleb128 0x10
 1840 026a 13       		.uleb128 0x13
 1841 026b 88050000 		.4byte	.LASF41
 1842 026f 09       		.byte	0x9
 1843 0270 42       		.byte	0x42
 1844 0271 AC000000 		.4byte	0xac
 1845 0275 02       		.byte	0x2
 1846 0276 23       		.byte	0x23
 1847 0277 14       		.uleb128 0x14
 1848 0278 13       		.uleb128 0x13
 1849 0279 84000000 		.4byte	.LASF42
 1850 027d 09       		.byte	0x9
 1851 027e 47       		.byte	0x47
 1852 027f AC000000 		.4byte	0xac
 1853 0283 02       		.byte	0x2
 1854 0284 23       		.byte	0x23
 1855 0285 18       		.uleb128 0x18
 1856 0286 00       		.byte	0
 1857 0287 03       		.uleb128 0x3
 1858 0288 21030000 		.4byte	.LASF43
 1859 028c 09       		.byte	0x9
 1860 028d 49       		.byte	0x49
 1861 028e 1C020000 		.4byte	0x21c
 1862 0292 0F       		.uleb128 0xf
 1863 0293 01       		.byte	0x1
 1864 0294 37000000 		.4byte	0x37
 1865 0298 09       		.byte	0x9
 1866 0299 4F       		.byte	0x4f
 1867 029a B7020000 		.4byte	0x2b7
 1868 029e 10       		.uleb128 0x10
 1869 029f F5000000 		.4byte	.LASF44
 1870 02a3 00       		.byte	0
 1871 02a4 10       		.uleb128 0x10
 1872 02a5 2D060000 		.4byte	.LASF45
 1873 02a9 01       		.byte	0x1
 1874 02aa 10       		.uleb128 0x10
ARM GAS  /tmp/cck4KHRF.s 			page 54


 1875 02ab C9010000 		.4byte	.LASF46
 1876 02af 02       		.byte	0x2
 1877 02b0 10       		.uleb128 0x10
 1878 02b1 F5020000 		.4byte	.LASF47
 1879 02b5 03       		.byte	0x3
 1880 02b6 00       		.byte	0
 1881 02b7 03       		.uleb128 0x3
 1882 02b8 B4010000 		.4byte	.LASF48
 1883 02bc 09       		.byte	0x9
 1884 02bd 54       		.byte	0x54
 1885 02be 92020000 		.4byte	0x292
 1886 02c2 0F       		.uleb128 0xf
 1887 02c3 01       		.byte	0x1
 1888 02c4 37000000 		.4byte	0x37
 1889 02c8 09       		.byte	0x9
 1890 02c9 5A       		.byte	0x5a
 1891 02ca DB020000 		.4byte	0x2db
 1892 02ce 10       		.uleb128 0x10
 1893 02cf E6030000 		.4byte	.LASF49
 1894 02d3 00       		.byte	0
 1895 02d4 10       		.uleb128 0x10
 1896 02d5 4D000000 		.4byte	.LASF50
 1897 02d9 01       		.byte	0x1
 1898 02da 00       		.byte	0
 1899 02db 0F       		.uleb128 0xf
 1900 02dc 01       		.byte	0x1
 1901 02dd 37000000 		.4byte	0x37
 1902 02e1 09       		.byte	0x9
 1903 02e2 63       		.byte	0x63
 1904 02e3 06030000 		.4byte	0x306
 1905 02e7 10       		.uleb128 0x10
 1906 02e8 AF020000 		.4byte	.LASF51
 1907 02ec 00       		.byte	0
 1908 02ed 10       		.uleb128 0x10
 1909 02ee C7020000 		.4byte	.LASF52
 1910 02f2 01       		.byte	0x1
 1911 02f3 10       		.uleb128 0x10
 1912 02f4 79030000 		.4byte	.LASF53
 1913 02f8 02       		.byte	0x2
 1914 02f9 10       		.uleb128 0x10
 1915 02fa 00000000 		.4byte	.LASF54
 1916 02fe 03       		.byte	0x3
 1917 02ff 10       		.uleb128 0x10
 1918 0300 0B050000 		.4byte	.LASF55
 1919 0304 04       		.byte	0x4
 1920 0305 00       		.byte	0
 1921 0306 03       		.uleb128 0x3
 1922 0307 36040000 		.4byte	.LASF56
 1923 030b 09       		.byte	0x9
 1924 030c 6A       		.byte	0x6a
 1925 030d DB020000 		.4byte	0x2db
 1926 0311 14       		.uleb128 0x14
 1927 0312 DC010000 		.4byte	.LASF104
 1928 0316 44       		.byte	0x44
 1929 0317 09       		.byte	0x9
 1930 0318 6F       		.byte	0x6f
 1931 0319 C6030000 		.4byte	0x3c6
ARM GAS  /tmp/cck4KHRF.s 			page 55


 1932 031d 13       		.uleb128 0x13
 1933 031e B9030000 		.4byte	.LASF57
 1934 0322 09       		.byte	0x9
 1935 0323 71       		.byte	0x71
 1936 0324 C6030000 		.4byte	0x3c6
 1937 0328 02       		.byte	0x2
 1938 0329 23       		.byte	0x23
 1939 032a 00       		.uleb128 0
 1940 032b 13       		.uleb128 0x13
 1941 032c 55020000 		.4byte	.LASF58
 1942 0330 09       		.byte	0x9
 1943 0331 73       		.byte	0x73
 1944 0332 87020000 		.4byte	0x287
 1945 0336 02       		.byte	0x2
 1946 0337 23       		.byte	0x23
 1947 0338 04       		.uleb128 0x4
 1948 0339 13       		.uleb128 0x13
 1949 033a 6D020000 		.4byte	.LASF59
 1950 033e 09       		.byte	0x9
 1951 033f 75       		.byte	0x75
 1952 0340 11020000 		.4byte	0x211
 1953 0344 02       		.byte	0x2
 1954 0345 23       		.byte	0x23
 1955 0346 20       		.uleb128 0x20
 1956 0347 13       		.uleb128 0x13
 1957 0348 4F020000 		.4byte	.LASF60
 1958 034c 09       		.byte	0x9
 1959 034d 77       		.byte	0x77
 1960 034e B7020000 		.4byte	0x2b7
 1961 0352 02       		.byte	0x2
 1962 0353 23       		.byte	0x23
 1963 0354 21       		.uleb128 0x21
 1964 0355 13       		.uleb128 0x13
 1965 0356 31030000 		.4byte	.LASF61
 1966 035a 09       		.byte	0x9
 1967 035b 79       		.byte	0x79
 1968 035c CC030000 		.4byte	0x3cc
 1969 0360 02       		.byte	0x2
 1970 0361 23       		.byte	0x23
 1971 0362 24       		.uleb128 0x24
 1972 0363 13       		.uleb128 0x13
 1973 0364 C2030000 		.4byte	.LASF62
 1974 0368 09       		.byte	0x9
 1975 0369 7B       		.byte	0x7b
 1976 036a E0030000 		.4byte	0x3e0
 1977 036e 02       		.byte	0x2
 1978 036f 23       		.byte	0x23
 1979 0370 28       		.uleb128 0x28
 1980 0371 13       		.uleb128 0x13
 1981 0372 D2050000 		.4byte	.LASF63
 1982 0376 09       		.byte	0x9
 1983 0377 7D       		.byte	0x7d
 1984 0378 E0030000 		.4byte	0x3e0
 1985 037c 02       		.byte	0x2
 1986 037d 23       		.byte	0x23
 1987 037e 2C       		.uleb128 0x2c
 1988 037f 13       		.uleb128 0x13
ARM GAS  /tmp/cck4KHRF.s 			page 56


 1989 0380 1E040000 		.4byte	.LASF64
 1990 0384 09       		.byte	0x9
 1991 0385 7F       		.byte	0x7f
 1992 0386 E0030000 		.4byte	0x3e0
 1993 038a 02       		.byte	0x2
 1994 038b 23       		.byte	0x23
 1995 038c 30       		.uleb128 0x30
 1996 038d 13       		.uleb128 0x13
 1997 038e 98000000 		.4byte	.LASF65
 1998 0392 09       		.byte	0x9
 1999 0393 81       		.byte	0x81
 2000 0394 E0030000 		.4byte	0x3e0
 2001 0398 02       		.byte	0x2
 2002 0399 23       		.byte	0x23
 2003 039a 34       		.uleb128 0x34
 2004 039b 13       		.uleb128 0x13
 2005 039c 23060000 		.4byte	.LASF66
 2006 03a0 09       		.byte	0x9
 2007 03a1 83       		.byte	0x83
 2008 03a2 B7000000 		.4byte	0xb7
 2009 03a6 02       		.byte	0x2
 2010 03a7 23       		.byte	0x23
 2011 03a8 38       		.uleb128 0x38
 2012 03a9 13       		.uleb128 0x13
 2013 03aa 32010000 		.4byte	.LASF67
 2014 03ae 09       		.byte	0x9
 2015 03af 85       		.byte	0x85
 2016 03b0 E6030000 		.4byte	0x3e6
 2017 03b4 02       		.byte	0x2
 2018 03b5 23       		.byte	0x23
 2019 03b6 3C       		.uleb128 0x3c
 2020 03b7 13       		.uleb128 0x13
 2021 03b8 36050000 		.4byte	.LASF68
 2022 03bc 09       		.byte	0x9
 2023 03bd 87       		.byte	0x87
 2024 03be AC000000 		.4byte	0xac
 2025 03c2 02       		.byte	0x2
 2026 03c3 23       		.byte	0x23
 2027 03c4 40       		.uleb128 0x40
 2028 03c5 00       		.byte	0
 2029 03c6 15       		.uleb128 0x15
 2030 03c7 04       		.byte	0x4
 2031 03c8 68010000 		.4byte	0x168
 2032 03cc 16       		.uleb128 0x16
 2033 03cd 04       		.byte	0x4
 2034 03ce 17       		.uleb128 0x17
 2035 03cf 01       		.byte	0x1
 2036 03d0 DA030000 		.4byte	0x3da
 2037 03d4 18       		.uleb128 0x18
 2038 03d5 DA030000 		.4byte	0x3da
 2039 03d9 00       		.byte	0
 2040 03da 15       		.uleb128 0x15
 2041 03db 04       		.byte	0x4
 2042 03dc 11030000 		.4byte	0x311
 2043 03e0 15       		.uleb128 0x15
 2044 03e1 04       		.byte	0x4
 2045 03e2 CE030000 		.4byte	0x3ce
ARM GAS  /tmp/cck4KHRF.s 			page 57


 2046 03e6 15       		.uleb128 0x15
 2047 03e7 04       		.byte	0x4
 2048 03e8 9C010000 		.4byte	0x19c
 2049 03ec 03       		.uleb128 0x3
 2050 03ed 09010000 		.4byte	.LASF69
 2051 03f1 09       		.byte	0x9
 2052 03f2 89       		.byte	0x89
 2053 03f3 11030000 		.4byte	0x311
 2054 03f7 15       		.uleb128 0x15
 2055 03f8 04       		.byte	0x4
 2056 03f9 EC030000 		.4byte	0x3ec
 2057 03fd 0F       		.uleb128 0xf
 2058 03fe 01       		.byte	0x1
 2059 03ff 37000000 		.4byte	0x37
 2060 0403 0A       		.byte	0xa
 2061 0404 33       		.byte	0x33
 2062 0405 22040000 		.4byte	0x422
 2063 0409 10       		.uleb128 0x10
 2064 040a 8D040000 		.4byte	.LASF70
 2065 040e 64       		.byte	0x64
 2066 040f 10       		.uleb128 0x10
 2067 0410 79040000 		.4byte	.LASF71
 2068 0414 0A       		.byte	0xa
 2069 0415 10       		.uleb128 0x10
 2070 0416 D3030000 		.4byte	.LASF72
 2071 041a 01       		.byte	0x1
 2072 041b 10       		.uleb128 0x10
 2073 041c 98050000 		.4byte	.LASF73
 2074 0420 01       		.byte	0x1
 2075 0421 00       		.byte	0
 2076 0422 03       		.uleb128 0x3
 2077 0423 22050000 		.4byte	.LASF74
 2078 0427 0A       		.byte	0xa
 2079 0428 38       		.byte	0x38
 2080 0429 FD030000 		.4byte	0x3fd
 2081 042d 08       		.uleb128 0x8
 2082 042e 4D010000 		.4byte	.LASF75
 2083 0432 0A       		.byte	0xa
 2084 0433 3D       		.byte	0x3d
 2085 0434 AC000000 		.4byte	0xac
 2086 0438 01       		.byte	0x1
 2087 0439 01       		.byte	0x1
 2088 043a 08       		.uleb128 0x8
 2089 043b A0030000 		.4byte	.LASF76
 2090 043f 0A       		.byte	0xa
 2091 0440 3E       		.byte	0x3e
 2092 0441 22040000 		.4byte	0x422
 2093 0445 01       		.byte	0x1
 2094 0446 01       		.byte	0x1
 2095 0447 19       		.uleb128 0x19
 2096 0448 AB030000 		.4byte	.LASF105
 2097 044c 01       		.byte	0x1
 2098 044d 5A03     		.2byte	0x35a
 2099 044f 01       		.byte	0x1
 2100 0450 01       		.byte	0x1
 2101 0451 86040000 		.4byte	0x486
 2102 0455 1A       		.uleb128 0x1a
ARM GAS  /tmp/cck4KHRF.s 			page 58


 2103 0456 92030000 		.4byte	.LASF77
 2104 045a 01       		.byte	0x1
 2105 045b 5A03     		.2byte	0x35a
 2106 045d F7030000 		.4byte	0x3f7
 2107 0461 1A       		.uleb128 0x1a
 2108 0462 69050000 		.4byte	.LASF78
 2109 0466 01       		.byte	0x1
 2110 0467 5A03     		.2byte	0x35a
 2111 0469 AC000000 		.4byte	0xac
 2112 046d 1A       		.uleb128 0x1a
 2113 046e A0040000 		.4byte	.LASF79
 2114 0472 01       		.byte	0x1
 2115 0473 5A03     		.2byte	0x35a
 2116 0475 AC000000 		.4byte	0xac
 2117 0479 1A       		.uleb128 0x1a
 2118 047a 8D050000 		.4byte	.LASF80
 2119 047e 01       		.byte	0x1
 2120 047f 5A03     		.2byte	0x35a
 2121 0481 AC000000 		.4byte	0xac
 2122 0485 00       		.byte	0
 2123 0486 1B       		.uleb128 0x1b
 2124 0487 01       		.byte	0x1
 2125 0488 72020000 		.4byte	.LASF81
 2126 048c 01       		.byte	0x1
 2127 048d 4003     		.2byte	0x340
 2128 048f 01       		.byte	0x1
 2129 0490 AC000000 		.4byte	0xac
 2130 0494 56060000 		.4byte	.LFB76
 2131 0498 5A060000 		.4byte	.LFE76
 2132 049c 02       		.byte	0x2
 2133 049d 7D       		.byte	0x7d
 2134 049e 00       		.sleb128 0
 2135 049f 01       		.byte	0x1
 2136 04a0 B5040000 		.4byte	0x4b5
 2137 04a4 1C       		.uleb128 0x1c
 2138 04a5 92030000 		.4byte	.LASF77
 2139 04a9 01       		.byte	0x1
 2140 04aa 4003     		.2byte	0x340
 2141 04ac F7030000 		.4byte	0x3f7
 2142 04b0 00000000 		.4byte	.LLST41
 2143 04b4 00       		.byte	0
 2144 04b5 1B       		.uleb128 0x1b
 2145 04b6 01       		.byte	0x1
 2146 04b7 73000000 		.4byte	.LASF82
 2147 04bb 01       		.byte	0x1
 2148 04bc 3403     		.2byte	0x334
 2149 04be 01       		.byte	0x1
 2150 04bf B7020000 		.4byte	0x2b7
 2151 04c3 50060000 		.4byte	.LFB75
 2152 04c7 56060000 		.4byte	.LFE75
 2153 04cb 02       		.byte	0x2
 2154 04cc 7D       		.byte	0x7d
 2155 04cd 00       		.sleb128 0
 2156 04ce 01       		.byte	0x1
 2157 04cf E4040000 		.4byte	0x4e4
 2158 04d3 1C       		.uleb128 0x1c
 2159 04d4 92030000 		.4byte	.LASF77
ARM GAS  /tmp/cck4KHRF.s 			page 59


 2160 04d8 01       		.byte	0x1
 2161 04d9 3403     		.2byte	0x334
 2162 04db F7030000 		.4byte	0x3f7
 2163 04df 21000000 		.4byte	.LLST40
 2164 04e3 00       		.byte	0
 2165 04e4 1B       		.uleb128 0x1b
 2166 04e5 01       		.byte	0x1
 2167 04e6 C4040000 		.4byte	.LASF83
 2168 04ea 01       		.byte	0x1
 2169 04eb E802     		.2byte	0x2e8
 2170 04ed 01       		.byte	0x1
 2171 04ee ED010000 		.4byte	0x1ed
 2172 04f2 02060000 		.4byte	.LFB74
 2173 04f6 50060000 		.4byte	.LFE74
 2174 04fa 02       		.byte	0x2
 2175 04fb 7D       		.byte	0x7d
 2176 04fc 00       		.sleb128 0
 2177 04fd 01       		.byte	0x1
 2178 04fe 31050000 		.4byte	0x531
 2179 0502 1C       		.uleb128 0x1c
 2180 0503 92030000 		.4byte	.LASF77
 2181 0507 01       		.byte	0x1
 2182 0508 E802     		.2byte	0x2e8
 2183 050a F7030000 		.4byte	0x3f7
 2184 050e 42000000 		.4byte	.LLST38
 2185 0512 1D       		.uleb128 0x1d
 2186 0513 AB040000 		.4byte	.LASF84
 2187 0517 01       		.byte	0x1
 2188 0518 E802     		.2byte	0x2e8
 2189 051a 06030000 		.4byte	0x306
 2190 051e 01       		.byte	0x1
 2191 051f 51       		.byte	0x51
 2192 0520 1E       		.uleb128 0x1e
 2193 0521 FC030000 		.4byte	.LASF87
 2194 0525 01       		.byte	0x1
 2195 0526 EA02     		.2byte	0x2ea
 2196 0528 ED010000 		.4byte	0x1ed
 2197 052c 76000000 		.4byte	.LLST39
 2198 0530 00       		.byte	0
 2199 0531 1F       		.uleb128 0x1f
 2200 0532 01       		.byte	0x1
 2201 0533 DC000000 		.4byte	.LASF85
 2202 0537 01       		.byte	0x1
 2203 0538 B502     		.2byte	0x2b5
 2204 053a 01       		.byte	0x1
 2205 053b ED010000 		.4byte	0x1ed
 2206 053f BC050000 		.4byte	.LFB73
 2207 0543 02060000 		.4byte	.LFE73
 2208 0547 A1000000 		.4byte	.LLST35
 2209 054b 01       		.byte	0x1
 2210 054c 8D050000 		.4byte	0x58d
 2211 0550 1C       		.uleb128 0x1c
 2212 0551 92030000 		.4byte	.LASF77
 2213 0555 01       		.byte	0x1
 2214 0556 B502     		.2byte	0x2b5
 2215 0558 F7030000 		.4byte	0x3f7
 2216 055c C1000000 		.4byte	.LLST36
ARM GAS  /tmp/cck4KHRF.s 			page 60


 2217 0560 1D       		.uleb128 0x1d
 2218 0561 AB040000 		.4byte	.LASF84
 2219 0565 01       		.byte	0x1
 2220 0566 B502     		.2byte	0x2b5
 2221 0568 06030000 		.4byte	0x306
 2222 056c 01       		.byte	0x1
 2223 056d 51       		.byte	0x51
 2224 056e 1D       		.uleb128 0x1d
 2225 056f C8050000 		.4byte	.LASF86
 2226 0573 01       		.byte	0x1
 2227 0574 B502     		.2byte	0x2b5
 2228 0576 99050000 		.4byte	0x599
 2229 057a 01       		.byte	0x1
 2230 057b 52       		.byte	0x52
 2231 057c 1E       		.uleb128 0x1e
 2232 057d FC030000 		.4byte	.LASF87
 2233 0581 01       		.byte	0x1
 2234 0582 B702     		.2byte	0x2b7
 2235 0584 ED010000 		.4byte	0x1ed
 2236 0588 F5000000 		.4byte	.LLST37
 2237 058c 00       		.byte	0
 2238 058d 17       		.uleb128 0x17
 2239 058e 01       		.byte	0x1
 2240 058f 99050000 		.4byte	0x599
 2241 0593 18       		.uleb128 0x18
 2242 0594 F7030000 		.4byte	0x3f7
 2243 0598 00       		.byte	0
 2244 0599 15       		.uleb128 0x15
 2245 059a 04       		.byte	0x4
 2246 059b 8D050000 		.4byte	0x58d
 2247 059f 20       		.uleb128 0x20
 2248 05a0 01       		.byte	0x1
 2249 05a1 DF040000 		.4byte	.LASF106
 2250 05a5 01       		.byte	0x1
 2251 05a6 5B02     		.2byte	0x25b
 2252 05a8 01       		.byte	0x1
 2253 05a9 94040000 		.4byte	.LFB72
 2254 05ad BC050000 		.4byte	.LFE72
 2255 05b1 20010000 		.4byte	.LLST31
 2256 05b5 EA050000 		.4byte	0x5ea
 2257 05b9 1C       		.uleb128 0x1c
 2258 05ba 92030000 		.4byte	.LASF77
 2259 05be 01       		.byte	0x1
 2260 05bf 5B02     		.2byte	0x25b
 2261 05c1 F7030000 		.4byte	0x3f7
 2262 05c5 64010000 		.4byte	.LLST32
 2263 05c9 1E       		.uleb128 0x1e
 2264 05ca D4000000 		.4byte	.LASF88
 2265 05ce 01       		.byte	0x1
 2266 05cf 5D02     		.2byte	0x25d
 2267 05d1 AC000000 		.4byte	0xac
 2268 05d5 90010000 		.4byte	.LLST33
 2269 05d9 1E       		.uleb128 0x1e
 2270 05da 41060000 		.4byte	.LASF89
 2271 05de 01       		.byte	0x1
 2272 05df 5E02     		.2byte	0x25e
 2273 05e1 AC000000 		.4byte	0xac
ARM GAS  /tmp/cck4KHRF.s 			page 61


 2274 05e5 B9010000 		.4byte	.LLST34
 2275 05e9 00       		.byte	0
 2276 05ea 1F       		.uleb128 0x1f
 2277 05eb 01       		.byte	0x1
 2278 05ec 4B060000 		.4byte	.LASF90
 2279 05f0 01       		.byte	0x1
 2280 05f1 F601     		.2byte	0x1f6
 2281 05f3 01       		.byte	0x1
 2282 05f4 ED010000 		.4byte	0x1ed
 2283 05f8 5C020000 		.4byte	.LFB71
 2284 05fc 94040000 		.4byte	.LFE71
 2285 0600 D7010000 		.4byte	.LLST25
 2286 0604 01       		.byte	0x1
 2287 0605 6C060000 		.4byte	0x66c
 2288 0609 1C       		.uleb128 0x1c
 2289 060a 92030000 		.4byte	.LASF77
 2290 060e 01       		.byte	0x1
 2291 060f F601     		.2byte	0x1f6
 2292 0611 F7030000 		.4byte	0x3f7
 2293 0615 F7010000 		.4byte	.LLST26
 2294 0619 1C       		.uleb128 0x1c
 2295 061a 58040000 		.4byte	.LASF91
 2296 061e 01       		.byte	0x1
 2297 061f F601     		.2byte	0x1f6
 2298 0621 AC000000 		.4byte	0xac
 2299 0625 41020000 		.4byte	.LLST27
 2300 0629 1C       		.uleb128 0x1c
 2301 062a 16040000 		.4byte	.LASF92
 2302 062e 01       		.byte	0x1
 2303 062f F601     		.2byte	0x1f6
 2304 0631 AC000000 		.4byte	0xac
 2305 0635 75020000 		.4byte	.LLST28
 2306 0639 1E       		.uleb128 0x1e
 2307 063a 25020000 		.4byte	.LASF93
 2308 063e 01       		.byte	0x1
 2309 063f F801     		.2byte	0x1f8
 2310 0641 AC000000 		.4byte	0xac
 2311 0645 A9020000 		.4byte	.LLST29
 2312 0649 1E       		.uleb128 0x1e
 2313 064a A5020000 		.4byte	.LASF94
 2314 064e 01       		.byte	0x1
 2315 064f F901     		.2byte	0x1f9
 2316 0651 AC000000 		.4byte	0xac
 2317 0655 C7020000 		.4byte	.LLST30
 2318 0659 21       		.uleb128 0x21
 2319 065a C2020000 		.4byte	.LVL51
 2320 065e A2080000 		.4byte	0x8a2
 2321 0662 21       		.uleb128 0x21
 2322 0663 06040000 		.4byte	.LVL57
 2323 0667 A2080000 		.4byte	0x8a2
 2324 066b 00       		.byte	0
 2325 066c 1F       		.uleb128 0x1f
 2326 066d 01       		.byte	0x1
 2327 066e 10030000 		.4byte	.LASF95
 2328 0672 01       		.byte	0x1
 2329 0673 C901     		.2byte	0x1c9
 2330 0675 01       		.byte	0x1
ARM GAS  /tmp/cck4KHRF.s 			page 62


 2331 0676 ED010000 		.4byte	0x1ed
 2332 067a CC010000 		.4byte	.LFB70
 2333 067e 5C020000 		.4byte	.LFE70
 2334 0682 08030000 		.4byte	.LLST22
 2335 0686 01       		.byte	0x1
 2336 0687 B9060000 		.4byte	0x6b9
 2337 068b 1C       		.uleb128 0x1c
 2338 068c 92030000 		.4byte	.LASF77
 2339 0690 01       		.byte	0x1
 2340 0691 C901     		.2byte	0x1c9
 2341 0693 F7030000 		.4byte	0x3f7
 2342 0697 28030000 		.4byte	.LLST23
 2343 069b 1E       		.uleb128 0x1e
 2344 069c FC030000 		.4byte	.LASF87
 2345 06a0 01       		.byte	0x1
 2346 06a1 CB01     		.2byte	0x1cb
 2347 06a3 ED010000 		.4byte	0x1ed
 2348 06a7 7B030000 		.4byte	.LLST24
 2349 06ab 22       		.uleb128 0x22
 2350 06ac 32020000 		.4byte	.LVL42
 2351 06b0 23       		.uleb128 0x23
 2352 06b1 01       		.byte	0x1
 2353 06b2 50       		.byte	0x50
 2354 06b3 03       		.byte	0x3
 2355 06b4 F3       		.byte	0xf3
 2356 06b5 01       		.uleb128 0x1
 2357 06b6 50       		.byte	0x50
 2358 06b7 00       		.byte	0
 2359 06b8 00       		.byte	0
 2360 06b9 1B       		.uleb128 0x1b
 2361 06ba 01       		.byte	0x1
 2362 06bb 66040000 		.4byte	.LASF96
 2363 06bf 01       		.byte	0x1
 2364 06c0 A001     		.2byte	0x1a0
 2365 06c2 01       		.byte	0x1
 2366 06c3 ED010000 		.4byte	0x1ed
 2367 06c7 8A010000 		.4byte	.LFB69
 2368 06cb CC010000 		.4byte	.LFE69
 2369 06cf 02       		.byte	0x2
 2370 06d0 7D       		.byte	0x7d
 2371 06d1 00       		.sleb128 0
 2372 06d2 01       		.byte	0x1
 2373 06d3 F5060000 		.4byte	0x6f5
 2374 06d7 1C       		.uleb128 0x1c
 2375 06d8 92030000 		.4byte	.LASF77
 2376 06dc 01       		.byte	0x1
 2377 06dd A001     		.2byte	0x1a0
 2378 06df F7030000 		.4byte	0x3f7
 2379 06e3 B2030000 		.4byte	.LLST21
 2380 06e7 24       		.uleb128 0x24
 2381 06e8 FC030000 		.4byte	.LASF87
 2382 06ec 01       		.byte	0x1
 2383 06ed A201     		.2byte	0x1a2
 2384 06ef ED010000 		.4byte	0x1ed
 2385 06f3 00       		.byte	0
 2386 06f4 00       		.byte	0
 2387 06f5 1F       		.uleb128 0x1f
ARM GAS  /tmp/cck4KHRF.s 			page 63


 2388 06f6 01       		.byte	0x1
 2389 06f7 23000000 		.4byte	.LASF97
 2390 06fb 01       		.byte	0x1
 2391 06fc 6A01     		.2byte	0x16a
 2392 06fe 01       		.byte	0x1
 2393 06ff ED010000 		.4byte	0x1ed
 2394 0703 10010000 		.4byte	.LFB68
 2395 0707 8A010000 		.4byte	.LFE68
 2396 070b EC030000 		.4byte	.LLST13
 2397 070f 01       		.byte	0x1
 2398 0710 96070000 		.4byte	0x796
 2399 0714 1C       		.uleb128 0x1c
 2400 0715 92030000 		.4byte	.LASF77
 2401 0719 01       		.byte	0x1
 2402 071a 6A01     		.2byte	0x16a
 2403 071c F7030000 		.4byte	0x3f7
 2404 0720 0C040000 		.4byte	.LLST14
 2405 0724 1D       		.uleb128 0x1d
 2406 0725 69050000 		.4byte	.LASF78
 2407 0729 01       		.byte	0x1
 2408 072a 6A01     		.2byte	0x16a
 2409 072c AC000000 		.4byte	0xac
 2410 0730 01       		.byte	0x1
 2411 0731 51       		.byte	0x51
 2412 0732 1D       		.uleb128 0x1d
 2413 0733 A0040000 		.4byte	.LASF79
 2414 0737 01       		.byte	0x1
 2415 0738 6A01     		.2byte	0x16a
 2416 073a AC000000 		.4byte	0xac
 2417 073e 01       		.byte	0x1
 2418 073f 52       		.byte	0x52
 2419 0740 1C       		.uleb128 0x1c
 2420 0741 8D050000 		.4byte	.LASF80
 2421 0745 01       		.byte	0x1
 2422 0746 6A01     		.2byte	0x16a
 2423 0748 AC000000 		.4byte	0xac
 2424 074c 46040000 		.4byte	.LLST15
 2425 0750 1E       		.uleb128 0x1e
 2426 0751 FC030000 		.4byte	.LASF87
 2427 0755 01       		.byte	0x1
 2428 0756 6C01     		.2byte	0x16c
 2429 0758 ED010000 		.4byte	0x1ed
 2430 075c 98040000 		.4byte	.LLST16
 2431 0760 25       		.uleb128 0x25
 2432 0761 47040000 		.4byte	0x447
 2433 0765 3A010000 		.4byte	.LBB12
 2434 0769 20000000 		.4byte	.Ldebug_ranges0+0x20
 2435 076d 01       		.byte	0x1
 2436 076e 7E01     		.2byte	0x17e
 2437 0770 26       		.uleb128 0x26
 2438 0771 79040000 		.4byte	0x479
 2439 0775 AC040000 		.4byte	.LLST17
 2440 0779 26       		.uleb128 0x26
 2441 077a 6D040000 		.4byte	0x46d
 2442 077e CB040000 		.4byte	.LLST18
 2443 0782 26       		.uleb128 0x26
 2444 0783 61040000 		.4byte	0x461
ARM GAS  /tmp/cck4KHRF.s 			page 64


 2445 0787 DE040000 		.4byte	.LLST19
 2446 078b 26       		.uleb128 0x26
 2447 078c 55040000 		.4byte	0x455
 2448 0790 F1040000 		.4byte	.LLST20
 2449 0794 00       		.byte	0
 2450 0795 00       		.byte	0
 2451 0796 1F       		.uleb128 0x1f
 2452 0797 01       		.byte	0x1
 2453 0798 01020000 		.4byte	.LASF98
 2454 079c 01       		.byte	0x1
 2455 079d 3F01     		.2byte	0x13f
 2456 079f 01       		.byte	0x1
 2457 07a0 ED010000 		.4byte	0x1ed
 2458 07a4 B4000000 		.4byte	.LFB67
 2459 07a8 10010000 		.4byte	.LFE67
 2460 07ac 04050000 		.4byte	.LLST5
 2461 07b0 01       		.byte	0x1
 2462 07b1 37080000 		.4byte	0x837
 2463 07b5 1C       		.uleb128 0x1c
 2464 07b6 92030000 		.4byte	.LASF77
 2465 07ba 01       		.byte	0x1
 2466 07bb 3F01     		.2byte	0x13f
 2467 07bd F7030000 		.4byte	0x3f7
 2468 07c1 24050000 		.4byte	.LLST6
 2469 07c5 1D       		.uleb128 0x1d
 2470 07c6 69050000 		.4byte	.LASF78
 2471 07ca 01       		.byte	0x1
 2472 07cb 3F01     		.2byte	0x13f
 2473 07cd AC000000 		.4byte	0xac
 2474 07d1 01       		.byte	0x1
 2475 07d2 51       		.byte	0x51
 2476 07d3 1D       		.uleb128 0x1d
 2477 07d4 A0040000 		.4byte	.LASF79
 2478 07d8 01       		.byte	0x1
 2479 07d9 3F01     		.2byte	0x13f
 2480 07db AC000000 		.4byte	0xac
 2481 07df 01       		.byte	0x1
 2482 07e0 52       		.byte	0x52
 2483 07e1 1C       		.uleb128 0x1c
 2484 07e2 8D050000 		.4byte	.LASF80
 2485 07e6 01       		.byte	0x1
 2486 07e7 3F01     		.2byte	0x13f
 2487 07e9 AC000000 		.4byte	0xac
 2488 07ed 5E050000 		.4byte	.LLST7
 2489 07f1 1E       		.uleb128 0x1e
 2490 07f2 FC030000 		.4byte	.LASF87
 2491 07f6 01       		.byte	0x1
 2492 07f7 4101     		.2byte	0x141
 2493 07f9 ED010000 		.4byte	0x1ed
 2494 07fd 96050000 		.4byte	.LLST8
 2495 0801 25       		.uleb128 0x25
 2496 0802 47040000 		.4byte	0x447
 2497 0806 DE000000 		.4byte	.LBB4
 2498 080a 00000000 		.4byte	.Ldebug_ranges0+0
 2499 080e 01       		.byte	0x1
 2500 080f 5301     		.2byte	0x153
 2501 0811 26       		.uleb128 0x26
ARM GAS  /tmp/cck4KHRF.s 			page 65


 2502 0812 79040000 		.4byte	0x479
 2503 0816 AA050000 		.4byte	.LLST9
 2504 081a 26       		.uleb128 0x26
 2505 081b 6D040000 		.4byte	0x46d
 2506 081f C9050000 		.4byte	.LLST10
 2507 0823 26       		.uleb128 0x26
 2508 0824 61040000 		.4byte	0x461
 2509 0828 DC050000 		.4byte	.LLST11
 2510 082c 26       		.uleb128 0x26
 2511 082d 55040000 		.4byte	0x455
 2512 0831 EF050000 		.4byte	.LLST12
 2513 0835 00       		.byte	0
 2514 0836 00       		.byte	0
 2515 0837 27       		.uleb128 0x27
 2516 0838 01       		.byte	0x1
 2517 0839 50030000 		.4byte	.LASF99
 2518 083d 01       		.byte	0x1
 2519 083e DC       		.byte	0xdc
 2520 083f 01       		.byte	0x1
 2521 0840 ED010000 		.4byte	0x1ed
 2522 0844 60000000 		.4byte	.LFB66
 2523 0848 B4000000 		.4byte	.LFE66
 2524 084c 10060000 		.4byte	.LLST3
 2525 0850 01       		.byte	0x1
 2526 0851 65080000 		.4byte	0x865
 2527 0855 28       		.uleb128 0x28
 2528 0856 92030000 		.4byte	.LASF77
 2529 085a 01       		.byte	0x1
 2530 085b DC       		.byte	0xdc
 2531 085c F7030000 		.4byte	0x3f7
 2532 0860 30060000 		.4byte	.LLST4
 2533 0864 00       		.byte	0
 2534 0865 27       		.uleb128 0x27
 2535 0866 01       		.byte	0x1
 2536 0867 C7000000 		.4byte	.LASF100
 2537 086b 01       		.byte	0x1
 2538 086c 8F       		.byte	0x8f
 2539 086d 01       		.byte	0x1
 2540 086e ED010000 		.4byte	0x1ed
 2541 0872 00000000 		.4byte	.LFB65
 2542 0876 60000000 		.4byte	.LFE65
 2543 087a 6A060000 		.4byte	.LLST0
 2544 087e 01       		.byte	0x1
 2545 087f A2080000 		.4byte	0x8a2
 2546 0883 28       		.uleb128 0x28
 2547 0884 92030000 		.4byte	.LASF77
 2548 0888 01       		.byte	0x1
 2549 0889 8F       		.byte	0x8f
 2550 088a F7030000 		.4byte	0x3f7
 2551 088e 8A060000 		.4byte	.LLST1
 2552 0892 29       		.uleb128 0x29
 2553 0893 746D7000 		.ascii	"tmp\000"
 2554 0897 01       		.byte	0x1
 2555 0898 91       		.byte	0x91
 2556 0899 AC000000 		.4byte	0xac
 2557 089d C4060000 		.4byte	.LLST2
 2558 08a1 00       		.byte	0
ARM GAS  /tmp/cck4KHRF.s 			page 66


 2559 08a2 2A       		.uleb128 0x2a
 2560 08a3 01       		.byte	0x1
 2561 08a4 01       		.byte	0x1
 2562 08a5 26010000 		.4byte	.LASF107
 2563 08a9 26010000 		.4byte	.LASF107
 2564 08ad 0A       		.byte	0xa
 2565 08ae 2A01     		.2byte	0x12a
 2566 08b0 00       		.byte	0
 2567              		.section	.debug_abbrev,"",%progbits
 2568              	.Ldebug_abbrev0:
 2569 0000 01       		.uleb128 0x1
 2570 0001 11       		.uleb128 0x11
 2571 0002 01       		.byte	0x1
 2572 0003 25       		.uleb128 0x25
 2573 0004 0E       		.uleb128 0xe
 2574 0005 13       		.uleb128 0x13
 2575 0006 0B       		.uleb128 0xb
 2576 0007 03       		.uleb128 0x3
 2577 0008 0E       		.uleb128 0xe
 2578 0009 1B       		.uleb128 0x1b
 2579 000a 0E       		.uleb128 0xe
 2580 000b 11       		.uleb128 0x11
 2581 000c 01       		.uleb128 0x1
 2582 000d 12       		.uleb128 0x12
 2583 000e 01       		.uleb128 0x1
 2584 000f 10       		.uleb128 0x10
 2585 0010 06       		.uleb128 0x6
 2586 0011 00       		.byte	0
 2587 0012 00       		.byte	0
 2588 0013 02       		.uleb128 0x2
 2589 0014 24       		.uleb128 0x24
 2590 0015 00       		.byte	0
 2591 0016 0B       		.uleb128 0xb
 2592 0017 0B       		.uleb128 0xb
 2593 0018 3E       		.uleb128 0x3e
 2594 0019 0B       		.uleb128 0xb
 2595 001a 03       		.uleb128 0x3
 2596 001b 0E       		.uleb128 0xe
 2597 001c 00       		.byte	0
 2598 001d 00       		.byte	0
 2599 001e 03       		.uleb128 0x3
 2600 001f 16       		.uleb128 0x16
 2601 0020 00       		.byte	0
 2602 0021 03       		.uleb128 0x3
 2603 0022 0E       		.uleb128 0xe
 2604 0023 3A       		.uleb128 0x3a
 2605 0024 0B       		.uleb128 0xb
 2606 0025 3B       		.uleb128 0x3b
 2607 0026 0B       		.uleb128 0xb
 2608 0027 49       		.uleb128 0x49
 2609 0028 13       		.uleb128 0x13
 2610 0029 00       		.byte	0
 2611 002a 00       		.byte	0
 2612 002b 04       		.uleb128 0x4
 2613 002c 24       		.uleb128 0x24
 2614 002d 00       		.byte	0
 2615 002e 0B       		.uleb128 0xb
ARM GAS  /tmp/cck4KHRF.s 			page 67


 2616 002f 0B       		.uleb128 0xb
 2617 0030 3E       		.uleb128 0x3e
 2618 0031 0B       		.uleb128 0xb
 2619 0032 03       		.uleb128 0x3
 2620 0033 08       		.uleb128 0x8
 2621 0034 00       		.byte	0
 2622 0035 00       		.byte	0
 2623 0036 05       		.uleb128 0x5
 2624 0037 26       		.uleb128 0x26
 2625 0038 00       		.byte	0
 2626 0039 49       		.uleb128 0x49
 2627 003a 13       		.uleb128 0x13
 2628 003b 00       		.byte	0
 2629 003c 00       		.byte	0
 2630 003d 06       		.uleb128 0x6
 2631 003e 35       		.uleb128 0x35
 2632 003f 00       		.byte	0
 2633 0040 49       		.uleb128 0x49
 2634 0041 13       		.uleb128 0x13
 2635 0042 00       		.byte	0
 2636 0043 00       		.byte	0
 2637 0044 07       		.uleb128 0x7
 2638 0045 34       		.uleb128 0x34
 2639 0046 00       		.byte	0
 2640 0047 03       		.uleb128 0x3
 2641 0048 0E       		.uleb128 0xe
 2642 0049 3A       		.uleb128 0x3a
 2643 004a 0B       		.uleb128 0xb
 2644 004b 3B       		.uleb128 0x3b
 2645 004c 05       		.uleb128 0x5
 2646 004d 49       		.uleb128 0x49
 2647 004e 13       		.uleb128 0x13
 2648 004f 3F       		.uleb128 0x3f
 2649 0050 0C       		.uleb128 0xc
 2650 0051 3C       		.uleb128 0x3c
 2651 0052 0C       		.uleb128 0xc
 2652 0053 00       		.byte	0
 2653 0054 00       		.byte	0
 2654 0055 08       		.uleb128 0x8
 2655 0056 34       		.uleb128 0x34
 2656 0057 00       		.byte	0
 2657 0058 03       		.uleb128 0x3
 2658 0059 0E       		.uleb128 0xe
 2659 005a 3A       		.uleb128 0x3a
 2660 005b 0B       		.uleb128 0xb
 2661 005c 3B       		.uleb128 0x3b
 2662 005d 0B       		.uleb128 0xb
 2663 005e 49       		.uleb128 0x49
 2664 005f 13       		.uleb128 0x13
 2665 0060 3F       		.uleb128 0x3f
 2666 0061 0C       		.uleb128 0xc
 2667 0062 3C       		.uleb128 0x3c
 2668 0063 0C       		.uleb128 0xc
 2669 0064 00       		.byte	0
 2670 0065 00       		.byte	0
 2671 0066 09       		.uleb128 0x9
 2672 0067 01       		.uleb128 0x1
ARM GAS  /tmp/cck4KHRF.s 			page 68


 2673 0068 01       		.byte	0x1
 2674 0069 49       		.uleb128 0x49
 2675 006a 13       		.uleb128 0x13
 2676 006b 01       		.uleb128 0x1
 2677 006c 13       		.uleb128 0x13
 2678 006d 00       		.byte	0
 2679 006e 00       		.byte	0
 2680 006f 0A       		.uleb128 0xa
 2681 0070 21       		.uleb128 0x21
 2682 0071 00       		.byte	0
 2683 0072 49       		.uleb128 0x49
 2684 0073 13       		.uleb128 0x13
 2685 0074 2F       		.uleb128 0x2f
 2686 0075 0B       		.uleb128 0xb
 2687 0076 00       		.byte	0
 2688 0077 00       		.byte	0
 2689 0078 0B       		.uleb128 0xb
 2690 0079 13       		.uleb128 0x13
 2691 007a 01       		.byte	0x1
 2692 007b 0B       		.uleb128 0xb
 2693 007c 0B       		.uleb128 0xb
 2694 007d 3A       		.uleb128 0x3a
 2695 007e 0B       		.uleb128 0xb
 2696 007f 3B       		.uleb128 0x3b
 2697 0080 05       		.uleb128 0x5
 2698 0081 01       		.uleb128 0x1
 2699 0082 13       		.uleb128 0x13
 2700 0083 00       		.byte	0
 2701 0084 00       		.byte	0
 2702 0085 0C       		.uleb128 0xc
 2703 0086 0D       		.uleb128 0xd
 2704 0087 00       		.byte	0
 2705 0088 03       		.uleb128 0x3
 2706 0089 08       		.uleb128 0x8
 2707 008a 3A       		.uleb128 0x3a
 2708 008b 0B       		.uleb128 0xb
 2709 008c 3B       		.uleb128 0x3b
 2710 008d 05       		.uleb128 0x5
 2711 008e 49       		.uleb128 0x49
 2712 008f 13       		.uleb128 0x13
 2713 0090 38       		.uleb128 0x38
 2714 0091 0A       		.uleb128 0xa
 2715 0092 00       		.byte	0
 2716 0093 00       		.byte	0
 2717 0094 0D       		.uleb128 0xd
 2718 0095 0D       		.uleb128 0xd
 2719 0096 00       		.byte	0
 2720 0097 03       		.uleb128 0x3
 2721 0098 0E       		.uleb128 0xe
 2722 0099 3A       		.uleb128 0x3a
 2723 009a 0B       		.uleb128 0xb
 2724 009b 3B       		.uleb128 0x3b
 2725 009c 05       		.uleb128 0x5
 2726 009d 49       		.uleb128 0x49
 2727 009e 13       		.uleb128 0x13
 2728 009f 38       		.uleb128 0x38
 2729 00a0 0A       		.uleb128 0xa
ARM GAS  /tmp/cck4KHRF.s 			page 69


 2730 00a1 00       		.byte	0
 2731 00a2 00       		.byte	0
 2732 00a3 0E       		.uleb128 0xe
 2733 00a4 16       		.uleb128 0x16
 2734 00a5 00       		.byte	0
 2735 00a6 03       		.uleb128 0x3
 2736 00a7 0E       		.uleb128 0xe
 2737 00a8 3A       		.uleb128 0x3a
 2738 00a9 0B       		.uleb128 0xb
 2739 00aa 3B       		.uleb128 0x3b
 2740 00ab 05       		.uleb128 0x5
 2741 00ac 49       		.uleb128 0x49
 2742 00ad 13       		.uleb128 0x13
 2743 00ae 00       		.byte	0
 2744 00af 00       		.byte	0
 2745 00b0 0F       		.uleb128 0xf
 2746 00b1 04       		.uleb128 0x4
 2747 00b2 01       		.byte	0x1
 2748 00b3 0B       		.uleb128 0xb
 2749 00b4 0B       		.uleb128 0xb
 2750 00b5 49       		.uleb128 0x49
 2751 00b6 13       		.uleb128 0x13
 2752 00b7 3A       		.uleb128 0x3a
 2753 00b8 0B       		.uleb128 0xb
 2754 00b9 3B       		.uleb128 0x3b
 2755 00ba 0B       		.uleb128 0xb
 2756 00bb 01       		.uleb128 0x1
 2757 00bc 13       		.uleb128 0x13
 2758 00bd 00       		.byte	0
 2759 00be 00       		.byte	0
 2760 00bf 10       		.uleb128 0x10
 2761 00c0 28       		.uleb128 0x28
 2762 00c1 00       		.byte	0
 2763 00c2 03       		.uleb128 0x3
 2764 00c3 0E       		.uleb128 0xe
 2765 00c4 1C       		.uleb128 0x1c
 2766 00c5 0B       		.uleb128 0xb
 2767 00c6 00       		.byte	0
 2768 00c7 00       		.byte	0
 2769 00c8 11       		.uleb128 0x11
 2770 00c9 28       		.uleb128 0x28
 2771 00ca 00       		.byte	0
 2772 00cb 03       		.uleb128 0x3
 2773 00cc 08       		.uleb128 0x8
 2774 00cd 1C       		.uleb128 0x1c
 2775 00ce 0B       		.uleb128 0xb
 2776 00cf 00       		.byte	0
 2777 00d0 00       		.byte	0
 2778 00d1 12       		.uleb128 0x12
 2779 00d2 13       		.uleb128 0x13
 2780 00d3 01       		.byte	0x1
 2781 00d4 0B       		.uleb128 0xb
 2782 00d5 0B       		.uleb128 0xb
 2783 00d6 3A       		.uleb128 0x3a
 2784 00d7 0B       		.uleb128 0xb
 2785 00d8 3B       		.uleb128 0x3b
 2786 00d9 0B       		.uleb128 0xb
ARM GAS  /tmp/cck4KHRF.s 			page 70


 2787 00da 01       		.uleb128 0x1
 2788 00db 13       		.uleb128 0x13
 2789 00dc 00       		.byte	0
 2790 00dd 00       		.byte	0
 2791 00de 13       		.uleb128 0x13
 2792 00df 0D       		.uleb128 0xd
 2793 00e0 00       		.byte	0
 2794 00e1 03       		.uleb128 0x3
 2795 00e2 0E       		.uleb128 0xe
 2796 00e3 3A       		.uleb128 0x3a
 2797 00e4 0B       		.uleb128 0xb
 2798 00e5 3B       		.uleb128 0x3b
 2799 00e6 0B       		.uleb128 0xb
 2800 00e7 49       		.uleb128 0x49
 2801 00e8 13       		.uleb128 0x13
 2802 00e9 38       		.uleb128 0x38
 2803 00ea 0A       		.uleb128 0xa
 2804 00eb 00       		.byte	0
 2805 00ec 00       		.byte	0
 2806 00ed 14       		.uleb128 0x14
 2807 00ee 13       		.uleb128 0x13
 2808 00ef 01       		.byte	0x1
 2809 00f0 03       		.uleb128 0x3
 2810 00f1 0E       		.uleb128 0xe
 2811 00f2 0B       		.uleb128 0xb
 2812 00f3 0B       		.uleb128 0xb
 2813 00f4 3A       		.uleb128 0x3a
 2814 00f5 0B       		.uleb128 0xb
 2815 00f6 3B       		.uleb128 0x3b
 2816 00f7 0B       		.uleb128 0xb
 2817 00f8 01       		.uleb128 0x1
 2818 00f9 13       		.uleb128 0x13
 2819 00fa 00       		.byte	0
 2820 00fb 00       		.byte	0
 2821 00fc 15       		.uleb128 0x15
 2822 00fd 0F       		.uleb128 0xf
 2823 00fe 00       		.byte	0
 2824 00ff 0B       		.uleb128 0xb
 2825 0100 0B       		.uleb128 0xb
 2826 0101 49       		.uleb128 0x49
 2827 0102 13       		.uleb128 0x13
 2828 0103 00       		.byte	0
 2829 0104 00       		.byte	0
 2830 0105 16       		.uleb128 0x16
 2831 0106 0F       		.uleb128 0xf
 2832 0107 00       		.byte	0
 2833 0108 0B       		.uleb128 0xb
 2834 0109 0B       		.uleb128 0xb
 2835 010a 00       		.byte	0
 2836 010b 00       		.byte	0
 2837 010c 17       		.uleb128 0x17
 2838 010d 15       		.uleb128 0x15
 2839 010e 01       		.byte	0x1
 2840 010f 27       		.uleb128 0x27
 2841 0110 0C       		.uleb128 0xc
 2842 0111 01       		.uleb128 0x1
 2843 0112 13       		.uleb128 0x13
ARM GAS  /tmp/cck4KHRF.s 			page 71


 2844 0113 00       		.byte	0
 2845 0114 00       		.byte	0
 2846 0115 18       		.uleb128 0x18
 2847 0116 05       		.uleb128 0x5
 2848 0117 00       		.byte	0
 2849 0118 49       		.uleb128 0x49
 2850 0119 13       		.uleb128 0x13
 2851 011a 00       		.byte	0
 2852 011b 00       		.byte	0
 2853 011c 19       		.uleb128 0x19
 2854 011d 2E       		.uleb128 0x2e
 2855 011e 01       		.byte	0x1
 2856 011f 03       		.uleb128 0x3
 2857 0120 0E       		.uleb128 0xe
 2858 0121 3A       		.uleb128 0x3a
 2859 0122 0B       		.uleb128 0xb
 2860 0123 3B       		.uleb128 0x3b
 2861 0124 05       		.uleb128 0x5
 2862 0125 27       		.uleb128 0x27
 2863 0126 0C       		.uleb128 0xc
 2864 0127 20       		.uleb128 0x20
 2865 0128 0B       		.uleb128 0xb
 2866 0129 01       		.uleb128 0x1
 2867 012a 13       		.uleb128 0x13
 2868 012b 00       		.byte	0
 2869 012c 00       		.byte	0
 2870 012d 1A       		.uleb128 0x1a
 2871 012e 05       		.uleb128 0x5
 2872 012f 00       		.byte	0
 2873 0130 03       		.uleb128 0x3
 2874 0131 0E       		.uleb128 0xe
 2875 0132 3A       		.uleb128 0x3a
 2876 0133 0B       		.uleb128 0xb
 2877 0134 3B       		.uleb128 0x3b
 2878 0135 05       		.uleb128 0x5
 2879 0136 49       		.uleb128 0x49
 2880 0137 13       		.uleb128 0x13
 2881 0138 00       		.byte	0
 2882 0139 00       		.byte	0
 2883 013a 1B       		.uleb128 0x1b
 2884 013b 2E       		.uleb128 0x2e
 2885 013c 01       		.byte	0x1
 2886 013d 3F       		.uleb128 0x3f
 2887 013e 0C       		.uleb128 0xc
 2888 013f 03       		.uleb128 0x3
 2889 0140 0E       		.uleb128 0xe
 2890 0141 3A       		.uleb128 0x3a
 2891 0142 0B       		.uleb128 0xb
 2892 0143 3B       		.uleb128 0x3b
 2893 0144 05       		.uleb128 0x5
 2894 0145 27       		.uleb128 0x27
 2895 0146 0C       		.uleb128 0xc
 2896 0147 49       		.uleb128 0x49
 2897 0148 13       		.uleb128 0x13
 2898 0149 11       		.uleb128 0x11
 2899 014a 01       		.uleb128 0x1
 2900 014b 12       		.uleb128 0x12
ARM GAS  /tmp/cck4KHRF.s 			page 72


 2901 014c 01       		.uleb128 0x1
 2902 014d 40       		.uleb128 0x40
 2903 014e 0A       		.uleb128 0xa
 2904 014f 9742     		.uleb128 0x2117
 2905 0151 0C       		.uleb128 0xc
 2906 0152 01       		.uleb128 0x1
 2907 0153 13       		.uleb128 0x13
 2908 0154 00       		.byte	0
 2909 0155 00       		.byte	0
 2910 0156 1C       		.uleb128 0x1c
 2911 0157 05       		.uleb128 0x5
 2912 0158 00       		.byte	0
 2913 0159 03       		.uleb128 0x3
 2914 015a 0E       		.uleb128 0xe
 2915 015b 3A       		.uleb128 0x3a
 2916 015c 0B       		.uleb128 0xb
 2917 015d 3B       		.uleb128 0x3b
 2918 015e 05       		.uleb128 0x5
 2919 015f 49       		.uleb128 0x49
 2920 0160 13       		.uleb128 0x13
 2921 0161 02       		.uleb128 0x2
 2922 0162 06       		.uleb128 0x6
 2923 0163 00       		.byte	0
 2924 0164 00       		.byte	0
 2925 0165 1D       		.uleb128 0x1d
 2926 0166 05       		.uleb128 0x5
 2927 0167 00       		.byte	0
 2928 0168 03       		.uleb128 0x3
 2929 0169 0E       		.uleb128 0xe
 2930 016a 3A       		.uleb128 0x3a
 2931 016b 0B       		.uleb128 0xb
 2932 016c 3B       		.uleb128 0x3b
 2933 016d 05       		.uleb128 0x5
 2934 016e 49       		.uleb128 0x49
 2935 016f 13       		.uleb128 0x13
 2936 0170 02       		.uleb128 0x2
 2937 0171 0A       		.uleb128 0xa
 2938 0172 00       		.byte	0
 2939 0173 00       		.byte	0
 2940 0174 1E       		.uleb128 0x1e
 2941 0175 34       		.uleb128 0x34
 2942 0176 00       		.byte	0
 2943 0177 03       		.uleb128 0x3
 2944 0178 0E       		.uleb128 0xe
 2945 0179 3A       		.uleb128 0x3a
 2946 017a 0B       		.uleb128 0xb
 2947 017b 3B       		.uleb128 0x3b
 2948 017c 05       		.uleb128 0x5
 2949 017d 49       		.uleb128 0x49
 2950 017e 13       		.uleb128 0x13
 2951 017f 02       		.uleb128 0x2
 2952 0180 06       		.uleb128 0x6
 2953 0181 00       		.byte	0
 2954 0182 00       		.byte	0
 2955 0183 1F       		.uleb128 0x1f
 2956 0184 2E       		.uleb128 0x2e
 2957 0185 01       		.byte	0x1
ARM GAS  /tmp/cck4KHRF.s 			page 73


 2958 0186 3F       		.uleb128 0x3f
 2959 0187 0C       		.uleb128 0xc
 2960 0188 03       		.uleb128 0x3
 2961 0189 0E       		.uleb128 0xe
 2962 018a 3A       		.uleb128 0x3a
 2963 018b 0B       		.uleb128 0xb
 2964 018c 3B       		.uleb128 0x3b
 2965 018d 05       		.uleb128 0x5
 2966 018e 27       		.uleb128 0x27
 2967 018f 0C       		.uleb128 0xc
 2968 0190 49       		.uleb128 0x49
 2969 0191 13       		.uleb128 0x13
 2970 0192 11       		.uleb128 0x11
 2971 0193 01       		.uleb128 0x1
 2972 0194 12       		.uleb128 0x12
 2973 0195 01       		.uleb128 0x1
 2974 0196 40       		.uleb128 0x40
 2975 0197 06       		.uleb128 0x6
 2976 0198 9742     		.uleb128 0x2117
 2977 019a 0C       		.uleb128 0xc
 2978 019b 01       		.uleb128 0x1
 2979 019c 13       		.uleb128 0x13
 2980 019d 00       		.byte	0
 2981 019e 00       		.byte	0
 2982 019f 20       		.uleb128 0x20
 2983 01a0 2E       		.uleb128 0x2e
 2984 01a1 01       		.byte	0x1
 2985 01a2 3F       		.uleb128 0x3f
 2986 01a3 0C       		.uleb128 0xc
 2987 01a4 03       		.uleb128 0x3
 2988 01a5 0E       		.uleb128 0xe
 2989 01a6 3A       		.uleb128 0x3a
 2990 01a7 0B       		.uleb128 0xb
 2991 01a8 3B       		.uleb128 0x3b
 2992 01a9 05       		.uleb128 0x5
 2993 01aa 27       		.uleb128 0x27
 2994 01ab 0C       		.uleb128 0xc
 2995 01ac 11       		.uleb128 0x11
 2996 01ad 01       		.uleb128 0x1
 2997 01ae 12       		.uleb128 0x12
 2998 01af 01       		.uleb128 0x1
 2999 01b0 40       		.uleb128 0x40
 3000 01b1 06       		.uleb128 0x6
 3001 01b2 01       		.uleb128 0x1
 3002 01b3 13       		.uleb128 0x13
 3003 01b4 00       		.byte	0
 3004 01b5 00       		.byte	0
 3005 01b6 21       		.uleb128 0x21
 3006 01b7 898201   		.uleb128 0x4109
 3007 01ba 00       		.byte	0
 3008 01bb 11       		.uleb128 0x11
 3009 01bc 01       		.uleb128 0x1
 3010 01bd 31       		.uleb128 0x31
 3011 01be 13       		.uleb128 0x13
 3012 01bf 00       		.byte	0
 3013 01c0 00       		.byte	0
 3014 01c1 22       		.uleb128 0x22
ARM GAS  /tmp/cck4KHRF.s 			page 74


 3015 01c2 898201   		.uleb128 0x4109
 3016 01c5 01       		.byte	0x1
 3017 01c6 11       		.uleb128 0x11
 3018 01c7 01       		.uleb128 0x1
 3019 01c8 00       		.byte	0
 3020 01c9 00       		.byte	0
 3021 01ca 23       		.uleb128 0x23
 3022 01cb 8A8201   		.uleb128 0x410a
 3023 01ce 00       		.byte	0
 3024 01cf 02       		.uleb128 0x2
 3025 01d0 0A       		.uleb128 0xa
 3026 01d1 9142     		.uleb128 0x2111
 3027 01d3 0A       		.uleb128 0xa
 3028 01d4 00       		.byte	0
 3029 01d5 00       		.byte	0
 3030 01d6 24       		.uleb128 0x24
 3031 01d7 34       		.uleb128 0x34
 3032 01d8 00       		.byte	0
 3033 01d9 03       		.uleb128 0x3
 3034 01da 0E       		.uleb128 0xe
 3035 01db 3A       		.uleb128 0x3a
 3036 01dc 0B       		.uleb128 0xb
 3037 01dd 3B       		.uleb128 0x3b
 3038 01de 05       		.uleb128 0x5
 3039 01df 49       		.uleb128 0x49
 3040 01e0 13       		.uleb128 0x13
 3041 01e1 1C       		.uleb128 0x1c
 3042 01e2 0B       		.uleb128 0xb
 3043 01e3 00       		.byte	0
 3044 01e4 00       		.byte	0
 3045 01e5 25       		.uleb128 0x25
 3046 01e6 1D       		.uleb128 0x1d
 3047 01e7 01       		.byte	0x1
 3048 01e8 31       		.uleb128 0x31
 3049 01e9 13       		.uleb128 0x13
 3050 01ea 52       		.uleb128 0x52
 3051 01eb 01       		.uleb128 0x1
 3052 01ec 55       		.uleb128 0x55
 3053 01ed 06       		.uleb128 0x6
 3054 01ee 58       		.uleb128 0x58
 3055 01ef 0B       		.uleb128 0xb
 3056 01f0 59       		.uleb128 0x59
 3057 01f1 05       		.uleb128 0x5
 3058 01f2 00       		.byte	0
 3059 01f3 00       		.byte	0
 3060 01f4 26       		.uleb128 0x26
 3061 01f5 05       		.uleb128 0x5
 3062 01f6 00       		.byte	0
 3063 01f7 31       		.uleb128 0x31
 3064 01f8 13       		.uleb128 0x13
 3065 01f9 02       		.uleb128 0x2
 3066 01fa 06       		.uleb128 0x6
 3067 01fb 00       		.byte	0
 3068 01fc 00       		.byte	0
 3069 01fd 27       		.uleb128 0x27
 3070 01fe 2E       		.uleb128 0x2e
 3071 01ff 01       		.byte	0x1
ARM GAS  /tmp/cck4KHRF.s 			page 75


 3072 0200 3F       		.uleb128 0x3f
 3073 0201 0C       		.uleb128 0xc
 3074 0202 03       		.uleb128 0x3
 3075 0203 0E       		.uleb128 0xe
 3076 0204 3A       		.uleb128 0x3a
 3077 0205 0B       		.uleb128 0xb
 3078 0206 3B       		.uleb128 0x3b
 3079 0207 0B       		.uleb128 0xb
 3080 0208 27       		.uleb128 0x27
 3081 0209 0C       		.uleb128 0xc
 3082 020a 49       		.uleb128 0x49
 3083 020b 13       		.uleb128 0x13
 3084 020c 11       		.uleb128 0x11
 3085 020d 01       		.uleb128 0x1
 3086 020e 12       		.uleb128 0x12
 3087 020f 01       		.uleb128 0x1
 3088 0210 40       		.uleb128 0x40
 3089 0211 06       		.uleb128 0x6
 3090 0212 9742     		.uleb128 0x2117
 3091 0214 0C       		.uleb128 0xc
 3092 0215 01       		.uleb128 0x1
 3093 0216 13       		.uleb128 0x13
 3094 0217 00       		.byte	0
 3095 0218 00       		.byte	0
 3096 0219 28       		.uleb128 0x28
 3097 021a 05       		.uleb128 0x5
 3098 021b 00       		.byte	0
 3099 021c 03       		.uleb128 0x3
 3100 021d 0E       		.uleb128 0xe
 3101 021e 3A       		.uleb128 0x3a
 3102 021f 0B       		.uleb128 0xb
 3103 0220 3B       		.uleb128 0x3b
 3104 0221 0B       		.uleb128 0xb
 3105 0222 49       		.uleb128 0x49
 3106 0223 13       		.uleb128 0x13
 3107 0224 02       		.uleb128 0x2
 3108 0225 06       		.uleb128 0x6
 3109 0226 00       		.byte	0
 3110 0227 00       		.byte	0
 3111 0228 29       		.uleb128 0x29
 3112 0229 34       		.uleb128 0x34
 3113 022a 00       		.byte	0
 3114 022b 03       		.uleb128 0x3
 3115 022c 08       		.uleb128 0x8
 3116 022d 3A       		.uleb128 0x3a
 3117 022e 0B       		.uleb128 0xb
 3118 022f 3B       		.uleb128 0x3b
 3119 0230 0B       		.uleb128 0xb
 3120 0231 49       		.uleb128 0x49
 3121 0232 13       		.uleb128 0x13
 3122 0233 02       		.uleb128 0x2
 3123 0234 06       		.uleb128 0x6
 3124 0235 00       		.byte	0
 3125 0236 00       		.byte	0
 3126 0237 2A       		.uleb128 0x2a
 3127 0238 2E       		.uleb128 0x2e
 3128 0239 00       		.byte	0
ARM GAS  /tmp/cck4KHRF.s 			page 76


 3129 023a 3F       		.uleb128 0x3f
 3130 023b 0C       		.uleb128 0xc
 3131 023c 3C       		.uleb128 0x3c
 3132 023d 0C       		.uleb128 0xc
 3133 023e 8740     		.uleb128 0x2007
 3134 0240 0E       		.uleb128 0xe
 3135 0241 03       		.uleb128 0x3
 3136 0242 0E       		.uleb128 0xe
 3137 0243 3A       		.uleb128 0x3a
 3138 0244 0B       		.uleb128 0xb
 3139 0245 3B       		.uleb128 0x3b
 3140 0246 05       		.uleb128 0x5
 3141 0247 00       		.byte	0
 3142 0248 00       		.byte	0
 3143 0249 00       		.byte	0
 3144              		.section	.debug_loc,"",%progbits
 3145              	.Ldebug_loc0:
 3146              	.LLST41:
 3147 0000 56060000 		.4byte	.LVL81-.Ltext0
 3148 0004 58060000 		.4byte	.LVL82-.Ltext0
 3149 0008 0100     		.2byte	0x1
 3150 000a 50       		.byte	0x50
 3151 000b 58060000 		.4byte	.LVL82-.Ltext0
 3152 000f 5A060000 		.4byte	.LFE76-.Ltext0
 3153 0013 0400     		.2byte	0x4
 3154 0015 F3       		.byte	0xf3
 3155 0016 01       		.uleb128 0x1
 3156 0017 50       		.byte	0x50
 3157 0018 9F       		.byte	0x9f
 3158 0019 00000000 		.4byte	0
 3159 001d 00000000 		.4byte	0
 3160              	.LLST40:
 3161 0021 50060000 		.4byte	.LVL79-.Ltext0
 3162 0025 54060000 		.4byte	.LVL80-.Ltext0
 3163 0029 0100     		.2byte	0x1
 3164 002b 50       		.byte	0x50
 3165 002c 54060000 		.4byte	.LVL80-.Ltext0
 3166 0030 56060000 		.4byte	.LFE75-.Ltext0
 3167 0034 0400     		.2byte	0x4
 3168 0036 F3       		.byte	0xf3
 3169 0037 01       		.uleb128 0x1
 3170 0038 50       		.byte	0x50
 3171 0039 9F       		.byte	0x9f
 3172 003a 00000000 		.4byte	0
 3173 003e 00000000 		.4byte	0
 3174              	.LLST38:
 3175 0042 02060000 		.4byte	.LVL73-.Ltext0
 3176 0046 0E060000 		.4byte	.LVL74-.Ltext0
 3177 004a 0100     		.2byte	0x1
 3178 004c 50       		.byte	0x50
 3179 004d 0E060000 		.4byte	.LVL74-.Ltext0
 3180 0051 4C060000 		.4byte	.LVL77-.Ltext0
 3181 0055 0100     		.2byte	0x1
 3182 0057 53       		.byte	0x53
 3183 0058 4C060000 		.4byte	.LVL77-.Ltext0
 3184 005c 4E060000 		.4byte	.LVL78-.Ltext0
 3185 0060 0100     		.2byte	0x1
ARM GAS  /tmp/cck4KHRF.s 			page 77


 3186 0062 50       		.byte	0x50
 3187 0063 4E060000 		.4byte	.LVL78-.Ltext0
 3188 0067 50060000 		.4byte	.LFE74-.Ltext0
 3189 006b 0100     		.2byte	0x1
 3190 006d 53       		.byte	0x53
 3191 006e 00000000 		.4byte	0
 3192 0072 00000000 		.4byte	0
 3193              	.LLST39:
 3194 0076 02060000 		.4byte	.LVL73-.Ltext0
 3195 007a 2E060000 		.4byte	.LVL75-.Ltext0
 3196 007e 0200     		.2byte	0x2
 3197 0080 30       		.byte	0x30
 3198 0081 9F       		.byte	0x9f
 3199 0082 2E060000 		.4byte	.LVL75-.Ltext0
 3200 0086 36060000 		.4byte	.LVL76-.Ltext0
 3201 008a 0100     		.2byte	0x1
 3202 008c 50       		.byte	0x50
 3203 008d 36060000 		.4byte	.LVL76-.Ltext0
 3204 0091 50060000 		.4byte	.LFE74-.Ltext0
 3205 0095 0200     		.2byte	0x2
 3206 0097 30       		.byte	0x30
 3207 0098 9F       		.byte	0x9f
 3208 0099 00000000 		.4byte	0
 3209 009d 00000000 		.4byte	0
 3210              	.LLST35:
 3211 00a1 BC050000 		.4byte	.LFB73-.Ltext0
 3212 00a5 C2050000 		.4byte	.LCFI10-.Ltext0
 3213 00a9 0200     		.2byte	0x2
 3214 00ab 7D       		.byte	0x7d
 3215 00ac 00       		.sleb128 0
 3216 00ad C2050000 		.4byte	.LCFI10-.Ltext0
 3217 00b1 02060000 		.4byte	.LFE73-.Ltext0
 3218 00b5 0200     		.2byte	0x2
 3219 00b7 7D       		.byte	0x7d
 3220 00b8 08       		.sleb128 8
 3221 00b9 00000000 		.4byte	0
 3222 00bd 00000000 		.4byte	0
 3223              	.LLST36:
 3224 00c1 BC050000 		.4byte	.LVL67-.Ltext0
 3225 00c5 D2050000 		.4byte	.LVL68-.Ltext0
 3226 00c9 0100     		.2byte	0x1
 3227 00cb 50       		.byte	0x50
 3228 00cc D2050000 		.4byte	.LVL68-.Ltext0
 3229 00d0 FE050000 		.4byte	.LVL71-.Ltext0
 3230 00d4 0100     		.2byte	0x1
 3231 00d6 54       		.byte	0x54
 3232 00d7 FE050000 		.4byte	.LVL71-.Ltext0
 3233 00db 00060000 		.4byte	.LVL72-.Ltext0
 3234 00df 0100     		.2byte	0x1
 3235 00e1 50       		.byte	0x50
 3236 00e2 00060000 		.4byte	.LVL72-.Ltext0
 3237 00e6 02060000 		.4byte	.LFE73-.Ltext0
 3238 00ea 0100     		.2byte	0x1
 3239 00ec 54       		.byte	0x54
 3240 00ed 00000000 		.4byte	0
 3241 00f1 00000000 		.4byte	0
 3242              	.LLST37:
ARM GAS  /tmp/cck4KHRF.s 			page 78


 3243 00f5 BC050000 		.4byte	.LVL67-.Ltext0
 3244 00f9 E6050000 		.4byte	.LVL69-.Ltext0
 3245 00fd 0200     		.2byte	0x2
 3246 00ff 30       		.byte	0x30
 3247 0100 9F       		.byte	0x9f
 3248 0101 E6050000 		.4byte	.LVL69-.Ltext0
 3249 0105 EE050000 		.4byte	.LVL70-.Ltext0
 3250 0109 0100     		.2byte	0x1
 3251 010b 50       		.byte	0x50
 3252 010c EE050000 		.4byte	.LVL70-.Ltext0
 3253 0110 02060000 		.4byte	.LFE73-.Ltext0
 3254 0114 0200     		.2byte	0x2
 3255 0116 30       		.byte	0x30
 3256 0117 9F       		.byte	0x9f
 3257 0118 00000000 		.4byte	0
 3258 011c 00000000 		.4byte	0
 3259              	.LLST31:
 3260 0120 94040000 		.4byte	.LFB72-.Ltext0
 3261 0124 96040000 		.4byte	.LCFI6-.Ltext0
 3262 0128 0200     		.2byte	0x2
 3263 012a 7D       		.byte	0x7d
 3264 012b 00       		.sleb128 0
 3265 012c 96040000 		.4byte	.LCFI6-.Ltext0
 3266 0130 F2040000 		.4byte	.LCFI7-.Ltext0
 3267 0134 0200     		.2byte	0x2
 3268 0136 7D       		.byte	0x7d
 3269 0137 0C       		.sleb128 12
 3270 0138 F2040000 		.4byte	.LCFI7-.Ltext0
 3271 013c F4040000 		.4byte	.LCFI8-.Ltext0
 3272 0140 0200     		.2byte	0x2
 3273 0142 7D       		.byte	0x7d
 3274 0143 00       		.sleb128 0
 3275 0144 F4040000 		.4byte	.LCFI8-.Ltext0
 3276 0148 B0050000 		.4byte	.LCFI9-.Ltext0
 3277 014c 0200     		.2byte	0x2
 3278 014e 7D       		.byte	0x7d
 3279 014f 0C       		.sleb128 12
 3280 0150 B0050000 		.4byte	.LCFI9-.Ltext0
 3281 0154 BC050000 		.4byte	.LFE72-.Ltext0
 3282 0158 0200     		.2byte	0x2
 3283 015a 7D       		.byte	0x7d
 3284 015b 00       		.sleb128 0
 3285 015c 00000000 		.4byte	0
 3286 0160 00000000 		.4byte	0
 3287              	.LLST32:
 3288 0164 94040000 		.4byte	.LVL58-.Ltext0
 3289 0168 F3040000 		.4byte	.LVL62-1-.Ltext0
 3290 016c 0100     		.2byte	0x1
 3291 016e 50       		.byte	0x50
 3292 016f F3040000 		.4byte	.LVL62-1-.Ltext0
 3293 0173 F4040000 		.4byte	.LVL62-.Ltext0
 3294 0177 0400     		.2byte	0x4
 3295 0179 F3       		.byte	0xf3
 3296 017a 01       		.uleb128 0x1
 3297 017b 50       		.byte	0x50
 3298 017c 9F       		.byte	0x9f
 3299 017d F4040000 		.4byte	.LVL62-.Ltext0
ARM GAS  /tmp/cck4KHRF.s 			page 79


 3300 0181 BC050000 		.4byte	.LFE72-.Ltext0
 3301 0185 0100     		.2byte	0x1
 3302 0187 50       		.byte	0x50
 3303 0188 00000000 		.4byte	0
 3304 018c 00000000 		.4byte	0
 3305              	.LLST33:
 3306 0190 9E040000 		.4byte	.LVL59-.Ltext0
 3307 0194 EC040000 		.4byte	.LVL61-.Ltext0
 3308 0198 0100     		.2byte	0x1
 3309 019a 54       		.byte	0x54
 3310 019b F4040000 		.4byte	.LVL62-.Ltext0
 3311 019f 1E050000 		.4byte	.LVL63-.Ltext0
 3312 01a3 0100     		.2byte	0x1
 3313 01a5 54       		.byte	0x54
 3314 01a6 82050000 		.4byte	.LVL64-.Ltext0
 3315 01aa AE050000 		.4byte	.LVL66-.Ltext0
 3316 01ae 0100     		.2byte	0x1
 3317 01b0 54       		.byte	0x54
 3318 01b1 00000000 		.4byte	0
 3319 01b5 00000000 		.4byte	0
 3320              	.LLST34:
 3321 01b9 A6040000 		.4byte	.LVL60-.Ltext0
 3322 01bd EC040000 		.4byte	.LVL61-.Ltext0
 3323 01c1 0100     		.2byte	0x1
 3324 01c3 51       		.byte	0x51
 3325 01c4 F4040000 		.4byte	.LVL62-.Ltext0
 3326 01c8 8C050000 		.4byte	.LVL65-.Ltext0
 3327 01cc 0100     		.2byte	0x1
 3328 01ce 51       		.byte	0x51
 3329 01cf 00000000 		.4byte	0
 3330 01d3 00000000 		.4byte	0
 3331              	.LLST25:
 3332 01d7 5C020000 		.4byte	.LFB71-.Ltext0
 3333 01db 60020000 		.4byte	.LCFI5-.Ltext0
 3334 01df 0200     		.2byte	0x2
 3335 01e1 7D       		.byte	0x7d
 3336 01e2 00       		.sleb128 0
 3337 01e3 60020000 		.4byte	.LCFI5-.Ltext0
 3338 01e7 94040000 		.4byte	.LFE71-.Ltext0
 3339 01eb 0200     		.2byte	0x2
 3340 01ed 7D       		.byte	0x7d
 3341 01ee 28       		.sleb128 40
 3342 01ef 00000000 		.4byte	0
 3343 01f3 00000000 		.4byte	0
 3344              	.LLST26:
 3345 01f7 5C020000 		.4byte	.LVL45-.Ltext0
 3346 01fb 7A020000 		.4byte	.LVL47-.Ltext0
 3347 01ff 0100     		.2byte	0x1
 3348 0201 50       		.byte	0x50
 3349 0202 7A020000 		.4byte	.LVL47-.Ltext0
 3350 0206 7E020000 		.4byte	.LVL48-.Ltext0
 3351 020a 0100     		.2byte	0x1
 3352 020c 55       		.byte	0x55
 3353 020d 7E020000 		.4byte	.LVL48-.Ltext0
 3354 0211 C1020000 		.4byte	.LVL51-1-.Ltext0
 3355 0215 0100     		.2byte	0x1
 3356 0217 50       		.byte	0x50
ARM GAS  /tmp/cck4KHRF.s 			page 80


 3357 0218 C1020000 		.4byte	.LVL51-1-.Ltext0
 3358 021c 2E030000 		.4byte	.LVL54-.Ltext0
 3359 0220 0100     		.2byte	0x1
 3360 0222 55       		.byte	0x55
 3361 0223 2E030000 		.4byte	.LVL54-.Ltext0
 3362 0227 8A030000 		.4byte	.LVL55-.Ltext0
 3363 022b 0100     		.2byte	0x1
 3364 022d 50       		.byte	0x50
 3365 022e 8A030000 		.4byte	.LVL55-.Ltext0
 3366 0232 94040000 		.4byte	.LFE71-.Ltext0
 3367 0236 0100     		.2byte	0x1
 3368 0238 55       		.byte	0x55
 3369 0239 00000000 		.4byte	0
 3370 023d 00000000 		.4byte	0
 3371              	.LLST27:
 3372 0241 5C020000 		.4byte	.LVL45-.Ltext0
 3373 0245 C1020000 		.4byte	.LVL51-1-.Ltext0
 3374 0249 0100     		.2byte	0x1
 3375 024b 51       		.byte	0x51
 3376 024c C1020000 		.4byte	.LVL51-1-.Ltext0
 3377 0250 2E030000 		.4byte	.LVL54-.Ltext0
 3378 0254 0100     		.2byte	0x1
 3379 0256 58       		.byte	0x58
 3380 0257 2E030000 		.4byte	.LVL54-.Ltext0
 3381 025b 8A030000 		.4byte	.LVL55-.Ltext0
 3382 025f 0100     		.2byte	0x1
 3383 0261 51       		.byte	0x51
 3384 0262 8A030000 		.4byte	.LVL55-.Ltext0
 3385 0266 94040000 		.4byte	.LFE71-.Ltext0
 3386 026a 0100     		.2byte	0x1
 3387 026c 58       		.byte	0x58
 3388 026d 00000000 		.4byte	0
 3389 0271 00000000 		.4byte	0
 3390              	.LLST28:
 3391 0275 5C020000 		.4byte	.LVL45-.Ltext0
 3392 0279 78020000 		.4byte	.LVL46-.Ltext0
 3393 027d 0100     		.2byte	0x1
 3394 027f 52       		.byte	0x52
 3395 0280 78020000 		.4byte	.LVL46-.Ltext0
 3396 0284 7E020000 		.4byte	.LVL48-.Ltext0
 3397 0288 0100     		.2byte	0x1
 3398 028a 57       		.byte	0x57
 3399 028b 7E020000 		.4byte	.LVL48-.Ltext0
 3400 028f 82020000 		.4byte	.LVL49-.Ltext0
 3401 0293 0100     		.2byte	0x1
 3402 0295 52       		.byte	0x52
 3403 0296 82020000 		.4byte	.LVL49-.Ltext0
 3404 029a 94040000 		.4byte	.LFE71-.Ltext0
 3405 029e 0100     		.2byte	0x1
 3406 02a0 57       		.byte	0x57
 3407 02a1 00000000 		.4byte	0
 3408 02a5 00000000 		.4byte	0
 3409              	.LLST29:
 3410 02a9 BE020000 		.4byte	.LVL50-.Ltext0
 3411 02ad 2E030000 		.4byte	.LVL54-.Ltext0
 3412 02b1 0100     		.2byte	0x1
 3413 02b3 54       		.byte	0x54
ARM GAS  /tmp/cck4KHRF.s 			page 81


 3414 02b4 8A030000 		.4byte	.LVL55-.Ltext0
 3415 02b8 94040000 		.4byte	.LFE71-.Ltext0
 3416 02bc 0100     		.2byte	0x1
 3417 02be 54       		.byte	0x54
 3418 02bf 00000000 		.4byte	0
 3419 02c3 00000000 		.4byte	0
 3420              	.LLST30:
 3421 02c7 5C020000 		.4byte	.LVL45-.Ltext0
 3422 02cb C4020000 		.4byte	.LVL52-.Ltext0
 3423 02cf 0200     		.2byte	0x2
 3424 02d1 30       		.byte	0x30
 3425 02d2 9F       		.byte	0x9f
 3426 02d3 C4020000 		.4byte	.LVL52-.Ltext0
 3427 02d7 CC020000 		.4byte	.LVL53-.Ltext0
 3428 02db 0100     		.2byte	0x1
 3429 02dd 50       		.byte	0x50
 3430 02de CC020000 		.4byte	.LVL53-.Ltext0
 3431 02e2 2E030000 		.4byte	.LVL54-.Ltext0
 3432 02e6 0100     		.2byte	0x1
 3433 02e8 59       		.byte	0x59
 3434 02e9 2E030000 		.4byte	.LVL54-.Ltext0
 3435 02ed 8A030000 		.4byte	.LVL55-.Ltext0
 3436 02f1 0200     		.2byte	0x2
 3437 02f3 30       		.byte	0x30
 3438 02f4 9F       		.byte	0x9f
 3439 02f5 8A030000 		.4byte	.LVL55-.Ltext0
 3440 02f9 94040000 		.4byte	.LFE71-.Ltext0
 3441 02fd 0100     		.2byte	0x1
 3442 02ff 59       		.byte	0x59
 3443 0300 00000000 		.4byte	0
 3444 0304 00000000 		.4byte	0
 3445              	.LLST22:
 3446 0308 CC010000 		.4byte	.LFB70-.Ltext0
 3447 030c D2010000 		.4byte	.LCFI4-.Ltext0
 3448 0310 0200     		.2byte	0x2
 3449 0312 7D       		.byte	0x7d
 3450 0313 00       		.sleb128 0
 3451 0314 D2010000 		.4byte	.LCFI4-.Ltext0
 3452 0318 5C020000 		.4byte	.LFE70-.Ltext0
 3453 031c 0200     		.2byte	0x2
 3454 031e 7D       		.byte	0x7d
 3455 031f 08       		.sleb128 8
 3456 0320 00000000 		.4byte	0
 3457 0324 00000000 		.4byte	0
 3458              	.LLST23:
 3459 0328 CC010000 		.4byte	.LVL38-.Ltext0
 3460 032c DC010000 		.4byte	.LVL40-.Ltext0
 3461 0330 0100     		.2byte	0x1
 3462 0332 50       		.byte	0x50
 3463 0333 DC010000 		.4byte	.LVL40-.Ltext0
 3464 0337 DE010000 		.4byte	.LVL41-.Ltext0
 3465 033b 0400     		.2byte	0x4
 3466 033d F3       		.byte	0xf3
 3467 033e 01       		.uleb128 0x1
 3468 033f 50       		.byte	0x50
 3469 0340 9F       		.byte	0x9f
 3470 0341 DE010000 		.4byte	.LVL41-.Ltext0
ARM GAS  /tmp/cck4KHRF.s 			page 82


 3471 0345 31020000 		.4byte	.LVL42-1-.Ltext0
 3472 0349 0100     		.2byte	0x1
 3473 034b 50       		.byte	0x50
 3474 034c 31020000 		.4byte	.LVL42-1-.Ltext0
 3475 0350 36020000 		.4byte	.LVL43-.Ltext0
 3476 0354 0400     		.2byte	0x4
 3477 0356 F3       		.byte	0xf3
 3478 0357 01       		.uleb128 0x1
 3479 0358 50       		.byte	0x50
 3480 0359 9F       		.byte	0x9f
 3481 035a 36020000 		.4byte	.LVL43-.Ltext0
 3482 035e 52020000 		.4byte	.LVL44-.Ltext0
 3483 0362 0100     		.2byte	0x1
 3484 0364 50       		.byte	0x50
 3485 0365 52020000 		.4byte	.LVL44-.Ltext0
 3486 0369 5C020000 		.4byte	.LFE70-.Ltext0
 3487 036d 0400     		.2byte	0x4
 3488 036f F3       		.byte	0xf3
 3489 0370 01       		.uleb128 0x1
 3490 0371 50       		.byte	0x50
 3491 0372 9F       		.byte	0x9f
 3492 0373 00000000 		.4byte	0
 3493 0377 00000000 		.4byte	0
 3494              	.LLST24:
 3495 037b CC010000 		.4byte	.LVL38-.Ltext0
 3496 037f DA010000 		.4byte	.LVL39-.Ltext0
 3497 0383 0200     		.2byte	0x2
 3498 0385 30       		.byte	0x30
 3499 0386 9F       		.byte	0x9f
 3500 0387 DA010000 		.4byte	.LVL39-.Ltext0
 3501 038b DE010000 		.4byte	.LVL41-.Ltext0
 3502 038f 0200     		.2byte	0x2
 3503 0391 31       		.byte	0x31
 3504 0392 9F       		.byte	0x9f
 3505 0393 DE010000 		.4byte	.LVL41-.Ltext0
 3506 0397 52020000 		.4byte	.LVL44-.Ltext0
 3507 039b 0200     		.2byte	0x2
 3508 039d 30       		.byte	0x30
 3509 039e 9F       		.byte	0x9f
 3510 039f 52020000 		.4byte	.LVL44-.Ltext0
 3511 03a3 5C020000 		.4byte	.LFE70-.Ltext0
 3512 03a7 0100     		.2byte	0x1
 3513 03a9 50       		.byte	0x50
 3514 03aa 00000000 		.4byte	0
 3515 03ae 00000000 		.4byte	0
 3516              	.LLST21:
 3517 03b2 8A010000 		.4byte	.LVL34-.Ltext0
 3518 03b6 9E010000 		.4byte	.LVL35-.Ltext0
 3519 03ba 0100     		.2byte	0x1
 3520 03bc 50       		.byte	0x50
 3521 03bd 9E010000 		.4byte	.LVL35-.Ltext0
 3522 03c1 A0010000 		.4byte	.LVL36-.Ltext0
 3523 03c5 0400     		.2byte	0x4
 3524 03c7 F3       		.byte	0xf3
 3525 03c8 01       		.uleb128 0x1
 3526 03c9 50       		.byte	0x50
 3527 03ca 9F       		.byte	0x9f
ARM GAS  /tmp/cck4KHRF.s 			page 83


 3528 03cb A0010000 		.4byte	.LVL36-.Ltext0
 3529 03cf CA010000 		.4byte	.LVL37-.Ltext0
 3530 03d3 0100     		.2byte	0x1
 3531 03d5 50       		.byte	0x50
 3532 03d6 CA010000 		.4byte	.LVL37-.Ltext0
 3533 03da CC010000 		.4byte	.LFE69-.Ltext0
 3534 03de 0400     		.2byte	0x4
 3535 03e0 F3       		.byte	0xf3
 3536 03e1 01       		.uleb128 0x1
 3537 03e2 50       		.byte	0x50
 3538 03e3 9F       		.byte	0x9f
 3539 03e4 00000000 		.4byte	0
 3540 03e8 00000000 		.4byte	0
 3541              	.LLST13:
 3542 03ec 10010000 		.4byte	.LFB68-.Ltext0
 3543 03f0 12010000 		.4byte	.LCFI3-.Ltext0
 3544 03f4 0200     		.2byte	0x2
 3545 03f6 7D       		.byte	0x7d
 3546 03f7 00       		.sleb128 0
 3547 03f8 12010000 		.4byte	.LCFI3-.Ltext0
 3548 03fc 8A010000 		.4byte	.LFE68-.Ltext0
 3549 0400 0200     		.2byte	0x2
 3550 0402 7D       		.byte	0x7d
 3551 0403 14       		.sleb128 20
 3552 0404 00000000 		.4byte	0
 3553 0408 00000000 		.4byte	0
 3554              	.LLST14:
 3555 040c 10010000 		.4byte	.LVL23-.Ltext0
 3556 0410 6A010000 		.4byte	.LVL28-.Ltext0
 3557 0414 0100     		.2byte	0x1
 3558 0416 50       		.byte	0x50
 3559 0417 6A010000 		.4byte	.LVL28-.Ltext0
 3560 041b 72010000 		.4byte	.LVL29-.Ltext0
 3561 041f 0400     		.2byte	0x4
 3562 0421 F3       		.byte	0xf3
 3563 0422 01       		.uleb128 0x1
 3564 0423 50       		.byte	0x50
 3565 0424 9F       		.byte	0x9f
 3566 0425 72010000 		.4byte	.LVL29-.Ltext0
 3567 0429 88010000 		.4byte	.LVL33-.Ltext0
 3568 042d 0100     		.2byte	0x1
 3569 042f 50       		.byte	0x50
 3570 0430 88010000 		.4byte	.LVL33-.Ltext0
 3571 0434 8A010000 		.4byte	.LFE68-.Ltext0
 3572 0438 0400     		.2byte	0x4
 3573 043a F3       		.byte	0xf3
 3574 043b 01       		.uleb128 0x1
 3575 043c 50       		.byte	0x50
 3576 043d 9F       		.byte	0x9f
 3577 043e 00000000 		.4byte	0
 3578 0442 00000000 		.4byte	0
 3579              	.LLST15:
 3580 0446 10010000 		.4byte	.LVL23-.Ltext0
 3581 044a 4C010000 		.4byte	.LVL25-.Ltext0
 3582 044e 0100     		.2byte	0x1
 3583 0450 53       		.byte	0x53
 3584 0451 4C010000 		.4byte	.LVL25-.Ltext0
ARM GAS  /tmp/cck4KHRF.s 			page 84


 3585 0455 64010000 		.4byte	.LVL27-.Ltext0
 3586 0459 0200     		.2byte	0x2
 3587 045b 74       		.byte	0x74
 3588 045c 04       		.sleb128 4
 3589 045d 64010000 		.4byte	.LVL27-.Ltext0
 3590 0461 72010000 		.4byte	.LVL29-.Ltext0
 3591 0465 0400     		.2byte	0x4
 3592 0467 F3       		.byte	0xf3
 3593 0468 01       		.uleb128 0x1
 3594 0469 53       		.byte	0x53
 3595 046a 9F       		.byte	0x9f
 3596 046b 72010000 		.4byte	.LVL29-.Ltext0
 3597 046f 7A010000 		.4byte	.LVL30-.Ltext0
 3598 0473 0200     		.2byte	0x2
 3599 0475 74       		.byte	0x74
 3600 0476 04       		.sleb128 4
 3601 0477 7A010000 		.4byte	.LVL30-.Ltext0
 3602 047b 82010000 		.4byte	.LVL31-.Ltext0
 3603 047f 0400     		.2byte	0x4
 3604 0481 F3       		.byte	0xf3
 3605 0482 01       		.uleb128 0x1
 3606 0483 53       		.byte	0x53
 3607 0484 9F       		.byte	0x9f
 3608 0485 82010000 		.4byte	.LVL31-.Ltext0
 3609 0489 8A010000 		.4byte	.LFE68-.Ltext0
 3610 048d 0100     		.2byte	0x1
 3611 048f 53       		.byte	0x53
 3612 0490 00000000 		.4byte	0
 3613 0494 00000000 		.4byte	0
 3614              	.LLST16:
 3615 0498 10010000 		.4byte	.LVL23-.Ltext0
 3616 049c 86010000 		.4byte	.LVL32-.Ltext0
 3617 04a0 0200     		.2byte	0x2
 3618 04a2 30       		.byte	0x30
 3619 04a3 9F       		.byte	0x9f
 3620 04a4 00000000 		.4byte	0
 3621 04a8 00000000 		.4byte	0
 3622              	.LLST17:
 3623 04ac 42010000 		.4byte	.LVL24-.Ltext0
 3624 04b0 4C010000 		.4byte	.LVL25-.Ltext0
 3625 04b4 0100     		.2byte	0x1
 3626 04b6 53       		.byte	0x53
 3627 04b7 4C010000 		.4byte	.LVL25-.Ltext0
 3628 04bb 5C010000 		.4byte	.LVL26-.Ltext0
 3629 04bf 0200     		.2byte	0x2
 3630 04c1 74       		.byte	0x74
 3631 04c2 04       		.sleb128 4
 3632 04c3 00000000 		.4byte	0
 3633 04c7 00000000 		.4byte	0
 3634              	.LLST18:
 3635 04cb 42010000 		.4byte	.LVL24-.Ltext0
 3636 04cf 5C010000 		.4byte	.LVL26-.Ltext0
 3637 04d3 0100     		.2byte	0x1
 3638 04d5 52       		.byte	0x52
 3639 04d6 00000000 		.4byte	0
 3640 04da 00000000 		.4byte	0
 3641              	.LLST19:
ARM GAS  /tmp/cck4KHRF.s 			page 85


 3642 04de 42010000 		.4byte	.LVL24-.Ltext0
 3643 04e2 5C010000 		.4byte	.LVL26-.Ltext0
 3644 04e6 0100     		.2byte	0x1
 3645 04e8 51       		.byte	0x51
 3646 04e9 00000000 		.4byte	0
 3647 04ed 00000000 		.4byte	0
 3648              	.LLST20:
 3649 04f1 42010000 		.4byte	.LVL24-.Ltext0
 3650 04f5 5C010000 		.4byte	.LVL26-.Ltext0
 3651 04f9 0100     		.2byte	0x1
 3652 04fb 50       		.byte	0x50
 3653 04fc 00000000 		.4byte	0
 3654 0500 00000000 		.4byte	0
 3655              	.LLST5:
 3656 0504 B4000000 		.4byte	.LFB67-.Ltext0
 3657 0508 B6000000 		.4byte	.LCFI2-.Ltext0
 3658 050c 0200     		.2byte	0x2
 3659 050e 7D       		.byte	0x7d
 3660 050f 00       		.sleb128 0
 3661 0510 B6000000 		.4byte	.LCFI2-.Ltext0
 3662 0514 10010000 		.4byte	.LFE67-.Ltext0
 3663 0518 0200     		.2byte	0x2
 3664 051a 7D       		.byte	0x7d
 3665 051b 14       		.sleb128 20
 3666 051c 00000000 		.4byte	0
 3667 0520 00000000 		.4byte	0
 3668              	.LLST6:
 3669 0524 B4000000 		.4byte	.LVL14-.Ltext0
 3670 0528 F2000000 		.4byte	.LVL17-.Ltext0
 3671 052c 0100     		.2byte	0x1
 3672 052e 50       		.byte	0x50
 3673 052f F2000000 		.4byte	.LVL17-.Ltext0
 3674 0533 08010000 		.4byte	.LVL20-.Ltext0
 3675 0537 0400     		.2byte	0x4
 3676 0539 F3       		.byte	0xf3
 3677 053a 01       		.uleb128 0x1
 3678 053b 50       		.byte	0x50
 3679 053c 9F       		.byte	0x9f
 3680 053d 08010000 		.4byte	.LVL20-.Ltext0
 3681 0541 0E010000 		.4byte	.LVL22-.Ltext0
 3682 0545 0100     		.2byte	0x1
 3683 0547 50       		.byte	0x50
 3684 0548 0E010000 		.4byte	.LVL22-.Ltext0
 3685 054c 10010000 		.4byte	.LFE67-.Ltext0
 3686 0550 0400     		.2byte	0x4
 3687 0552 F3       		.byte	0xf3
 3688 0553 01       		.uleb128 0x1
 3689 0554 50       		.byte	0x50
 3690 0555 9F       		.byte	0x9f
 3691 0556 00000000 		.4byte	0
 3692 055a 00000000 		.4byte	0
 3693              	.LLST7:
 3694 055e B4000000 		.4byte	.LVL14-.Ltext0
 3695 0562 F0000000 		.4byte	.LVL16-.Ltext0
 3696 0566 0100     		.2byte	0x1
 3697 0568 53       		.byte	0x53
 3698 0569 F0000000 		.4byte	.LVL16-.Ltext0
ARM GAS  /tmp/cck4KHRF.s 			page 86


 3699 056d 06010000 		.4byte	.LVL19-.Ltext0
 3700 0571 0200     		.2byte	0x2
 3701 0573 74       		.byte	0x74
 3702 0574 04       		.sleb128 4
 3703 0575 06010000 		.4byte	.LVL19-.Ltext0
 3704 0579 08010000 		.4byte	.LVL20-.Ltext0
 3705 057d 0400     		.2byte	0x4
 3706 057f F3       		.byte	0xf3
 3707 0580 01       		.uleb128 0x1
 3708 0581 53       		.byte	0x53
 3709 0582 9F       		.byte	0x9f
 3710 0583 08010000 		.4byte	.LVL20-.Ltext0
 3711 0587 10010000 		.4byte	.LFE67-.Ltext0
 3712 058b 0100     		.2byte	0x1
 3713 058d 53       		.byte	0x53
 3714 058e 00000000 		.4byte	0
 3715 0592 00000000 		.4byte	0
 3716              	.LLST8:
 3717 0596 B4000000 		.4byte	.LVL14-.Ltext0
 3718 059a 0C010000 		.4byte	.LVL21-.Ltext0
 3719 059e 0200     		.2byte	0x2
 3720 05a0 30       		.byte	0x30
 3721 05a1 9F       		.byte	0x9f
 3722 05a2 00000000 		.4byte	0
 3723 05a6 00000000 		.4byte	0
 3724              	.LLST9:
 3725 05aa E6000000 		.4byte	.LVL15-.Ltext0
 3726 05ae F0000000 		.4byte	.LVL16-.Ltext0
 3727 05b2 0100     		.2byte	0x1
 3728 05b4 53       		.byte	0x53
 3729 05b5 F0000000 		.4byte	.LVL16-.Ltext0
 3730 05b9 FE000000 		.4byte	.LVL18-.Ltext0
 3731 05bd 0200     		.2byte	0x2
 3732 05bf 74       		.byte	0x74
 3733 05c0 04       		.sleb128 4
 3734 05c1 00000000 		.4byte	0
 3735 05c5 00000000 		.4byte	0
 3736              	.LLST10:
 3737 05c9 E6000000 		.4byte	.LVL15-.Ltext0
 3738 05cd FE000000 		.4byte	.LVL18-.Ltext0
 3739 05d1 0100     		.2byte	0x1
 3740 05d3 52       		.byte	0x52
 3741 05d4 00000000 		.4byte	0
 3742 05d8 00000000 		.4byte	0
 3743              	.LLST11:
 3744 05dc E6000000 		.4byte	.LVL15-.Ltext0
 3745 05e0 FE000000 		.4byte	.LVL18-.Ltext0
 3746 05e4 0100     		.2byte	0x1
 3747 05e6 51       		.byte	0x51
 3748 05e7 00000000 		.4byte	0
 3749 05eb 00000000 		.4byte	0
 3750              	.LLST12:
 3751 05ef E6000000 		.4byte	.LVL15-.Ltext0
 3752 05f3 F2000000 		.4byte	.LVL17-.Ltext0
 3753 05f7 0100     		.2byte	0x1
 3754 05f9 50       		.byte	0x50
 3755 05fa F2000000 		.4byte	.LVL17-.Ltext0
ARM GAS  /tmp/cck4KHRF.s 			page 87


 3756 05fe FE000000 		.4byte	.LVL18-.Ltext0
 3757 0602 0400     		.2byte	0x4
 3758 0604 F3       		.byte	0xf3
 3759 0605 01       		.uleb128 0x1
 3760 0606 50       		.byte	0x50
 3761 0607 9F       		.byte	0x9f
 3762 0608 00000000 		.4byte	0
 3763 060c 00000000 		.4byte	0
 3764              	.LLST3:
 3765 0610 60000000 		.4byte	.LFB66-.Ltext0
 3766 0614 62000000 		.4byte	.LCFI1-.Ltext0
 3767 0618 0200     		.2byte	0x2
 3768 061a 7D       		.byte	0x7d
 3769 061b 00       		.sleb128 0
 3770 061c 62000000 		.4byte	.LCFI1-.Ltext0
 3771 0620 B4000000 		.4byte	.LFE66-.Ltext0
 3772 0624 0200     		.2byte	0x2
 3773 0626 7D       		.byte	0x7d
 3774 0627 08       		.sleb128 8
 3775 0628 00000000 		.4byte	0
 3776 062c 00000000 		.4byte	0
 3777              	.LLST4:
 3778 0630 60000000 		.4byte	.LVL10-.Ltext0
 3779 0634 A6000000 		.4byte	.LVL11-.Ltext0
 3780 0638 0100     		.2byte	0x1
 3781 063a 50       		.byte	0x50
 3782 063b A6000000 		.4byte	.LVL11-.Ltext0
 3783 063f A8000000 		.4byte	.LVL12-.Ltext0
 3784 0643 0400     		.2byte	0x4
 3785 0645 F3       		.byte	0xf3
 3786 0646 01       		.uleb128 0x1
 3787 0647 50       		.byte	0x50
 3788 0648 9F       		.byte	0x9f
 3789 0649 A8000000 		.4byte	.LVL12-.Ltext0
 3790 064d AA000000 		.4byte	.LVL13-.Ltext0
 3791 0651 0100     		.2byte	0x1
 3792 0653 50       		.byte	0x50
 3793 0654 AA000000 		.4byte	.LVL13-.Ltext0
 3794 0658 B4000000 		.4byte	.LFE66-.Ltext0
 3795 065c 0400     		.2byte	0x4
 3796 065e F3       		.byte	0xf3
 3797 065f 01       		.uleb128 0x1
 3798 0660 50       		.byte	0x50
 3799 0661 9F       		.byte	0x9f
 3800 0662 00000000 		.4byte	0
 3801 0666 00000000 		.4byte	0
 3802              	.LLST0:
 3803 066a 00000000 		.4byte	.LFB65-.Ltext0
 3804 066e 02000000 		.4byte	.LCFI0-.Ltext0
 3805 0672 0200     		.2byte	0x2
 3806 0674 7D       		.byte	0x7d
 3807 0675 00       		.sleb128 0
 3808 0676 02000000 		.4byte	.LCFI0-.Ltext0
 3809 067a 60000000 		.4byte	.LFE65-.Ltext0
 3810 067e 0200     		.2byte	0x2
 3811 0680 7D       		.byte	0x7d
 3812 0681 08       		.sleb128 8
ARM GAS  /tmp/cck4KHRF.s 			page 88


 3813 0682 00000000 		.4byte	0
 3814 0686 00000000 		.4byte	0
 3815              	.LLST1:
 3816 068a 00000000 		.4byte	.LVL0-.Ltext0
 3817 068e 50000000 		.4byte	.LVL7-.Ltext0
 3818 0692 0100     		.2byte	0x1
 3819 0694 50       		.byte	0x50
 3820 0695 50000000 		.4byte	.LVL7-.Ltext0
 3821 0699 52000000 		.4byte	.LVL8-.Ltext0
 3822 069d 0400     		.2byte	0x4
 3823 069f F3       		.byte	0xf3
 3824 06a0 01       		.uleb128 0x1
 3825 06a1 50       		.byte	0x50
 3826 06a2 9F       		.byte	0x9f
 3827 06a3 52000000 		.4byte	.LVL8-.Ltext0
 3828 06a7 54000000 		.4byte	.LVL9-.Ltext0
 3829 06ab 0100     		.2byte	0x1
 3830 06ad 50       		.byte	0x50
 3831 06ae 54000000 		.4byte	.LVL9-.Ltext0
 3832 06b2 60000000 		.4byte	.LFE65-.Ltext0
 3833 06b6 0400     		.2byte	0x4
 3834 06b8 F3       		.byte	0xf3
 3835 06b9 01       		.uleb128 0x1
 3836 06ba 50       		.byte	0x50
 3837 06bb 9F       		.byte	0x9f
 3838 06bc 00000000 		.4byte	0
 3839 06c0 00000000 		.4byte	0
 3840              	.LLST2:
 3841 06c4 00000000 		.4byte	.LVL0-.Ltext0
 3842 06c8 1A000000 		.4byte	.LVL1-.Ltext0
 3843 06cc 0200     		.2byte	0x2
 3844 06ce 30       		.byte	0x30
 3845 06cf 9F       		.byte	0x9f
 3846 06d0 1A000000 		.4byte	.LVL1-.Ltext0
 3847 06d4 22000000 		.4byte	.LVL2-.Ltext0
 3848 06d8 0100     		.2byte	0x1
 3849 06da 52       		.byte	0x52
 3850 06db 2A000000 		.4byte	.LVL3-.Ltext0
 3851 06df 3E000000 		.4byte	.LVL4-.Ltext0
 3852 06e3 0100     		.2byte	0x1
 3853 06e5 52       		.byte	0x52
 3854 06e6 3E000000 		.4byte	.LVL4-.Ltext0
 3855 06ea 44000000 		.4byte	.LVL5-.Ltext0
 3856 06ee 0100     		.2byte	0x1
 3857 06f0 53       		.byte	0x53
 3858 06f1 44000000 		.4byte	.LVL5-.Ltext0
 3859 06f5 4A000000 		.4byte	.LVL6-.Ltext0
 3860 06f9 0200     		.2byte	0x2
 3861 06fb 71       		.byte	0x71
 3862 06fc 00       		.sleb128 0
 3863 06fd 52000000 		.4byte	.LVL8-.Ltext0
 3864 0701 60000000 		.4byte	.LFE65-.Ltext0
 3865 0705 0200     		.2byte	0x2
 3866 0707 30       		.byte	0x30
 3867 0708 9F       		.byte	0x9f
 3868 0709 00000000 		.4byte	0
 3869 070d 00000000 		.4byte	0
ARM GAS  /tmp/cck4KHRF.s 			page 89


 3870              		.section	.debug_aranges,"",%progbits
 3871 0000 1C000000 		.4byte	0x1c
 3872 0004 0200     		.2byte	0x2
 3873 0006 00000000 		.4byte	.Ldebug_info0
 3874 000a 04       		.byte	0x4
 3875 000b 00       		.byte	0
 3876 000c 0000     		.2byte	0
 3877 000e 0000     		.2byte	0
 3878 0010 00000000 		.4byte	.Ltext0
 3879 0014 5A060000 		.4byte	.Letext0-.Ltext0
 3880 0018 00000000 		.4byte	0
 3881 001c 00000000 		.4byte	0
 3882              		.section	.debug_ranges,"",%progbits
 3883              	.Ldebug_ranges0:
 3884 0000 DE000000 		.4byte	.LBB4-.Ltext0
 3885 0004 E0000000 		.4byte	.LBE4-.Ltext0
 3886 0008 E6000000 		.4byte	.LBB8-.Ltext0
 3887 000c F0000000 		.4byte	.LBE8-.Ltext0
 3888 0010 F2000000 		.4byte	.LBB9-.Ltext0
 3889 0014 FE000000 		.4byte	.LBE9-.Ltext0
 3890 0018 00000000 		.4byte	0
 3891 001c 00000000 		.4byte	0
 3892 0020 3A010000 		.4byte	.LBB12-.Ltext0
 3893 0024 3C010000 		.4byte	.LBE12-.Ltext0
 3894 0028 42010000 		.4byte	.LBB16-.Ltext0
 3895 002c 50010000 		.4byte	.LBE16-.Ltext0
 3896 0030 52010000 		.4byte	.LBB17-.Ltext0
 3897 0034 5C010000 		.4byte	.LBE17-.Ltext0
 3898 0038 00000000 		.4byte	0
 3899 003c 00000000 		.4byte	0
 3900              		.section	.debug_line,"",%progbits
 3901              	.Ldebug_line0:
 3902 0000 7D040000 		.section	.debug_str,"MS",%progbits,1
 3902      02003501 
 3902      00000201 
 3902      FB0E0D00 
 3902      01010101 
 3903              	.LASF54:
 3904 0000 48414C5F 		.ascii	"HAL_DMA_XFER_ABORT_CB_ID\000"
 3904      444D415F 
 3904      58464552 
 3904      5F41424F 
 3904      52545F43 
 3905              	.LASF36:
 3906 0019 44697265 		.ascii	"Direction\000"
 3906      6374696F 
 3906      6E00
 3907              	.LASF97:
 3908 0023 48414C5F 		.ascii	"HAL_DMA_Start_IT\000"
 3908      444D415F 
 3908      53746172 
 3908      745F4954 
 3908      00
 3909              	.LASF33:
 3910 0034 48414C5F 		.ascii	"HAL_UNLOCKED\000"
 3910      554E4C4F 
 3910      434B4544 
ARM GAS  /tmp/cck4KHRF.s 			page 90


 3910      00
 3911              	.LASF31:
 3912 0041 48414C5F 		.ascii	"HAL_TIMEOUT\000"
 3912      54494D45 
 3912      4F555400 
 3913              	.LASF50:
 3914 004d 48414C5F 		.ascii	"HAL_DMA_HALF_TRANSFER\000"
 3914      444D415F 
 3914      48414C46 
 3914      5F545241 
 3914      4E534645 
 3915              	.LASF17:
 3916 0063 53797374 		.ascii	"SystemCoreClock\000"
 3916      656D436F 
 3916      7265436C 
 3916      6F636B00 
 3917              	.LASF82:
 3918 0073 48414C5F 		.ascii	"HAL_DMA_GetState\000"
 3918      444D415F 
 3918      47657453 
 3918      74617465 
 3918      00
 3919              	.LASF42:
 3920 0084 5072696F 		.ascii	"Priority\000"
 3920      72697479 
 3920      00
 3921              	.LASF34:
 3922 008d 48414C5F 		.ascii	"HAL_LOCKED\000"
 3922      4C4F434B 
 3922      454400
 3923              	.LASF65:
 3924 0098 58666572 		.ascii	"XferAbortCallback\000"
 3924      41626F72 
 3924      7443616C 
 3924      6C626163 
 3924      6B00
 3925              	.LASF23:
 3926 00aa 444D415F 		.ascii	"DMA_Channel_TypeDef\000"
 3926      4368616E 
 3926      6E656C5F 
 3926      54797065 
 3926      44656600 
 3927              	.LASF15:
 3928 00be 73697A65 		.ascii	"sizetype\000"
 3928      74797065 
 3928      00
 3929              	.LASF100:
 3930 00c7 48414C5F 		.ascii	"HAL_DMA_Init\000"
 3930      444D415F 
 3930      496E6974 
 3930      00
 3931              	.LASF88:
 3932 00d4 666C6167 		.ascii	"flag_it\000"
 3932      5F697400 
 3933              	.LASF85:
 3934 00dc 48414C5F 		.ascii	"HAL_DMA_RegisterCallback\000"
 3934      444D415F 
ARM GAS  /tmp/cck4KHRF.s 			page 91


 3934      52656769 
 3934      73746572 
 3934      43616C6C 
 3935              	.LASF44:
 3936 00f5 48414C5F 		.ascii	"HAL_DMA_STATE_RESET\000"
 3936      444D415F 
 3936      53544154 
 3936      455F5245 
 3936      53455400 
 3937              	.LASF69:
 3938 0109 444D415F 		.ascii	"DMA_HandleTypeDef\000"
 3938      48616E64 
 3938      6C655479 
 3938      70654465 
 3938      6600
 3939              	.LASF7:
 3940 011b 5F5F7569 		.ascii	"__uint32_t\000"
 3940      6E743332 
 3940      5F7400
 3941              	.LASF107:
 3942 0126 48414C5F 		.ascii	"HAL_GetTick\000"
 3942      47657454 
 3942      69636B00 
 3943              	.LASF67:
 3944 0132 446D6142 		.ascii	"DmaBaseAddress\000"
 3944      61736541 
 3944      64647265 
 3944      737300
 3945              	.LASF25:
 3946 0141 444D415F 		.ascii	"DMA_TypeDef\000"
 3946      54797065 
 3946      44656600 
 3947              	.LASF75:
 3948 014d 75775469 		.ascii	"uwTickPrio\000"
 3948      636B5072 
 3948      696F00
 3949              	.LASF101:
 3950 0158 474E5520 		.ascii	"GNU C11 6.3.1 20170620 -mcpu=cortex-m3 -mthumb -g -"
 3950      43313120 
 3950      362E332E 
 3950      31203230 
 3950      31373036 
 3951 018b 67647761 		.ascii	"gdwarf-2 -Os -fomit-frame-pointer\000"
 3951      72662D32 
 3951      202D4F73 
 3951      202D666F 
 3951      6D69742D 
 3952              	.LASF28:
 3953 01ad 48414C5F 		.ascii	"HAL_OK\000"
 3953      4F4B00
 3954              	.LASF48:
 3955 01b4 48414C5F 		.ascii	"HAL_DMA_StateTypeDef\000"
 3955      444D415F 
 3955      53746174 
 3955      65547970 
 3955      65446566 
 3956              	.LASF46:
ARM GAS  /tmp/cck4KHRF.s 			page 92


 3957 01c9 48414C5F 		.ascii	"HAL_DMA_STATE_BUSY\000"
 3957      444D415F 
 3957      53544154 
 3957      455F4255 
 3957      535900
 3958              	.LASF104:
 3959 01dc 5F5F444D 		.ascii	"__DMA_HandleTypeDef\000"
 3959      415F4861 
 3959      6E646C65 
 3959      54797065 
 3959      44656600 
 3960              	.LASF12:
 3961 01f0 75696E74 		.ascii	"uint8_t\000"
 3961      385F7400 
 3962              	.LASF30:
 3963 01f8 48414C5F 		.ascii	"HAL_BUSY\000"
 3963      42555359 
 3963      00
 3964              	.LASF98:
 3965 0201 48414C5F 		.ascii	"HAL_DMA_Start\000"
 3965      444D415F 
 3965      53746172 
 3965      7400
 3966              	.LASF2:
 3967 020f 73686F72 		.ascii	"short int\000"
 3967      7420696E 
 3967      7400
 3968              	.LASF27:
 3969 0219 6C6F6E67 		.ascii	"long double\000"
 3969      20646F75 
 3969      626C6500 
 3970              	.LASF93:
 3971 0225 74656D70 		.ascii	"temp\000"
 3971      00
 3972              	.LASF9:
 3973 022a 6C6F6E67 		.ascii	"long long int\000"
 3973      206C6F6E 
 3973      6720696E 
 3973      7400
 3974              	.LASF10:
 3975 0238 6C6F6E67 		.ascii	"long long unsigned int\000"
 3975      206C6F6E 
 3975      6720756E 
 3975      7369676E 
 3975      65642069 
 3976              	.LASF60:
 3977 024f 53746174 		.ascii	"State\000"
 3977      6500
 3978              	.LASF58:
 3979 0255 496E6974 		.ascii	"Init\000"
 3979      00
 3980              	.LASF6:
 3981 025a 6C6F6E67 		.ascii	"long int\000"
 3981      20696E74 
 3981      00
 3982              	.LASF37:
 3983 0263 50657269 		.ascii	"PeriphInc\000"
ARM GAS  /tmp/cck4KHRF.s 			page 93


 3983      7068496E 
 3983      6300
 3984              	.LASF59:
 3985 026d 4C6F636B 		.ascii	"Lock\000"
 3985      00
 3986              	.LASF81:
 3987 0272 48414C5F 		.ascii	"HAL_DMA_GetError\000"
 3987      444D415F 
 3987      47657445 
 3987      72726F72 
 3987      00
 3988              	.LASF102:
 3989 0283 7372632F 		.ascii	"src/stm32f1xx_hal_dma.c\000"
 3989      73746D33 
 3989      32663178 
 3989      785F6861 
 3989      6C5F646D 
 3990              	.LASF4:
 3991 029b 5F5F7569 		.ascii	"__uint8_t\000"
 3991      6E74385F 
 3991      7400
 3992              	.LASF94:
 3993 02a5 7469636B 		.ascii	"tickstart\000"
 3993      73746172 
 3993      7400
 3994              	.LASF51:
 3995 02af 48414C5F 		.ascii	"HAL_DMA_XFER_CPLT_CB_ID\000"
 3995      444D415F 
 3995      58464552 
 3995      5F43504C 
 3995      545F4342 
 3996              	.LASF52:
 3997 02c7 48414C5F 		.ascii	"HAL_DMA_XFER_HALFCPLT_CB_ID\000"
 3997      444D415F 
 3997      58464552 
 3997      5F48414C 
 3997      4643504C 
 3998              	.LASF32:
 3999 02e3 48414C5F 		.ascii	"HAL_StatusTypeDef\000"
 3999      53746174 
 3999      75735479 
 3999      70654465 
 3999      6600
 4000              	.LASF47:
 4001 02f5 48414C5F 		.ascii	"HAL_DMA_STATE_TIMEOUT\000"
 4001      444D415F 
 4001      53544154 
 4001      455F5449 
 4001      4D454F55 
 4002              	.LASF21:
 4003 030b 43504152 		.ascii	"CPAR\000"
 4003      00
 4004              	.LASF95:
 4005 0310 48414C5F 		.ascii	"HAL_DMA_Abort_IT\000"
 4005      444D415F 
 4005      41626F72 
 4005      745F4954 
ARM GAS  /tmp/cck4KHRF.s 			page 94


 4005      00
 4006              	.LASF43:
 4007 0321 444D415F 		.ascii	"DMA_InitTypeDef\000"
 4007      496E6974 
 4007      54797065 
 4007      44656600 
 4008              	.LASF61:
 4009 0331 50617265 		.ascii	"Parent\000"
 4009      6E7400
 4010              	.LASF29:
 4011 0338 48414C5F 		.ascii	"HAL_ERROR\000"
 4011      4552524F 
 4011      5200
 4012              	.LASF1:
 4013 0342 756E7369 		.ascii	"unsigned char\000"
 4013      676E6564 
 4013      20636861 
 4013      7200
 4014              	.LASF99:
 4015 0350 48414C5F 		.ascii	"HAL_DMA_DeInit\000"
 4015      444D415F 
 4015      4465496E 
 4015      697400
 4016              	.LASF19:
 4017 035f 41504250 		.ascii	"APBPrescTable\000"
 4017      72657363 
 4017      5461626C 
 4017      6500
 4018              	.LASF0:
 4019 036d 7369676E 		.ascii	"signed char\000"
 4019      65642063 
 4019      68617200 
 4020              	.LASF53:
 4021 0379 48414C5F 		.ascii	"HAL_DMA_XFER_ERROR_CB_ID\000"
 4021      444D415F 
 4021      58464552 
 4021      5F455252 
 4021      4F525F43 
 4022              	.LASF77:
 4023 0392 68646D61 		.ascii	"hdma\000"
 4023      00
 4024              	.LASF14:
 4025 0397 75696E74 		.ascii	"uint32_t\000"
 4025      33325F74 
 4025      00
 4026              	.LASF76:
 4027 03a0 75775469 		.ascii	"uwTickFreq\000"
 4027      636B4672 
 4027      657100
 4028              	.LASF105:
 4029 03ab 444D415F 		.ascii	"DMA_SetConfig\000"
 4029      53657443 
 4029      6F6E6669 
 4029      6700
 4030              	.LASF57:
 4031 03b9 496E7374 		.ascii	"Instance\000"
 4031      616E6365 
ARM GAS  /tmp/cck4KHRF.s 			page 95


 4031      00
 4032              	.LASF62:
 4033 03c2 58666572 		.ascii	"XferCpltCallback\000"
 4033      43706C74 
 4033      43616C6C 
 4033      6261636B 
 4033      00
 4034              	.LASF72:
 4035 03d3 48414C5F 		.ascii	"HAL_TICK_FREQ_1KHZ\000"
 4035      5449434B 
 4035      5F465245 
 4035      515F314B 
 4035      485A00
 4036              	.LASF49:
 4037 03e6 48414C5F 		.ascii	"HAL_DMA_FULL_TRANSFER\000"
 4037      444D415F 
 4037      46554C4C 
 4037      5F545241 
 4037      4E534645 
 4038              	.LASF87:
 4039 03fc 73746174 		.ascii	"status\000"
 4039      757300
 4040              	.LASF3:
 4041 0403 73686F72 		.ascii	"short unsigned int\000"
 4041      7420756E 
 4041      7369676E 
 4041      65642069 
 4041      6E7400
 4042              	.LASF92:
 4043 0416 54696D65 		.ascii	"Timeout\000"
 4043      6F757400 
 4044              	.LASF64:
 4045 041e 58666572 		.ascii	"XferErrorCallback\000"
 4045      4572726F 
 4045      7243616C 
 4045      6C626163 
 4045      6B00
 4046              	.LASF20:
 4047 0430 434E4454 		.ascii	"CNDTR\000"
 4047      5200
 4048              	.LASF56:
 4049 0436 48414C5F 		.ascii	"HAL_DMA_CallbackIDTypeDef\000"
 4049      444D415F 
 4049      43616C6C 
 4049      6261636B 
 4049      49445479 
 4050              	.LASF13:
 4051 0450 696E7433 		.ascii	"int32_t\000"
 4051      325F7400 
 4052              	.LASF91:
 4053 0458 436F6D70 		.ascii	"CompleteLevel\000"
 4053      6C657465 
 4053      4C657665 
 4053      6C00
 4054              	.LASF96:
 4055 0466 48414C5F 		.ascii	"HAL_DMA_Abort\000"
 4055      444D415F 
ARM GAS  /tmp/cck4KHRF.s 			page 96


 4055      41626F72 
 4055      7400
 4056              	.LASF24:
 4057 0474 49464352 		.ascii	"IFCR\000"
 4057      00
 4058              	.LASF71:
 4059 0479 48414C5F 		.ascii	"HAL_TICK_FREQ_100HZ\000"
 4059      5449434B 
 4059      5F465245 
 4059      515F3130 
 4059      30485A00 
 4060              	.LASF70:
 4061 048d 48414C5F 		.ascii	"HAL_TICK_FREQ_10HZ\000"
 4061      5449434B 
 4061      5F465245 
 4061      515F3130 
 4061      485A00
 4062              	.LASF79:
 4063 04a0 44737441 		.ascii	"DstAddress\000"
 4063      64647265 
 4063      737300
 4064              	.LASF84:
 4065 04ab 43616C6C 		.ascii	"CallbackID\000"
 4065      6261636B 
 4065      494400
 4066              	.LASF18:
 4067 04b6 41484250 		.ascii	"AHBPrescTable\000"
 4067      72657363 
 4067      5461626C 
 4067      6500
 4068              	.LASF83:
 4069 04c4 48414C5F 		.ascii	"HAL_DMA_UnRegisterCallback\000"
 4069      444D415F 
 4069      556E5265 
 4069      67697374 
 4069      65724361 
 4070              	.LASF106:
 4071 04df 48414C5F 		.ascii	"HAL_DMA_IRQHandler\000"
 4071      444D415F 
 4071      49525148 
 4071      616E646C 
 4071      657200
 4072              	.LASF8:
 4073 04f2 6C6F6E67 		.ascii	"long unsigned int\000"
 4073      20756E73 
 4073      69676E65 
 4073      6420696E 
 4073      7400
 4074              	.LASF38:
 4075 0504 4D656D49 		.ascii	"MemInc\000"
 4075      6E6300
 4076              	.LASF55:
 4077 050b 48414C5F 		.ascii	"HAL_DMA_XFER_ALL_CB_ID\000"
 4077      444D415F 
 4077      58464552 
 4077      5F414C4C 
 4077      5F43425F 
ARM GAS  /tmp/cck4KHRF.s 			page 97


 4078              	.LASF74:
 4079 0522 48414C5F 		.ascii	"HAL_TickFreqTypeDef\000"
 4079      5469636B 
 4079      46726571 
 4079      54797065 
 4079      44656600 
 4080              	.LASF68:
 4081 0536 4368616E 		.ascii	"ChannelIndex\000"
 4081      6E656C49 
 4081      6E646578 
 4081      00
 4082              	.LASF22:
 4083 0543 434D4152 		.ascii	"CMAR\000"
 4083      00
 4084              	.LASF40:
 4085 0548 4D656D44 		.ascii	"MemDataAlignment\000"
 4085      61746141 
 4085      6C69676E 
 4085      6D656E74 
 4085      00
 4086              	.LASF5:
 4087 0559 5F5F696E 		.ascii	"__int32_t\000"
 4087      7433325F 
 4087      7400
 4088              	.LASF26:
 4089 0563 52455345 		.ascii	"RESET\000"
 4089      5400
 4090              	.LASF78:
 4091 0569 53726341 		.ascii	"SrcAddress\000"
 4091      64647265 
 4091      737300
 4092              	.LASF39:
 4093 0574 50657269 		.ascii	"PeriphDataAlignment\000"
 4093      70684461 
 4093      7461416C 
 4093      69676E6D 
 4093      656E7400 
 4094              	.LASF41:
 4095 0588 4D6F6465 		.ascii	"Mode\000"
 4095      00
 4096              	.LASF80:
 4097 058d 44617461 		.ascii	"DataLength\000"
 4097      4C656E67 
 4097      746800
 4098              	.LASF73:
 4099 0598 48414C5F 		.ascii	"HAL_TICK_FREQ_DEFAULT\000"
 4099      5449434B 
 4099      5F465245 
 4099      515F4445 
 4099      4641554C 
 4100              	.LASF16:
 4101 05ae 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4101      52784275 
 4101      66666572 
 4101      00
 4102              	.LASF11:
 4103 05bb 756E7369 		.ascii	"unsigned int\000"
ARM GAS  /tmp/cck4KHRF.s 			page 98


 4103      676E6564 
 4103      20696E74 
 4103      00
 4104              	.LASF86:
 4105 05c8 7043616C 		.ascii	"pCallback\000"
 4105      6C626163 
 4105      6B00
 4106              	.LASF63:
 4107 05d2 58666572 		.ascii	"XferHalfCpltCallback\000"
 4107      48616C66 
 4107      43706C74 
 4107      43616C6C 
 4107      6261636B 
 4108              	.LASF103:
 4109 05e7 2F686F6D 		.ascii	"/home/berndoj/git/stm32tctst/lib/stm32f1hal\000"
 4109      652F6265 
 4109      726E646F 
 4109      6A2F6769 
 4109      742F7374 
 4110              	.LASF35:
 4111 0613 48414C5F 		.ascii	"HAL_LockTypeDef\000"
 4111      4C6F636B 
 4111      54797065 
 4111      44656600 
 4112              	.LASF66:
 4113 0623 4572726F 		.ascii	"ErrorCode\000"
 4113      72436F64 
 4113      6500
 4114              	.LASF45:
 4115 062d 48414C5F 		.ascii	"HAL_DMA_STATE_READY\000"
 4115      444D415F 
 4115      53544154 
 4115      455F5245 
 4115      41445900 
 4116              	.LASF89:
 4117 0641 736F7572 		.ascii	"source_it\000"
 4117      63655F69 
 4117      7400
 4118              	.LASF90:
 4119 064b 48414C5F 		.ascii	"HAL_DMA_PollForTransfer\000"
 4119      444D415F 
 4119      506F6C6C 
 4119      466F7254 
 4119      72616E73 
 4120              		.ident	"GCC: (15:6.3.1+svn253039-1build1) 6.3.1 20170620"
ARM GAS  /tmp/cck4KHRF.s 			page 99


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_dma.c
     /tmp/cck4KHRF.s:69     .text:0000000000000000 $t
     /tmp/cck4KHRF.s:76     .text:0000000000000000 HAL_DMA_Init
     /tmp/cck4KHRF.s:164    .text:0000000000000058 $d
     /tmp/cck4KHRF.s:169    .text:0000000000000060 $t
     /tmp/cck4KHRF.s:176    .text:0000000000000060 HAL_DMA_DeInit
     /tmp/cck4KHRF.s:254    .text:00000000000000ac $d
     /tmp/cck4KHRF.s:259    .text:00000000000000b4 $t
     /tmp/cck4KHRF.s:266    .text:00000000000000b4 HAL_DMA_Start
     /tmp/cck4KHRF.s:373    .text:0000000000000110 HAL_DMA_Start_IT
     /tmp/cck4KHRF.s:502    .text:000000000000018a HAL_DMA_Abort
     /tmp/cck4KHRF.s:564    .text:00000000000001cc HAL_DMA_Abort_IT
     /tmp/cck4KHRF.s:675    .text:0000000000000254 $d
     /tmp/cck4KHRF.s:680    .text:000000000000025c $t
     /tmp/cck4KHRF.s:687    .text:000000000000025c HAL_DMA_PollForTransfer
     /tmp/cck4KHRF.s:1046   .text:0000000000000478 $d
     /tmp/cck4KHRF.s:1056   .text:0000000000000494 $t
     /tmp/cck4KHRF.s:1063   .text:0000000000000494 HAL_DMA_IRQHandler
     /tmp/cck4KHRF.s:1289   .text:00000000000005b4 $d
     /tmp/cck4KHRF.s:1294   .text:00000000000005bc $t
     /tmp/cck4KHRF.s:1301   .text:00000000000005bc HAL_DMA_RegisterCallback
     /tmp/cck4KHRF.s:1335   .text:00000000000005de $d
     /tmp/cck4KHRF.s:1339   .text:00000000000005e2 $t
     /tmp/cck4KHRF.s:1387   .text:0000000000000602 HAL_DMA_UnRegisterCallback
     /tmp/cck4KHRF.s:1418   .text:0000000000000624 $d
     /tmp/cck4KHRF.s:1478   .text:0000000000000650 HAL_DMA_GetState
     /tmp/cck4KHRF.s:1500   .text:0000000000000656 HAL_DMA_GetError
                     .debug_frame:0000000000000010 $d
     /tmp/cck4KHRF.s:1423   .text:0000000000000629 $d
     /tmp/cck4KHRF.s:1423   .text:000000000000062a $t

UNDEFINED SYMBOLS
HAL_GetTick
