ARM GAS  /tmp/cc006r8j.s 			page 1


   1              	# 1 "src/startup_stm32f103x6.s"
   1              	/**
   1              	...
   0              	
   0              	
   2              	  *************** (C) COPYRIGHT 2017 STMicroelectronics ************************
   3              	  * @file      startup_stm32f103x6.s
   4              	  * @author    MCD Application Team
   5              	  * @brief     STM32F103x6 Devices vector table for Atollic toolchain.
   6              	  *            This module performs:
   7              	  *                - Set the initial SP
   8              	  *                - Set the initial PC == Reset_Handler,
   9              	  *                - Set the vector table entries with the exceptions ISR address
  10              	  *                - Configure the clock system   
  11              	  *                - Branches to main in the C library (which eventually
  12              	  *                  calls main()).
  13              	  *            After Reset the Cortex-M3 processor is in Thread mode,
  14              	  *            priority is Privileged, and the Stack is set to Main.
  15              	  ******************************************************************************
  16              	  * @attention
  17              	  *
  18              	  * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  19              	  * All rights reserved.</center></h2>
  20              	  *
  21              	  * This software component is licensed by ST under BSD 3-Clause license,
  22              	  * the "License"; You may not use this file except in compliance with the
  23              	  * License. You may obtain a copy of the License at:
  24              	  *                        opensource.org/licenses/BSD-3-Clause
  25              	  *
  26              	  ******************************************************************************
  27              	  */
  28              	
  29              	  .syntax unified
  30              	  .cpu cortex-m3
  31              	  .fpu softvfp
  32              	  .thumb
  33              	
  34              	.global g_pfnVectors
  35              	.global Default_Handler
  36              	
  37              	/* start address for the initialization values of the .data section.
  38              	defined in linker script */
  39 0000 00000000 	.word _sidata
  40              	/* start address for the .data section. defined in linker script */
  41 0004 00000000 	.word _sdata
  42              	/* end address for the .data section. defined in linker script */
  43 0008 00000000 	.word _edata
  44              	/* start address for the .bss section. defined in linker script */
  45 000c 00000000 	.word _sbss
  46              	/* end address for the .bss section. defined in linker script */
  47 0010 00000000 	.word _ebss
  48              	
  49              	.equ  BootRAM, 0xF108F85F
  50              	/**
  51              	 * @brief  This is the code that gets called when the processor first
  52              	 *          starts execution following a reset event. Only the absolutely
  53              	 *          necessary set is performed, after which the application
ARM GAS  /tmp/cc006r8j.s 			page 2


  54              	 *          supplied main() routine is called.
  55              	 * @param  None
  56              	 * @retval : None
  57              	*/
  58              	
  59              	  .section .text.Reset_Handler
  60              	  .weak Reset_Handler
  61              	  .type Reset_Handler, %function
  62              	Reset_Handler:
  63              	
  64              	/* Copy the data segment initializers from flash to SRAM */
  65 0000 0021     	  movs r1, #0
  66 0002 03E0     	  b LoopCopyDataInit
  67              	
  68              	CopyDataInit:
  69 0004 0B4B     	  ldr r3, =_sidata
  70 0006 5B58     	  ldr r3, [r3, r1]
  71 0008 4350     	  str r3, [r0, r1]
  72 000a 0431     	  adds r1, r1, #4
  73              	
  74              	LoopCopyDataInit:
  75 000c 0A48     	  ldr r0, =_sdata
  76 000e 0B4B     	  ldr r3, =_edata
  77 0010 4218     	  adds r2, r0, r1
  78 0012 9A42     	  cmp r2, r3
  79 0014 F6D3     	  bcc CopyDataInit
  80 0016 0A4A     	  ldr r2, =_sbss
  81 0018 02E0     	  b LoopFillZerobss
  82              	/* Zero fill the bss segment. */
  83              	FillZerobss:
  84 001a 0023     	  movs r3, #0
  85 001c 42F8043B 	  str r3, [r2], #4
  86              	
  87              	LoopFillZerobss:
  88 0020 084B     	  ldr r3, = _ebss
  89 0022 9A42     	  cmp r2, r3
  90 0024 F9D3     	  bcc FillZerobss
  91              	
  92              	/* Call the clock system intitialization function.*/
  93 0026 FFF7FEFF 	    bl  SystemInit
  94              	/* Call static constructors */
  95 002a FFF7FEFF 	    bl __libc_init_array
  96              	/* Call the application's entry point.*/
  97 002e FFF7FEFF 	  bl main
  98 0032 7047     	  bx lr
  99              	.size Reset_Handler, .-Reset_Handler
 100              	
 101              	/**
 102              	 * @brief  This is the code that gets called when the processor receives an
 103              	 *         unexpected interrupt.  This simply enters an infinite loop, preserving
 104              	 *         the system state for examination by a debugger.
 105              	 *
 106              	 * @param  None
 107              	 * @retval : None
 108              	*/
 109              	    .section .text.Default_Handler,"ax",%progbits
 110              	Default_Handler:
ARM GAS  /tmp/cc006r8j.s 			page 3


 111              	Infinite_Loop:
 112 0000 FEE7     	  b Infinite_Loop
 113              	  .size Default_Handler, .-Default_Handler
 114              	/******************************************************************************
 115              	*
 116              	* The minimal vector table for a Cortex M3.  Note that the proper constructs
 117              	* must be placed on this to ensure that it ends up at physical address
 118              	* 0x0000.0000.
 119              	*
 120              	******************************************************************************/
 121              	  .section .isr_vector,"a",%progbits
 122              	  .type g_pfnVectors, %object
 123              	  .size g_pfnVectors, .-g_pfnVectors
 124              	
 125              	
 126              	g_pfnVectors:
 127              	
 128 0000 00000000 	  .word _estack
 129 0004 00000000 	  .word Reset_Handler
 130 0008 00000000 	  .word NMI_Handler
 131 000c 00000000 	  .word HardFault_Handler
 132 0010 00000000 	  .word MemManage_Handler
 133 0014 00000000 	  .word BusFault_Handler
 134 0018 00000000 	  .word UsageFault_Handler
 135 001c 00000000 	  .word 0
 136 0020 00000000 	  .word 0
 137 0024 00000000 	  .word 0
 138 0028 00000000 	  .word 0
 139 002c 00000000 	  .word SVC_Handler
 140 0030 00000000 	  .word DebugMon_Handler
 141 0034 00000000 	  .word 0
 142 0038 00000000 	  .word PendSV_Handler
 143 003c 00000000 	  .word SysTick_Handler
 144 0040 00000000 	  .word WWDG_IRQHandler
 145 0044 00000000 	  .word PVD_IRQHandler
 146 0048 00000000 	  .word TAMPER_IRQHandler
 147 004c 00000000 	  .word RTC_IRQHandler
 148 0050 00000000 	  .word FLASH_IRQHandler
 149 0054 00000000 	  .word RCC_IRQHandler
 150 0058 00000000 	  .word EXTI0_IRQHandler
 151 005c 00000000 	  .word EXTI1_IRQHandler
 152 0060 00000000 	  .word EXTI2_IRQHandler
 153 0064 00000000 	  .word EXTI3_IRQHandler
 154 0068 00000000 	  .word EXTI4_IRQHandler
 155 006c 00000000 	  .word DMA1_Channel1_IRQHandler
 156 0070 00000000 	  .word DMA1_Channel2_IRQHandler
 157 0074 00000000 	  .word DMA1_Channel3_IRQHandler
 158 0078 00000000 	  .word DMA1_Channel4_IRQHandler
 159 007c 00000000 	  .word DMA1_Channel5_IRQHandler
 160 0080 00000000 	  .word DMA1_Channel6_IRQHandler
 161 0084 00000000 	  .word DMA1_Channel7_IRQHandler
 162 0088 00000000 	  .word ADC1_2_IRQHandler
 163 008c 00000000 	  .word USB_HP_CAN1_TX_IRQHandler
 164 0090 00000000 	  .word USB_LP_CAN1_RX0_IRQHandler
 165 0094 00000000 	  .word CAN1_RX1_IRQHandler
 166 0098 00000000 	  .word CAN1_SCE_IRQHandler
 167 009c 00000000 	  .word EXTI9_5_IRQHandler
ARM GAS  /tmp/cc006r8j.s 			page 4


 168 00a0 00000000 	  .word TIM1_BRK_IRQHandler
 169 00a4 00000000 	  .word TIM1_UP_IRQHandler
 170 00a8 00000000 	  .word TIM1_TRG_COM_IRQHandler
 171 00ac 00000000 	  .word TIM1_CC_IRQHandler
 172 00b0 00000000 	  .word TIM2_IRQHandler
 173 00b4 00000000 	  .word TIM3_IRQHandler
 174 00b8 00000000 	  .word 0
 175 00bc 00000000 	  .word I2C1_EV_IRQHandler
 176 00c0 00000000 	  .word I2C1_ER_IRQHandler
 177 00c4 00000000 	  .word 0
 178 00c8 00000000 	  .word 0
 179 00cc 00000000 	  .word SPI1_IRQHandler
 180 00d0 00000000 	  .word 0
 181 00d4 00000000 	  .word USART1_IRQHandler
 182 00d8 00000000 	  .word USART2_IRQHandler
 183 00dc 00000000 	  .word 0
 184 00e0 00000000 	  .word EXTI15_10_IRQHandler
 185 00e4 00000000 	  .word RTC_Alarm_IRQHandler
 186 00e8 00000000 	  .word USBWakeUp_IRQHandler
 187 00ec 00000000 	  .word 0
 188 00f0 00000000 	  .word 0
 189 00f4 00000000 	  .word 0
 190 00f8 00000000 	  .word 0
 191 00fc 00000000 	  .word 0
 192 0100 00000000 	  .word 0
 193 0104 00000000 	  .word 0
 194 0108 5FF808F1 	  .word BootRAM        /* @0x108. This is for boot in RAM mode for
 195              	                          STM32F10x Low Density devices.*/
 196              	
 197              	/*******************************************************************************
 198              	*
 199              	* Provide weak aliases for each Exception handler to the Default_Handler.
 200              	* As they are weak aliases, any function with the same name will override
 201              	* this definition.
 202              	*
 203              	*******************************************************************************/
 204              	
 205              	  .weak NMI_Handler
 206              	  .thumb_set NMI_Handler,Default_Handler
 207              	
 208              	  .weak HardFault_Handler
 209              	  .thumb_set HardFault_Handler,Default_Handler
 210              	
 211              	  .weak MemManage_Handler
 212              	  .thumb_set MemManage_Handler,Default_Handler
 213              	
 214              	  .weak BusFault_Handler
 215              	  .thumb_set BusFault_Handler,Default_Handler
 216              	
 217              	  .weak UsageFault_Handler
 218              	  .thumb_set UsageFault_Handler,Default_Handler
 219              	
 220              	  .weak SVC_Handler
 221              	  .thumb_set SVC_Handler,Default_Handler
 222              	
 223              	  .weak DebugMon_Handler
 224              	  .thumb_set DebugMon_Handler,Default_Handler
ARM GAS  /tmp/cc006r8j.s 			page 5


 225              	
 226              	  .weak PendSV_Handler
 227              	  .thumb_set PendSV_Handler,Default_Handler
 228              	
 229              	  .weak SysTick_Handler
 230              	  .thumb_set SysTick_Handler,Default_Handler
 231              	
 232              	  .weak WWDG_IRQHandler
 233              	  .thumb_set WWDG_IRQHandler,Default_Handler
 234              	
 235              	  .weak PVD_IRQHandler
 236              	  .thumb_set PVD_IRQHandler,Default_Handler
 237              	
 238              	  .weak TAMPER_IRQHandler
 239              	  .thumb_set TAMPER_IRQHandler,Default_Handler
 240              	
 241              	  .weak RTC_IRQHandler
 242              	  .thumb_set RTC_IRQHandler,Default_Handler
 243              	
 244              	  .weak FLASH_IRQHandler
 245              	  .thumb_set FLASH_IRQHandler,Default_Handler
 246              	
 247              	  .weak RCC_IRQHandler
 248              	  .thumb_set RCC_IRQHandler,Default_Handler
 249              	
 250              	  .weak EXTI0_IRQHandler
 251              	  .thumb_set EXTI0_IRQHandler,Default_Handler
 252              	
 253              	  .weak EXTI1_IRQHandler
 254              	  .thumb_set EXTI1_IRQHandler,Default_Handler
 255              	
 256              	  .weak EXTI2_IRQHandler
 257              	  .thumb_set EXTI2_IRQHandler,Default_Handler
 258              	
 259              	  .weak EXTI3_IRQHandler
 260              	  .thumb_set EXTI3_IRQHandler,Default_Handler
 261              	
 262              	  .weak EXTI4_IRQHandler
 263              	  .thumb_set EXTI4_IRQHandler,Default_Handler
 264              	
 265              	  .weak DMA1_Channel1_IRQHandler
 266              	  .thumb_set DMA1_Channel1_IRQHandler,Default_Handler
 267              	
 268              	  .weak DMA1_Channel2_IRQHandler
 269              	  .thumb_set DMA1_Channel2_IRQHandler,Default_Handler
 270              	
 271              	  .weak DMA1_Channel3_IRQHandler
 272              	  .thumb_set DMA1_Channel3_IRQHandler,Default_Handler
 273              	
 274              	  .weak DMA1_Channel4_IRQHandler
 275              	  .thumb_set DMA1_Channel4_IRQHandler,Default_Handler
 276              	
 277              	  .weak DMA1_Channel5_IRQHandler
 278              	  .thumb_set DMA1_Channel5_IRQHandler,Default_Handler
 279              	
 280              	  .weak DMA1_Channel6_IRQHandler
 281              	  .thumb_set DMA1_Channel6_IRQHandler,Default_Handler
ARM GAS  /tmp/cc006r8j.s 			page 6


 282              	
 283              	  .weak DMA1_Channel7_IRQHandler
 284              	  .thumb_set DMA1_Channel7_IRQHandler,Default_Handler
 285              	
 286              	  .weak ADC1_2_IRQHandler
 287              	  .thumb_set ADC1_2_IRQHandler,Default_Handler
 288              	
 289              	  .weak USB_HP_CAN1_TX_IRQHandler
 290              	  .thumb_set USB_HP_CAN1_TX_IRQHandler,Default_Handler
 291              	
 292              	  .weak USB_LP_CAN1_RX0_IRQHandler
 293              	  .thumb_set USB_LP_CAN1_RX0_IRQHandler,Default_Handler
 294              	
 295              	  .weak CAN1_RX1_IRQHandler
 296              	  .thumb_set CAN1_RX1_IRQHandler,Default_Handler
 297              	
 298              	  .weak CAN1_SCE_IRQHandler
 299              	  .thumb_set CAN1_SCE_IRQHandler,Default_Handler
 300              	
 301              	  .weak EXTI9_5_IRQHandler
 302              	  .thumb_set EXTI9_5_IRQHandler,Default_Handler
 303              	
 304              	  .weak TIM1_BRK_IRQHandler
 305              	  .thumb_set TIM1_BRK_IRQHandler,Default_Handler
 306              	
 307              	  .weak TIM1_UP_IRQHandler
 308              	  .thumb_set TIM1_UP_IRQHandler,Default_Handler
 309              	
 310              	  .weak TIM1_TRG_COM_IRQHandler
 311              	  .thumb_set TIM1_TRG_COM_IRQHandler,Default_Handler
 312              	
 313              	  .weak TIM1_CC_IRQHandler
 314              	  .thumb_set TIM1_CC_IRQHandler,Default_Handler
 315              	
 316              	  .weak TIM2_IRQHandler
 317              	  .thumb_set TIM2_IRQHandler,Default_Handler
 318              	
 319              	  .weak TIM3_IRQHandler
 320              	  .thumb_set TIM3_IRQHandler,Default_Handler
 321              	
 322              	  .weak I2C1_EV_IRQHandler
 323              	  .thumb_set I2C1_EV_IRQHandler,Default_Handler
 324              	
 325              	  .weak I2C1_ER_IRQHandler
 326              	  .thumb_set I2C1_ER_IRQHandler,Default_Handler
 327              	
 328              	  .weak SPI1_IRQHandler
 329              	  .thumb_set SPI1_IRQHandler,Default_Handler
 330              	
 331              	  .weak USART1_IRQHandler
 332              	  .thumb_set USART1_IRQHandler,Default_Handler
 333              	
 334              	  .weak USART2_IRQHandler
 335              	  .thumb_set USART2_IRQHandler,Default_Handler
 336              	
 337              	  .weak EXTI15_10_IRQHandler
 338              	  .thumb_set EXTI15_10_IRQHandler,Default_Handler
ARM GAS  /tmp/cc006r8j.s 			page 7


 339              	
 340              	  .weak RTC_Alarm_IRQHandler
 341              	  .thumb_set RTC_Alarm_IRQHandler,Default_Handler
 342              	
 343              	  .weak USBWakeUp_IRQHandler
 344              	  .thumb_set USBWakeUp_IRQHandler,Default_Handler
ARM GAS  /tmp/cc006r8j.s 			page 8


DEFINED SYMBOLS
src/startup_stm32f103x6.s:126    .isr_vector:0000000000000000 g_pfnVectors
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 Default_Handler
src/startup_stm32f103x6.s:49     *ABS*:00000000f108f85f BootRAM
src/startup_stm32f103x6.s:62     .text.Reset_Handler:0000000000000000 Reset_Handler
src/startup_stm32f103x6.s:65     .text.Reset_Handler:0000000000000000 $t
src/startup_stm32f103x6.s:74     .text.Reset_Handler:000000000000000c LoopCopyDataInit
src/startup_stm32f103x6.s:68     .text.Reset_Handler:0000000000000004 CopyDataInit
src/startup_stm32f103x6.s:87     .text.Reset_Handler:0000000000000020 LoopFillZerobss
src/startup_stm32f103x6.s:83     .text.Reset_Handler:000000000000001a FillZerobss
src/startup_stm32f103x6.s:111    .text.Default_Handler:0000000000000000 Infinite_Loop
src/startup_stm32f103x6.s:112    .text.Default_Handler:0000000000000000 $t
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 NMI_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 HardFault_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 MemManage_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 BusFault_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 UsageFault_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 SVC_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DebugMon_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 PendSV_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 SysTick_Handler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 WWDG_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 PVD_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TAMPER_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 RTC_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 FLASH_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 RCC_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI0_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI1_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI2_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI3_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI4_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel1_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel2_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel3_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel4_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel5_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel6_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 DMA1_Channel7_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 ADC1_2_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 USB_HP_CAN1_TX_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 CAN1_RX1_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 CAN1_SCE_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI9_5_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM1_BRK_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM1_UP_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM1_TRG_COM_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM1_CC_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM2_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 TIM3_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 I2C1_EV_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 I2C1_ER_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 SPI1_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 USART1_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 USART2_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 EXTI15_10_IRQHandler
ARM GAS  /tmp/cc006r8j.s 			page 9


src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 RTC_Alarm_IRQHandler
src/startup_stm32f103x6.s:110    .text.Default_Handler:0000000000000000 USBWakeUp_IRQHandler
src/startup_stm32f103x6.s:344    .text.Reset_Handler:0000000000000034 $d
                            .text:0000000000000000 $d

UNDEFINED SYMBOLS
_sidata
_sdata
_edata
_sbss
_ebss
SystemInit
__libc_init_array
main
_estack
